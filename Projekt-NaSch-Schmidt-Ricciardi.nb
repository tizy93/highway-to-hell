(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1633036,      32148]
NotebookOptionsPosition[   1625602,      32034]
NotebookOutlinePosition[   1626137,      32053]
CellTagsIndexPosition[   1626094,      32050]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["The highway to hell",
 FontFamily->"Squealer Embossed",
 FontColor->RGBColor[
  0.9921568627450981, 0.10588235294117647`, 0.058823529411764705`]]], "Title",
 CellChangeTimes->{
  3.8993788469208927`*^9},ExpressionUUID->"b0c631c6-253a-40ad-871d-\
8f14e949cd72"],

Cell[TextData[StyleBox["Ringstra\[SZ]e mit Hindernissen",
 FontFamily->"Squealer",
 FontColor->RGBColor[
  0.9137254901960784, 0.403921568627451, 0.18823529411764706`]]], "Subtitle",
 CellChangeTimes->{
  3.899378854608756*^9, {3.8995681771154146`*^9, 
   3.8995681817636647`*^9}},ExpressionUUID->"4acba6f2-68cd-4841-a131-\
cf9b56d1d227"],

Cell[TextData[{
 StyleBox["Staus entwickeln sich aus dem Nichts. ",
  FontColor->RGBColor[
   0.9490196078431372, 0.8274509803921568, 0.4666666666666667]],
 "\n\n"
}], "Text",
 CellChangeTimes->{
  3.8993788607491307`*^9},ExpressionUUID->"69a009d7-45d8-4a71-b7ab-\
5fab650906e7"],

Cell[TextData[StyleBox["F\[UDoubleDot]r eine bessere Lesbarkeit unseres \
Projekts wird ein Download des ben\[ODoubleDot]tigten Fonts \[UDoubleDot]ber \
den Link https://www.dafontfree.co/downloads/ac-dc/ empfohlen.\n\nDie H\
\[ADoubleDot]lfte der Deutschen verbringen jedes Jahr im Durchschnitt 40 \
Stunden im Stau. \nOft bilden sich diese Staus aus dem Nichts. Das \
Nagel-Schreckenberg-Modell simuliert und analysiert den Verkehr unfallfrei \
und liefert u.A. eine Erkl\[ADoubleDot]rung f\[UDoubleDot]r dieses Ph\
\[ADoubleDot]nomen. \n\nDas NaSch-Modell teilt die Stra\[SZ]e in einzelne \
Abschnitte, die entweder von einem Auto besetzt oder leer sind. Diese Zellen \
haben eine L\[ADoubleDot]nge von 7,5m. Auch die Zeitschritte in Sekunden, oft \
\"Runden\" genannt, und Geschwindigkeiten sind diskret, mit Geschwindigkeiten \
von \[UDoubleDot]blicherweise 0 bis 5. Hierbei entspricht v=0 einem stehenden \
Auto, v=1 einem Auto, das eine Zelle pro Zeitschritt, also 7,5m/s bzw. \
27km/h, f\[ADoubleDot]hrt. Somit ist die Maximalgeschwindigkeit v=5 \
umgerechnet 135km/h. \n\n\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899378118776492*^9, 3.8993781203892965`*^9}, {
  3.8995657313297653`*^9, 3.899565765526065*^9}, {3.8995660880509744`*^9, 
  3.8995660944497905`*^9}, {3.8995663018915167`*^9, 
  3.8995663314292765`*^9}},ExpressionUUID->"f8d88ff7-3677-4f4d-83d4-\
a185409464c0"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Nasch-Modell",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"53a949ba-2ac9-42b2-b355-6ffed80ebbcd"],

Cell[TextData[StyleBox["Das Hauptmodul berechnet die Positionen, \
Geschwindigkeiten und Abst\[ADoubleDot]nde der Autos pro diskretem \
Zeitschritt, die als Runden bezeichnet werden. \nDie Autos werden \
randomisiert auf der Stra\[SZ]e erzeugt (t=0) mit zuf\[ADoubleDot]llig \
zugeteilten Geschwindigkeiten. Die Berechnungen finden in einer For-Schleife \
statt, die die Runden von i=1 bis i=tMax-1 iteriert.\nDie erste Regel R1 ist \
die Beschleunigung von jedem Auto um 1. Falls der Abstand von dem n\
\[ADoubleDot]chsten Auto kleiner als die neue Geschwindigkeit ist, wird in \
Regel R2 abgebremst. In Regel R3 wird der Verkehr randomisiert - ein Auto \
kann mit einer Tr\[ODoubleDot]delwahrscheinlichkeit p zus\[ADoubleDot]tzlich \
um 1 abbremsen, falls es nicht schon steht. Die Regel R4 aktualisiert die \
Positionen der Autos.\nDie betrachtete Stra\[SZ]e ist eine Ringstra\[SZ]e. \n\
Das Modul wird f\[UDoubleDot]r alle Plots und Betrachtungen verwendet, die \
das Nagel-Schreckenberg-Modell auf einer Spur und ohne VDR verwenden. \n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899566547537721*^9, 3.8995665713630548`*^9}, {
  3.899566779850686*^9, 3.899566826181328*^9}, {3.8995669558691783`*^9, 
  3.899566960116607*^9}, {3.8995670329007077`*^9, 3.8995670335257735`*^9}, {
  3.899567073061736*^9, 3.899567225232133*^9}, {3.8995673152344694`*^9, 
  3.899567341600696*^9}, {3.899567377858119*^9, 
  3.89956763171824*^9}},ExpressionUUID->"4a7a6bbe-853c-4efd-8367-\
c439f93b66db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Modul", " ", "Nagel"}], "-", 
    RowBox[{"Schreckenberg", " ", "Modell"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"NaSch", "[", 
    RowBox[{"nCar_", ",", "nCells_", ",", "tMax_", ",", "vMax_", ",", "p_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Eingabe", " ", "Anzahl", " ", "der", " ", "Autos", " ", "nCar"}], ",", 
      " ", 
      RowBox[{"Anzahl", " ", "der", " ", "Zellen", " ", "nCells"}], ",", " ", 
      RowBox[{"Simulationsdauer", " ", "tMax"}], ",", " ", "\n", 
      RowBox[{
      "Maximalgeschwindigkeit", " ", "vMax", " ", "und", " ", 
       "Tr\[ODoubleDot]delwahrscheinlichkeit", " ", "p", " ", "mit", " ", 
       "Funktionsaufruf"}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos", ",", "vAutos", ",", "dAutos", ",", "minAuto", ",", "maxAuto", 
       ",", "xnasch", ",", "vnasch", ",", "dnasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Listen", " ", "f\[UDoubleDot]r", " ", "x"}], ",", " ", 
       RowBox[{
       "v", " ", "und", " ", "d", " ", "f\[UDoubleDot]r", " ", "Berechnungen",
         " ", "au\[SZ]erhalb", " ", "des", " ", "Moduls"}]}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"xnasch", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"vnasch", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"dnasch", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Autos", " ", "haben", " ", "Position", " ", "x", " ", "und", " ", 
        "Geschwindigkeit", " ", "v", " ", "zum", " ", "vorderen", " ", 
        "Auto"}], "*)"}], "\n", 
      RowBox[{"xAutos", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", "nCells", "]"}], ",", "nCar"}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xnasch", ",", "xAutos"}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"erzeugt", " ", "zuf\[ADoubleDot]llige", " ", 
        RowBox[{"(", "Random", ")"}], " ", "Liste", " ", "xAutos", " ", 
        "ohne", " ", "Wiederholungen", " ", 
        RowBox[{"(", "Sample", ")"}], " ", "in", " ", "aufsteigender", " ", 
        "Reihenfolge", " ", 
        RowBox[{"(", "Sort", ")"}]}], "*)"}], "\n", 
      RowBox[{"vAutos", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", "nCar"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vnasch", ",", "vAutos"}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "ordnet", " ", "jedem", " ", "Auto", " ", "eine", " ", 
        "zuf\[ADoubleDot]llige", " ", "Geschwindigkeit", " ", "von", " ", "0",
         " ", "bis", " ", "vMax", " ", "zu"}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Einzelne", " ", "Autos", " ", "sind", " ", "gekennzeichnet", " ", 
         "durch", " ", "Element"}], "-", 
        RowBox[{
        "Position", " ", "in", " ", "der", " ", "Liste", " ", "mit", " ", 
         "Position", " ", 
         RowBox[{"xAutos", "[", 
          RowBox[{"[", "n", "]"}], "]"}], " ", "und", " ", "Geschwindigkeit", 
         " ", 
         RowBox[{"vAutos", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}]}], "*)"}], "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Verkehrsregeln", " ", "aus", " ", "NaSch"}], "-", 
        RowBox[{"Modell", " ", "implementieren"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", "tMax"}], ",", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Schleife", " ", "der", " ", "Runden", " ", "bis", " ", "tMax"}], 
          ",", " ", 
          RowBox[{
           RowBox[{
           "Anfangsposition", " ", "au\[SZ]erhalb", " ", "Schleife", " ", 
            "ist", " ", "t"}], "=", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"deshalb", " ", "bis", " ", "t"}], "=", 
           RowBox[{"tMax", "-", "1"}]}], ",", " ", 
          RowBox[{
           RowBox[{"sodass", " ", "Anzahl", " ", "Runden"}], " ", "=", " ", 
           "tMax"}]}], "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Oft", " ", "verwendete", " ", "Variablen"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"minAuto", "=", 
          RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto", "=", 
          RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "xAutos", "]"}], ">", "1"}], ",", "\n", 
           RowBox[{"(", 
            RowBox[{"(*", 
             RowBox[{
             "Freie", " ", "Zellen", " ", "d", " ", "vor", " ", "dem", " ", 
              "Auto", " ", "bis", " ", "zum", " ", "vorderen"}], "*)"}], "\n", 
            RowBox[{
             RowBox[{"dAutos", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"In", " ", "Schleife"}], ",", " ", 
               RowBox[{"damit", " ", "es", " ", "geupdatet", " ", "wird"}]}], 
              "*)"}], "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "berechnet", " ", "freie", " ", "Zellen", " ", "zum", " ", 
                "vorderen", " ", "Auto", " ", "normal", " ", "au\[SZ]er", " ",
                 "f\[UDoubleDot]r", " ", "Autos", " ", "au\[SZ]er", " ", 
                "dem", " ", "mit", " ", "h\[ODoubleDot]chster", " ", 
                "Positition"}], " ", "-", " ", 
               RowBox[{
               "da", " ", "Ringstra\[SZ]e", " ", "sind", " ", "die", " ", 
                "freien", " ", "Zellen", " ", "geringer", " ", "als", " ", 
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "-", 
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], "*)"}], "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "Arrays", " ", "starten", " ", "mit", " ", "Element", " ", 
                "1"}], ";", " ", 
               RowBox[{"n", "+", 
                RowBox[{
                "1", " ", "muss", " ", "f\[UDoubleDot]r", " ", "das", " ", 
                 "letzte", " ", "gleich", " ", "nCar", " ", "sein"}]}]}], 
              "*)"}], "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
                 RowBox[{
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", 
                  "1"}]}], "]"}]}], "]"}], ";"}], "\n", 
            RowBox[{"(*", 
             RowBox[{
             "Abstand", " ", "des", " ", "Autos", " ", "an", " ", "letzter", 
              " ", "Stelle", " ", "in", " ", "Liste", " ", "zum", " ", 
              "ersten", " ", "wird", " ", "angeh\[ADoubleDot]ngt"}], "*)"}], 
            ")"}], ",", "\n", 
           RowBox[{
            RowBox[{"dAutos", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}]}], "\n", "]"}], 
         ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R1", ":", " ", "Beschleunigen"}], ",", " ", 
           RowBox[{
           "falls", " ", "vMax", " ", "noch", " ", "nicht", " ", 
            "erreicht"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R2", ":", " ", "Abbremsen"}], ",", " ", 
           RowBox[{
           "falls", " ", "v", " ", "gr\[ODoubleDot]\[SZ]er", " ", "als", " ", 
            "Abstand", " ", "d"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"dAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"vAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", " ", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{"R3", ":", " ", 
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "mit", " ", "Wahrscheinlichkeit", " ", 
            "p"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vAutos", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", "0"}], 
                "]"}]}], ",", 
              RowBox[{"vAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "solange", " ", "noch", " ", "nicht", 
            " ", "v"}], "=", "0"}], "*)"}], "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Falls", " ", "zuf\[ADoubleDot]llige", " ", "Zahl", " ", "nicht", 
            " ", "im", " ", "gegebenen", " ", "Intervall"}], ",", " ", 
           RowBox[{"bleibt", " ", "v", " ", "gleich"}]}], "*)"}], "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"R4", ":", " ", 
           RowBox[{"Fahren", " ", "um", " ", "vAutos", " ", "Zellen"}]}], 
          "*)"}], "\n", 
         RowBox[{"xAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Falls", " ", "Autos", " ", "au\[SZ]erhalb", " ", "Zellen", " ", 
            "bewegt"}], ",", " ", 
           RowBox[{
           "wird", " ", "Bewegung", " ", "in", " ", "erster", " ", "Zelle", 
            " ", "fortgesetzt"}], ",", " ", 
           RowBox[{"da", " ", "Ringstra\[SZ]e"}]}], "*)"}], "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Aktualisieren", " ", "der", " ", "Positionen", " ", "nicht", " ", 
            "anhand", " ", "Verschieben", " ", "der", " ", "Autos", " ", 
            "innerhalb", " ", "der", " ", "Liste"}], ",", " ", 
           RowBox[{
           "sondern", " ", "durch", " ", "Ver\[ADoubleDot]ndern", " ", "der", 
            " ", "Eintr\[ADoubleDot]ge", " ", "in", " ", "xAutos"}]}], "*)"}],
          "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"Abspeichern", " ", "in", " ", "Variablen"}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xnasch", ",", "xAutos"}], "]"}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vnasch", ",", "vAutos"}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Letzter", " ", "Durchlauf", " ", "der", " ", "Schleife", " ", 
            "speichert", " ", "vorletzten", " ", "Abstand", " ", "ab"}], ",", 
           " ", 
           RowBox[{
           "deshalb", " ", "au\[SZ]erhalb", " ", "Schleife", " ", "letztes", 
            " ", "Element", " ", "abspeichern"}]}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dnasch", ",", "dAutos"}], "]"}], ";"}]}], "\n", "]"}], ";",
       "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Erneute", " ", "Berechnung", " ", "f\[UDoubleDot]r", " ", 
        "Endposition"}], "*)"}], "\n", 
      RowBox[{"minAuto", "=", 
       RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
      RowBox[{"maxAuto", "=", 
       RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Berechnen", " ", "Abst\[ADoubleDot]nde", " ", "im", " ", "letzten", 
        " ", "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"dAutos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", 
              RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
           RowBox[{"nCells", "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dAutos", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"nCells", "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
         "]"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "in", " ", "dnasch"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dnasch", ",", "dAutos"}], "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"xnasch", ",", "vnasch", ",", "dnasch"}], "}"}], "]"}]}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{3.8995673020787754`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e3426614-f7d5-42a5-9a25-baf88eb424d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nasch100", "=", 
   RowBox[{"NaSch", "[", 
    RowBox[{"100", ",", "300", ",", "100", ",", "5", ",", "0.15"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.8998870972535305`*^9, 3.8998870983699684`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"90a6f162-a31c-489c-8ac1-50e57a6eccab"],

Cell[TextData[StyleBox[" Die Daten aus dem ersten Aufruf werden \
f\[UDoubleDot]r alle Plots, die die gleichen Eingabeparameter (100 Autos, 300 \
Zellen, 100 Runden, vMax=5 und p=0.15) fordern, verwendet. \n Das Modul \
densityplot stellt die Stra\[SZ]e \[UDoubleDot]ber die Zeit grafisch dar mit \
besetzte Zellen in hell und leere Zellen in dunkelrot.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{
  3.8995676775949755`*^9, {3.8995677571863747`*^9, 3.8995678542542644`*^9}, {
   3.8995684921013966`*^9, 
   3.8995684943893566`*^9}},ExpressionUUID->"a477ff40-7d59-4ef6-868d-\
9299dadb2a90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"F\[UDoubleDot]r", " ", "NaSch"}], "-", 
     RowBox[{"Modell", " ", "ohne", " ", "VDR", " ", "q"}]}], "=", "0"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"densityplot", "[", 
    RowBox[{"Modell_", ",", "nCar_", ",", "p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "strasse", ",", "newstrasse", 
       ",", "listdensityplot", ",", "nasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder", 
        " ", "vdr"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"p", "==", "0.15"}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"!", 
             RowBox[{"nCar", "==", "100"}]}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"nCar", "==", "100"}]}], ",", "nasch100"}], "]"}], ",", 
         "\n", 
         RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
         RowBox[{
          RowBox[{"vdrNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
            "q"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Sortierte", " ", "Liste", " ", "der", " ", "Stra\[SZ]e", " ", "mit", 
        " ", "leeren", " ", "Zellen", " ", "als", " ", "0", " ", "und", " ", 
        "besetzt", " ", "als", " ", "1"}], "*)"}], "\n", 
      RowBox[{"strasse", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"nasch", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "m"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"#", "==", "n"}], " ", "&"}]}], "]"}], "==", 
              RowBox[{"{", "}"}]}], ",", "0", ",", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "nCells"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "tMax"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Anpassen", " ", "strasse", " ", "sodass", " ", "t", " ", "in", " ", 
         "positive", " ", "x"}], "-", 
        RowBox[{
        "Richtung", " ", "l\[ADoubleDot]uft", " ", "statt", " ", "in", " ", 
         "positiver", " ", "y"}], "-", "Richtung"}], "*)"}], "\n", 
      RowBox[{"newstrasse", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"strasse", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "m"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "tMax"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "nCells"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", "ListDensityPlot", "*)"}], "\n", 
      RowBox[{"listdensityplot", "=", 
       RowBox[{"ListDensityPlot", "[", 
        RowBox[{"newstrasse", ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Zellen der Stra\[SZ]e\>\""}], 
           "}"}]}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}], ",", 
         RowBox[{"PlotLegends", "->", "Automatic"}], ",", "\n", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Grafische Darstellung der Stra\[SZ]e mit \>\"", "<>", 
           RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
           "\"\< Autos und p=\>\"", "<>", 
           RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
         RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", "\n", 
         RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Return", "[", "listdensityplot", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8995677453313117`*^9, 3.899567752214223*^9}, {
  3.8995697812464123`*^9, 3.899569797604559*^9}, {3.8998877497262297`*^9, 
  3.899887749809182*^9}, {3.8998969626436615`*^9, 3.8998969634230742`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c58cf939-98c7-4afb-a201-1563e4c89ee2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listdensityplot", "=", 
   RowBox[{"densityplot", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", "100", ",", "0.15", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", "listdensityplot", "]"}]}], "Code",
 CellChangeTimes->{{3.8995700116057653`*^9, 3.8995700196939697`*^9}, {
  3.899887168093458*^9, 3.89988719889568*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8f730bb1-ce7e-41a0-9ceb-a0ab97259352"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
x+mPyXH6Y3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8m
x+mPLy+4cOP0x8zjwo3THzOPCzdOf8w8Ltw4/THzuHDj9MfM48KN0x8zjws3
Tn/MPC7cOP0x87hw4/THePpj/j0z/THexwf4EB/hY3yCT/EZPscX2N/Z83eT
/B2MDb7Bt/gOb7HPefvcns9h+L1avyfl3ds7hp9LuWfYG/5ddl04/TE5Tn9M
jtMfk+P0x+Q4/TE5Tn9MjtMfk+P0x+Q4/TE5Tn9MjtMfk+P0x+Q4/TE5Tn9M
jtMfk+P0x5cXXLhx+mPmceHG6Y+Zx4Ubpz9mHhdunP6YeVy4cfpj5nHhxumP
mceFG6c/Zh4Xbpz+mHlcuHH6Yzz9Mf8emf4Y7+MDfIiP8DE+waf4DJ/jC+zv
svo7e/5u0gbf4Ft8h7fY94L4nLfP7fkcht+r9XtS3r29Y/i5lHuGvcHf8p//
F3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8mx+mPyXH6
Y3Kc/pgcpz8mx+mPLy+4cOP0x8zjwo3THzOPCzdOf8w8Ltw4/THzuHDj9MfM
48KN0x8zjws3Tn/MPC7cOP0x87hw4/TH+Ks/8u+Rr/6I9/EBPsRH+Bif4FN8
hs/xBfZ3vP1dVn9nb4Nv8C2+w1vse6R8L4jPefvcns9h+L1avyfl3ds7hp9L
uWfQG/6d/sg/x9MfyfH0R3I8/ZEcT38kx9MfyfH0R3I8/ZEcT38kx9MfyfH0
R3I8/ZEcT38kx9MfyfH0R3I8/TFecOHG0x+Zx4UbT39kHhduPP2ReVy48fRH
5nHhxtMfmceFG09/ZB4Xbjz9kXlcuPH0R+Zx4cbTH/HsH/PfmV/9Ee/jA3yI
j/AxPsGn+Ayf4wt8if0db3+XdYNv8C2+w1t8j32PlO8F8Tlvn9vzOQy/V+v3
pLx7e8fwc6mVnkjO3/KffyPH2T8mx9k/JsfZPybH2T8mx9k/JsfZPybH2T8m
x9k/JsfZPybH2T8mx9k/JsfZPybH2T8mx9k/vrzgwo2zf8w8Ltw4+8fM48KN
s3/MPC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2zf8w8Ltw4+8fM48KNs3+MZ/+g
P+J9fIAP8RE+xif4FJ/hc3yBL/EV9ne8N/gG3+I7vMX3+AH7Hqkn7HPePrfn
cxh+r9bvSXn39o6xslfYE7XyN/sH/ZH8X8hx9g/6I/m/kuPsH/RH8n8jx9k/
6I/kfyPH2T/oj+R/J8fZP+iP5P8gx9k/6I/k/yTH2T/oj/zvcePsH/RH5nHj
7B/0R+Zx4+wf9EfmcePsH/RH5nHj7B/0R+Zx4+wf9EfmcePsH/RH5nHj7B/0
R+Zx4+wf9Ef+u3L2j/E+PsCH+Agf4xN8is/wOb7Al/gKX+MNvsG3+A5v8T1+
wI/4CfteEJ/z9rk9n8Pwe7V+T8q798rnUO4V9kRy/pb//F/IcfaPyXH2j8lx
9o/JcfaPyXH2j8lx9o/JcfaPyXH2j8lx9o/JcfaPyXH2j8lx9o/JcfaPLy+4
cOPsHzOPCzfO/jHzuHDj7B8zjws3zv4x87hw4+wfM48LN87+MfO4cOPsHzOP
CzfO/jHzuHDj7B/j2T/Gs3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/ANvsV3
eIvv8QN+xE/Y90j5XhCf8/a5PZ/D8Hu1fk9q2bV3jOwfk2N7w7/ZP+af4+wf
k+PsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+PsH5Pj7B+T
4+wfX15w4cbZP2YeF26c/WPmceHG2T9mHhdunP1j5nHhxtk/Zh4Xbpz9Y+Zx
4cbZP2YeF26c/WPmceHG2T/Gs3/Mfyd+9Ue8jw/wIT7Cx/gEn+IzfI4v8CW+
wtd4g2/wLb7DW3yPH/AjfsK+d9D3SPleEJ/z9rk9n8Pwe7XLrr17Z//wcyf3
CHvhX/76b/nPv5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+Ps
H5Pj7B+T4+wfk+PsH19ecOHG2T9mHhdunP1j5nHhxtk/Zh4Xbpz9Y+Zx4cbZ
P2YeF26c/WPmceHG2T9mHhdunP1j5nHhxtk/xrN/0B/xPj7Ah/gIH+MTfIrP
8Dm+wJf4Cl/jDb7Bt/gOb/E9fsCP+An7nlrfO+h7pHwviM95+9yez2Esu/Z7
Utk/6I/k38ixveHf7B/0R/J/JcfZP+iP5P9GjrN/0B/J/0aOs3/QH8n/To6z
f9Afyf9BjrN/0B/J/0mOs3/QH/nf48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZ
P+iPzOPG2T/oj8zjxtk/6I/M48bZP+iPzOPG2T/oj8zjxtk/6I/8d+HsH+N9
fIAP8RE+xif4FJ/hc3yBL/EVvsYbfINv8R3e4nv8gB/xE/a95r6n1vcO+h4p
3wvic94+t7fs2u/VZv/wru2dws+d3CPshe9//bf85/9KjrN/TI6zf0yOs39M
jrN/TI6zf0yOs39MjrN/TI6zf0yOs39MjrN/TI6zf3x5wYUbZ/+YeVy4cfaP
mceFG2f/mHlcuHH2j5nHhRtn/5h5XLhx9o+Zx4UbZ/+YeVy4cfaPmceFG2f/
GM/+QX/E+/gAH+IjfIxP8Ck+w+f4Al/iK3yNN/gG3+I7vMX3+AE/4ifs72D4
XnPfU+t7B32PlO8F8TnvZdc+h5H9g/5I/o0cZ/+gP+yJWvmb/YP+SP6DHGf/
oD+S/yTH2T/oj+S/yHH2D/oj+W9ynP2D/kj+BznO/kF/JP9z1wsu3Dj7B/2R
edw4+wf9kXncOPsH/ZF53Dj7B/2Redw4+wf9kXncOPsH/ZF53Dj7B/2Redw4
+wf9kXncOPsH/ZH/7pv9Y7yPD/AhPsLH+ASf4jN8ji/wJb7C13iDb/AtvsNb
fI8f8CN+wv5ukr+D4XvNfU+t7x30PVK+F2TZtc/tZf/we7N+D8q7tncKP3dy
j7AX/vWv/5b//Ac5zv4xOc7+MTnO/jE5zv4xOc7+MTnO/jE5zv4xOc7+MTnO
/jE5zv7x5QUXbpz9Y+Zx4cbZP2YeF26c/WPmceHG2T9mHhdunP1j5nHhxtk/
Zh4Xbpz9Y+Zx4cbZP2YeF26c/WM8+wf9Ee/jA3yIj/AxPsGn+Ayf4wt8ia/w
Nd7gG3yL7/AW3+MH/IifsL+z5+8m+TsYvtfc99T63kHfI7Xs2ue8s3/QH8m/
kePsH/RH8pW9wp6olb/ZP+iP5P9GjrN/0B/J/0aOs3/QH8n/To6zf9Afyf9B
jrN/0B/J/0mOs3/QH/nf48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZP+iPzOPG
2T/oj8zjxtk/6I/M48bZP+iPzOPG2T/oj8zjxtk/6I/8d93sH+N9fIAP8RE+
xif4FJ/hc3yBL/EVvsYbfINv8R3e4nv8gB/xE/Z3Wf2dPX83yd/B8L3mvqfW
9w4uu/a9INk/fC7P5yz83qzfg/Ku7Z3Cz53cI+yFH3/9t/zn/0aOs39MjrN/
TI6zf0yOs39MjrN/TI6zf0yOs39MjrN/TI6zf3x5wYUbZ/+YeVy4cfaPmceF
G2f/mHlcuHH2j5nHhRtn/5h5XLhx9o+Zx4UbZ/+YeVy4cfaPmceFG2f/GM/+
QX/E+/gAH+IjfIxP8Ck+w+f4Al/iK3yNN/gG3+I7vMX3+AE/4ifs73j7u6z+
zp6/m+TvYPhec99Tu+za90hl/6A/kn8jx9k/6I/kK3eL5Ct7hT1RK3+zf9Af
yX+S4+wf9EfyX+Q4+wf9kfw3Oc7+QX8k/4McZ/+gP5L/uesFF26c/YP+yDxu
nP2D/sg8bpz9g/7IPG6c/YP+yDxunP2D/sg8bpz9g/7IPG6c/YP+yDxunP2D
/sg8bpz9g/7If7fN/jHexwf4EB/hY3yCT/EZPscX+BJf4Wu8wTf4Ft/hLb7H
D/gRP+Fn7O94+7us/s6ev5vk72D4XvNl1753MPuH7/3wOW6fy/M5C7836/eg
vGt7p/BzJ/cIe+Hf/vpv+c9/kuPsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+Ps
H5Pj7B9fXnDhxtk/Zh4Xbpz9Y+Zx4cbZP2YeF26c/WPmceHG2T9mHhdunP1j
5nHhxtk/Zh4Xbpz9Y+Zx4cbZP8azf9Af8T4+wIf4CB/jE3yKz/A5vsCX+Apf
4w2+wbf4Dm/xPX7Aj/gJP+MX7O94+7us/s6ev5vk72Asu/Y9tdk/6I/k38hx
9g/6I/nK96KSr9wtkq/sFfZErfzN/kF/JP8bOc7+QX8k/zs5zv5BfyT/BznO
/kF/JP8nOc7+QX/kf48bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/
oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/8t9ls3+M9/EBPsRH+Bif
4FN8hs/xBb7EV/gab/ANvsV3eIvv8QN+xE/4Gb/gV+zvePu7rP7Onr+btOza
95pn//C9gr4nyvd++By3z+X5nIXfm/V7UN61vVP4uZN7hL3w86//lv/8b+Q4
+8fkOPvH5Dj7x+Q4+8fkOPvH5Dj7x+Q4+8eXF1y4cfaPmceFG2f/mHlcuHH2
j5nHhRtn/5h5XLhx9o+Zx4UbZ/+YeVy4cfaPmceFG2f/mHlcuHH2j/HsH/RH
vI8P8CE+wsf4BJ/iM3yOL/AlvsLXeINv8C2+w1t8jx/wI37Cz/gFv+I37O94
+7us/s7esmt/ByP7B/2R/Bs5zv5BfyRfee4i+cr3opKv3C2Sr+wV9kSt/M3+
QX8k/0WOs3/QH8l/k+PsH/RH8j/IcfYP+iP5n7tecOHG2T/oj8zjxtk/6I/M
48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZ
P+iP/HfX7B/jfXyAD/ERPsYn+BSf4XN8gS/xFb7GG3yDb/Ed3uJ7/IAf8RN+
xi/4Fb/hd+zvePu7rMuu/d2k7B++t9z30PpeQd8T5Xs/fI7b5/J8zsLvzfo9
KO/a3in83Mk9wl7421//Lf/5L3Kc/WNynP1jcpz9Y3Kc/WNynP1jcpz948sL
Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2zf8w8Ltw4+8fM
48KNs3/MPC7cOPvHePYP+iPexwf4EB/hY3yCT/EZPscX+BJf4Wu8wTf4Ft/h
Lb7HD/gRP+Fn/IJf8Rt+xx/Y3/Fedu3v7GX/oD+SfyPH2T/oj+Qrz3UnX3nu
IvnK96KSr9wtkq/sFfZErfzN/kF/JP87Oc7+QX8k/wc5zv5BfyT/JznO/kF/
5H+PG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKP
G2f/oD8yjxtn/6A/Mo8bZ/+gP/LfVbN/jPfxAT7ER/gYn+BTfIbP8QW+xFf4
Gm/wDb7Fd3iL7/EDfsRP+Bm/4Ff8ht/xB/7Ey679XdbsH/4ukr9z4XvLfQ+t
7xX0PVG+98PnuH0uz+cs/N6s34Pyru2dws+d3CPshV9//bf8538nx9k/JsfZ
PybH2T8mx9k/JsfZP7684MKNs3/MPC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2z
f8w8Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/jGf/oD/ifXyAD/ERPsYn+BSf
4XN8gS/xFb7GG3yDb/Ed3uJ7/IAf8RN+xi/4Fb/hd/yBP/Gya3/HO/sH/ZH8
GznO/kF/JF95b1Tylee6k688d5F85XtRyVfuFslX9gp7olb+Zv+gP5L/JsfZ
P+iP5H+Q4+wf9EfyP3e94MKNs3/QH5nHjbN/0B+Zx42zf9AfmceNs3/QH5nH
jbN/0B+Zx42zf9AfmceNs3/QH5nHjbN/0B+Zx42zf9Af+e+m2T/G+/gAH+Ij
fIxP8Ck+w+f4Al/iK3yNN/gG3+I7vMX3+AE/4if8jF/wK37D7/gDf+Jl14Wz
f/i7q/6Onr+L5O9c+N5y30PrewV9T5Tv/fA5bp/L8zkLvzfr96C8a3un8HMn
9wh74e9//bf857/JcfaPyXH2j8lx9o/JcfaPLy+4cOPsHzOPCzfO/jHzuHDj
7B8zjws3zv4x87hw4+wfM48LN87+MfO4cOPsHzOPCzfO/jHzuHDj7B/j2T/o
j3gfH+BDfISP8Qk+xWf4HF/gS3yFr/EG3+BbfIe3+B4/4Ef8hJ/xC37Fb/gd
f+BPvOy6cPYP+iP5N3Kc/YP+SL7yXtrkK++NSr7yXHfylecukq98Lyr5yt0i
+cpeYU/Uyt/sH/RH8n+Q4+wf9Efyf5Lj7B/0R/73uHH2D/oj87hx9g/6I/O4
cfYP+iPzuHH2D/oj87hx9g/6I/O4cfYP+iPzuHH2D/oj87hx9g/6I/O4cfYP
+iP/XTT7x3gfH+BDfISP8Qk+xWf4HF/gS3yFr/EG3+BbfIe3+B4/4Ef8hJ/x
C37Fb/gdf+BPvOy6cPaPyXH2D3931d/R83eR/J0L31vue2h9r6DvifK9Hz7H
7XN5Pmfh92b9HpR3be8Ufu7kHmEv/P7rv+U//wc5zv4xOc7+MTnO/vHlBRdu
nP1j5nHhxtk/Zh4Xbpz9Y+Zx4cbZP2YeF26c/WPmceHG2T9mHhdunP1j5nHh
xtk/Zh4Xbpz9Yzz7B/0R7+MDfIiP8DE+waf4DJ/jC3yJr/A13uAbfIvv8Bbf
4wf8iJ/wM37Br/gNv+MP/ImXXRfO/kF/JP9GjrN/0B/JV373IvnKe2mTr7w3
KvnKc93JV567SL7yvajkK3eL5Ct7hT1RK3+zf9Afyf8gx9k/6I/kf+56wYUb
Z/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+g
PzKPG2f/oD8yjxtn/6A/8t89s3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/AN
vsV3eIvv8QN+xE/4Gb/gV/yG3/EH/sTLrgtn/5gcZ/+YHGf/8HdX/R09fxfJ
37nwveW+h9b3CvqeKN/74XPcPpfncxZ+b9bvQXnX9k7h507uEfbCP/76b/nP
/yDH2T8mx9k/vrzgwo2zf8w8Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/zDwu
3Dj7x8zjwo2zf8w8Ltw4+8fM48KNs3+MZ/+gP+J9fIAP8RE+xif4FJ/hc3yB
L/EVvsYbfINv8R3e4nv8gB/xE37GL/gVv+F3/IE/8bLrwtk/6I/k38hx9g/6
I/nK7+olX/ndi+Qr76VNvvLeqOQrz3UnX3nuIvnK96KSr9wtkq/sFfZErfzN
/kF/JP8nOc7+QX/kf48bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/
oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/8t81s3+M9/EBPsRH+Bif
4FN8hs/xBb7EV/gab/ANvsV3eIvv8QN+xE/4Gb/gV/yG3/EH/sTLrgtn/5gc
Z/+YHGf/mBxn//B3V/0dPX8Xyd+58L3lvofW9wr6nijf++Fz3D6X53MWfm/W
70F51/ZO4edO7hH2wh9//bf85/8kx9k/vrzgwo2zf8w8Ltw4+8fM48KNs3/M
PC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2zf8w8Ltw4+8fM48KNs3+MZ/+gP+J9
fIAP8RE+xif4FJ/hc3yBL/EVvsYbfINv8R3e4nv8gB/xE37GL/gVv+F3/IE/
8bLrwtk/6I/k38hx9g/6I/nK73YnX/ldveQrv3uRfOW9tMlX3huVfOW57uQr
z10kX/leVPKVu0Xylb3CnqiVv9k/6I/kf+56wYUbZ/+gPzKPG2f/oD8yjxtn
/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/
8t8ts3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/ANvsV3eIvv8QN+xE/4Gb/g
V/yG3/EH/sTLrgtn/5gcZ/+YHGf/mBxn/5gcZ//wd1f9HT1/F8nfufC95b6H
1vcK+p4o3/vhc9w+l+dzFn5v1u9Bedf2TuHnTu4R9sI///pv+c//3PWCCzfO
/jHzuHDj7B8zjws3zv4x87hw4+wfM48LN87+MfO4cOPsHzOPCzfO/jHzuHDj
7B8zjws3zv4xnv2D/oj38QE+xEf4GJ/gU3yGz/EFvsRX+Bpv8A2+xXd4i+/x
A37ET/gZv+BX/Ibf8Qf+xMuuC2f/oD+SfyPH2T/oj+TfyXH2D/oj+crv6iVf
+d2L5CvvpU2+8t6o5CvPdSdfee4i+cr3opKv3C2Sr+wV9kSt/M3+QX/kf4cb
Z/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+g
PzKPG2f/oD8yjxtn/6A/8t8ls3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/AN
vsV3eIvv8QN+xE/4Gb/gV/yG3/EH/sTLrgtn/5gcZ/+YHGf/mBxn/5gcZ/+Y
HGf/mBxn/5gcZ/+YHGf/8L2BvgfK93r4nLbP3fkchd+L9XtO3q29Q/i5knuC
/97/86//LrhwO/dfd73gwo2zf8w8Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/
zDwu3Dj7x8zjwo2zf8w8Ltw4+8f4qz/y/x199Ue8jw/wIT7Cx/gEn+IzfI4v
8CW+wtd4g2/wLb7DW3yPH/AjfsLP+AW/4jf8jj/wJ152XXj6Izme/kiOpz+S
4+mP5Hj6Izme/kiOpz+S4+mP5Hj6Izme/kiO814I+iP5ynMXyVe+F5V85W6R
fGWvsCeWlb+FG09/ZA4Xbjz9kXlcuPH0R+Zx4cbTH5nHhRtPf2QeF248/ZF5
XLjx9EfmceHG0x+Zx4UbT3/E8/kV/RHv4wN8iI/wMT7Bp/gMn+MLfImv8DXe
4Bt8i+/wFt/jB/yIn/AzfsGv+A2/4w/8iZddF87nV/RH8m/kOJ9f0R/Jv5Pj
fH5FfyT/QY7z+RX9kXzld5KSr7zHPPnKewaTr7wHJPnKc3rJV75Hm3zlzp18
5XOo5Cs9USt/G+fzK/ojc7hxPr+iPzKPG+fzK/oj87hxPr+iPzKPG+fzK/oj
87hxPr+iPzKPG+fzK/oj87hxPr+iPzKPG+fzK/pj/r+T6Y94Hx/gQ3yEj/EJ
PsVn+Bxf4Et8ha/xBt/gW3yHt/geP+BH/ISf8Qt+xW/4HX/gT7zsuvD0R3I8
/ZEcT38kx9MfyfH0R3I8/ZEcT38kx9MfyfH0R3I8/ZEc571z9Efylee6k688
d5F85XtRyVfuFsnphQXbG/6d/sg8Ltx4+iPzuHDj6Y/M48KNpz8yjws3nv7I
PC7cePoj87hw4+mPzOPCjac/Mo8LN57+iOf+MZ9Tzv1jvI8P8CE+wsf4BJ/i
M3yOL/AlvsLXeINv8C2+w1t8jx/wI37Cz/gFv+I3/I4/8Cdedl0494/Jce4f
k+PcPybHuX9MjnP/mBzn/jE5zv1jcpz7x+Q494/Jce4fvpfc98z63kDfA+V7
PXxO2+fufI7C78X6PSfv1t4h/FzJPcF/7//Xv/674MLt3L/vesGFG+f+MfO4
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
xCv8iJ/wM17jDd7iHd7jAz7iE37BZ/yK3/AFX/Fw64bz/kF/JH8nx3n/oD+S
f5DjvH/QH8k/yXHeP+iP5F/kOO8f9Efyb3Kc9w/6I/kPOc77B/2R/Jcc5/2D
/kj+d+sBN1w47x/0R+5x4bx/0B+5x4Xz/kF/5B4XzvsH/ZF7XDjvH/RH7nHh
vH/QH7nHhfP+QX/kHhfO+wf9kXtcOO8f9EfRH/EIj/EE3+F7PMUz/IDneIGX
eIUf8RN+xmu8wVu8w3t8wEd8wi/4jF/xG77gKx5u3XDeP+iP5O/kOO8f9Efy
D3Kc9w/6I/knOc77B/2R/Isc5/2D/kj+TY7z/kF/JP8hx3n/oD+S/5LjvH/Q
H8n/bj3ghgvn/YP+yD0unPcP+iP3uHDeP+iP3OPCef+gP3KPC+f9g/7IPS6c
9w/6I/e4cN4/6I/c48J5/6A/co8L5/2D/vjPf/1zf//oHuExnuA7fI+neIYf
8Bwv8BKv8CN+ws94jTd4i3d4jw/4iE/4BZ/xK37DF3zFw60bzvtHz3HeP3qO
8/7Rc5z3j57jvH/0HOf9o+c47x89x3n/6DnO+0fPcd4/eo7z/tFznPePnuO8
f/Qc5/2j5zjvHz3Hef/45wE3XDjvH/0eN1w47x/9HjdcOO8f/R43XDjvH/0e
N1w47x/9HjdcOO8f/R43XDjvH/0eN1w47x/9HjdcOO8f3f/6Y0p/xCM8xhN8
h+/xFM/wA57jBV7iFX7ET/gZr/EGb/EO7/EBH/EJv+AzfsVv+IKveLh1w70/
kuPeH8lx74/kuPdHctz7Iznu/ZEc9/5Ijnt/JMe9P5Lj3h/Jce+P5Lj3R3Lc
+yM57v2RHPf+SI57f3QPuOHCvT9yjxsu3Psj97jhwr0/co8bLtz7I/e44cK9
P3KPGy7c+yP3uOHCvT9yjxsu3Psj97jhwr0/4v5+Tn/EIzzGE3yH7/EUz/AD
nuMFXuIVfsRP+Bmv8QZv8Q7v8QEf8Qm/4DN+xW/4gq94uHXDeT+nP5K/k+O8
n9MfyT/Icd7P6Y/kn+Q47+f0R/Ivcpz3c/oj+Tc5zvs5/ZH8hxzn/Zz+SP5L
jvN+Tn8k/7v1gBsunPdz+iP3uHDez+mP3OPCeT+nP3KPC+f9nP7IPS6c93P6
I/e4cN7P6Y/c48J5P6c/co8L5/2c/sg9Lpz3c/rjv+iPeITHeILv8D2e4hl+
wHO8wEu8wo/4CT/jNd7gLd7hPT7gIz7hF3zGr/gNX/AVD7duuPdHctz7Iznu
/ZEc9/5Ijnt/JMe9P5Lj3h/Jce+P5Lj3R3Lc+yM57v2RHPf+SI57fyTHvT+S
494fyXHvj+4BN1y490fuccOFe3/kHjdcuPdH7nHDhXt/5B43XLj3R+5xw4V7
f+QeN1y490fuccOFe3/kHjdcuPdH3L+/oj/iER7jCb7D93iKZ/gBz/ECL/EK
P+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83LrhfH9FfyR/J8f5/or+SP5B
jvP9Ff2R/JMc5/sr+iP5FznO91f0R/Jvcpzvr+iP5D/kON9f0R/Jf8lxvr+i
P5L/3XrADRfO91f0R+5x4Xx/RX/kHhfO91f0R+5x4Xx/RX/kHhfO91f0R+5x
4Xx/RX/kHhfO91f0R+5x4Xx/RX/kHhfO91f0x3/TH/EIj/EE3+F7PMUz/IDn
eIGXeIUf8RN+xmu8wVu8w3t8wEd8wi/4jF/xG77gKx5u3XDvj+S490dy3Psj
Oe79kRz3/kiOe38kx70/kuPeH8lx74/kuPdHctz7Iznu/ZEc9/5Ijnt/JMe9
P5Lj3h/dA264cO+P3OOGC/f+yD1uuHDvj9zjhgv3/sg9brhw74/c44YL9/7I
PW64cO+P3OOGC/f+yD1uuHDvj7h/v0t/xCM8xhN8h+/xFM/wA57jBV7iFX7E
T/gZr/EGb/EO7/EBH/EJv+AzfsVv+IKveLh1w/l+l/5I/k6O8/0u/ZH8gxzn
+136I/knOc73u/RH8i9ynO936Y/k3+Q43+/SH8l/yHG+36U/kv+S43y/S38k
/7v1gBsunO936Y/c48L5fpf+yD0unO936Y/c48L5fpf+yD0unO936Y/c48L5
fpf+yD0unO936Y/c48L5fpf+yD0unO936Y//oT/iER7jCb7D93iKZ/gBz/EC
L/EKP+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83Lrh3h/Jce+P5Lj3R3Lc
+yM57v2RHPf+SI57fyTHvT+S494fyXHvj+S490dy3PsjOe79kRz3/kiOe38k
x70/ugfccOHeH7nHDRfu/ZF73HDh3h+5xw0X7v2Re9xw4d4fuccNF+79kXvc
cOHeH7nHDRfu/ZF73HDh3h9x33/8P//5X3/EIzzGE3yH7/EUz/ADnuMFXuIV
fsRP+Bmv8QZv8Q7v8QEf8Qm/4DN+xW/4gq94uHXD2X/0HPf+SI6z/+g5zv6j
5zj7j57j7D96jrP/6DnO/qPnOPuPnuPsP3qOs//oOc7+o+c4+4+e4+w/eo6z
/+g5zv7jnwfccOHsP/o9brhw9h/9HjdcOPuPfo8bLpz9R7/HDRfO/qPf44YL
Z//R73HDhbP/6Pe44cLZf/R73HDh7D+6+/6D/ohHeIwn+A7f4yme4Qc8xwu8
xCv8iJ/wM17jDd7iHd7jAz7iE37BZ/yK3/AFX/Fw64az/6A/kr+T4+w/6I/k
H+Q4+w/6I/knOc7+g/5I/kWOs/+gP5J/k+PsP+iP5D/kOPsP+iP5LznO/oP+
SP536wE3XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/
QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/pjoD/iER7jCb7D93iKZ/gBz/ECL/EK
P+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83Lrh7D/oj+Tv5Dj7D/oj+Qc5
zv6D/kj+SY6z/6A/kn+R4+w/6I/k3+Q4+w/6I/kPOc7+g/5I/kuOs/+gP5L/
3XrADRfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9Af
uceFs/+gP3KPC2f/QX/kHhfO/oP++C/6Ix7hMZ7gO3yPp3iGH/AcL/ASr/Aj
fsLPeI03eIt3eI8P+IhP+AWf8St+wxd8xcOtG87+g/5I/k6Os/+gP5J/kOPs
P+iP5J/kOPsP+iP5FznO/oP+SP5NjrP/oD+S/5Dj7D/oj+S/5Dj7D/oj+d+t
B9xw4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7
XDj7D/oj97hw9h/0R+5x4ew/6I9Gf8QjPMYTfIfv8RTP8AOe4wVe4hV+xE/4
Ga/xBm/xDu/xAR/xCb/gM37Fb/iCr3i4dcPZf9Afyd/JcfYf9EfyD3Kc/Qf9
kfyTHGf/QX8k/yLH2X/QH8m/yXH2H/RH8h9ynP0H/ZH8lxxn/0F/JP+79YAb
Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn
/0F/5B4Xzv6D/sg9Lpz9B/3x3/RHPMJjPMF3+B5P8Qw/4Dle4CVe4Uf8hJ/x
Gm/wFu/wHh/wEZ/wCz7jV/yGL/iKh1s3nP0H/ZH8nRxn/0F/JP8gx9l/0B/J
P8lx9h/0R/Ivcpz9B/2R/JscZ/9BfyT/IcfZf9AfyX/JcfYf9Efyv1sPuOHC
2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf
9EfuceHsP+iP3OPC2X/QH0V/xCM8xhN8h+/xFM/wA57jBV7iFX7ET/gZr/EG
b/EO7/EBH/EJv+AzfsVv+IKveLh1w9l/0B/J38lx9h/0R/IPcpz9B/2R/JMc
Z/9BfyT/IsfZf9Afyb/JcfYf9EfyH3Kc/Qf9kfyXHGf/QX8k/7v1gBsunP0H
/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/k
HhfO/oP+yD0unP0H/fE/9Ec8wmM8wXf4Hk/xDD/gOV7gJV7hR/yEn/Eab/AW
7/AeH/ARn/ALPuNX/IYv+IqHWzec/Qf9kfydHGf/QX8k/yDH2X/QH8k/yXH2
H/RH8i9ynP0H/ZH8mxxn/0F/JP8hx9l/0B/Jf8lx9h/0R/K/Ww+44cLZf9Af
uceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x
4ew/6I/c48LZf9Af//l//XPff3SP8BhP8B2+x1M8ww94jhd4iVf4ET/hZ7zG
G7zFO7zHB3zEJ/yCz/gVv+ELvuLh1g1n/9FznP1Hz3H2Hz3H2X/0HGf/0XOc
/UfPcfYfPcfZf/QcZ//Rc5z9R89x9h89x9l/9Bxn/9FznP1Hz3H2Hz3H2X/8
84AbLpz9R7/HDRfO/qPf44YLZ//R73HDhbP/6Pe44cLZf/R73HDh7D/6PW64
cPYf/R43XDj7j36PGy6c/Ud333909/1H9wiP8QTf4Xs8xTP8gOd4gZd4hR/x
E37Ga7zBW7zDe3zAR3zCL/iMX/EbvuArHm7dcPYfPcfZf/QcZ//Rc5z9R89x
9h89x9l/9Bxn/9FznP1Hz3H2Hz3H2X/0HGf/0XOc/UfPcfYfPcfZf/QcZ//R
c5z9xz8PuOHC2X/0e9xw4ew/+j1uuHD2H/0eN1w4+49+jxsunP1Hv8cNF87+
o9/jhgtn/9HvccOFs//o97jhwtl/dPf9R3fff3SP8BhP8B2+x1M8ww94jhd4
iVf4ET/hZ7zGG7zFO7zHB3zEJ/yCz/gVv+ELvuLh1g1n/9FznP1Hz3H2Hz3H
2X/0HGf/0XOc/UfPcfYfPcfZf/QcZ//Rc5z9R89x9h89x9l/9Bxn/9FznP1H
z3H2Hz3H2X/884AbLpz9R7/HDRfO/qPf44YLZ//R73HDhbP/6Pe44cLZf/R7
3HDh7D/6PW64cPYf/R43XDj7j36PGy6c/Ud333909/1H9wiP8QTf4Xs8xTP8
gOd4gZd4hR/xE37Ga7zBW7zDe3zAR3zCL/iMX/EbvuArHm7dcPYfPcfZf/Qc
Z//Rc5z9R89x9h89x9l/9Bxn/9FznP1Hz3H2Hz3H2X/0HGf/0XOc/UfPcfYf
PcfZf/QcZ//Rc5z9xz8PuOHC2X/0e9xw4ew/+j1uuHD2H/0eN1w4+49+jxsu
nP1Hv8cNF87+o9/jhgtn/9HvccOFs//o97jhwtl/dPf9R3fff3SP8BhP8B2+
x1M8ww94jhd4iVf4ET/hZ7zGG7zFO7zHB3zEJ/yCz/gVv+ELvuLh1g1n/9Fz
nP1Hz3H2Hz3H2X/0HGf/0XOc/UfPcfYfPcfZf/QcZ//Rc5z9R89x9h89x9l/
9Bxn/9FznP1Hz3H2Hz3H2X/884AbLpz9R7/HDRfO/qPf44YLZ//R73HDhbP/
6Pe44cLZf/R73HDh7D/6PW64cPYf/R43XDj7j36PGy6c/Ud333909/1H9wiP
8QTf4Xs8xTP8gOd4gZd4hR/xE37Ga7zBW7zDe3zAR3zCL/iMX/EbvuArHm7d
cPYfPcfZf/QcZ//Rc5z9R89x9h89x9l/9Bxn/9FznP1Hz3H2Hz3H2X/0HGf/
0XOc/UfPcfYfPcfZf/QcZ//Rc5z9xz8PuOHC2X/0e9xw4ew/+j1uuHD2H/0e
N1w4+49+jxsunP1Hv8cNF87+o9/jhgtn/9HvccOFs//o97jhwtl/dPf9R3ff
f3SP8BhP8B2+x1M8ww94jhd4iVf4ET/hZ7zGG7zFO7zHB3zEJ/yCz/gVv+EL
vuLh1g1n/9FznP1Hz3H2Hz3H2X/0HGf/0XOc/UfPcfYfPcfZf/QcZ//Rc5z9
R89x9h89x9l/9Bxn/9FznP1Hz3H2Hz3H2X/884AbLpz9R7/HDRfO/qPf44YL
Z//R73HDhbP/6Pe44cLZf/R73HDh7D/6PW64cPYf/R43XDj7j36PGy6c/Ud3
33909/1H9wiP8QTf4Xs8xTP8gOd4gZd4hR/xE37Ga7zBW7zDe3zAR3zCL/iM
X/EbvuArHm7dcPYfPcfZf/QcZ//Rc5z9R89x9h89x9l/9Bxn/9FznP1Hz3H2
Hz3H2X/0HGf/0XOc/UfPcfYfPcfZf/QcZ//Rc5z9xz8PuOHC2X/0e9xw4ew/
+j1uuHD2H/0eN1w4+49+jxsunP1Hv8cNF87+o9/jhgtn/9HvccOFs//o97jh
wtl/dPf9x//7n/v+o3uEx3iC7/A9nuIZfsBzvMBLvMKP+Ak/4zXe4C3e4T0+
4CM+4Rd8xq/4DV/wFQ+3bjj7j57j7D96jrP/6DnO/qPnOPuPnuPsP3qOs//o
Oc7+o+c4+4+e4+w/eo6z/+g5zv6j5zj7j57j7D96jrP/6DnO/uOfB9xw4ew/
+j1uuHD2H/0eN1w4+49+jxsunP1Hv8cNF87+o9/jhgtn/9HvccOFs//o97jh
wtl/9HvccOHsP7r7/oP+iEd4jCf4Dt/jKZ7hBzzHC7zEK/yIn/AzXuMN3uId
3uMDPuITfsFn/Irf8AVf8XDrhrP/oD+Sv5Pj7D/oj+Qf5Dj7D/oj+Sc5zv6D
/kj+RY6z/6A/kn+T4+w/6I/kP+Q4+w/6I/kvOc7+g/5I/nfrATdcOPsP+iP3
uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c
/Qf9kXtcOPsP+mOgP+IRHuMJvsP3eIpn+AHP8QIv8Qo/4if8jNd4g7d4h/f4
gI/4hF/wGb/iN3zBVzzcuuHsP+iP5O/kOPsP+iP5BznO/oP+SP5JjrP/oD+S
f5Hj7D/oj+Tf5Dj7D/oj+Q85zv6D/kj+S46z/6A/kv/desANF87+g/7IPS6c
/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9B
f+QeF87+g/74L/ojHuExnuA7fI+neIYf8Bwv8BKv8CN+ws94jTd4i3d4jw/4
iE/4BZ/xK37DF3zFw60bzv6D/kj+To6z/6A/kn+Q4+w/6I/kn+Q4+w/6I/kX
Oc7+g/5I/k2Os/+gP5L/kOPsP+iP5L/kOPsP+iP5360H3HDh7D/oj9zjwtl/
0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH
7nHh7D/oj0Z/xCM8xhN8h+/xFM/wA57jBV7iFX7ET/gZr/EGb/EO7/EBH/EJ
v+AzfsVv+IKveLh1w9l/0B/J38lx9h/0R/IPcpz9B/2R/JMcZ/9BfyT/IsfZ
f9Afyb/JcfYf9EfyH3Kc/Qf9kfyXHGf/QX8k/7v1gBsunP0H/ZF7XDj7D/oj
97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+yD0u
nP0H/fHf9Ec8wmM8wXf4Hk/xDD/gOV7gJV7hR/yEn/Eab/AW7/AeH/ARn/AL
PuNX/IYv+IqHWzec/Qf9kfydHGf/QX8k/yDH2X/QH8k/yXH2H/RH8i9ynP0H
/ZH8mxxn/0F/JP8hx9l/0B/Jf8lx9h/0R/K/Ww+44cLZf9AfuceFs/+gP3KP
C2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZ
f9AfRX/EIzzGE3yH7/EUz/ADnuMFXuIVfsRP+Bmv8QZv8Q7v8QEf8Qm/4DN+
xW/4gq94uHXD2X/QH8nfyXH2H/RH8g9ynP0H/ZH8kxxn/0F/JP8ix9l/0B/J
v8lx9h/0R/Ifcpz9B/2R/JccZ/9BfyT/u/WAGy6c/Qf9kXtcOPsP+iP3uHD2
H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9
8T/0RzzCYzzBd/geT/EMP+A5XuAlXuFH/ISf8Rpv8Bbv8B4f8BGf8As+41f8
hi/4iodbN5z9B/2R/J0cZ/9BfyT/IMfZf9AfyT/JcfYf9EfyL3Kc/Qf9kfyb
HGf/QX8k/yHH2X/QH8l/yXH2H/RH8r9bD7jhwtl/0B+5x4Wz/6A/co8LZ/9B
f+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B//
+f/8c99/dI/wGE/wHb7HUzzDD3iOF3iJV/gRP+FnvMYbvMU7vMcHfMQn/ILP
+BW/4Qu+4uHWDWf/0XOc/UfPcfYfPcfZf/QcZ//Rc5z9R89x9h89x9l/9Bxn
/9FznP1Hz3H2Hz3H2X/0HGf/0XOc/UfPcfYfPcfZf/zzgBsunP1Hv8cNF87+
o9/jhgtn/9HvccOFs//o97jhwtl/9HvccOHsP/o9brhw9h/9HjdcOPuPfo8b
Lpz9R3fff9Af8QiP8QTf4Xs8xTP8gOd4gZd4hR/xE37Ga7zBW7zDe3zAR3zC
L/iMX/EbvuArHm7dcPYf9Efyd3Kc/Qf9kfyDHGf/QX8k/yTH2X/QH8m/yHH2
H/RH8m9ynP0H/ZH8hxxn/0F/JP8lx9l/0B/J/2494IYLZ/9Bf+QeF87+g/7I
PS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8L
Z/9Bfwz0RzzCYzzBd/geT/EMP+A5XuAlXuFH/ISf8Rpv8Bbv8B4f8BGf8As+
41f8hi/4iodbN5z9B/2R/J0cZ/9BfyT/IMfZf9AfyT/JcfYf9EfyL3Kc/Qf9
kfybHGf/QX8k/yHH2X/QH8l/yXH2H/RH8r9bD7jhwtl/0B+5x4Wz/6A/co8L
Z/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/
0B//RX/EIzzGE3yH7/EUz/ADnuMFXuIVfsRP+Bmv8QZv8Q7v8QEf8Qm/4DN+
xW/4gq94uHXD2X/QH8nfyXH2H/RH8g9ynP0H/ZH8kxxn/0F/JP8ix9l/0B/J
v8lx9h/0R/Ifcpz9B/2R/JccZ/9BfyT/u/WAGy6c/Qf9kXtcOPsP+iP3uHD2
H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9
0eiPeITHeILv8D2e4hl+wHO8wEu8wo/4CT/jNd7gLd7hPT7gIz7hF3zGr/gN
X/AVD7duOPsP+iP5OznO/oP+SP5BjrP/oD+Sf5Lj7D/oj+Rf5Dj7D/oj+Tc5
zv6D/kj+Q46z/6A/kv+S4+w/6I/kf7cecMOFs/+gP3KPC2f/QX/kHhfO/oP+
yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP/6b
/ohHeIwn+A7f4yme4Qc8xwu8xCv8iJ/wM17jDd7iHd7jAz7iE37BZ/yK3/AF
X/Fw64az/6A/kr+T4+w/6I/kH+Q4+w/6I/knOc7+g/5I/kWOs/+gP5J/k+Ps
P+iP5D/kOPsP+iP5LznO/oP+SP536wE3XDj7D/oj97hw9h/0R+5x4ew/6I/c
48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/qj6I94
hMd4gu/wPZ7iGX7Ac7zAS7zCj/gJP+M13uAt3uE9PuAjPuEXfMav+A1f8BUP
t244+w/6I/k7Oc7+g/5I/kGOs/+gP5J/kuPsP+iP5F/kOPsP+iP5NznO/oP+
SP5DjrP/oD+S/5Lj7D/oj+R/tx5ww4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c
/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A//of+iEd4
jCf4Dt/jKZ7hBzzHC7zEK/yIn/AzXuMN3uId3uMDPuITfsFn/Irf8AVf8XDr
hrP/oD+Sv5Pj7D/oj+Qf5Dj7D/oj+Sc5zv6D/kj+RY6z/6A/kn+T4+w/6I/k
P+Q4+w/6I/kvOc7+g/5I/nfrATdcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/
0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+uM//99/7vuP
7hEe4wm+w/d4imf4Ac/xAi/xCj/iJ/yM13iDt3iH9/iAj/iEX/AZv+I3fMFX
PNy64ew/eo6z/+g5zv6j5zj7j57j7D96jrP/6DnO/qPnOPuPnuPsP3qOs//o
Oc7+o+c4+4+e4+w/eo6z/+g5zv6j5zj7j38ecMOFs//o97jhwtl/9HvccOHs
P/o9brhw9h/9HjdcOPuPfo8bLpz9R7/HDRfO/qPf44YLZ//R73HDhbP/6O77
D/ojHuExnuA7fI+neIYf8Bwv8BKv8CN+ws94jTd4i3d4jw/4iE/4BZ/xK37D
F3zFw60bzv6D/kj+To6z/6A/kn+Q4+w/6I/kn+Q4+w/6I/kXOc7+g/5I/k2O
s/+gP5L/kOPsP+iP5L/kOPsP+iP5360H3HDh7D/oj9zjwtl/0B+5x4Wz/6A/
co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj4H+
iEd4jCf4Dt/jKZ7hBzzHC7zEK/yIn/AzXuMN3uId3uMDPuITfsFn/Irf8AVf
8XDrhrP/oD+Sv5Pj7D/oj+Qf5Dj7D/oj+Sc5zv6D/kj+RY6z/6A/kn+T4+w/
6I/kP+Q4+w/6I/kvOc7+g/5I/nfrATdcOPsP+iP3uHD2H/RH7nHh7D/oj9zj
wtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+uO/6I94
hMd4gu/wPZ7iGX7Ac7zAS7zCj/gJP+M13uAt3uE9PuAjPuEXfMav+A1f8BUP
t244+w/6I/k7Oc7+g/5I/kGOs/+gP5J/kuPsP+iP5F/kOPsP+iP5NznO/oP+
SP5DjrP/oD+S/5Lj7D/oj+R/tx5ww4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c
/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/Gv0Rj/AY
T/AdvsdTPMMPeI4XeIlX+BE/4We8xhu8xTu8xwd8xCf8gs/4Fb/hC77i4dYN
Z/9BfyR/J8fZf9AfyT/IcfYf9EfyT3Kc/Qf9kfyLHGf/QX8k/ybH2X/QH8l/
yHH2H/RH8l9ynP0H/ZH879YDbrhw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+g
P3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0x3/TH/EIj/EE
3+F7PMUz/IDneIGXeIUf8RN+xmu8wVu8w3t8wEd8wi/4jF/xG77gKx5u3XD2
H/RH8ndynP0H/ZH8gxxn/0F/JP8kx9l/0B/Jv8hx9h/0R/Jvcpz9B/2R/Icc
Z/9BfyT/JcfZf9Afyf9uPeCGC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj
97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX8U/RGP8BhP8B2+
x1M8ww94jhd4iVf4ET/hZ7zGG7zFO7zHB3zEJ/yCz/gVv+ELvuLh1g1n/0F/
JH8nx9l/0B/JP8hx9h/0R/JPcpz9B/2R/IscZ/9BfyT/JsfZf9AfyX/IcfYf
9EfyX3Kc/Qf9kfzv1gNuuHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8L
Z/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/TH/9Af8QiP8QTf4Xs8
xTP8gOd4gZd4hR/xE37Ga7zBW7zDe3zAR3zCL/iMX/EbvuArHm7dcPYf9Efy
d3Kc/Qf9kfyDHGf/QX8k/yTH2X/QH8m/yHH2H/RH8m9ynP0H/ZH8hxxn/0F/
JP8lx9l/0B/J/2494IYLZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2
H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf/zn//jnvv/oHuExnuA7
fI+neIYf8Bwv8BKv8CN+ws94jTd4i3d4jw/4iE/4BZ/xK37DF3zFw60bzv6j
5zj7j57j7D96jrP/6DnO/qPnOPuPnuPsP3qOs//oOc7+o+c4+4+e4+w/eo6z
/+g5zv6j5zj7j57j7D96jrP/+OcBN1w4+49+jxsunP1Hv8cNF87+o9/jhgtn
/9HvccOFs//o97jhwtl/9HvccOHsP/o9brhw9h/9HjdcOPuP7r7/oD/iER7j
Cb7D93iKZ/gBz/ECL/EKP+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83Lrh
7D/oj+Tv5Dj7D/oj+Qc5zv6D/kj+SY6z/6A/kn+R4+w/6I/k3+Q4+w/6I/kP
Oc7+g/5I/kuOs/+gP5L/3XrADRfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0
R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+GOiPeITHeILv
8D2e4hl+wHO8wEu8wo/4CT/jNd7gLd7hPT7gIz7hF3zGr/gNX/AVD7duOPsP
+iP5OznO/oP+SP5BjrP/oD+Sf5Lj7D/oj+Rf5Dj7D/oj+Tc5zv6D/kj+Q46z
/6A/kv+S4+w/6I/kf7cecMOFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7
XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP/6L/ohHeIwn+A7f
4yme4Qc8xwu8xCv8iJ/wM17jDd7iHd7jAz7iE37BZ/yK3/AFX/Fw64az/6A/
kr+T4+w/6I/kH+Q4+w/6I/knOc7+g/5I/kWOs/+gP5J/k+PsP+iP5D/kOPsP
+iP5LznO/oP+SP536wE3XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceF
s/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/qj0R/xCI/xBN/hezzF
M/yA53iBl3iFH/ETfsZrvMFbvMN7fMBHfMIv+Ixf8Ru+4Csebt1w9h/0R/J3
cpz9B/2R/IMcZ/9BfyT/JMfZf9Afyb/IcfYf9Efyb3Kc/Qf9kfyHHGf/QX8k
/yXH2X/QH8n/bj3ghgtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf
9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F//Df9EY/wGE/wHb7HUzzD
D3iOF3iJV/gRP+FnvMYbvMU7vMcHfMQn/ILP+BW/4Qu+4uHWDWf/QX8kfyfH
2X/QH8k/yHH2H/RH8k9ynP0H/ZH8ixxn/0F/JP8mx9l/0B/Jf8hx9h/0R/Jf
cpz9B/2R/O/WA264cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/
5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfRH/EIj/EE3+F7PMUz/IDn
eIGXeIUf8RN+xmu8wVu8w3t8wEd8wi/4jF/xG77gKx5u3XD2H/RH8ndynP0H
/ZH8gxxn/0F/JP8kx9l/0B/Jv8hx9h/0R/Jvcpz9B/2R/IccZ/9BfyT/JcfZ
f9Afyf9uPeCGC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x
4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/8D/0Rj/AYT/AdvsdTPMMPeI4X
eIlX+BE/4We8xhu8xTu8xwd8xCf8gs/4Fb/hC77i4dYNZ/9BfyR/J8fZf9Af
yT/IcfYf9EfyT3Kc/Qf9kfyLHGf/QX8k/ybH2X/QH8l/yHH2H/RH8l9ynP0H
/ZH879YDbrhw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO
/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0x3/+z3/u+4/uER7jCb7D93iKZ/gB
z/ECL/EKP+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83Lrh7D96jrP/6DnO
/qPnOPuPnuPsP3qOs//oOc7+o+c4+4+e4+w/eo6z/+g5zv6j5zj7j57j7D96
jrP/6DnO/qPnOPuPfx5ww4Wz/+j3uOHC2X/0e9xw4ew/+j1uuHD2H/0eN1w4
+49+jxsunP1Hv8cNF87+o9/jhgtn/9HvccOFs//o7vsP+iMe4TGe4Dt8j6d4
hh/wHC/wEq/wI37Cz3iNN3iLd3iPD/iIT/gFn/ErfsMXfMXDrRvO/oP+SP5O
jrP/oD+Sf5Dj7D/oj+Sf5Dj7D/oj+Rc5zv6D/kj+TY6z/6A/kv+Q4+w/6I/k
v+Q4+w/6I/nfrQfccOHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D
/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iPgf6IR3iMJ/gO3+MpnuEH
PMcLvMQr/Iif8DNe4w3e4h3e4wM+4hN+wWf8it/wBV/xcOuGs/+gP5K/k+Ps
P+iP5B/kOPsP+iP5JznO/oP+SP5FjrP/oD+Sf5Pj7D/oj+Q/5Dj7D/oj+S85
zv6D/kj+d+sBN1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9y
jwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/647/oj3iEx3iC7/A9nuIZfsBz
vMBLvMKP+Ak/4zXe4C3e4T0+4CM+4Rd8xq/4DV/wFQ+3bjj7D/oj+Ts5zv6D
/kj+QY6z/6A/kn+S4+w/6I/kX+Q4+w/6I/k3Oc7+g/5I/kOOs/+gP5L/kuPs
P+iP5H+3HnDDhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4
cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD8a/RGP8BhP8B2+x1M8ww94jhd4
iVf4ET/hZ7zGG7zFO7zHB3zEJ/yCz/gVv+ELvuLh1g1n/0F/JH8nx9l/0B/J
P8hx9h/0R/JPcpz9B/2R/IscZ/9BfyT/JsfZf9AfyX/IcfYf9EfyX3Kc/Qf9
kfzv1gNuuHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+
g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/THf9Mf8QiP8QTf4Xs8xTP8gOd4gZd4
hR/xE37Ga7zBW7zDe3zAR3zCL/iMX/EbvuArHm7dcPYf9Efyd3Kc/Qf9kfyD
HGf/QX8k/yTH2X/QH8m/yHH2H/RH8m9ynP0H/ZH8hxxn/0F/JP8lx9l/0B/J
/2494IYLZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/o
j9zjwtl/0B+5x4Wz/6A/co8LZ/9BfxT9EY/wGE/wHb7HUzzDD3iOF3iJV/gR
P+FnvMYbvMU7vMcHfMQn/ILP+BW/4Qu+4uHWDWf/QX8kfyfH2X/QH8k/yHH2
H/RH8k9ynP0H/ZH8ixxn/0F/JP8mx9l/0B/Jf8hx9h/0R/Jfcpz9B/2R/O/W
A264cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9
Lpz9B/2Re1w4+w/6I/e4cPYf9Mf/0B/xCI/xBN/hezzFM/yA53iBl3iFH/ET
fsZrvMFbvMN7fMBHfMIv+Ixf8Ru+4Csebt1w9h/0R/J3cpz9B/2R/IMcZ/9B
fyT/JMfZf9Afyb/IcfYf9Efyb3Kc/Qf9kfyHHGf/QX8k/yXH2X/QH8n/bj3g
hgtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC
2X/QH7nHhbP/oD9yjwtn/0F//Of/9899/9E9wmM8wXf4Hk/xDD/gOV7gJV7h
R/yEn/Eab/AW7/AeH/ARn/ALPuNX/IYv+IqHWzec/UfPcfYfPcfZf/QcZ//R
c5z9R89x9h89x9l/9Bxn/9FznP1Hz3H2Hz3H2X/0HGf/0XOc/UfPcfYfPcfZ
f/QcZ//xzwNuuHD2H/0eN1w4+49+jxsunP1Hv8cNF87+o9/jhgtn/9HvccOF
s//o97jhwtl/9HvccOHsP/o9brhw9h/dff9Bf8QjPMYTfIfv8RTP8AOe4wVe
4hV+xE/4Ga/xBm/xDu/xAR/xCb/gM37Fb/iCr3i4dcPZf9Afyd/JcfYf9Efy
D3Kc/Qf9kfyTHGf/QX8k/yLH2X/QH8m/yXH2H/RH8h9ynP0H/ZH8lxxn/0F/
JP+79YAbLpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/
oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/0x0B/xCI/xBN/hezzFM/yA53iBl3iF
H/ETfsZrvMFbvMN7fMBHfMIv+Ixf8Ru+4Csebt1w9h/0R/J3cpz9B/2R/IMc
Z/9BfyT/JMfZf9Afyb/IcfYf9Efyb3Kc/Qf9kfyHHGf/QX8k/yXH2X/QH8n/
bj3ghgtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP
3OPC2X/QH7nHhbP/oD9yjwtn/0F//Bf9EY/wGE/wHb7HUzzDD3iOF3iJV/gR
P+FnvMYbvMU7vMcHfMQn/ILP+BW/4Qu+4uHWDWf/QX8kfyfH2X/QH8k/yHH2
H/RH8k9ynP0H/ZH8ixxn/0F/JP8mx9l/0B/Jf8hx9h/0R/Jfcpz9B/2R/O/W
A264cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9
Lpz9B/2Re1w4+w/6I/e4cPYf9EejP+IRHuMJvsP3eIpn+AHP8QIv8Qo/4if8
jNd4g7d4h/f4gI/4hF/wGb/iN3zBVzzcuuHsP+iP5O/kOPsP+iP5BznO/oP+
SP5JjrP/oD+Sf5Hj7D/oj+Tf5Dj7D/oj+Q85zv6D/kj+S46z/6A/kv/desAN
F87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/9/ru7etMFu7Rb1ChUqUKBAgRBG
CCGEJFv/svxgjDHGGJfwped/n1PBU8IuYZWwS7hL2CWsEnYJJ3nnAF3hxeCO
RzTmpD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9Me/6Y94
gId4hMd4gqd4hp/wHC/wEq/wGm/wFu/wM37Be3zAR3zCZ3zBV3zDr/iO33D3
6B5n/0F/JH8nx9l/0B/JP8hx9h/0R/JPcpz9B/2R/IscZ/9BfyT/JsfZf9Af
yX/IcfYf9EfyX3Kc/Qf9kfzv0R3uceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn
/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iPoj/iAR7i
ER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF7/EBH/EJn/EFX/ENv+I7fsPdo3uc
/Qf9kfydHGf/QX8k/yDH2X/QH8k/yXH2H/RH8i9ynP0H/ZH8mxxn/0F/JP8h
x9l/0B/Jf8lx9h/0R/K/R3e4x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9
kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A//kN/xAM8xCM8
xhM8xTP8hOd4gZd4hdd4g7d4h5/xC97jAz7iEz7jC77iG37Fd/yGu0f3OPsP
+iP5OznO/oP+SP5BjrP/oD+Sf5Lj7D/oj+Rf5Dj7D/oj+Tc5zv6D/kj+Q46z
/6A/kv+S4+w/6I/kf4/ucI8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3
uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf/zrf/vHbf/RPMBD
PMJjPMFTPMNPeI4XeIlXeI03eIt3+Bm/4D0+4CM+4TO+4Cu+4Vd8x2+4e3SP
s/9oOc7+o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j5bj7D9ajrP/aDnO/qPlOPuP
luPsP1qOs/9oOc7+o+U4+4+W4+w//nGHe1w4+492j3tcOPuPdo97XDj7j3aP
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
e1w4+w/64z/0RzzAQzzCYzzBUzzDT3iOF3iJV3iNN3iLd/gZv+A9PuAjPuEz
vuArvuFXfMdvuHt0j7P/oD+Sv5Pj7D/oj+Qf5Dj7D/oj+Sc5zv6D/kj+RY6z
/6A/kn+T4+w/6I/kP+Q4+w/6I/kvOc7+g/5I/vfoDve4cPYf9EfuceHsP+iP
3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4
cPYf9Me//q9/3PYfzQM8xCM8xhM8xTP8hOd4gZd4hdd4g7d4h5/xC97jAz7i
Ez7jC77iG37Fd/yGu0f3OPuPluPsP1qOs/9oOc7+o+U4+4+W4+w/Wo6z/2g5
zv6j5Tj7j5bj7D9ajrP/aDnO/qPlOPuPluPsP1qOs/9oOc7+4x93uMeFs/9o
97jHhbP/aPe4x4Wz/2j3uMeFs/9o97jHhbP/aPe4x4Wz/2j3uMeFs/9o97jH
hbP/aPe4x4Wz/2hu+w/6Ix7gIR7hMZ7gKZ7hJzzHC7zEK7zGG7zFO/yMX/Ae
H/ARn/AZX/AV3/ArvuM33D26x9l/0B/J38lx9h/0R/IPcpz9B/2R/JMcZ/9B
fyT/IsfZf9Afyb/JcfYf9EfyH3Kc/Qf9kfyXHGf/QX8k/3t0h3tcOPsP+iP3
uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c
/Qf9kXtcOPsP+qOjP+IBHuIRHuMJnuIZfsJzvMBLvMJrvMFbvMPP+AXv8QEf
8Qmf8QVf8Q2/4jt+w92je5z9B/2R/J0cZ/9BfyT/IMfZf9AfyT/JcfYf9Efy
L3Kc/Qf9kfybHGf/QX8k/yHH2X/QH8l/yXH2H/RH8r9Hd7jHhbP/oD9yjwtn
/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/Q
H7nHhbP/oD/+i/6IB3iIR3iMJ3iKZ/gJz/ECL/EKr/EGb/EOP+MXvMcHfMQn
fMYXfMU3/Irv+A13j+5x9h/0R/J3cpz9B/2R/IMcZ/9BfyT/JMfZf9Afyb/I
cfYf9Efyb3Kc/Qf9kfyHHGf/QX8k/yXH2X/QH8n/Ht3hHhfO/oP+yD0unP0H
/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/k
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
eITHeIKneIaf8Bwv8BKv8Bpv8Bbv8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+ge
Z/9BfyR/J8fZf9AfyT/IcfYf9EfyT3Kc/Qf9kfyLHGf/QX8k/ybH2X/QH8l/
yHH2H/RH8l9ynP0H/ZH879Ed7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9B
f+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj//QH/EAD/EI
j/EET/EMP+E5XuAlXuE13uAt3uFn/IL3+ICP+ITP+IKv+IZf8R2/4e7RPc7+
g/5I/k6Os/+gP5J/kOPsP+iP5J/kOPsP+iP5FznO/oP+SP5NjrP/oD+S/5Dj
7D/oj+S/5Dj7D/oj+d+jO9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7I
PS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B//+n/+cdt/NA/w
EI/wGE/wFM/wE57jBV7iFV7jDd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d
4+w/Wo6z/2g5zv6j5Tj7j5bj7D9ajrP/aDnO/qPlOPuPluPsP1qOs/9oOc7+
o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j3/c4R4Xzv6j3eMeF87+o93jHhfO/qPd
4x4Xzv6j3eMeF87+o93jHhfO/qPd4x4Xzv6j3eMeF87+o93jHhfO/qO57T/o
j3iAh3iEx3iCp3iGn/AcL/ASr/Aab/AW7/AzfsF7fMBHfMJnfMFXfMOv+I7f
cPfoHmf/QX8kfyfH2X/QH8k/yHH2H/RH8k9ynP0H/ZH8ixxn/0F/JP8mx9l/
0B/Jf8hx9h/0R/Jfcpz9B/2R/O/RHe5x4ew/6I/c48LZf9AfuceFs/+gP3KP
C2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I+O/ogH
eIhHeIwneIpn+AnP8QIv8Qqv8QZv8Q4/4xe8xwd8xCd8xhd8xTf8iu/4DXeP
7nH2H/RH8ndynP0H/ZH8gxxn/0F/JP8kx9l/0B/Jv8hx9h/0R/Jvcpz9B/2R
/IccZ/9BfyT/JcfZf9Afyf8e3eEeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2
H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/74L/ojHuAh
HuExnuApnuEnPMcLvMQrvMYbvMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH
2X/QH8nfyXH2H/RH8g9ynP0H/ZH8kxxn/0F/JP8ix9l/0B/Jv8lx9h/0R/If
cpz9B/2R/JccZ/9BfyT/e3SHe1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/Q
H7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6o6c/4gEe4hEe
4wme4hl+wnO8wEu8wmu8wVu8w8/4Be/xAR/xCZ/xBV/xDb/iO37D3aN7nP0H
/ZH8nRxn/0F/JP8gx9l/0B/JP8lx9h/0R/Ivcpz9B/2R/JscZ/9BfyT/IcfZ
f9AfyX/JcfYf9Efyv0d3uMeFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7
XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP/5Nf8QDPMQjPMYT
PMUz/ITneIGXeIXXeIO3eIef8Qve4wM+4hM+4wu+4ht+xXf8hrtH9zj7D/oj
+Ts5zv6D/kj+QY6z/6A/kn+S4+w/6I/kX+Q4+w/6I/k3Oc7+g/5I/kOOs/+g
P5L/kuPsP+iP5H+P7nCPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw
9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX8U/REP8BCP8BhP8BTP
8BOe4wVe4hVe4w3e4h1+xi94jw/4iE/4jC/4im/4Fd/xG+4e3ePsP+iP5O/k
OPsP+iP5BznO/oP+SP5JjrP/oD+Sf5Hj7D/oj+Tf5Dj7D/oj+Q85zv6D/kj+
S46z/6A/kv89usM9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/Q
H7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/3xH/ojHuAhHuExnuApnuEn
PMcLvMQrvMYbvMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH2X/QH8nfyXH2
H/RH8g9ynP0H/ZH8kxxn/0F/JP8ix9l/0B/Jv8lx9h/0R/Ifcpz9B/2R/Jcc
Z/9BfyT/e3SHe1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9y
jwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/641//7R+3/UfzAA/xCI/xBE/x
DD/hOV7gJV7hNd7gLd7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/qPlOPuP
luPsP1qOs/9oOc7+o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j5bj7D9ajrP/aDnO
/qPlOPuPluPsP1qOs//4xx3uceHsP9o97nHh7D/aPe5x4ew/2j3uceHsP9o9
7nHh7D/aPe5x4ew/2j3uceHsP9o97nHh7D/aPe5x4ew/mv/pjyH9EQ/wEI/w
GE/wFM/wE57jBV7iFV7jDd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d49Yf
yXHrj+S49Udy3PojOW79kRy3/kiOW38kx60/kuPWH8lx64/kuPVHctz6Izlu
/ZEct/5Ijlt/JMetP5o73OPCrT9yj3tcuPVH7nGPC7f+yD3uceHWH7nHPS7c
+iP3uMeFW3/kHve4cOuP3OMeF279kXvc48KtP+K2H6Q/4gEe4hEe4wme4hl+
wnO8wEu8wmu8wVu8w8/4Be/xAR/xCZ/xBV/xDb/iO37D3aN7nP0g/ZH8nRxn
P0h/JP8gx9kP0h/JP8lx9oP0R/Ivcpz9IP2R/JscZz9IfyT/IcfZD9IfyX/J
cfaD9Efyv0d3uMeFsx+kP3KPC2c/SH/kHhfOfpD+yD0unP0g/ZF7XDj7Qfoj
97hw9oP0R+5x4ewH6Y/c48LZD9IfuceFsx+kPzb0RzzAQzzCYzzBUzzDT3iO
F3iJV3iNN3iLd/gZv+A9PuAjPuEzvuArvuFXfMdvuHt0j1t/JMetP5Lj1h/J
ceuP5Lj1R3Lc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHrj+S49Udy3PojOW79
kRy3/mjucI8Lt/7IPe5x4dYfucc9Ltz6I/e4x4Vbf+Qe97hw64/c4x4Xbv2R
e9zjwq0/co97XLj1R+5xjwu3/ojb/pz+iAd4iEd4jCd4imf4Cc/xAi/xCq/x
Bm/xDj/jF7zHB3zEJ3zGF3zFN/yK7/gNd4/ucfbn9Efyd3Kc/Tn9kfyDHGd/
Tn8k/yTH2Z/TH8m/yHH25/RH8m9ynP05/ZH8hxxnf05/JP8lx9mf0x/J/x7d
4R4Xzv6c/sg9Lpz9Of2Re1w4+3P6I/e4cPbn9EfuceHsz+mP3OPC2Z/TH7nH
hbM/pz9yjwtnf05/5B4Xzv6c/vijP+IBHuIRHuMJnuIZfsJzvMBLvMJrvMFb
vMPP+AXv8QEf8Qmf8QVf8Q2/4jt+w92je9z6Izlu/ZEct/5Ijlt/JMetP5Lj
1h/JceuP5Lj1R3Lc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHrj+S49Udzh3tc
uPVH7nGPC7f+yD3uceHWH7nHPS7c+iP3uMeFW3/kHve4cOuP3OMeF279kXvc
48KtP3KPe1y49Ufc3i+hP+IBHuIRHuMJnuIZfsJzvMBLvMJrvMFbvMPP+AXv
8QEf8Qmf8QVf8Q2/4jt+w92je5z3S+iP5O/kOO+X0B/JP8hx3i+hP5J/kuO8
X0J/JP8ix3m/hP5I/k2O834J/ZH8hxzn/RL6I/kvOc77JfRH8r9Hd7jHhfN+
Cf2Re1w475fQH7nHhfN+Cf2Re1w475fQH7nHhfN+Cf2Re1w475fQH7nHhfN+
Cf2Re1w475fQH7nHhfN+Cf3x3+iPeICHeITHeIKneIaf8Bwv8BKv8Bpv8Bbv
8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+get/5Ijlt/JMetP5Lj1h/JceuP5Lj1
R3Lc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHrj+S49Udy3PojOW790dzhHhdu
/ZF73OPCrT9yj3tcuPVH7nGPC7f+yD3uceHWH7nHPS7c+iP3uMeFW3/kHve4
cOuP3OMeF279Ebf3r+iPeICHeITHeIKneIaf8Bwv8BKv8Bpv8Bbv8DN+wXt8
wEd8wmd8wVd8w6/4jt9w9+ge5/0r+iP5OznO+1f0R/IPcpz3r+iP5J/kOO9f
0R/Jv8hx3r+iP5J/k+O8f0V/JP8hx3n/iv5I/kuO8/4V/ZH879Ed7nHhvH9F
f+QeF877V/RH7nHhvH9Ff+QeF877V/RH7nHhvH9Ff+QeF877V/RH7nHhvH9F
f+QeF877V/RH7nHhvH9Ff/x3+iMe4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8
jF/wHh/wEZ/wGV/wFd/wK77jN9w9usetP5Lj1h/JceuP5Lj1R3Lc+iM5bv2R
HLf+SI5bfyTHrT+S49YfyXHrj+S49Udy3PojOW79kRy3/kiOW380d7jHhVt/
5B73uHDrj9zjHhdu/ZF73OPCrT9yj3tcuPVH7nGPC7f+yD3uceHWH7nHPS7c
+iP3uMeFW3/E7f1E+iMe4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8jF/wHh/w
EZ/wGV/wFd/wK77jN9w9usd5P5H+SP5OjvN+Iv2R/IMc5/1E+iP5JznO+4n0
R/Ivcpz3E+mP5N/kOO8n0h/Jf8hx3k+kP5L/kuO8n0h/JP97dId7XDjvJ9If
uceF834i/ZF7XDjvJ9IfuceF834i/ZF7XDjvJ9IfuceF834i/ZF7XDjvJ9If
uceF834i/ZF7XDjvJ9If/4P+iAd4iEd4jCd4imf4Cc/xAi/xCq/xBm/xDj/j
F7zHB3zEJ3zGF3zFN/yK7/gNd4/uceuP5Lj1R3Lc+iM5bv2RHLf+SI5bfyTH
rT+S49YfyXHrj+S49Udy3PojOW79kRy3/kiOW38kx60/kuPWH80d7nHh1h+5
xz0u3Poj97jHhVt/5B73uHDrj9zjHhdu/ZF73OPCrT9yj3tcuPVH7nGPC7f+
yD3uceHWH3F7f5f+iAd4iEd4jCd4imf4Cc/xAi/xCq/xBm/xDj/jF7zHB3zE
J3zGF3zFN/yK7/gNd4/ucd7fpT+Sv5PjvL9LfyT/IMd5f5f+SP5JjvP+Lv2R
/Isc5/1d+iP5NznO+7v0R/Ifcpz3d+mP5L/kOO/v0h/J/x7d4R4Xzvu79Efu
ceG8v0t/5B4Xzvu79EfuceG8v0t/5B4Xzvu79EfuceG8v0t/5B4Xzvu79Efu
ceG8v0t/5B4Xzvu79Mf/pD/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF
7/EBH/EJn/EFX/ENv+I7fsPdo3vc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHr
j+S49Udy3PojOW79kRy3/kiOW38kx60/kuPWH8lx64/kuPVHc4d7XLj1R+5x
jwu3/sg97nHh1h+5xz0u3Poj97jHhVt/5B73uHDrj9zjHhdu/ZF73OPCrT9y
j3tcuPVH3N5vpz/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF7/EBH/EJ
n/EFX/ENv+I7fsPdo3uc99vpj+Tv5Djvt9MfyT/Icd5vpz+Sf5LjvN9OfyT/
Isd5v53+SP5NjvN+O/2R/Icc5/12+iP5LznO++30R/K/R3e4x4Xzfjv9kXtc
OO+30x+5x4Xzfjv9kXtcOO+30x+5x4Xzfjv9kXtcOO+30x+5x4Xzfjv9kXtc
OO+30x+5x4Xzfjv98b/oj3iAh3iEx3iCp3iGn/AcL/ASr/Aab/AW7/AzfsF7
fMBHfMJnfMFXfMOv+I7fcPfoHrf+SI5bfyTHrT+S49YfyXHrj+S49Udy3Poj
OW79kRy3/kiOW38kx60/kuPWH8lx64/kuPVHctz6Izlu/dHc4R4Xbv2Re9zj
wq0/co97XLj1R+5xjwu3/sg97nHh1h+5xz0u3Poj97jHhVt/5B73uHDrj9zj
Hhdu/RG3/z/+33/c/v9oHuAhHuExnuApnuEnPMcLvMQrvMYbvMU7/Ixf8B4f
8BGf8Blf8BXf8Cu+4zfcPbrH+f+j5Tj/f7Qc5/+PluP8/9FynP8/Wo7z/0fL
cf7/aDnO/x8tx/n/o+U4/3+0HOf/j5bj/P/Rcpz/P1qO8/9Hy3H+/2g5zv8f
/7jDPS6c/z/aPe5x4fz/0e5xjwvn/492j3tcOP9/tHvc48L5/6Pd4x4Xzv8f
7R73uHD+/2j3uMeF8/9Hu8c9Lpz/P5rb/x/0RzzAQzzCYzzBUzzDT3iOF3iJ
V3iNN3iLd/gZv+A9PuAjPuEzvuArvuFXfMdvuHt0j/P/B/2R/J0c5/8P+iP5
BznO/x/0R/JPcpz/P+iP5F/kOP9/0B/Jv8lx/v+gP5L/kOP8/0F/JP8lx/n/
g/5I/vfoDve4cP7/oD9yjwvn/w/6I/e4cP7/oD9yjwvn/w/6I/e4cP7/oD9y
jwvn/w/6I/e4cP7/oD9yjwvn/w/6I/e4cP7/oD+m9Ec8wEM8wmM8wVM8w094
jhd4iVd4jTd4i3f4Gb/gPT7gIz7hM77gK77hV3zHb7h7dI/z/wf9kfydHOf/
D/oj+Qc5zv8f9EfyT3Kc/z/oj+Rf5Dj/f9Afyb/Jcf7/oD+S/5Dj/P9BfyT/
Jcf5/4P+SP736A73uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+
/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/NvRHPMBDPMJjPMFT
PMNPeI4XeIlXeI03eIt3+Bm/4D0+4CM+4TO+4Cu+4Vd8x2+4e3SP8/8H/ZH8
nRzn/w/6I/kHOc7/H/RH8k9ynP8/6I/kX+Q4/3/QH8m/yXH+/6A/kv+Q4/z/
QX8k/yXH+f+D/kj+9+gO97hw/v+gP3KPC+f/D/oj97hw/v+gP3KPC+f/D/oj
97hw/v+gP3KPC+f/D/oj97hw/v+gP3KPC+f/D/oj97hw/v+gPzr6Ix7gIR7h
MZ7gKZ7hJzzHC7zEK7zGG7zFO/yMX/AeH/ARn/AZX/AV3/ArvuM33D26x/n/
g/5I/k6O8/8H/ZH8gxzn/w/6I/knOc7/H/RH8i9ynP8/6I/k3+Q4/3/QH8l/
yHH+/6A/kv+S4/z/QX8k/3t0h3tcOP9/0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz
/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/0B9/9Ec8
wEM8wmM8wVM8w094jhd4iVd4jTd4i3f4Gb/gPT7gIz7hM77gK77hV3zHb7h7
dI/z/wf9kfydHOf/D/oj+Qc5zv8f9EfyT3Kc/z/oj+Rf5Dj/f9Afyb/Jcf7/
oD+S/5Dj/P9BfyT/Jcf5/4P+SP736A73uHD+/6A/co8L5/8P+iP3uHD+/6A/
co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/
/ov+iAd4iEd4jCd4imf4Cc/xAi/xCq/xBm/xDj/jF7zHB3zEJ3zGF3zFN/yK
7/gNd4/ucf7/oD+Sv5Pj/P9BfyT/IMf5/4P+SP5JjvP/B/2R/Isc5/8P+iP5
NznO/x/0R/Ifcpz/P+iP5L/kOP9/0B/J/x7d4R4Xzv8f9EfuceH8/0F/5B4X
zv8f9EfuceH8/0F/5B4Xzv8f9EfuceH8/0F/5B4Xzv8f9EfuceH8/0F/5B4X
zv8f9Md/oz/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF7/EBH/EJn/EF
X/ENv+I7fsPdo3uc/z/oj+Tv5Dj/f9AfyT/Icf7/oD+Sf5Lj/P9BfyT/Isf5
/4P+SP5NjvP/B/2R/Icc5/8P+iP5LznO/x/0R/K/R3e4x4Xz/wf9kXtcOP9/
0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/
0B+5x4Xz/wf90dMf8QAP8QiP8QRP8Qw/4Tle4CVe4TXe4C3e4Wf8gvf4gI/4
hM/4gq/4hl/xHb/h7tE9zv8f9Efyd3Kc/z/oj+Qf5Dj/f9AfyT/Jcf7/oD+S
f5Hj/P9BfyT/Jsf5/4P+SP5DjvP/B/2R/Jcc5/8P+iP536M73OPC+f+D/sg9
Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9
Lpz/P+iP3OPC+f+D/vjv9Ec8wEM8wmM8wVM8w094jhd4iVd4jTd4i3f4Gb/g
PT7gIz7hM77gK77hV3zHb7h7dI/z/wf9kfydHOf/D/oj+Qc5zv8f9EfyT3Kc
/z/oj+Rf5Dj/f9Afyb/Jcf7/oD+S/5Dj/P9BfyT/Jcf5/4P+SP736A73uHD+
/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+
/6A/co8L5/8P+iP3uHD+/6A//k1/xAM8xCM8xhM8xTP8hOd4gZd4hdd4g7d4
h5/xC97jAz7iEz7jC77iG37Fd/yGu0f3OP9/0B/J38lx/v+gP5J/kOP8/0F/
JP8kx/n/g/5I/kWO8/8H/ZH8mxzn/w/6I/kPOc7/H/RH8l9ynP8/6I/kf4/u
cI8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/
co8L5/8P+iP3uHD+/6A/co8L5/8P+uN/0B/xAA/xCI/xBE/xDD/hOV7gJV7h
Nd7gLd7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/x/0R/J3cpz/P+iP5B/k
OP9/0B/JP8lx/v+gP5J/keP8/0F/JP8mx/n/g/5I/kOO8/8H/ZH8lxzn/w/6
I/nfozvc48L5/4P+yD0unP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+yD0u
nP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+KPojHuAhHuExnuApnuEnPMcL
vMQrvMYbvMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH+f+D/kj+To7z/wf9
kfyDHOf/D/oj+Sc5zv8f9EfyL3Kc/z/oj+Tf5Dj/f9AfyX/Icf7/oD+S/5Lj
/P9BfyT/e3SHe1w4/3/QH7nHhfP/B/2Re1w4/3/QH7nHhfP/B/2Re1w4/3/Q
H7nHhfP/B/2Re1w4/3/QH7nHhfP/B/2Re1w4/3/QH/+T/ogHeIhHeIwneIpn
+AnP8QIv8Qqv8QZv8Q4/4xe8xwd8xCd8xhd8xTf8iu/4DXeP7nH+/6A/kr+T
4/z/QX8k/yDH+f+D/kj+SY7z/wf9kfyLHOf/D/oj+Tc5zv8f9EfyH3Kc/z/o
j+S/5Dj/f9Afyf8e3eEeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+Qe
F87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/THf+iPeICHeITH
eIKneIaf8Bwv8BKv8Bpv8Bbv8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+ge5/8P
+iP5OznO/x/0R/IPcpz/P+iP5J/kOP9/0B/Jv8hx/v+gP5J/k+P8/0F/JP8h
x/n/g/5I/kuO8/8H/ZH879Ed7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/
H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf/wv+iMe
4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8jF/wHh/wEZ/wGV/wFd/wK77jN9w9
usf5/4P+SP5OjvP/B/2R/IMc5/8P+iP5JznO/x/0R/Ivcpz/P+iP5N/kOP9/
0B/Jf8hx/v+gP5L/kuP8/0F/JP97dId7XDj/f9AfuceF8/8H/ZF7XDj/f9Af
uceF8/8H/ZF7XDj/f9AfuceF8/8H/ZF7XDj/f9AfuceF8/8H/ZF7XDj/f9Af
//r//nH7/6N5gId4hMd4gqd4hp/wHC/wEq/wGm/wFu/wM37Be3zAR3zCZ3zB
V3zDr/iO33D36B7n/4+W4/z/0XKc/z9ajvP/R8tx/v9oOc7/Hy3H+f+j5Tj/
f7Qc5/+PluP8/9FynP8/Wo7z/0fLcf7/aDnO/x8tx/n/o+U4/3/84w73uHD+
/2j3uMeF8/9Hu8c9Lpz/P9o97nHh/P/R7nGPC+f/j3aPe1w4/3+0e9zjwvn/
o93jHhfO/x/tHve4cP7/aG7/f9Af8QAP8QiP8QRP8Qw/4Tle4CVe4TXe4C3e
4Wf8gvf4gI/4hM/4gq/4hl/xHb/h7tE9zv8f9Efyd3Kc/z/oj+Qf5Dj/f9Af
yT/Jcf7/oD+Sf5Hj/P9BfyT/Jsf5/4P+SP5DjvP/B/2R/Jcc5/8P+iP536M7
3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP
3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/pjSH/EAD/EIj/EET/EMP+E5XuAlXuE1
3uAt3uFn/IL3+ICP+ITP+IKv+IZf8R2/4e7RPc7/H/RH8ndynP8/6I/kH+Q4
/3/QH8k/yXH+/6A/kn+R4/z/QX8k/ybH+f+D/kj+Q47z/wf9kfyXHOf/D/oj
+d+jO9zjwvn/g/7IPS6c/z/oj9zjwvn/g/7IPS6c/z/oj9zjwvn/g/7IPS6c
/z/oj9zjwvn/g/7IPS6c/z/oj9zjwvn/g/7Y0B/xAA/xCI/xBE/xDD/hOV7g
JV7hNd7gLd7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/x/0R/J3cpz/P+iP
5B/kOP9/0B/JP8lx/v+gP5J/keP8/0F/JP8mx/n/g/5I/kOO8/8H/ZH8lxzn
/w/6I/nfozvc48L5/4P+yD0unP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+
yD0unP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+6OiPeICHeITHeIKneIaf
8Bwv8BKv8Bpv8Bbv8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+ge5/8P+iP5OznO
/x/0R/IPcpz/P+iP5J/kOP9/0B/Jv8hx/v+gP5J/k+P8/0F/JP8hx/n/g/5I
/kuO8/8H/ZH879Ed7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh
/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf/zRH/EAD/EIj/EE
T/EMP+E5XuAlXuE13uAt3uFn/IL3+ICP+ITP+IKv+IZf8R3//13du0lGDRqF
0dTQwMDAQERERMT7/XIQERERS/hLGKaCU8KUMCVMCW9pkz3wrXCx2fEO9xte
Nr3i/j/Yj/J3ctz/B/tR/kGO+/9gP8o/yXH/H+xH+Rc57v+D/Sj/Jsf9f7Af
5T/kuP8P9qP8lxz3/8F+lP9tesErHtz/B/tRHw/u/4P9qI8H9//BftTHg/v/
YD/q48H9f7Af9fHg/j/Yj/p4cP8f7Ed9PLj/D/ajPh7c/wf78Q/7kbfwNt7B
u3gP7+MDfIiP8DE+waf4DJ/jC3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gNL5te
cf8f7Ef5Oznu/4P9KP8gx/1/sB/ln+S4/w/2o/yLHPf/wX6Uf5Pj/j/Yj/If
ctz/B/tR/kuO+/9gP8r/Nr3gFQ/u/4P9qI8H9//BftTHg/v/YD/q48H9f7Af
9fHg/j/Yj/p4cP8f7Ed9PLj/D/ajPh7c/wf7UR8P7v+D/fgX+5G38Dbewbt4
D+/jA3yIj/AxPsGn+Ayf4wt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/4DS+bXnH/
H+xH+Ts57v+D/Sj/IMf9f7Af5Z/kuP8P9qP8ixz3/8F+lH+T4/4/2I/yH3Lc
/wf7Uf5Ljvv/YD/K/za94BUP7v+D/aiPB/f/wX7Ux4P7/2A/6uPB/X+wH/Xx
4P4/2I/6eHD/H+xHfTy4/w/2oz4e3P8H+1EfD+7/g/1Y2Y+8hbfxDt7Fe3gf
H+BDfISP8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb3jZ9Ir7/2A/
yt/Jcf8f7Ef5Bznu/4P9KP8kx/1/sB/lX+S4/w/2o/ybHPf/wX6U/5Dj/j/Y
j/Jfctz/B/tR/rfpBa94cP8f7Ed9PLj/D/ajPh7c/wf7UR8P7v+D/aiPB/f/
wX7Ux4P7/2A/6uPB/X+wH/Xx4P4/2I/6eHD/H+zHf9iPvIW38Q7exXt4Hx/g
Q3yEj/EJPsVn+Bxf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW942fSK+/9gP8rf
yXH/H+xH+Qc57v+D/Sj/JMf9f7Af5V/kuP8P9qP8mxz3/8F+lP+Q4/4/2I/y
X3Lc/wf7Uf636QWveHD/H+xHfTy4/w/2oz4e3P8H+1EfD+7/g/2ojwf3/8F+
1MeD+/9gP+rjwf1/sB/18eD+P9iP+nhw/x/sx3/Zj7yFt/EO3sV7eB8f4EN8
hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yEn/ELfsVveNn0ivv/YD/K38lx
/x/sR/kHOe7/g/0o/yTH/X+wH+Vf5Lj/D/aj/Jsc9//BfpT/kOP+P9iP8l9y
3P8H+1H+t+kFr3hw/x/sR308uP8P9qM+Htz/B/tRHw/u/4P9qI8H9//BftTH
g/v/YD/q48H9f7Af9fHg/j/Yj/p4cP8f7Mf/2I+8hbfxDt7Fe3gfH+BDfISP
8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb3jZ9Ir7/2A/yt/Jcf8f
7Ef5Bznu/4P9KP8kx/1/sB/lX+S4/w/2o/ybHPf/wX6U/5Dj/j/Yj/Jfctz/
B/tR/rfpBa94cP8f7Ed9PLj/D/ajPh7c/wf7UR8P7v+D/aiPB/f/wX7Ux4P7
/2A/6uPB/X+wH/Xx4P4/2I/6eHD/H+zHsB95C2/jHbyL9/A+PsCH+Agf4xN8
is/wOb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/Cy6RX3/8F+lL+T4/4/2I/y
D3Lc/wf7Uf5Jjvv/YD/Kv8hx/x/sR/k3Oe7/g/0o/yHH/X+wH+W/5Lj/D/aj
/G/TC17x4P4/2I/6eHD/H+xHfTy4/w/2oz4e3P8H+1EfD+7/g/2ojwf3/8F+
1MeD+/9gP+rjwf1/sB/18eD+P/69/B9owBSv
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
H7cHMgs/7gxkFvbc4T7OLw9kK3u9zTmYc5fHYtLdbqnp+50b8y7zM2H+A+7D
vHs8FqvudcuedglUi9zfBz2W9/7hQO8+bj0eyBHseTKQL3jzQiA7qK3HArnG
uBfdhwePBjKO2FOeh23PBTII8552H14+7z7yPuE1We8l58OetwKZgh9vu8Wn
1wKZhT2vBjKF80d8HezjlUDGEXsvkDV48LJzE3vdObDqHefGuWcDmcu+/xfo
vWQfb3gs9/JNt8T+CVRj1Mczvj7mv+818enjQAbhyqeBTMGbbwK931jyUSDv
GPet+3Diw0D2EfvM8/Dyq0AOYtLn7sPOr91H3k+8Jut953z49EcgRzDmT7c4
9FMgp7Dkx0Aecf53IFO4zh8CuUbsA18f+/veuYn97Bz49JdzM/9d32Oex++B
XGMfv/bHiYHM+M0tsS98TZj9XyCz8GnSUO8973IYyiMcikP5gitVqDqhzoJQ
xjGuDtWHE/wDK/IRS0LNw8gilEH4l4bqw7YyVB95o1Brst4gVD58Gi2UIxgz
eqgWh4ahnMKSLpRHnBdxv1bU5+2PNpRrxMYK5Qs2NKFyExspVA58GiNUbkzK
QznLvkcN5Rr7GDnUWL5Ro4RqiU0SyhTuYxbq+pg/dqg1MWz8UB7h0IShfMGV
KULZQc2NF8o4xk0Zqg8Pxg3lHbGJQs3DyMlCPTe+vROH6mMfk4fqI+8EodZk
valC5cOemUOZgh+zhGrxabpQZmHPtKFM4fzfQHXJezNNKOOIjRPq+tjf1KFy
E5s+VA6smjVUbpwbM9Q95nnMFMoI9jFDqLHU/YyhWmL8JuPvl/yunS1UDmyb
PVSLQ/OEMghX5gtlCt4sGsoOamvuUN4xbrFQfXgwVyj7iM0fah5eLhyqxjBv
gVB92LlIqD7yzhtqTdZbKJR9zFk8VG4cWjGUI/i0ZCi/sGTpUH7h0FKh+jhf
JZQvGLBCKJuYv0SofMxfNpRT1PRKoXLj3PKhfuszZ7lQcc6XCbUOcxYMdR3s
deVQ81hv1VBrYtJa/Z9/CWTJOqEcwZiNQ70H+LFGKOPwaZNQfRiweijviK0b
ah5GbhjKPoxfL1QfXm4Uqo+8a4dak/U2DZUPb/gH9DiCGdu7xaQtQzmFN1uE
coTzHUPZhCWbh3KN2Gqhro/9bebcxLZyDnzawbmZP37vyF3UT39sG8oF9rG1
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
Dgz7yrnx73+RfGffn0XylH184rHY9qlbYr9F8ov7+Kavj/nfek0c+jGSZTj0
cyRfcOWvSHaw9x8iGce4v913Rn98H8k4Yr94Hlb94efGs/3VfezjT/eR9yev
yXr/OB/GpLHqE1eyWC2WBLEcwS3+hVMsO8fzuK/Y9F8kv4h95+tjf/86N7Ew
Vg4My2Plxr+vfY95HkmsOmcfUayx2BbHaonxO4y/X/L3zzKWldi2V9o73x+j
9ccwlilYMkYsL6izMWO1GNDG8g6rxorVhxNNLPuIdbHi5Bo5llnYOXqseiPv
SLHWITaI5SPzR4tlH+MmjmUKlkwayxrMGC+WQVg1biy/OP+x//Ox/XFcf4wT
yzhik8TKwfzJY9U23owfKwcmTRTrtz7rTRjLLM4niBXnfOxY10reUWN9A9jr
KLGuj/PJYu2RNaaL5Q5+zBrLZcyYLVZLrU8Tyylsmz1WHzZMHcs+YtPGipNr
hlg+Ytgssb4x5J0+1jrEpoplIvMXiGUHTiwYq8WhhWK12DNXLDuwauFYffgx
Raz7hKlzx4pj0pyxjGPOlLHirDdHrL0Tmz9W/bP2IrHyYcZ8sWqb2Dyx8uHZ
vLFaYovFcgeTtolVV7z727rlP1NaMpY7WLJ0LEcwZuVYXlBPS8QyjnGrxOrD
gMVj5Sa2TKx5GLlirLrCueX6P38RycuVYvWRd6lYa7LeqrHy4c16sRzBjPVj
tZi0Ziyn8GaNWI5w/pPf0+P7Y/VYrhHbKJYvGLBarNzE1oqVA582iJUb21aI
ZS77XjfWd4h9rB1rLKauE6slNnOs3x+8N8vHuj7mbxxrTUzaPJY7WLJlLEcw
Zof+qPqj7o/NYhnHuB3dRx1vGss7Ylt5HkZu5+eGPVu7j+e6vfvIu4XXZL2d
nA9X9o7lAn7s4xafdotlFpbsGssdzheN9a7xDu0Syyxim8S6Pva3s3MT2905
sGpf58a8DWPdY57HXrFqnn3s4bHU/Z5uic0U6zcE93fGWDXK+X7Oh5eHxfIF
b7CKGpvS7wIttXtILJsm8PtBHx4cHMs+Yoc6Tq4jYlmJc8fEMo68h3sdYgfF
spL5Z8R6D/DjTLf4dJZbfDopljsYdmes+uF9v8st7+bJjmPPibEsY84dseqQ
OSd478RO9z1i7aNjWcleT4t1v4id4nw4d6pbYnd7TWrlqFjfA+af7f1i54Wx
TMGSi2NZg0PnxTIL5y6IZRnjror1ruDN+Y4Tu8TzsPOKWCZi2KXuw9Er3cf8
i7wm610TyxfsuTVWfeLKbW6x5Kb+WDaWMefGcpP9nePr4Pz6WNZg23WxvOP8
Wufm/AbHMex25+a+HxnrXeAe3RKrztnHzV6T86t93ez151jvGc/q/Vj1Rp19
GKseeH8fiGUKljweyynMeMIttXVfLO+w6kn34cG9sewjdr/j5HoollnY+Vis
eiPvg16H2D1+5sx/KdY3AEtedosfr7jFp2di+YUlB8T6ZvNbYP9Y9cf5s45j
29OxLGPOa7Esw56nvHdiL8b6DrH2o7H8Za8vxLKM2HPOh3nPuyX2ge8l9/GR
WN8G5r/q/bLeO7FMwZKPvVf2/onbA/vjrVjeYdWn7qOm/xfLPmJvO06u92KZ
xbP8yM+QvO96HWJvxvKR+d/Fqivq8nu3WPKDW6z6IpZNh3p97iumvO57hqlf
Oo5zn8cyizlvOM56n3nvxL6N9b6y9sOx3gXu0TexXCP2lfPh2dduiV0e63cM
9flLrPcXh05Mem/6Y9r++D2WU7jyZyxT8CZIVG/U32+xvGNcmKgPM351PmJ/
eR6G/RfLSuz5232Yyn+hjD7y/uE1We/fWM4yJ0qUG28GiXzBkiSRTRiWJTIF
w9JEfZx3ieoWY+pE18/8OFE+5heJ/MKqJlFunKv6P1/me1YminOeJ1qHOf/4
Othrm2ge6w0TrYk9o/V/vjGWYWMkMgVjxk/0bcDpURL5hU8TJOqjjkdOZBmx
MRPNw8hxE30z+M6MlagPL8dL1Efe0ROtyXoTJsqHK1Mlqkn8mDpRi0+TJjIL
SyZJ5A7nvBOYhU8TJzKL2EiJro/9TZQoN7HJEuXAKt4pcjN/i0TPkns/ZaLa
Zh+TJxrLuzxFopbYdInWxJUZErmDVasmqjfqbKZENmHJzIlaLJk1kTU4NGOi
eYybJ1HtUVuzJBrLuLkTWUZszkQ+4s1ciVpisyfyFEdnS5Sb83kT5cOG+RK1
GLN4ou8BliyQyCO8WSiRX7iyYKI+zpdO5BS1Pn+iHMxZONFYfFokUcs3Z4lE
ufFvjkT7Yt9LJurDwkUTjcXUxRK17GmcRN8/3qGlEo1l7ekT3W/u9fKJbMKS
FRK1WLJSImtwaLlExjFuzUTfRVxZMdFYxq2R6Lc7sdUSPTf+3rl6opbYKok8
5bmunCg352slyocraydqsWeTRKbgx7o2Cz/WT2QW9qyXqI/zZRPZyl7XSZSD
ORskGotJGyZqqelNE+XGvGUSPRPmb+Y+zNso0Vis2jhRy57GTlSL3N/NPZb3
fku/+7i1bSJHsGf7RL7gzW6J7KC2tknkGuN2dx8ebJ3IOGI7eB627ZLIIMzb
0X14uav7yLud12S9PZwPew5KZAp+HOwWn/ZNZBb27JPIFM638nWwj70TGUfs
sETW4MFe/TGqY/s5B1Yd4tw4t3Mic9n3gYneS/axv8dyLw9wS+ziRDVGfezk
62P+4V4Tn45OZBCuHJvIFLw5JdH7jSVHJfKOcae6DyeOTGQfseM8Dy9PSuQg
Jh3vPuw82X3kPcZrst5pzodP5ydyBGMucItDZyVyCkvOTOQR5xclMoXrPCOR
a8SO8PWxv9Odm9jZzoFPFzo38w/1PeZ5nJfINfZxjsdixrluiZ3ga8LsSxOZ
hU9PJ3rveZevSOQRDl2VyBdcuTFRnVBnlycyjnE3uQ8nLnM+Yld7HkZen8gg
/LvGfdh2g/vIe6XXZL2bnQ+f7knkCMbc6xaHbk/kFJbclsgjzvk7M/8Mj/8M
4dZErhF7IJEv2HCLcxO7wznw6T7nxqTrEjnLvu9O5Br7uNNj+Ubd5ZbYU4lM
4T5e6+tj/oNeE8MeTeQRDj2eyBdceS6RHdTcI4mMY9zz7sODhxN5R+wJz8PI
Z/zc+PY+6T728az7yPuY12S9F5wPe95MZAp+/M8tPr2SyCzseTmRKZxfkqgu
eW9eSmQcsYd8fezvRecm9qpzYNVbzo1z9/se8zzeSGQE+3jNY6n7190S4zcZ
f7/kd+3bzoFt7/bHnokc+iiRQbjySSJT8ObrRHZQWx8m8o5x37gPDz5IZB+x
Tz0PL79MVGOY95n7sPMr95H3Y6/Jel8kso853zo3Dv2eyBF8+j6RX1jyYyK/
cOgH93H+VyJfMOC3RDYx/zvnY/7PiZyipv9wbpz7NdFvfeb84jjnP3kd5nzu
62Cvf3oe6/3tNTGJ/xEI3MGSMJUjGFOkeg/w479ExjGuTNWHAf8m8o5YlGoe
Rmap7MP4OFUfXuap+sgbpFqT9apU+fBmlFSOYAb/bJ4Wk9pUTuFNk8oRzkdP
ZROWDFK5RuwfXx/7q1PlJtalyoFP/HN/cjP/sf7PG/bHRv0xcioX2Mcw1Vhq
faRULbExUq2JMWOlMgif5k9VY9TBOKn8wp5xU7W4Mn4qU/Bm7FTzGDdZKkeo
s/FSjWXcpKlcIzZxKr+orUlStcQmTGUodk6QKjfnk6fKhytTpGqxZ8ZUpuDH
VKnMwo9pUpmFPVOn6uN81lSmUPdTpsrBnGlTjcWk6VK1GDlTqtyYN1GqfbHv
mVP1Yd70qcbyXZohVcue0lTfP96hWVKNZe0xU91v7vWcqfzCnrlStbgyTypT
8GaOVK4xbpH+z+/17fv9MXeqsYxbOJUvxBZI9dywZ6H+z+8kis2XylCe67yp
cnO+aKp8uLJYqhZ7lk9lCn4skcos/FgqlVnYs2SqPs5nT+Use108VQ7mLJ1q
LCYtk6qlpldIlRvzZkv1TJi/Yqo+zFs21VisWi5Vy56SVLXI/V0p1VgMWzlV
iz1rpHIEe9ZK5QveUB/YQW2tnso1xlEz9OHBaqmMI7Z2qnnYtn4qgzBvnVR9
eLlBqj7yrplqTdbbOFU+7NkmlSn4sa1bfNo8lVnYs1kqUzg/JtV7z/u+aSrj
iB2dqsaIbZIqN7EtnAOrtnNunFsvlbnse+tU7yX72NJjuZdbuSV2rNekPtZN
dX3M3yGVcTi0SyrLcGhXtxizeypfsGfnVMYxbqdUrnG+m8cybt9UBlETe6ey
DAv3cUtsz1Se4ugezs35fp6HWwekMgirjkjlC64cnMogrDo0lSkYs6Ovgz0d
lMo1xh3oHJwf4nnMOczzMOBI58az7X2PuS9HuY9ns7/3xZ4O9zz2RJ3x9xO+
38f5HuPWranqgXf/xFR+YdLJqTzCmLNS+UWtnJDKNcad7T7q73jnI3aK52HS
GanMwqFT3YedZ7qPvCd5TdY7x/mw57L+WDCVJZe7xZsLUhmEVeen8ovzVVLV
H78dzktlHLGrUlmDMec6N7ELnQOTrnBunDs9lb/s+5JU3yRsu8hj8exit8Ru
SWUW9/E0Xx/zr/aamHR9Kr8w6cZUHmHMHansYO/XpXKNcXe6b9X+uDaVg8Ru
8jxMus3PDYdudh/7uN195L3Ba7LeXc6HMQ+nqk9cecQtltyXyhHcujeVZWt6
HvcVm+5J5Rexa3x97O9u5yZ2v3Ng2KPOjX9X+h7zPB5KVefs4wGPxbYH3RJ7
PJWPePZkKncwaeOs961v/+uPZ1JZhkPPpfIFV15NZQc193Qq4xj3mvuw4Snn
I/a852HVy6kso85ecB+OvuI+8j7rNVnvdefDnvdTmYIlH7jFm7dSGYRV/0vl
F+dP+Pq4tjdTGUfs41T1jDFvODext50Dkz50bkx6KZXv7Pu9VP9+Bvt4x2Px
7F23xIJM9UZNvOjrY/4nXhOTvkjlEYZ9lcojXPkxlddY8nkq7xj3k/vw4LNU
xhH72vMw8vtU3xK+M9+4D9t+cB95v/SarPez82HPP6lMwY9/3eLT76nMwp7f
UpnCOf8jbDjFdf6ayjhin/r62N8vzk3sD+fAqv+cm/kf+R7zPP5OZQT7+NNj
qfu/3BL7LpXLXGeUySOsmipTPfB7Oc1kEK7kmUzBmy6THdRWksk7xg0z9eFB
nCkfsbL/86WpvGwy1RjmVZn6sLPN1EfeLNOarDdSpnzYM3YmU/BjnEwtPo2W
ySzsGTWTKZzzm28vf1dGyWQcsfEzWYMHI2fKTWz0TDmwatxMuXFukMlf9j1W
pm8S+xgj01h8HTNTS2zKTGZxH+tM18f8CTKtiU+TZDIIVybLZAreTJup3rBk
4kzeMW66TH14MFEm+4hNnmkeXk6d6blh0hSZ+tjHNJn6yDtppjVZb/pM+bBn
jkym4MecmVp8mjmTWdgzUyZTOA8z1SXvzYyZjCM2YabrY38zZMpNbJZMObBq
rky5cW68TPeY5zF7JiPYx6yZxlL3s2VqifHvYvDPhPh3qr5NVZe8x/NkMg6H
FsxkEK4snMkUvFkqkx3U1gKZvGMc/64ufXgwfyb7iC2SaR5eLpGpxjBv0Ux9
2Llkpj7yLpRpTdbj3/0lH/asmskU/FgtU4tPK2QyC3uWz2QK57tlqiXe/eUy
GUds10y1R2zZTLmJrZgpB1atnik3zi2eyV/2vUqmmmcfK2Uay/1bOVNLbHev
SU0slun6mL9mJuNwaN1MluHQeplajNkgky/Ys04m4xi3dibXOF8/01jGbZbJ
d96jTTJZhoWbZmqJbZTJUxzdMFNuzjf3PNzaMpM1OLRTplrFmG0yOYJb22cy
CG/WynQd7GnrTMYxbivn4Hy7/ig8ZwfPo453dm6sWiPTPea+7OI+ns0W3hd7
2tHz2NPcmd533tE9fI8x6bxM9UZN7J3JMhzaN5MvuHJIJrPwY69MxjHuUPdR
c3s6H7H9PA+rDspkGXW2v/tw9GD3kXcfr8l6hzkfxhyf6XuAKye4xZKjMjmC
W0dmsozzeTPVH78RjsjkF7GTM/mFN4c7N7GjnQPDTnRu/Dswk+/s+7hMnrKP
YzwW2451S+zcTH5xHw/w9TH/FK+JQ2dksgyHzsrkC65cmMkO9n56JuMYd5H7
5uuP0zIZR+xsz8Oq8/3ceLbnuI99XOA+8p7pNVnvYufDmGsy1SeuXOsWSy7P
5AhuXZbJsoU8j/uKTZdm8ovYqb4+9neJcxO7wjkw7Drnxr+TfI95HldnqnP2
caXHYttVbon90/T3rj/O7I/rnQMv/+7PT3fs9kymYMl9mbygzu53iwG3ZvIO
qx5wH07cksk+Yrc5Tq47M5mFnfdmqjfy3uF1iN2cyUfm35PJPsY9mckULHk6
kzWY8Ugmg7Dq4Ux+cX5G3j/z/pilPx7KZByxp5yD+c9mqm28edQ5MOmJTL/1
We/xTGZx/pjjnD/oayXv3Zm+Aez1Ll8f5894j6zxaiZ38OPtTC5jxjtuqfWX
MzmFbe+6Dxte6o9tHXvFcXK9nslHDHsr0zeGvK95HWIvZDIROz/LZAdOfO4W
h75wiz0fZLIDq750H3485/uEqR86jknvZzKOOc87znrvee/EPs1U/6z9lfNh
xieZapvYR86HZx+7JfZNJncwaaRcdcW7P3Kulvf3+0zuYMmPmRzBmD8yeUE9
fZfJOMb96T4M+Na5if3keRj5W6a6wrmf3YeXv7uPvD94Tdb7y/nwJs7lCGYk
uVpM+i+TU3jzbyZHOD+rHzNrf8zWH/9kco1YnssXDPjbuYnxP/BMDnxKc+XG
tl8zmcu+o1zfIfYR5BqLqWGultj/Mv3+4L35xdfH/CLXmpg0yOUOlrS5HMGY
0fo/39i3N/VHncs4xo2eq486rnJ5R6zLNQ8jR8n13PjvVA1z9fFcR83VR94m
15qsN0aufLgyYS4X8GOiXC0+jZPLLCwZO5c7nH/td413aKxcZhErc10f+xsz
V25i4+bKgVUT58qNeVmue8zzmCBXzbOP8XKNpe7Hz9USezPTbwju7xuZapTz
SXLlw8tpcvmCN1hFjVFDmEVL7U6Vyybs4f14MZMHU+ayj9jUueLkmi6XlTg3
Uy7jyDttrnWITZHLSubPn+s9wI8FcrX4tGCuFp/mzOUOhq2fq3543zfI1fJu
zpUrjj1z5LKMOevlqkPmzJ5r78Tmy3WPWHvGXFay13lz3S9ic+fKh3Pz5GqJ
bZhrTWplhlzfA+YvlGu/2LlELlOwZKlc1uDQornMwrnFc1nGuBVzvSt4s1iu
OLGlc83DzuVzmYhhy+Tqw9EVcvUxf8lca7Leyrl8wZ61c9UnrqyTq8WSNXK5
gzGL5HKT/S2c6zo4Xy2XNdi2ai7vOF8lV27OV88VJ9e6uXJz36fP9S5wj9bK
VefsY81ca3K+Uq7rZq9n2yGe1WG56o06OyJXPfD+bpbLFCzZNpdTmLGdW2pr
k1zeYdX27sODjXPZR2zTXHFybZHLLOzcJle9kXdzr0NsI/vI/D1yfQOwZE+3
+LGXW3zaKZdfWDJZrm82vwUmzVV/nO/sOLbtmMsy5uyTyzLs2cF7J7Z7ru8Q
a2+dy1/2ulsuy4jt4nyYt6tbYof7XnIft8r1bWD+3t4v6x2cyxQsOSrXXtn7
0W4n748Dc3mHVce4j5o+IJd9xA5ynFyH5jKLZ3mknyF5D/E6xPbP5SPzT81V
V9TlaW6x5HS3WHV8Lpum9vrcV0zZ1/cMU09wHOeOy2UWc/ZznPWO9d6JnZLr
fWXtLf0ucI9OzuUasROdD89OcktsuVy/Y6jPc3K9vzg0e9Gb07cv98f5uZzC
lQtzmYI3V+SqN+rvvFzeMe5K92HGuc5H7CLPw7DLclmJPRe7D1Mvdx95L/Ca
rHdpLmeZc5Vz480tuXzBkmty2YRh1+UyBcOudR/nt+eqW4y52dfP/Kudj/k3
5PILq251bpy7qT+W9ZwbHef8eq/DnEt8Hez1Ns9jvTu8Jvbck8sdDLsvlykY
82iubwNO353LL8Y95j7q+K5clhG73/Mw8uFc3wy+Mw+4Dy8fcR957/WarPe4
8+HKC7lqEj9edItPT+cyC0ueyuUO57wTmIVPT+Yyi9idvj7294RzE3vGObDq
JedmflvoWXLvn89V2+zjWY/lXX7OLbFXvCauvJbLHaz6K1e9UWdv5LIJS950
iyVv5bIGh173PMZ9mKv2qK3/eSzjPshlGbH3cvmIN++7JfZOLk9x9G3n5vwj
58OGj91izDe5vgdY8mkuj/Dm81x+4cpn7uP8h1xOUeufOAdzvvBYfPrSLd+c
b50b/971vtj3d+7Dwq88FlO/dsueHsr1/eMd+t5jWftV32/u9S+5bMKSX91i
ye+5rMGhn3MZxzj+j0j4LuLKbx7LuP9y/XYn9refG3/v/Lc/znTsz1ye8lz/
cG7Og0L5cCUs1GJPVcgU/IgLmYUfaSGzsCcp1Mf5T7lsZa9RoRzMyQqNxaS8
UEtN14VyY96PfibMHxTqw7yi0FisKgu17OnBXLXI/W0KjeW97wq9+7g1SiFH
sGe0Qr7gzbiF7KC2Ri7kGuPGK9SHByMVMo7Y6IXmYdvYhQzCvDEK9eHlOIX6
yDtqoTVZb/xC+bBnikKm4MeUhVp8mriQWdgzUSFTOB8Wug72MWEh44hNU8ga
PJigUG5ikxTKgVVTFcqNc2MVMpd9T17ovWQfkxYay72crFBLbMlCNUZ9jFno
+pg/baE18WnGQgbhysyFTMGbuQq931gyQyHvGDd3oT6cmL6QfcRmKTQPL+co
5CAmzVqoDzvnLNRH3pkKrcl68xTKh0+LFnIEYxYr1OLQAoWcwpL5C3nE+RKF
TOE65yvkGrHpCl0f+5u3UG5iCxbKgU+LF8rN/KkL3WOexyKFXGMfCxUaixkL
F2qJzVbomjB76UJm4dNOhd573uXlCnmEQysU8gVXVi9UJ9TZsoWMY9wahfpw
YplC+YitWGgeRq5ayCD8W6lQH7atVqiPvMsXWpP11iyUD582LuQIxmxSqMWh
dQs5hSXrFPKI89WqPmfZ5+yPtQu5RmzzQr5gw1qFchNbr1AOfNq0UG5MWqWQ
s+x7o/7P/+Tax/qFxvKN2qBQi3k7FjKF+7hyoetj/hZeE8O2KeQRDm1XyBdc
2bWQHdTc1oWMY9xu7sODrQp5R2x7z8PInf3c+Pbu4D72sYv7yLut12S93Z0P
ew4oZAp+HOgWn/YuZBb27FXIFM6XKlSXvDd7FjKO2Ja+Pva3h3MT28c5sOog
58a5zXyPeR77FzKCfezrsdT9fm6J8ZuMv1/yu/Zg58C2Q9zi0JGFDMKVowuZ
gjcnFbKD2jqikHeMO9l9eHB4IfuIHeN5eHlCoRrDvGPdh50nuo+8R3lN1ju+
kH3MOcW5cei8Qo7g02mF/MKSMwr5hUOnu4/zCwv5ggHnFrKJ+ac6H/PPKuQU
NX2+c+PcOYV+6zPnbMc5P9PrMOc4Xwd7vcDzWO8ir4lJlxVyB0uuKOQIxlzv
9wA/Li1kHONucB8GXFLIO2JXeh5GXlvIPoy/yn14eZ37yHu512S9G50Pb+4q
5Ahm3O0Wk24t5BTe3FLIEc7vLWQTltxcyDViF/v62N9Nzk3sNufAp3ucm/nb
9I5k/ZH3x52FXGAft3sstX6HW2L3eU2MeaCQQfj0aaEaow4eKuQX9jzsFlce
648NC3nzoOcx7tlCjlBnj3gs9jxTyDViTxXyi9p62i2xJwoZip2POzfnzzkf
rjzvFnveKGQKfrxYyCz8eLmQWdjzkvs4f7uQKdT9C87BnFc8FpNedYuRbzo3
5j3pfbHv/7kP817zWL5Lr7tlT9cU+v7xDr3lsax9v+839/r9Qn5hzwduceWj
QqbgzXuFXGPcl/1xaH8c1h8feizjvijkC7HP/Nyw53O3xD4pZCjP9WPn5vwr
58OVr91izy+FTMGPbwuZhR/fFzILe75zH+fvFnKWvX7jHMz5wWMx6Ue31PSv
zo157/iZMP8392HeTx6LVT+7ZU9XF6pF7u/vHothf7jFnn8LOYI9/B8S4gve
UB/YQW39U8g1xlEz9OHB34WMIxaUmodtSSmDMC8s1YeXaak+8v7nNVmvKJUP
e0YqZQp+jFyqxadBKbOwpy5lCuczl3rved+rUsYRm6lUjRErS+Um1pTKgVWj
lMqNc3Epc9n3sNR7yT7aUmO5l12pltgspdakPqJS18f80UoZh0NjlbIMh8Yu
1WLMuKV8wZ4xSxnHuDFKucb5OKXGMm7iUgZRExOWsgwLJyrVEhu/lKc4Op5d
43ySUvNwa7JSBmHV9KV8wZWp+j8/WsiqaUqZgjGjl7oO9jRFKdewavJSOTif
utQ85kxbah4GzFAqN56NWuoec19mLNXHs5m01L7Y03Sl5rEn6oy/n/D9nrXU
PcattUvVA+/+HKX8wqS5SnmEMQuW8otamb2Ua4xbqFQf9TdbqXzE5i41D5Pm
L2UWDs1Tqg87FyjVR945S63JeguXyoc9y5QyBUuWLdXizeKlDMKqxUr5xfmf
heqP3w6LljKO2AqlrMGYRUrlJrZEqRyYtFyp3Dg3Xyl/2ffSpb5J7GPJUmPx
bKlSLbG1SpnFfZy31PUxf8VSa2LSqqX8wqTVS3mEMeuVsoO9r1LKNcatX6rv
r/5YuZSDxNYoNQ+T1in13HBozVJ97GPdUn3kXa3Umqy3Qal8GLNlqfrEla3c
YskmpRzBrY1LWfaf98F9xaaNSvlFbKVS18f+NiyVm9impXJg2NbOjX/Ll7rH
PI8tStU5+9jMY7Ftc7fEtvVvCjzbvpQ7mFT2f3+5FJv6Y6dSluHQLqV8wZW9
S9lBze1YyjjG7eM+bNjB+Yjt6nlYtWcpy6iz3dyHo3u5j7w7e03W29f5sOew
UqZgyeFu8ebAUgZh1QGl/OJ8O18f17Z/KeOIHVWqnjFmP+cmdpBzYNIRzo1J
e5TynX0f2h8TeB8HeyyeHeKW2BWl6o2a2N3Xx/yjvSYmnVDKIww7qZRHuHJm
Ka+x5PhS3jHuLPfhwXH9MaVjJ3seRp5e6lvCd+YU92HbGe4j74lek/XOdj7s
uaSUKfhxqVt8Or+UWdhzXilTOL+8lFNc57mljCN2jK8Pg89xbmIXOAdWXebc
zD/S95jncXEpI9jHhR5L3V/klthppVzmOq8q5RFWvVCqHvi9fG0pg3Dl+lKm
4M1tpeygtq4p5R3jbncfHlztfMRu8Dy8vKVUjWHeje7DzlvdR97rvCbr3eF8
2PNgKVPw4yG3+HRPKbOw5+5SpnDOb74J/F25q5RxxB4tZQ0e3OncxO51Dqx6
2Llx7uZS/rLvB0p9k9jHfR6Lr/e7JfZ8KbO4jzf5+pj/mNfEp6dKGYQrz5Qy
BW9eLlVvWPJkKe8Y94r78OCJUvYRe9bz8PJFPzdMes597OMl95H3aa/Jeq86
H/a8W8oU/HjPLT69Wcos7HmjlCmcX1mqLnlvXi9lHLHHfX3s7zXnJvY/58Cq
950b5x7xPeZ5vFPKCPbxlsdS92+7Jca/i8G/V8q/U3VqqbrkPf6wlHE49Fkp
g3Dli1Km4M33peygtj4t5R3j+GdMx5by4JNS9hH70vPw8ttSNYZ5X7kPO79z
H3k/95qs95PzYc/fpUzBj3/c4tNvpczCnl9LmcL5OJVqiXf/l1LGERu7Uu0R
+9m5if3uHFj1r3Pj3Del/GXff5Wqefbxh8dy//50S2zcSmtSE1/7+pjP/4E5
xuFQXMkyHEoqtRiTVfIFe6JKxjEurOQa52mlsYwbVPKd96iqZBkW1pVaYkUl
T3E0r5Sb86bSPNzqKlmDQ2NUqlWMGbmSI7g1aiWD8CaodB3saaRKxjFuWCkH
56NUmsec0SrNo47HrJQbq/7zPea+jFWpj2fTVtoXexq90jz29EGp9513dLxK
9xiTFqlUb9TEhJUsw6GJK/mCK1NVMgs/JqhkHOOmrtRHzY1fKR+xSSrNw6op
KllGnU1aqQ9Hp6zUR96JKq3JetNUyocxs1b6HuDKbJVaLJmhkiO4NX0lyzj/
qFT98Rthukp+EZuzkl94M22l3MRmrJQDw2avlBv/Jq/kO/uepZKn7GOmSmOx
beZKLbGFK/nFfZys0vUxf65Ka+LQfJUsw6EFKvmCK4tXsoO9z1vJOMYtUanv
4/6Yp5JxxBasNA+rFq303Hi2C1XqYx+LVeoj7/yV1mS9JSvlw5iVKtUnrqxc
qcWSZSs5glvLVLLsc++D+4pNS1fyi9jcla6P/S1VKTex5SrlwLBVKuXGvzkq
3WOex4qV6px9LF9pLLatUKklxr+7tozNXb2Sldj2+KB3vj827o/1KpmCJZtW
8oI628wtBqxTyTus2tx9OLF2JfuIrVspTq4NKpmFnZtUqjfyrl9pHWJrVfKR
+RtXso9xO1QyBUt2qmQNZmxdySCs2qqSX5zPX/fPiHeiP7asZByxHZ2D+btU
qm282cY5MGn7Sr/1WW+7SmZxvq3jnG/hayXvRpW+Aex1w0rXx/nO3iNr7F3J
Hfw4qJLLmHGwW2p9z0pOYdsh7sOGPSrZR2wvx8m1byUfMezASt8Y8u7jdYjt
XslE5h9byQ6cOM4tDh3vFnsOr2QHVp3gPvzY1fcJU49wHJMOq2Qcc3ZznPUO
9d6JHVOp/ln7ROfDjKMr1TaxI50Pz45yS+zkSu5g0h2V6op3/67+WLXSf6Z0
WiV3sOSMSo5gzPmVvKCeTq1kHOMucB8GnOLcxM70PIw8t1Jd4dxZ7sPL89xH
3tO9Jutd6Hx4c1UlRzDjareYdGklp/DmkkqOcL5Arff07f64uJJrxK6r5AsG
XOTcxC5zDny6xrmx7ZxK5rLvKyt9h9jH5R6LqVe4JXZApd8fvDdn+/qYf73X
xKSbK7mDJbdWcgRj7u2PNfpjzf64qZJxjLvPfdTxjZW8I3ab52Hk3X5u2HO7
+3iu97iPvLd4Tda73/lw5YlKLuDHk27x6eFKZmHJQ5Xc4fykSu8a79CDlcwi
doOvj/094NzEHnEOrHrKuTHvWt9jnsfjlWqefTzqsdT9Y26J7V/pNwT3d79K
Ncr5086Hly9X8gVvsIoao4beckvtvljJJux523148EIl+4i95Di5Xq1kJc69
Wck48r7idYg9X8lK5n9S6T3Aj0/d4tNnbvHpvUruYFhSq35439NaLe/m+45j
z7uVLGNOXKsOmfOO907sY98j1n6jkpXs9SPfL2IfOB/OfeiWWFZrTWrl9Urf
A+Z/7v1i57eVTMGS7ytZg0NfVTIL576pZBnjfqv0ruDN144T+8HzsPOXSiZi
2I/uw9Ff3cf877wm6/1RyRfsCWrVJ66EtVos+beSOxjzZSU32d8Xvg7O/65k
Dbb9Vck7zv90bs7/cZxcUa3c3PfX/C5wj0bUqnP28Z/X5Px3Xzd7XbDWe8az
mrZWvVFn09eqB97fupYpWDJyLacwY5RaLbVV1vIOq0at1YcHRS37iFW14uRq
apmFnSPVqjfyDmqtQyyv9cyZP36tbwCWTFCrxY8Ja7X4NEYtv7Dk2UrfbH4L
PFOp/jgfs1Yc20avZRlzJq5lGfaMVmvvxMbr/3xnpbWHtfxlr+PUsoxv1Fi1
8mHe2LVaYtPVupfcx67Wt4H5E9XaL+tNVcsULJmx1l7Z+0y12uf6Y4pa3mHV
zLX6qOnJa9lHbMpacXJNU8ssnuUMtZ4heaeutQ6xyWr5yPx5atUVdTlvrRZL
5qvVYtVstWx6yXvivmLKJLXuGabOXiuOc7PWMos5k9aKs94stfZObO5a7ytr
t7XeBe7RXLVcIzZHrXx4NmetltjPlX7HUJ8L1Xp/ceid/s979Mee/bFoLadw
ZfFapuDNcrXqjfpbpJZ3jFu+Vh9mLFwrH7Elas3DsGVqWYk9S9bqw9Rla/WR
d7Faa7Le0rWcZc4KtXLjzVq1fMGSlWrZhGGr1DIFw1au1cf5urXqFmPWrHX9
zF+xVj7mr1bLL6xau1ZunFuj//NPvmer14pzvmqtdZizVK3rYK/r1JrHeuvV
WhN7NqrlDoZtUssUjNm61rcBpzes5RfjtnEfdbxBLcuIbVprHkZuWeubwXdm
M/fh5VbuI+/GtdZkvW2dD1d2q1WT+LG7W3zasZZZWLJDLXdqvxOYhU/b1zKL
2Pq1ro/9befcxHZyjsbv1Mief2utZ8m937VWbbOPnT2Wd3kXt8T28pq4sk8t
d7Dqolr1Rp3tV8smLNnfLZYc1B/j1nJoX89j3JG1ao/aOsBjMemIWpYRO6yW
j3hzuFtih9TyFEcPdm7Oj3I+bDjaLcacUut7gCXH1vIIb46v5ReuHOc+zs+o
5RS1foxzMOcEj8WnE93yzTnVufHvUO+LfZ/mPiw8yWMx9WS37GmLWt8/3qHT
PZa19/b95l6fU8smLDnXLZacX8saHDq7lnGMu6zWdxFXzvNYxl1a67c7sYv9
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
3m70PcCVd9xiyWuNHMGtVxtZxvlRjeqP3wivNPKL2PuN/MKbl52b2OvOgWHv
Ojf+PdvId/b9ViNP2ccbHott/+uPXR37spFf3MdnfH3M/8Br4tAnjSzDoc8a
+YIr3zayg71/3Mg4xn3nvqP746NGxhH73POw6ms/N57tF+5jH9+4j7yfek3W
+975MOaPRvWJK3+6xZKfGzmCWz81sux4z+O+YtOPjfwi9qGvj/394NzEfnEO
DPvLufHvPd9jnsfvjeqcffzqsdj2m1ti/Hec+O9u8t/t/LeRa9hz9xh9ffTH
6v0RtzIFS6pWXlBndasWA8JW3mHVoFUfTgSt7CMWtYqTK21lFnaWreqNvEmr
dYiNaOUj84tW9jFutFamYMkYrazBjGErg7Cqa+UX55/0fz6gPw7sj7aVccRG
b5WD+WO1qm28GalVDkwatdVvfdYbpZVZnI/cKs550+payZu3+gaw16zV9XE+
Zqs9ssaErdzBjylauYwZU7ZqqfXxWzmFbVO16sOG8VrZR2yCVnFyTdzKRwyb
vNU3hrwTtVqH2LitTGT+zK3swIlZWrU4NGurFnumbWUHVs3Wqg8/xm51nzB1
ulZxTJqmlXHMGadVnPWmbrV3YjO1qn/Wnr1VPsyYsVVtE5u+VT48m6FVS2zO
Vu5g0vqt6op3f4NWLf9by/O0cgdL5m/lCMYs1soL6mnuVsYxbvFWfRgwV6vc
xBZoNQ8jF2lVVzi3YKs+vFy0VR955+v//Gaj9ZZolQ9vVmzlCGas1KrFpGVa
OYU3S7dyhPNP/Z4e1B9LtXKN2KqtfMGAJVvlJrZsqxz4tHKr3Ni2cCtz2fcK
rb5D7GO5VmMxdflWLbHJWv3+4L1ZqNX1MX+1Vmti0lqt3MGSdVo5gjEbt7Lj
v/5Ys5VxjNukVR91vEYr74it22oeRm7Y6rnxv5+9Xqs+nutGrfrIu3arNVlv
01b5cGW7Vi7gx/Zu8WnLVmZhyRat3OF8jlbvGu/Q5q3MIrZ6q+tjf5s5N7Gt
nAOrdnBuzFul1T3meWzbqubZx9YeS91v45bYpK1+Q3B/J2lVo5zv6Hx4uWcr
X/AGq6ixcfwu0FK7u7eyaWS/H/ThwW6t7CO2h+Pk2ruVlTi3fyvjyLuX1yG2
aysrmX90q/cAP45xi0/HusWnQ1u5g2HXtKof3vdr3fJuHuY49hzSyjLmXN2q
DplzsPdO7CjfI9ber5WV7PXIVveL2OHOh3NHuCV2ndekVvZt9T1g/nHeL3ae
0soULDmtlTU4dGIrs3Du5FaWMe7cVu8K3pzkOLHTPQ87z25lIoad4T4cPcd9
zD/Va7Le+a18wZ4rWtUnrlzpFksubeUOxpzQyk32d7yvg/OLW1mDbRf1x7w+
v8C58e8Sx8l1lXNz3/dp9S5wjy5vVefs4zKvyfl5vm72+lmr94xn9XKreqPO
Xm1VD7y/N7cyBUvuauUUZtztltq6sZV3WHWP+/Dghlb2EbvJcXLd2sos7Lyz
Vb2R9xavQ+x6P3PmP9rqG4Alj7nFj8fd4tP9rfzCkp1bfbP5LbBTq/rj/AHH
se2+VpYx58lWlmHPvd47sUdafYdY+45W/rLXh1tZRuxB58O8h9wSe8X3kvt4
e6tvA/Of8H5Z74VWpmDJ694re3/D7S798Vwr77DqTfdR08+2so/Y846T66VW
ZvEsX/MzJO+LXofYM618ZP6HreqKuvzILZZ87Bar3m5l0x5en/uKKU/5nmHq
O47j3FutzGLO046z3v+8d2IftHpfWfu2Vu8C9+j9Vq4Re9f58Ow9t8TOavU7
hvr8vNX7i0OHdL03/TFBf3zVyilc+aaVKXjzc6t6o/6+bOUd435xH2Z84XzE
vvU8DPuxlZXY8537MPUn95H3a6/Jej+0cpY5vzo33ozo5AuW/N7KJgz7s5Up
GPaH+ziPOtUtxvzn62f+b87H/L9b+YVVQafcOPdvf5zpOf84zvlfXoc53/s6
2GvYaR7rxZ3WxJ6ikzsYVnUyBWNG6vRtwOm8k1+MG7lTH3WcdbKMWN1pHkZ2
nb4ZfGcGnfrwctipj7xlpzVZb5RO+XBl3E41iR/jdWrxaYxOZmHJ6J3c4Zx3
ArPwabROZhFL+z9f2Gp/o3bKTWzMTjmwineK3Mxfu9Oz5N6P06m22cdYncby
Lo/dqSU2Yac1cWXiTu5g1RKd6o06m7STTVgyWacWS6boZA0OTdJpHuOm71R7
1NbkncYybrpOlhGbppOPeDNtp5bYVJ08xdEpO+XmfIZO+bBhxk4txszV6XuA
JTN38ghvZu3kF67M0qmP8/k6OUWtz9QpB3Nm6zQWn2bv1PLNmbtTbvybutO+
2Pc8nfqwcI5OYzF1zk4te2o7ff94h+btNJa1J+p0v7nXC3WyCUsW7tRiyaKd
rMGhBTsZx7hlOn0XcWWRTmMZt3Sn3+7Eluz03Ph751KdWmKLd/KU57pYp9yc
L9spH64s16nFntU7mYIfK9gs/Fipk1nYs2KnPs4X6GQre12+Uw7mrNxpLCat
0qmlptfolBvz5u/0TJi/Zqc+zFu101isWq1Ty56aTrXI/V2r01je+3U6vfu4
tUEnR7Bno06+4M1W/Z+TTrW1fifXGLe1+/BgvU7GEdu40zxs27yTQZi3Sac+
vNzCfZi0Yac1WW8b58OeXTuZgh+7ucWnHTqZhT3bdzKF83U7XQf72K6TccT2
7GQNHmzr3MR2dA6s2t25cW6zTuay7106vZfsYyeP5V7u7JbYaZ1qjPrYtNP1
MX8vr4lP+3UyCFcO6GQK3hze6f3Gkn07ece4I9yHE/t0so/YgZ6Hl4d2chCT
DnIfdh7mPvLu7zVZ70jnw6eTOjmCMSe7xaFjOzmFJcd08ojzUzuZwnUe3ck1
Ynv7+tjfUc5N7DjnwKdTnJv5e/ge8zxO7OQa+zjeYzHjBLfEDvY1YfYZnczC
p/s6vfe8y2d38giHzu3kC65c0qlOqLOzOhnHuEvdhxNnOh+x8zwPIy/qZBD+
ne8+bLvYfeQ9x2uy3mXOh0/Xd3IEY25wi0NXdXIKS67s5BHnF43Ur9Uf8/XH
FZ1cI3ZzJ1+w4XLnJna1c+DTjc6NSRd2cpZ9X9fJNfZxjcfyjbrWLbF7O5nC
fbzA18f8W7wmht3RySMcuquTL7jyYCc7qLnbOxnHuIfchwe3dfKO2N2eh5H3
+7nx7b3HfezjAfeR906vyXoPOx/2PNPJFPx4rj+27OTT453Mwp7HOpnC+emd
6pL35tFOxhG71dfH/h5xbmJPOAdWPe/cOHeT7zHP4+lORrCPJz2Wun/KLTF+
k/H3y///53POgW0vusWh1zoZhCtvdDIFb97rZAe19Won7xj3vvvw4JVO9hF7
0/Pw8p1ONYZ5/3Mfdr7rPvK+7jVZ7+1O9jHnA+fGoa86OYJPH3XyC0s+6eQX
Dn3sPs6/7eQLBnzZySbmf+h8zP+sk1PU9NfOjXNfdPqtz5zPHef8U6/DnLd8
Hez1G89jve+8Jib91MkdLPmlkyMY87ffA/z4sZNxjPvHfRjwQyfviP3qeRj5
Zyf7MP439+HlX+4j789ek/X+dT68yYZyBDPyoVpMCodyCm+CoRzhvBzKJiwZ
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
nMecjWrOo443jdxYtVTNe8x92Sz6eDZr1dwXe9q45jz2NG3N9513dKu4x5h0
Qs16oya2rWkZDm1f0xdc2a2mWfixTU3jGLd79FFzW0c+YjvEPKzapaZl1NmO
0Yeju0YfebeLNVlvj8iHMQfW/B7gykHRYsk+NR3Brb1rWsb59DXrj98Ie9X0
i9ihNf3Cmz0jN7F9IweGHRy58W/nmr6z7wNqeso+9oux2LZ/tMSOr+kX93Gn
uD7mHxZr4tBRNS3DoWNq+oIrJ9e0g70fWdM4xp0SfTMMjyNqGkfs2JiHVSfG
c+PZHhd97OOk6CPv0bEm650a+TDmvJr1iSvnR4slZ9Z0BLfOqGnZLDGP+4pN
p9f0i9jhcX3s77TITeysyIFhF0Ru/Dsk7jHP49yadc4+zo6x2HZOtMT4Hcbf
L///z9JquoY99ebwW9YYWj88Lq9pGQ5dWdMXXLmhph3U3GU1jWPcjdGHDZfW
NI7YVTEPq66raRl1dnX04ej10UfeK2JN1ru2pq3MuSly49A9NU3Bm1tq+oVb
t9X0CLdujT7O769Zw7hyd02bmH9z5GP+HTU9wqd7Izcm3VXzdz9z7ow457fH
Osy5Jq6Dvd4X81jvweGxTk2HHq1pEG49XtMgLHmuptH48UhN4xj3fPRhwMM1
XSP2RMzDxWdqfj/4tjwZfXj2bPSR97FYk/VeiHx482ZNRzDjrWgx6ZWaTuHN
yzUd4fydmjZhyUs1XSP2UFwf+3sxchN7NXLg09uRm/lH14e1MzwmHx5v1HSB
fbwWY6n116Ml9m6siTHv1zQIn0avW2PUwYc1/cKej6LFlU9qmoI3H8Q8xn1d
0xHq7OMYy7ivarpG7IuaflFbX0ZL7LOahmLnp5Gb828iH658Gy32/FbTFPz4
vqZZ+PFjTbOw54fo4/yvmqZQ999FDub8FGMx6edoMfL3yI15n8e+2Pcf0Yd5
v8RYvku/Rsuenq75neMd+jPGsvZ7cb+51//V9At7Rqrb4soodU3Bm39rusa4
seuacsnwGLnuWMaNVfd3HrEx6j43/vfAMeu2xEarayjPddS6uTkfp24+XBm3
bos9jbqm4Mf4dc3CjwnrmoU9E9Tt4/yfms6y1/Hq5mDORHXHYtKIui013ayb
G/P+jmfC/KRuH+bV6o7Fqnrdlj09VbMWub+tumMxrF23xZ6iriPY06vrC95Q
H9hBbXXqusY4aoY+PMjrGkesrDsP2yauaxDmVXX78HLS4Z8fqJm3W3dN1pui
bj7smbGuKfgxU90Wn6apaxb2TF3XFM5XrPve875PVdc4YivUrTFiU9bNTWza
ujmwaua6uXFuUNdc9j1D3feSfUxXdyz3cvq6LbGV6q5JffTrXh/zZ61rHA7N
WdcyHJqrbosx89T1BXvmqGsc42av6xrnc9cdy7iF6hpETSxQ1zIsXLBuS2y+
up7i6LzhGucL152HW4vWNQirlq3rC64sUdcgrFqqrikYM1vd62BPi9d1jXGL
1c3B+ZJ15zFn6brzMGC5urnxbJa695j7snzdPp7NInX3xZ6WqTuPPR0TNvNe
rFz3HuPWnnXrgXd/tbp+YdIadT3CmPXr+kWtrFrXNcZtULeP+lulbj5ia9ad
h0nr1jULh9aq24ed69XtI+/qdddkvQ3r5sOereqagiVbR4s3m9Y1CKs2qesX
52nd+uO3w8Z1jSO2XV1rMGajurmJbRY5MGmbyI1z69T1l31vWfebxD42j7F4
tkW0xPaoaxb3ce2618f87WNNTNq5rl+YtGtdjzBmn7p2sPed6rrGuH2jLxse
O9Z1kNhuMQ+T9ornhkO7Rx/72Dv6yLtLrMl6+0U+jDm8bn3iypHDY5K6lhxU
1xHcOrCuZd2Yx33FpgPq+kVsh7g+9rd/5CZ2cOTAsKMiN/5tG/eY53FY3Tpn
H4fEWGw7NFpi89etP+rz2LrvL/ZMMfwt+/CwfWR4nFDXLzw7MVpMOrmuNRhz
fF3LGHdWXVOoxZNiLOPOrFtXxE6vayWenREtsVPrWoapp0Ruzk+LPuacHbmx
59K6vuDKlXXrEzPOq2sZhl1Q1yYMO7euX8TOiRycXxhxHLq4rk3cm8siN55d
Hi0+XRJx1r4o5jHnioizj6tiL9jzaN16pv6uresXDl0XLYbdUNcjXLmmrl+M
u72u3bhyfYxl3G11vyXEbqnrFN+QW6MldlNdN7HtxsjN+R2RD1fujBZ7Hqpr
Cn7cXdcs/Li3rlnYc0/0cX51XB97vStyMOe+GItJ90dL7T4cuTHv/Hg+PJtH
oo979ECMxYkHo2VPozR8ZjzDx+Je4s0TdT3CqiejxbCnosWhp6PFmGeixZhn
o8Wh56LFxeejxcUXosWwF6Olzl6KFv9ejhaTXomW2n01Wox5LVoc+riuF9T0
G3X9wpK36vqFQ6/HWGJvRx8OvRMtLr4bLd+Z9+uahU8f1TWONT6IPix8L8Yy
7sPoY9zNdd8R3qFPYl849HvdGqbWP6trFoZ9Hi0OfREtxnwZLcZ8FS0OfR0t
Ln47PI6o6+J30WLY99Hyd50fouW7+mO0+PRTtMcNj5+jxZ5fosWqT2Pv7PW3
umZxDX/EdeDKrzGW2J/Rhz1/RYs3f0eLVf/WdQrDHq/73v3/Gxh9mPdPjGXc
SA37sGrkhi3v7qgN31982m3459rwqA+PMRo6hUNjNmxxZeyGHuHN6A1rhnET
NfSF+hur4VjGTdjQQWLjNzQLkyZo2BIbt6Gb2DZOw9ycj2iYD3vYFy1W5Q1N
wZtGQ7NwKGloFq40G/Zx3mtoCh5wbeRgTqvhWExqN2x57zoNc+PceA33xb6L
hn1YlTYci3NZw5Y9jdbwXnJfug3HsvZcDWuPmhs09AuTJm7YYtKkDa3BmH5D
1xg3TcNnjCuTNBzLuKkbukNsyoZm4fpUDVtikzc0FOcma5ib82kb5sOn6Rq2
+DR7Q0fwY4aGTuHTTA1twqQZG/ZxXjV0mb1O3zAHc2ZuOBa3ZmnY4tYcDXNj
UtnwmTB/zoZ93KNZG47FttkatuyJ2uK3AN/1uRveS0zauOF7zzs+f0Oz8GmB
hi0+LdTQJryZb/jnN+uOW7KhL9Togg3HMm6JhiYSW6yhTRi2eMOW2CINjcOz
hRvm5nyphvnwaemGLT6t2tAR/Fi2oVP4tHxDmzBpuYZ9nK/Z0BFsWKZhDuas
OPzzN3XdWqlhi1urNcyNSYs23Bf7Xr1hHz6t3HAstq3SsGVP8zZ0n/uyRsOx
rD1Pw3tMbN2GZuHTeg1bfNqgoU14s05Doxm3eUNfqIn1G45l3GYNv53ENmn4
3DBp02iJbdTQOJ7rhg1zc75F5MOeLaPFqp0amoI3Wzc0C4e2bWgWrmwTfZyv
3dBi9rpV5GDOdjEWk7aPFgN2jtw4t1bDZ8L8XaIPq3aIsTi3Y7TsadeIY9ju
DQ3CrSfmHL67w2OT4bF3Q49waN+GvuDKIQ3rhDrbq6FxjDs0+nBiz4beEdsv
5mHkQQ0Nwr/9ow/bDo4+8u4Ta7LegQ2NY85hkRurTmhoDQ4d0dAsHDqqoVm4
cmT0cX5yQ1Pw4PiGHjH/8MjH/GMa2sTv+hMjNyYd19Ay5hwbcc6PjnWYc0Bc
B3s9Keax3imxJm6d0dAg7DmroSlYcmHDd5r3/fSGrjHuoujDhtMaGkfs7JiH
i+c3dBx7zok+PLsg+sh7ZqzJehdHPky6pqEduHJttNhzeUOb8OOyhgZxfn1D
R/Dj0oaWETs1ro/9XRK5iV0ROTDpusjN/PWawzodtn8Nj6sbWsY+royxOHFV
tMRuiDXx5qaGTmHSGw1rgPf91uGxQkOHbosWh+5o6Auu3BzzsO3+hjVDzd0e
Yxl3X0PjiN3T0CnsuTdaYnc1dBPb7ozcnD8Q+fDmwWjx6amGjmDMww2dwp5H
GzqFJY9EH+fPNXQEAx6KHMx5LMbi0OPR8p15OnJj292xL/b9TPTh0xMxFtue
jJY9ndfwO8c79GyMZe0b435zr19qaBYOvRwtDr3a0BdcebGhZYx7p6EpewyP
V2Is495u+HuO2Jvx3HDorWiJvd7QTZ7ra5Gb83cjH668Fy32fN7QFPz4oKFZ
+PFRQ7Ow58Po4/yFhhaz1/cjB3M+jrGY9Em01PQXkRvzno9nwvwvow/zPo2x
WPVZtOzp3Ia1yP39KsZi2NfRYs8PDR3Bnp8a+oI31Ad2UFvfN3SNcX9FHx58
19A4Yj/HPGz7vaFBmPdL9OHlH9FH3h9jTdb7O/Jhz+hNTcGPMZq2+DRSU7Ow
57+GpnA+adP3nvf934bGEZukaY0R+ydyExu5aQ6sGrNpbpz7raG57Hu0pu8l
+xil6Vju5ahNW2KTNV2T+vg1ro/5Yzc1DofGb2oZDk3QtMWYiZr6gj3jNTWO
ceM2dY3zCZuOZVzS1CBqotHUMixsNm2J1Zp6iqMjmubmvNV0Hm5lwz/f0tCq
flNfcKVoahBW9ZqagjHjNL0O9tRp6hrj8qY5OO82ncecsuk8DBg0zY1nYzW9
x9yXiZv28WzaTfeFi1XTeexp/abvGe/F5E3vMW4t27QeePenauoXJk3T1COM
mbmpX9TKlE1dY9wsTfuovyma5iM2bdN5mDRjU7NwaLqmfdg5U9M+8k7ddE3W
m7VpPuyZr6kpWDJ/0xZv5mxqEFbN0dQvzr9pWH/8dpi9qXHEFmpqDcbM1jQ3
sbma5sCkBZrmxrkZmvrLvudt+k1iH3M3HYtn8zRtiS3T1Czu4/RNr4/5Czdd
E5MWb+oXJi3Z1COMWaGpHex9saauMW7Fpn3fDo9FmzpIbKmm8zBpuabPDYeW
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
7SP2aMTJ9USilTj3TKJx5H081iH2UKKVzH8j8T3Ajzejxae3osWnlxLdwbA/
EuuH9/3PaHk3X4449ryYaBlzfk+sQ+a8EHsn9nrcI9Z+OtFK9vpa3C9ir0Q+
nHs1WmJ/xZrUylOJ3wPmvx37xc4PE03Bko8TrcGh9xLNwrkPEi1j3FeJ7wre
vB9xYp/EPOz8ItFEDPs0+nD0y+hj/kexJut9k+gL9vySWJ+48mu0WPJjojsY
826im+zvnbgOzr9PtAbbvkv0jvNvIzfnP0ScXL9Fbu77k4nvAvfo58Q6Zx8/
xZqcfx3XzV5nafme8ayqlvVGnQ1a1gPv70gtTcGSMVs6hRljtWyprX8TvcOq
sVv24cE/ifYR+y/i5BqlpVnYOUbLeiPvyC3XIfZ3PHPm11t+A7Ck0bLFj2bL
Fp/Ga+kXljyQ+M3mt8D9ifXH+QTDMVck2jZuS8uY02ppGfaM03LvxGotv0Os
PXpLf9nriJaWEZuwZT7Mm6hlS6zf8l5yH0dr+W1gftJyv6zXbWkKlkzScq/s
fdKW7YPDo9PSO6yarGUfNZ23tI9Y0TJOrrKlWTzLiVs+Q/L2Wq5DLGvpI/On
b1lX1OUMLVssmbFli1VTtrTp0dgT9xVT2i3vGaZO1TKOc1O0NIs5acs4603e
cu/Epmv5vrL2qC3fBe7RtC1dIzZ1y3x4Nk3Lltjnib9jqM9ZW76/OPTC8M9b
D49thsccLZ3ClblamoI3C7asN+pv9pbeMW6hln2YMVvLfMTmbjkPw+ZvaSX2
zNOyD1MXaNlH3jlbrsl687V0ljkLt8yNN8u29AVLFm1pE4Yt3tIUDFusZR/n
K7SsW4xZpuX1M3+RlvmYv2RLv7BquZa5cW7p4Z8/i3u2VMs450u0XIc587a8
Dva6fMt5rLdiyzWxZ9WW7mDY6i1NwZj1Wn4bcHqVln4xbv2WfdTxyi0tI7ZG
y3kYuU7LbwbfmTVb9uHlui37yLtayzVZb4OW+XBly5Y1iR9bRYtPm7Q0C0s2
bunOSPFOYBY+bdTSLGIrtbw+9rdhy9zENo0co8Q7NWbMv6Lls+Teb9GyttnH
ZjGWd3nzaIltG2viyvYt3cGqU1vWG3W2U0ubsGTnaLFk15bW4NCOw2P8GLdP
y9qjtnaJsYzbu6VlxPZs6SPe7BUtsd1beoqju0VuzveNfNiwX7QYc3jL7wGW
HNDSI7w5qKVfuHJg9HF+dEunqPX9IwdzDo6x+HRItHxzjojc+LdH7It9Hxl9
WHhojMXUw6JlT2u3/P7xDh0VY1l7u7jf3OvjW9qEJSdEiyUntbQGh45raRzj
zmz5XcSVE2Ms485o+dud2Gnx3Ph75+nREjulpac815MjN+dnRT5cOTta7Lmk
pSn4cW5Ls/Dj/JZmYc950cf5sS1tZa/nRA7mXBBjMenCaKnpSyM35h0Tz4T5
l0Uf5l0UY7Hq4mjZ01ota5H7e3mM5b2/suW7j1vXtnQEe65v6Qve3NbSDmrr
mpauMe726MODq1saR+yGmIdtt7Q0CPNujD68vDX6yHtdrMl6d0Q+7HmwpSn4
8VC0+HRPS7Ow5+6WpnB+VVwH+7irpXHEHm1pDR7cGbmJ3Rs5sOrhyI1zN7c0
l30/0PK9ZB/3xVju5f3REvu4ZY1RHzfF9TH/sVgTn55qaRCuPNPSFLx5ueX7
jSVPtvSOca8Ojx1aOvFES/uIPRvz8PLFlg5i0nPRh50vRR95n441We+1yIdP
77d0BGM+iBaH3mrpFJa82dIjzj9qaQrX+UZL14g9HtfH/l6P3MTejhz49GHk
Zv4jcY95Hu+1dI19vBNjMePdaIk9H9eE2Z+2NAufxmv73vMuf9HSIxz6qqUv
uPJjyzqhzj5vaRzjfoo+nPgs8hH7OuZh5PctDcK/b6IP236IPvJ+GWuy3s+R
D5/+aekIxvwbLQ793tIpLPmtpUecf58O1xoeRw+PX1u6Rmzktr5gwy+Rm9gf
kQOf/ovcmPRdS2fZ998tXWMff8ZYvlF/RUts3LamcB+/jetj/iht18SwMdp6
hENjtfUFVyZsawc1N3pb4xg3Uds+PBitrXfExm47DyPHb/vc+PaO07aPfUzQ
to+8Y7Zdk/VGtM2HPVlbU/Ajb9viU7OtWdjTaGsK55+0rEvem3pb44iN2vb6
2F+tbW5iSdscWNVpmxvnRmp7j3keaVsj2Eer7Vjqvt22JcZvsgPjd23RNge2
ddu2ODRoaxCuTNLWFLyZuq0d1Fa/rXeMm6ZtHx5Ube0jNmnbeXg5Zdsaw7zJ
2vZh51Rt+8g7cds1WW+KtvYxZ9q2uXFo9raO4NP0bf3Ckhnb+oVDM7Tt43zu
tr5gwGxtbWL+dG3zMX/mtk5R03MO//xKS+dmbftbnzmztI1zPlPbdZgzedvr
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
c33Mo45vitxYdUbcY+7LzdHHs7ki9sWeboh57Gnv1Pedd/T2uMeY9F5qvVET
d6VahkP3pPqCKw+nmoUfd6Yax7hHoo+auyPyEbs35mHVg6mWUWf3RR+OPhR9
5L071mS9RyMfxjyf+j3AlReixZKnUh3BrSeHxyZxvm9q/fEb4fFUv3Du5VS/
8OaxyE3s6ciBYS9Gbvx7INV39v1cqqfs45kYi23PRkvs3VS/uI/3x/Ux/5VY
E4feSLUMh95K9QVXPky1g72/nmoc4z6Kvv2Gx2upxhF7O+Zh1fvx3Hi270Qf
+/gg+sj7ZqzJeh9HPoz5JrU+ceXbaLHk81RHcOuzVMsOinncV2z6NNUvYq/G
9bG/TyI3sS8iB4Z9F7nx76W4xzyPr1PrnH18GWOx7atoifHvr/Hv0vLv0f6Q
aiW2bdAZOp8PnR8ev6eagiX/pXpBnY2U2WLAr6neYdXImX048UuqfcR+izi5
/kw1Czv/Ta038v4R6xD7OdVH5v+Tah/jxsk0BUvGy7QGM0bPNAirRsv0i/M3
hn/eeXjsMjxGzTSO2LiZOZg/QWZt480YmTkwaezM3/qsN1amWZyPmRnnfJTM
ayXv36nfAPb6V1wf5+Nn7pE1mpnu4Ecn02XMKDJbar2e6RS2dTP7sKGWaR+x
RmacXK1MHzEsz/zGkDfJXIfYiEwTmT9Zph04MXlmi0NTZLbYU2XagVVTZvbh
x4SZ9wlT+5lxTCozjWPORJlx1utl7p3YpJn1z9pTZebDjEkya5vYIDMfnk2c
2RKbdvjnJ1JNWimzrnj3V85s+d+UZsh0B0tmynQEY+bM9IJ6mj7TOMbNldmH
AdNl5iY2c+Y8jJw9s65wbpbMPrycI7OPvDNmrsl6c2fmw5tFMh3BjEUzW0ya
P9MpvJkv0xHO34z3dNfhMW+ma8SWyPQFA+bJzE1sgcwc+LRYZm5smy3TXPa9
cOZ3iH0smDkWUxfKbIllmb8/eG9mzbw+5i+ZuSYmLZvpDpYsn+kIxqw2/POP
w/an4bFMpnGMWz2zjzpeOtM7YitkzsPIVTKfG/asmNnHc101s4+8y2WuyXpr
ZObDlQ0zXcCPjTJbfFon0ywsWTvTHc6nznzX+HatlWkWsaUyr4/9rZmZm9i6
mTmwauPM3Ji3eOY95nlskFnz7GO9zLHU/fqZLbE08zcE97edWaOcb5KZDy+3
yfRl7LCKGpso3gVaanerTJvGjPeDPjzYMtM+YltHnFzbZVqJcztlGkfebWMd
YltkWsn8/TLfA/zYP1p8OiBafNoj0x0MOz+zfnjfL4iWd3PPiGPP7pmWMee8
zDpkzm6xd2L7Zt4j1t4x00r2uk/m/SK2V+TDub2jJXZhrEmt7JD5PWD+gbFf
7Dw80xQsOTLTGhw6JNMsnDss0zLGnTg8psn05tCIEzsq5mHncZkmYtjR0Yej
x0cf79oRsSbrnZzpC/acnVmfuHJOtFhyRqY7GHNwppvs76C4Ds5Py7QG207N
9I7zUyI356dHnFznRm7u+/aZ7wL36KzMOmcfZ8aanJ8U181e38p8z3hWj2XW
G3X2RGY98P5elmkKllyb6RRmXBcttXVJpndYdX304cHFmfYRuzTi5Loi0yzs
vCaz3sh7eaxD7KJ45sy/I/MbgCV3Rosfd0WLTzdl+oUlm2V+s/ktsGlm/XF+
c8Sx7cZMy5hzT6Zl2HND7J3Y7ZnfIda+OtNf9npbpmXEbol8mHdrtMQej3vJ
fbwq89vA/Ltjv6z3cKYpWPJU7JW9Px3t5sPjwUzvsOqZ6KOmH8i0j9hDESfX
o5lm8SyfjGdI3kdiHWL3Z/rI/Fcz64q6fC1aLHk9Wqx6PtOmrWN97ium3Bv3
DFNfiDjOPZdpFnPuizjrPRt7J/ZK5vvK2ldmvgvco5czXSP2YuTDs5eiJXZs
5u8Y6vPtzPcXh3Yf/patD4/G8Hgv0ylc+SDTFLz5PLPeqL93M71j3BfRhxnv
RD5iH8Y8DPs000rs+Sj6MPWz6CPv+7Em632S6SxzvozcePNzpi9Y8nWmTRj2
baYpGPZN9HH+e2bdYsxPcf3M/yryMf/7TL+w6tfhcUKmcz8Oj2Nizg8R5/y7
WIc5H8d1sNffYh7r/RFrYs8/me5g2H+ZpmDMGLnfBpz+O9Mvxo2Z20cd/5Vp
GbGRcudh5Gi53wy+MyPn9uHl6Ll95P031mS9sXLz4cqI3JrEj1pui0/j5ZqF
JePmusM57wRm4dM4uWYR+zOuj/2NnZub2Pi5ObCKd4rczF8u91ly7yfKrW32
MUHuWN7lCXNbYs3cNXGllesOVs2dW2/UWZprE5ZkuS2WdHKtwaF27jzGDXJr
j9rKc8cyrp9rGbEy10e8qXJbYt1cT3G0yM3N+cS5+bBhktwWY6bN/R5gyWS5
HuHNFLl+4crkuX2cz5jrFLU+aW4O5kyZOxafpspt+eZMl5sb/3q5+2Lf0+f2
YeHUuWMxdZrclj2Nmvv94x2aIXcsaye595t7PWuuTVgyW26LJXPkWoNDs+Qa
x7j5c7+LuDJ77ljGzZf7253YPLnPjb93zpvbEpsr11Oe65y5uTlfIDcfriyY
22LPUrmm4MfCYRZ+LJprFvYsktvH+cy5trLXhXJzMGex3LGYtHhuS00vnZsb
82bKfSbMXya3D/OWyB2LVUvmtuxplNxa5P4umzuW93753Hcft1bOdQR7Vs31
BW/WzbWD2lop1zXGrZfbhwcr5hpHbLXcedi2dq5BmLd6bh9erpPbR95Vctdk
vfVz82HPFrmm4MeW0eLTxrlmYc9GuaZwvkLudbCPDXONI7ZNrjV4sEFubmKb
5ObAqq0iN86tlWsu+948971kH5vGWO7lZtESOzK3xqiPNYfHL5nzt4018WnH
XINwZedcU/Bmr9z3G0t2yPWOcXtHH05sn2sfsV1iHl7ukesgJu0afdi5Z/SR
d6dYk/X2iXz4dGiuIxhzWLQ4dECuU1iyf65HnB+RawrXuV+ua8S2i+tjf/tG
bmIHRg58OjxyM3/ruMc8j0NyXWMfB8VYzDg4WmK7xTVh9tG5ZuHTjbnvPe/y
cbke4dAJub7gyum5dUKdHZtrHOPOiD6cOCbyETsx5mHkqbkG4d9J0Ydtp0Uf
eY+PNVnvzMiHTxflOoIxF0eLQ+fmOoUl5+R6xDl/Z+af4fG/IZyd6xqxy3J9
wYazIjex8yIHPl0SuTHplFxn2feFua6xj/NjLN+oC6IldkOuKdzHk+P6mH95
rIlhV+d6hEPX5vqCK7fk2kHNXZVrHONujT48uDLXO2LXxTyMvCmeG9/e66OP
fdwcfeS9JtZkvdsiH/Y8kGsKfjwYLT7dlWsW9tyZawrnR+XWJe/NHbnGEbsi
ro/93R65id0dObDqociNc5fGPeZ53J9rBPu4d3iskVv390VLjN9k/P3y//98
LnJg2yPR4tCTuQbhytO5puDNS7l2UFtP5HrHuJejDw8ez7WP2DMxDy9fyK0x
zHs2+rDzxegj71OxJus9n2sfc16J3Dj0Xq4j+PRarl9Y8kauXzj0evRx/mGu
Lxjwbq5NzH818jH/rVynqOn3IzfOvZP7W585b0ec8zdjHeY8F9fBXj+Ieaz3
UayJSZ/luoMlX+Q6gjHfx3uAH5/mGse4H6IPAz7J9Y7YlzEPI7/NtQ/jv4o+
vPwu+sj7eazJej9GPrz5K9cRzPg7Wkz6NdcpvPkl1xHO/821CUt+znWN2Mdx
fezvp8hN7LfIgU//RG7mX9MZ1s7wWGJ4/JnrAvv4PcZS639ES+y/WBNjRu5o
ED5N1rHGqINRO/qFPaN1bHFljI6m4M0oHecxbvyOjlBno3ccy7jxOrpGbJyO
flFb43ZsiY3V0VDsHLNjbs4n6JgPVybs2GJPu6Mp+DGio1n4Ue9oFvbUOvZx
3uloCnU/UccczGl0HItJzY4tRqYdc2Pe2B33xb6zjn2Yl3Qcy3ep1bFlT9/k
fv94h/KOY1l7pI73m3tddvQLe/rDP9+T68rEHU3Bm15H1xg31fDPjw7bx4bH
oONYxk3Z0Rdik3d8btgzRceW2KQdDeW5TtIxN+dTd8yHK9N0bLFn1o6m4Md0
Hc3Cjxk6moU903fs47zb0Vn2Om3HHMyZseNYTJqpY0tNz9YxN+YVHZ8J82fv
2Id5M3cci1WzdGzZ09e5tcj9naPjWAybs2OLPfN1dAR7FujoC95QH9hBbc3b
0TXGUTP04cE8HY0jtmDHedi2aEeDMG+hjn14uVjHPvLO33FN1luyYz7sWamj
KfixcscWn5btaBb2LNPRFM536vje874v3dE4Yjt2rDFiS3XMTWy5jjmwapWO
uXFukY7msu8VO76X7GP5jmO5lyt0bIntHGtSHwt3vD7mr9bROBxaq6NlOLR2
xxZj1u3oC/as2dE4xq3R0TXO1+k4lnEbdzSImtiwo2VYuFHHltj6HT3F0fXC
Nc436TgPtzbraBBWbdfRF1zZsqNBWLV1R1MwZvWO18GetujoGuM2jxycbxXz
mLNNzMOA7SM3nq3a8R5zX3aIPp7NprEv9rRtzBsn6oy/n/D93iXuMW6d3bEe
ePd37+gXJu3Z0SOMOaCjX9TKbh1dY9yB0Uf97Rr5iO0V8zBpv45m4dDe0Yed
+0cfefeINVnvoMiHPcd0NAVLjo0Wbw7vaBBWHdbRL87n6lh//HY4dPjnKmIn
dLQGYw6O3Ph3ROTApOMiN87t29Ff9n10x28S+zgyxuLZUdESO6ujWdzHfeL6
mH9irIlJp3b0C5NO7+gRxpzX0Q72fkpH1xh3fvTNPTxO7uggsTNiHiadE88N
h86MPvZxbvSR97RYk/UuiHwYc2XH+sSVq6LFkks6OoJbF3e0bP6Yx33Fpos6
+kXspLg+9ndh5CZ2aeTAsKsjN/4dH/eY53FFxzpnH5fFWGy7PFpi13b0Ec+u
7+gOJi1ZDH0btp8Oj5s6WoZDt3T0BVfu7mgHNXdjR+MYd0/0YcMNkY/YrTEP
q+7saBl1dlv04ehd0Ufem2NN1rs38mHPYx1NwZLHo8WbBzsahFUPdPSL8+vi
+ri2+zsaR+ypjvWMMfdFbmIPRQ5MeiJyY9IdHX1n3492/Pcz2MfDMRbPHomW
2Ocd642auD2uj/lPx5qY9HxHjzDsxY4e4cobHb3Gkuc6ese4N6MPD57taByx
l2IeRr7W8VvCd+bl6MO216OPvC/Emqz3VuTDno87moIfn0SLT+91NAt73u1o
CuefdXSK63yno3HEnonrY39vR25i70cOrPo0cjP/ybjHPI+POhrBPj6IsdT9
h9ESe7Wjy1znVx09wqoRhfXA7+VvOxqEK993NAVvfutoB7X1TUfvGPd79OHB
15GP2A8xDy9/6VhjmPdj9GHnr9FH3u9iTdb7I/JhzyiFpuDHqIUtPv3T0Szs
+bujKZzzm2+D+K781dE4YmMUWoMHf0ZuYv9GDqwarTA3zv3c0V/2PXLhN4l9
/Bdj8XWkwpbYRIVmcR9/iutj/piFa+LTuIUG4cr4habgTaOw3rBknELvGNcs
7MODsQvtIzZB4Ty8rBU+N0yasLCPfdQL+8g7XuGarJcU5sOeXqEp+FEWtviU
FZqFPWmhKZx/OTwOifemXWgcsbEKr4/9tQpzE8sLc2BVVZgb50YvvMc8j26h
EeyjUziWui8KW2I/xT8T4t+peqVjXfIeDwqNw6HJCw3ClSkLTcGbGQrtoLYm
K/SOcTMW9uHBpIX2EZuqcB5eTldYY5g3dWEfdk5f2EfeKQrXZL2ZCvNhz9yF
puDHPIUtPs1WaBb2zFpoCufrFNYS7/4shcYRW7uw9ojNXJib2OyFObBq3sLc
ODdtob/se67CmmcfcxSO5f7NWdgSW7dwTWpimsLrY/78hcbh0MKFluHQIoUt
xixW6Av2LFRoHOMWLHSN80ULxzJu2eGfv4j3aKlCy7Bw6cIW+5co9BRHFy/M
zflyhfNwa4VCa3BojcJaxZiVCx3BrVULDcKbBQqvgz2tVGgc41YszMH5KoXz
mLNa4TzqeM3C3Fg1X+E95r6sVdjHs1m+cF/safXCeeypX/i+846uV3iPMemQ
wnqjJjYstAyHNi70BVe2KjQLPzYoNI5xW0cfNbd+YT5imxTOw6otCi2jzjaN
PhzdMvrIu1Hhmqy3TeTDmF0Lvwe4slu0WLJDoSO4tX2hZZxPXFh//EbYrtAv
YnsW+oU320ZuYjtGDgzbPXLj3+aFvrPvXQo9ZR87xVhs2zlaYgcX+sV93Cyu
j/l7xZo4tF+hZTh0QKEvuHJ4oR3sfd9C4xh3RPRNMjz2KTSO2IExD6sOjefG
sz0o+tjHYdFH3v1jTdY7MvJhzEmF9YkrJ0eLJccWOoJbxxRaNkXM475i09GF
fhHbO66P/R0VuYkdFzkw7JTIjX97xD3meZxYWOfs4/gYi20nREuM/34b/91O
/pudp0YOvDy90DgcOrfQFCy5pNAL6uzSaDHg7ELvsOqy6MOJswrtI3ZOxMl1
fqFZ2HlxYb2R97xYh9iZhT4y/6JC+xh3faEpWHJToTWYcVWhQVh1ZaFfnO/f
HT6j4dEZHlcUGkfsxuGxTMy/pbC28ebqyIFJ1xX+1me9awvN4vyaiHN+eVwr
eS8s/Aaw1wvi+ji/OfbIGncXuoMfDxW6jBkPR0ut31noFLY9En3YcEehfcTu
iji57i30EcMeLPzGkPeeWIfY7YUmMv/ZQjtw4rlocej5aLHn8UI7sOqF6MOP
W+M+YeoTEcekxwqNY85tEWe9R2PvxJ4prH/WfjHyYcbThbVN7MnIh2dPRUvs
5UJ3MOmPwrri3f8zWt7f1wrdwZI3Ch3BmPcLvaCeXi00jnEfRB8GvBK5ib0Z
8zDy3cK6wrm3og8v34s+8r4ea7Leh5EPb74qdAQzvo4Wkz4tdApvPil0hPMD
4j0thsfHha4R+67QFwz4KHIT+yxy4NM3kRvb3ik0l31/WfgdYh+fx1hM/SJa
Yg8U/v7gvXk7ro/538eamPRzoTtY8muhIxjzT6EXZwyPnwqNY9y/0Ucd/1jo
HbHfYh5G/hXP7bTh8Xv08Vz/jj7y/hJrst5/kQ9XxurqAn6M3bXFp1G7moUl
o3R1h/OXCt813qGRu5pF7Ie4PvY3UtfcxEbrmgOrxumaG/O+jXvM8xiza82z
j9G7jqXux+jaEru/8DcE9/e+whrlfNyu+fCy3tUXvMEqaowa4l2gpXZHdLUJ
e3g/6MODibraR6zWNU6uZPjnGwqdy7oaR95G13VwdMKuVjJ/0q7vAX5M1rXF
p8m7tvhUdnUHwxbtWj+874t1bXk3q65x7Ol1tYw5i3StQ+Z0u+6d2CRd7xFr
p12tZK8Td71fxPpd8+HcoGtLbPGua1Ir7a7fA+ZP0XW/2DldV1OwZIau1uDQ
1F3Nwrlpu1rGuNm7vit4M03XOLEZu87Dzlm7mohhM3Xtw9HZuvYxf/qua7Le
nF19wZ4Fu9YnrizUtcWS+bq6gzFTdXWT/U3Z9To4n6erNdg2d1fvOJ+ra27O
5+0aJ9fCXXNz31td3wXu0QJd65x9zN91Tc7n6Hrd7PXAcIhntU3XeqPOtuta
D7y/y3Q1BUtW7uoUZqzStaW2lurqHVat2rUPD5bsah+xpbvGybVcV7Owc6Wu
9UbeZbuuQ2yJ8JH563X9BmDJ+l1b/Niga4tPa3T1C0vG7/rN5rfAeF3rj/M1
u8axbfWuljFno66WYc9qXfdObN2u3yHWXrGrv+x1na6WEVuraz7MW7trS2zb
uJfcxxW6fhuYv2HX/bLell1NwZIduu6Vve8Y7QTDY/Ou3mHVTtFHTW/W1T5i
W0ScXFt3NYtnuX08Q/JuFesQ27Srj8zfp2tdUZf7Rosl+0WLVbt2takW63Nf
MWXjrvcMU3eLOM7t0tUs5mzSNc56O8feie3d9X1l7eW7vgvco726ukZs98iH
Z3sOj2bEZun6O4b6PCjeXxzq9obmDNs7h8ehXZ3ClcO7moI3x3WtN+rvkK7e
Me746MOMgyMfsSNiHoYd09VK7Dky+jD12Ogj72GxJusd3dVZ5pwQufHmrK6+
YMlJXW3CsFO6moJhJ0cf5+d2rVuMOTOun/knRj7mn9bVL6w6O3Lj3BnDY+aY
c3rEOT811mHOUXEd7PWcmMd658Wa2HNRV3cw7JKupmDM1V2/DTh9YVe/GHdN
9FHHF3S1jNilMQ8jr+z6zeA7c1n04eVV0Ufei2NN1rs28uHKbV1rEj9ujxaf
buxqFpbc0NUdznknMAufru9qFrHz4/rY33WRm9hNkQOr7ojczP81niX3/tau
tc0+bo6xvMu3REvsrlgTV+7p6g5WfdS13qiz+7rahCX3R4slD3a1BofujXmM
e6Jr7VFbD8RYxj3e1TJij3b1EW8ei5bYw109xdGHIjfnT0Y+bHgqWox5uev3
AEue6eoR3jzX1S9ceTb6OH+9q1PU+tORgznPx1h8eiFavjmvRG78eyT2xb5f
jT4sfDHGYupL0bKnK7p+/3iHXouxrH133G/u9dtdbcKSd4fHHl0teb+rNTj0
VlfjGPdZ1+8irrwXYxn3adff7sQ+jufG3zs/iZbYh1095bl+ELk5/zzy4coX
0WLPj11NwY+vupqFH990NQt7vo4+zt/sait7/TJyMOfbGItJ30VLTf8UuTHv
jXgmzP85+jDv+xiLVT9Ey54u71qL3N9fYizv/W9d333c+qurI9jzT1df8Ga0
nnZQW392dY1xo/fsw4M/uhpH7N+Yh22j9DQI8/6LPrwctWcfef+ONVlvjJ75
sGfCnqbgx0Q9W3wap6dZ2DN2T1M4/z2ug32M1dM4YvWe1uDBmD1zExu3Zw6s
GtEzN86N3NNc9j1Bz/eSfYzXcyz3cvyeLbHpe9YY9TFSz+tjfqPnmvjU7mkQ
rmQ9TcGbquf7jSWtnt4xrt+zDyeSnvYRy3vOw8teTwcxqdOzDzvLnn3kTXuu
yXqDnvnwaeqejmDMND1bHJqsp1NYMmlPjzifrqcpXOckPV0j1ux5fexv4p65
iU3eMwc+TdszN/NrPe8xz2Oqnq6xjyl6jsWMKXu2xIqe14TZM/Y0C5/W6Pne
8y7P0tMjHJqtpy+4Mm/POqHOZu5pHOPm69mHEzP1zEds9p7zMHLungbh3xw9
+7Btnp595J2155qsN3/PfPi0ZE9HMGapni0OLdLTKSxZuKdHnM9TDXOWw5zD
Y6GerhFbtqcv2LDg8M/vdI0t2jMHPi3dMzcmzdXTWfa9RE/X2MdiPcfyjVq8
Z0ts9Z6mcB/n7Hl9zF+u55oYtlJPj3BolZ6+4MraPe2g5lbsaRzj1unZhwcr
9PSO2Ko952Hkmj2fG9/e1Xr2sY+1evaRd+Wea7Leuj3zYc9mPU3Bj82jxacN
e5qFPRv0NIXzGXrWJe/N+j2NI7Z8z+tjf+v1zE1so545sGqLyI1zy/S8xzyP
TXsawT427jmWut+kZ0uM32T8/ZLftVtGDmzbKloc2r6nQbiyY09T8GaPnnZQ
W9v19I5xe0YfHmzb0z5iO8U8vNytZ41h3s7Rh527Rx95d4g1WW/XnvYxZ6/I
jUOH9HQEn/bp6ReW7NfTLxzaN/o4P7ynLxhwcE+bmL935GP+AT2doqYPjdw4
d1DP3/rMOTDinO8f6zBnl7gO9npYzGO9I2JNTDqmpztYclxPRzDm1J7vAX4c
3dM4xp0WfRhwVE/viB0f8zDy5J72YfwJ0YeXp0QfeY+NNVnv9MiHNxf0dAQz
LowWk87u6RTenNXTEc4v7mkTlpzZ0zViR8b1sb8zIjexcyIHPl0UuZm/0tCR
b4ftd8Pj/J4usI9zYyy1fl60xC4dHgv0NObyngbh0zM9a4w6uLKnX9hzVbS4
ck1PU/DmipjHuJt7OkKdXR1jGXdTT9eI3dDTL2rrxmiJXdfTUOy8NnJzfkvk
w5Vbo8We+3qagh+39zQLP+7saRb23BF9nD/U0xTq/rbIwZy7Yiwm3R0tRt4f
uTHv+tgX+34g+jDvnhjLd+neaNnTST2/f7xDD8ZY1r4s7jf3+rGefmHP49Hi
ypM9TcGbR3u6xrgXhsfWw2Ob4fFEjGXc8z19IfZsPDfseS5aYk/3NJTn+lTk
5vzFyIcrL0WLPW/3NAU/XulpFn681tMs7Hk1+jh/pKez7PXlyMGc12MsJr0R
LTX9TuTGvIfjmTD/3ejDvDdjLFa9FS17OrFnLXJ/34uxGPZ+tNjzSU9HsOez
nr7gDfWBHdTWxz1dY9x30YcHH/U0jtjnMQ/bvu5pEOZ9EX14+U30kffTWJP1
vo982PNHT1Pw489o8ennnmZhz089TeE8K33ved9/7GkcsbS0xoj9ELmJ/RI5
sOqvyI1zX/U0l33/3vO9ZB+/xlju5W/REstL16Q+vozrY/4/PY3DoZFLLcOh
UUpbjBmt1BfsGanUOMb919M1zkctHcu4cUsNoibGKrUMC8cZ/vmSnrExSj3F
0dFLc3M+Xuk83Jqg1CCsSkp9wZURpQZhVb3UFIz5N66DPU1U6hrjJizNwXmt
dB5zGqXzMKBVmhvP/o57zH1pl/bxbMYv3Rd7apbOY0/UGX8/4fvdKb3HuLVg
aT3w7vdK/cKkqtQjjJm81C9qpVvqGuOmKO2j/orSfMT6pfMwadJSs3BoUNqH
nZOV9pG3LF2T9aYszYc9M5WagiUzl7Z4M22pQVg1TalfnH/Qs/747TB1qXHE
Ziu1BmOmKs1NbLrSHJg0S2lunJuk1F/2PWPpN4l9TF86Fs9mKG2JLVBqFvdx
4tLrY/7spWti0tylfmHSvKUeYcwipXaw97lKXWPcoqV9Hw6POUsdJDZf6TxM
Wqj0ueHQ/KV97GPh0j7yzlO6JustVpoPY5YvrU9cWaG0xZKlSh3BrSVLLfs0
9sF9xaYlSv0iNkfp9bG/xUtzE1u6NAeGrViaG/9mLb3HPI/lSuucfSxTOhbb
li1tia1c6iOerVrqDib9MPzz0cPjmOGxRqllOLRWqS+4smGpHdTc6qXGMW6j
0j5sWK00H7G1S+dh1fqlllFn65T24egGpX3kXbN0TdbbuDQf9mw7PMYutWS7
aPFm81KDsGqzUr84X6X0+ri2TUuNI7ZjaT1jzCaluYltETkwafvIjUnrlfrO
vrce/nnMUtu2jLF4tlW0xI4rrTdqYt3S62P+TrEmJu1W6hGG7VHqEa7sX+o1
luxa6h3jDog+PNil1Dhie8Y8jNy39FvCd2av6MO2/aKPvLvHmqx3YOTrDo+j
Sk2ZLJ4/LT4dWmoW9hxSagrnx5Y6xXUeXGocsZ3j+tjfQZGb2GGRA6uOidzM
3yHuMc/jyFIj2MfhMZa6PyJaYvuUusx1nlDqEVbdVloP/F4+udQgXDm11BS8
OafUDmrrpFLvGHdu9OHBiZGP2GkxDy/PKq0xzDs9+rDz7Ogj7ymxJuudF/mw
5/JSU/Djimjx6aJSs7DnwlJTOOc3H3+n5LtyQalxxK4utQYPzo/cxC6OHFh1
ZeTGuTNL/WXfl5V+k9jHJTF2geFxabTEbi01i/t4Rlwf86+JNfHphlKDcOWm
UlPw5s7SesOS60u9Y9xd0YcH15XaR+zmmIeXt8dzw6Rboo993BF95L0x1mS9
uyMf9jxSasoGw+PRaPHp/lKzsOe+UlM4P760Lnlv7i01jti1cX3s757ITeyB
yIFVj0VunLsq7jHP4+FSI9jHgzGWun8oWmIfTzysw+Gx//DYu7QueY+fKDUO
h54tNQhXni81BW/450nYQW09U+od496IPjx4utQ+Yi8Oj21KvXy1tMYw76Xo
w87Xoo+8z8WarPdm5MOej0pNwY+Po8Wnd0vNwp53Sk3hfNTKWuLdf7vUOGKj
VNYesbciN7H3IgdWfRK5Dxger5T6y74/LK159vF+jOX+fRAtsdEq16QmXo7r
Y/5npcbh0FelluHQ19FizLelvmDPl6XGMe6LUtc4/ybGMu7nUt95j34stQwL
f4qW2PelnuLod5Gb819iHm79VmoNDv1XWqsY82epI7j1d6lBePN5XAd7+qPU
OMb9Hjk4/yvmMeefmEcdj1SZG6s+jXvMfRm5so9n82vsiz39G/PY0+Ol7zvv
6OiV9/iC4TFVZb1RE2NVWoZD41T6gisjKs3CjzErjWNcrbKPmhujMh+xcSvn
YdWElZZRZ+NV9uHoRJV95B27ck3Wq1fmw5hO5fcAV4rKFktalY7gVlJpGedP
ltYfvxGalX4RKyv9wptGZW5i7cocGNatzI1/E1T6zr7zSk/ZR1o5FtuyypbY
lJV+cR/Hr7w+5leVa+LQJJWWPTA8Jqv0BVemrbSDvU9caRzjpqvse2p4DCqN
IzZ55TysmrryufFsp6jsYx/TVPaRd9LKNVlv+sp8GDNnZX3iylyVLZbMXOkI
bs1UadlzsQ/uKzbNWOkXsX7l9bG/GSpzE5t1+OcXSg2buzI3/vUq7zHPY47K
Omcfs1WOxbbZK1ti/A7j75f//2dplVZi27WDofPDY8nhsUilKR8Mj6UrvaDO
lqlsMWChSu+watnKPpxYsNI+YgtXxsm1WKVZ2LlUZb2Rd9HKdYgtUOkj85es
tI9xq1WagiVrVFqDGStWGoRVK1T6xfmk/eEz4p0YHstXGkds9coczF+rsrbx
ZqXKHJi0auVvfdZbpdIszleujHO+XOW1kneJym8Ae1288vo4X7Nyj6yxYaU7
+LFFpcuYsWW01Pr6lU5h21bRhw3rVdpHbIPKOLk2rvQRwzav/MaQd6PKdYit
W2ki83eutAMndokWh3aNFnu2rbQDq3aLPvxYu/I+Yep2EcekbSqNY846lXHW
2zr2Tmynyvpn7d0jH2bsWFnbxLaPfHi2Q7TE9qx0B5POr6wr3v0LouV/U9qn
0h0s2a/SEYw5tNIL6mnvSuMYd1j0YcBekZvY/jEPIw+urCucOyD68PKQ6CPv
vrEm6x0e+fDmhEpHMOPEaDHp6Eqn8OaoSkc4n6zve/rQ8Diy0jVip1T6ggFH
RG5ix0QOfDopcmPbQZXmsu/jK79D7OPYGIupx0VLbLPK3x+8NwfG9TH/1FgT
k86qdAdLzql0BGMuHh7zDY/5h8eZw2OWGHdJ9FHHp1d6h3/nxjyMvDCeG/ac
F30814uij7xnx5qsd2nkw5XrKl3Aj+ujxacrK83Ckisq3eF8j8p3jXfo8kqz
iJ0W18f+LovcxK6KHFh1Q+TGvJPjHvM8rq2sefZxdYyl7q+Jltimlb8huL+b
VNYo5zdGPry8s9IXvMEqaowaejBaavf2Spuw56How4PbKu0jdkfEyXV3pZU4
d3+lceS9K9Yhdmullcx/uvI9wI9nosWnZ6PFp0cr3cGwryvrh/f9m2h5Nx+L
OPY8UmkZc76qrEPmPBx7J/ZU3CPWvq/SSvb6ZNwvYo9HPpx7Ilpi38aa1Mq9
ld8D5j8X+8XOVypNwZLXKq3BoRcrzcK5lystY9y7le8K3rwUcWKvxzzsfLvS
RAx7I/pw9J3oY/6rsSbrvV/pC/Z8XlmfuPJFtFjySaU7GPNCpZvs7/m4Ds4/
qrQG2z6s9I7zDyI35x9HnFxfRm7u+z2V7wL36LPKOmcfn8aanL8X181eJ+/7
nvGsGn3rjTpL+tYD7+9PlaZgyZ+VTmHGX9FSWz9UeodVf0cfHnxfaR+xHyNO
rl8qzcLOPyrrjbw/xzrEvotnzvwx+n4DsGTMvi1+jNW3xaeR+vqFJTdXfrP5
LXBTZf1xPnLfOLb9V2kZc8bpaxn2/Ds8zojY6H2/Q6z9e6W/7HW0vpYRG6Vv
PswbtW9LrNn3XnIff6v8NjB/7L77Zb0RfU3BknbfvbL3tG97y/CYsK93WJX1
7aOmJ+hrH7GJ+sbJVe9rFs+y1fcZkrfWdx1i4/f1kfmDvnVFXU7ct8WSSfq2
WFX0temO2BP3FVPG7XvPMLXbN45znb5mMWe8vnHWy/vunVi/7/vK2r/Gu8A9
qvq6RqzXNx+elX1bYm9V/o6hPqfo+/7i0MPDP683PNYfHlP3dQpXpu1rCt7M
0rfeqL+p+nrHuFn79mHGlH3zEZuu7zwMm6mvldgzfd8+TJ25bx95p+m7JuvN
2NdZ5szWNzfeLNDXFyyZo69NGDZXX1MwbM6+fZwv3LduMWb+vtfP/Nn75mP+
PH39wqoF++bGufmGf34z7tm8feOcz913HebM0Pc62OtCfeex3iJ918SeJfq6
g2FL9TUFY1bs+23A6cX7+sW4lfr2UceL9bWM2NJ952Hk8n2/GXxnlunbh5cr
9O0j75J912S9lfvmw5V1+tYkfqzbt8Wn1fuahSWr9XWHc94JzMKnVfuaRWzR
vtfH/lbpm5vYGn1zYBXvFLmZf3bfZ8m9X7tvbbOPNfuO5V1eq29LbMPhn/+p
dGXjvu5g1RF9640627SvTViyWbRYskVfa3Bok77zGLd939qjtjaPsYzbrq9l
xLbp6yPebBstsa36eoqjW0ZuzneIfNiwY7QYs1ff7wGW7NzXI7zZta9fuLJL
9HG+X1+nqPWdIgdzdoux+LR7tHxz9o7c+Ld17It97xN9WLhHjMXUPaNlT8v1
/f7xDu0bY1l7o773m3t9UF+bsOTgaLHk0L7W4NCBfY1j3DF9v4u4ckiMZdzR
fX+7Ezsynht/7zwqWmKH9/WU53pY5Ob82MiHK8dFiz2n9zUFP07oaxZ+nNTX
LOw5Mfo4P6Cvrez1+MjBnJNjLCadEi01fUbkxrz945kw/8zow7xTYyxWnRYt
e1q2by1yf8+Ksbz35/R993Hrgr6OYM9FfX3Bmyv72kFtnd/XNcZdFX14cF5f
44hdHPOw7fK+BmHeJdGHl1dEH3kvjDVZ7+rIhz239DUFP26NFp+u72sW9lzX
1xTOz43rYB/X9jWO2B19rcGDayI3sRsiB1bdFrlx7rK+5rLvm/u+l+zjxhjL
vbwpWmKv9a0x6uPSuD7m3xlr4tO9fQ3Clfv7moI3j/d9v7Hknr7eMe6J6MOJ
u/vaR+yBmIeXjw6PDfqa9GD0Yedj0Ufe+2JN1nsy8uHTS30dwZiXo8WhZ/s6
hSXP9PWI81f7msJ1Pt3XNWJ3xfWxv6ciN7HnIgc+vRK5mX973GOex4t9XWMf
z8dYzHghWmIPxTVh9ht9zcKn//q+97zLb/f1CIfe7esLrnzSt06os7f6Gse4
T6MPJ96MfMTei3kY+VFfg/Dv/ejDto+jj7zvxJqs91nkw6fv+zqCMT9Ei0Nf
9XUKS77s6xHn/J2Zf4bH/4bwRV/XiP3c1xds+DxyE/s6cuDTj5Ebkz7s6yz7
/q6va+zjmxjLN+rbaIn929cU7uMHcX3M/yXWxLA/+nqEQ3/19QVXRhloBzX3
e1/jGDfqwD48+K2vd8T+jnkYOdLA58a395/oYx8jD+wj75+xJuuNNjAf9ow/
0BT8mGBgi09jDTQLe8YcaArnr/etS96bMQYaR+zXuD72N/rA3MTGHpgDqyYc
mBvnfop7zPMYb6AR7GOcgWOp+3EHtsT4TbZL/K6daGAObBsxsMWhZKBBuNIe
aAre9AbaQW01B3rHuHJgHx40BtpHLB04Dy+LgTWGednAPuzsDuwjb2vgmqzX
GWgfc6qBuXFo6oGO4NNgoF9YMslAv3Bo4oF9nE830BcMmGqgTczvD8zH/MkG
OkVNTzMwN85NOfzzI33nTD4wzm//SQeuw5x84HWw12kHzmO96QeuiUkzD3QH
S2Yd6AjGzDPwPcCPmQYax7h5B/ZhwIwDvSM228B5GDnXQPswfvaBfXg598A+
8s4ycE3Wm29gPrxZfKAjmME/m6fFpIUGOoU3Cw50hPOlBtqEJQsMdI3YDAOv
j/3NPzA3sYUH5sAn/rk/uZn/5/DPpwyPU4fHYgNdYB+LDBxLrS86sP0fC/cc
x8q1NWC4dm9tNzPJJJNkMpnUtm3btm27p7Z7atu2bdvWl/d71x/z22f22nvt
PVjP5PT2ltiyNdfEmOVrGoRPu9SsMepgxZp+Yc9KNVtcWaWmKXizQs15jFu7
piPU2co1xzJurZquEVujpl/U1po1W2Kr1TQUO1etmZvzdWrmw5V1a7bYs1lN
U/Bj/Zpm4ceGNc3Cng1q9nG+VU1TqPv1auZgzkY1x2LSxjVbjNw8cmPe6jX3
xb63iD7M26TmWL5Lm9Zs2dPcNb9/vENbxljWXq7m/eZeb1fTL+zZPlpc2bGm
KXizbU3XGLfH8Jh0eEw2PHaIsYzbvaYvxHaN54Y9u0VLbOeahvJcd4rcnO8Z
+XBlr2ix5+CapuDHPjXNwo/9apqFPftGH+fb1HSWve4dOZizf4zFpAOipaYP
idyYt3U8E+YfGn2Yd2CMxaqDomVPc9WsRe7vYTEWww6PFnuOqekI9hw/PJo1
vaE+sIPaOrqma4w7Pfrw4KiaxhE7IeZh2yk1DcK8E6MPL0+NPvIeG2vi2YjI
hz0X1DQFPy6MFp/OrmkW9pxV0xTO76/53vO+n1nTOGL31awxYmdEbmLnRA6s
uihy49zJNc1l3+fXfC/Zx7kxlnt5XrTEHog1qY+T4vqYf0lN43DoipqW4dCV
0WLM1TV9wZ7LaxrHuMtqusb5VTGWcTfUNIiauK6mZVh4fbTErqnpKY6OjNyc
3xjzcOvmmgZh1d01fcGV22oahFV31DQFYy6N62BPt9Z0jXG3RA7Ob495zLkz
5mHAPZEbzy6Oe8x9uTf6eDY3xb7Y010xjz1RZ/z9hO/3g3GPcevzmvXAu/9I
Tb8w6bGaHmHMszX9olYeruka456LPurvochH7PGYh0lP1zQLh56IPux8JvrI
+2isyXrPRz7seaOmKVjyZrR483JNg7DqpZp+cX5Ezfrjt8OLNY0j9k5NazDm
hchN7JXIgUlvRW6ce6qmv+z79ZrfJPbxaozFs9eiJfZZTbO4j0/G9TH/3VgT
kz6s6RcmfVzTI4z5qqYd7P2Dmq4x7uvoO3J4vF/TQWKfxDxM+iKeGw59Gn3s
48voI+9HsSbrfRP5MOa3mvWJK79HiyU/Do/jarr1fU3Ljo153Fds+q6mX8Te
i+tjf99GbmI/RQ4M+yNy49/bcY95Hr/WrHP28XOMxbZfoiX2V00f8eyfmu5g
0ohk6NvwqIbHKImW4dBoib7gyriJdlBz/9U0jnHjJfZhw7+Rj9joifOwauxE
y6izMRL7cHScxD7yjpq4JuuNn5gPeyZPNAVLpkhs8WaiRIOw6n+JfnH+d1wf
1zZhonHEpk6sZ4yZIDE3sYkTc2DSlIm5MWmsRN/Z92SJ/34G+5gkcSyeTZrY
Epstsd6oiTETr4/50ySuiUkzJHqEYTMleoQr9USvsWT6RO8Y10jsw4PpEo0j
NnPiPIxMEr8lfGdmSezDtjSxj7wzJq7JelliPuwpE03BD54/LT61E83CnjzR
FM4HiU5xna1E44hNm3h97K+ZmJtYJzEHVvFukZv5UyXeY55HL9EI9tFNHEvd
F4ktsVqiy1znHIkeYdX6ifXA7+W5Ew3ClXkTTcGbRRLtoLbmSvSOcYsm9uHB
nIn5iM2XOA8vF0qsMcybP7EPOxdO7CPvPIlrst5iifmwZ/lEU/BjhcQWn5ZK
NAt7lkw0hXN+8/F3Sr4rSyQaR2zlRGvwYPHE3MSWTsyBVSsm5sa5BRP9Zd/L
JX6T2McyiWPxddnElth6iWZxHxdIvD7mr5K4Jj6tmWgQrqydaArebJRYb1iy
RqJ3jNs4sQ8PVh/++YeasXUS5+HlBonPDZPWTexjHxsm9pF3rcQ1WW+TxHzY
s22iKfixXbT4tEWiWdizeaIpnM+eWJe8N5uFccRWTbw+bN40MTexLSMHVm0f
uXFupcR7zPPYJtEI9rFVjKXut46WGP8uBv9MiH+natbEuuQ93jHROBzaLdEg
XNkj0RS82T/RDmpr10TvGHdA9OHBLon2Edsz5uHlvok1hnl7RR927hd95N09
1mS9AyMf9hyVaAp+HB0tPh2aaBb2HJJoCudXJtYS7/7BicYRuyKx9ogdFLmJ
HRY5sOqYyI1z+yT6y76PTKx59nF4jOX+HREtsatiTWpi77g+5h+XaBwOnZRo
GQ6dHC3GnJroC/acmGgc405IdI3zU2Is485K9J336IxEy7DwzGiJnZ7oKY6e
Frk5Pzvm4da5idbg0KWJtYoxFyQ6glsXJRqEN8fHdbCn8xONY9x5kYPzC2Me
cy6OedTxZZEbq46Ne8x9uTz6eDbnxL7Y0yUxjz3tkPi+845eHfcYk15MrDdq
4tpEy3Do+kRfcOW2RLPw45pE4xh3e/RRcyMjH7EbYh5W3ZJoGXV2Y/Th6K3R
R97rYk3Wu3N4rJZozEOJ3wNceThaLLk30RHcuifRMs53Sqw/fiPcnegXsccS
/cKbuyI3sfsiB4Y9Ernx7+ZE39n3g4meso/7Yyy2PRAtsRcS/eI+3hTXx/zH
Y00cejrRMhx6NtEXXHkl0Q72/lSicYx7Nfp2Hh5PJhpH7LmYh1UvxXPj2T4f
fezj5egj7zOxJuu9Fvkw5v3E+sSVD6LFkrcSHcGtNxMt2z3mcV+x6Y1Ev4g9
EdfH/l6P3MTejhwY9mHkxr9H4x7zPN5LrHP28U6MxbZ3oyXGf1eS/zYt/33Y
jyIHXvbaw/uVD+/r8Pgq0RQs+THRC+rsp2gx4ItE77Dq5+jDic8T7SP2ZcTJ
9U2iWdj5Q2K9kffrWIfYZ4k+Mv/7RPsY90+iKVjyX6I1mPF7okFY9VuiX5w/
nQ6f+fDYcnj8mmgcsX8jB/NHTa1tvPkjcmDS34m/9Vnvr0SzOP8z4pz/EtdK
3u8SvwHs9du4Ps5HSd0ja4yT6g5+TJTqMmZMnNpS62OlOoVtk6T2YcOYqfYR
Gzs1Tq7xUn3EsP+lfmPIO27qOsTGSDWR+dOm2oET06W2ODR9aos9k6fagVUz
Dv98R6Ifo6XeJ0ydIjWOSZOlGsec0VPjrDdp6t6JTZNa/6w9U2o+zJg6tbaJ
TZmaD8+mSm2JzZLqDiYtnlpXvPtLpLa8v0mqO1hST3UEYzqpXlBPtVTjGNdN
7cOAWVNzE2ukzsPIPLWucC5L7cPLdmofedPUNVmvSM2HN3OmOoIZc6W2mFSl
OoU3/VRHOH8m3tOthkeZ6hqxeVN9wYBeam5ig9Qc+DR3am5sa6Way77nSP0O
sY/ZUsdi6uypLbEJU39/8N40U6+P+fOlrolJC6W6gyWLpDqCMUsP//zJsP10
eCyYahzjlknto44XSPWO2KKp8zByydTnxv+narHUPp7rUql95F04dU3WWzY1
H66sluoCfqye2uLTiqlmYckKqe5wPnPqu8Y7tHyqWcTmT70+9rdcam5iK6Xm
wKo1UnNj3jyp95jnsWpqzbOPlVPHUverpLbEJkj9DcH9HT+1RjlfMzUfXm6Y
6gveYBU1Nnq8C7TU7vqpNmHPVtGHB+ul2kdsg9Q4uTZOtRLnNk81jrwbpa5D
bN1UK5m/c+p7gB+7RItPu0aLT9umuoNhp6TWD+/7qdHybm4XcezZJtUy5pyc
WofM2Tr2Tmyn1HvE2pulWsled0y9X8S2j3w4t0O0xE6LNamVTVO/B8zfLfaL
nfukmoIl+6Vag0N7ppqFc3unWsa4w1LfFbzZK+LE9o952HlIqokYdkD04eih
0cf8fWNN1jsi1RfsOSG1PnHlxGix5NhUdzBmj1Q32d/ucR2cH51qDbYdleod
50dGbs6PiTi5Torc3PdNUt8F7tHxqXXOPo6LNTk/PK6bvT6b+p7xrO5MrTfq
7O7UeuD9PSvVFCy5MNUpzLgoWmrrjFTvsOri6MODEan2ETsz4uQ6J9Us7Lwg
td7Ie3asQ+z0eObMH5n6DcCSa6LFj2ujxafLUv3CkrVTv9n8Flgrtf44vzzi
2HZpqmXMuT7VMuy5JPZO7OrU7xBrn5/qL3u9KtUyYldEPsy7Mlpid8W95D6e
l/ptYP51sV/Wuy3VFCy5N3Wv7P2+aNcZHrekeodV90cfNX1zqn3Ebo04ue5I
NYtneU88Q/LeHusQuynVR+Y/kVpX1OWT0WLJU9Fi1UOpNm0Q63NfMeWGuGeY
+nDEce7BVLOYc2PEWe+B2Duxx1PfV9Y+N94F7tFjqa4ReyTy4dmj0RI7eHjM
kFqfz6W+vzi0TX3ozfAYe3i8mOoUrrycagrevJVab9TfC6neMe7t6MOM5yMf
sVdiHoa9kWol9rwafZj6ZvSR96VYk/VeT3WWOe9Ebrz5PNUXLHkv1SYM+yDV
FAx7P/o4/yq1bjHms7h+5r8b+Zj/UapfWPVF5Ma5T4fHQTHn44gfODw+jHWY
81pcB3v9Muax3texJvZ8n+oOhv2YagrG/JH6bcDp71L9Ytyf0Ucdf5tqGbGf
Yh5G/pb6zeA783P04eXv0UfeH2JN1vsr8uHKGHVrEj/GrNvi03+pZmHJv6nu
cM47gVn49E+qWcS+ietjf39HbmKj1M2BVbxT5Gb+wnWfJfd+9Lq1zT5GrTuW
d3m0ui2xcequiSvj1XUHq4q69UadTVDXJiyZsG6LJRPVtQaHxq87j3FT1q09
aut/dccyboq6lhGbrK6PeDN53ZbYJHU9xdGJ6+bmfKq6+bBh6rotxsxS93uA
JdPW9Qhvpq/rF65MV7eP87SuU9T6NHVzMGeGumPxaca6Ld+cWevmxr9J6+6L
fdfq9mHhTHXHYurMdVv29Gvq9493KKk7lrXHrXu/udfNujZhSatuiyXtutbg
UFbXOMZVdb+LuJLXHcu4ft3f7sR6dZ8bf+8s67bEunU95bl26ubmfFA3H67M
VrfFnvnrmoIfc4RZ+DFXXbOwZ866fZw36trKXmevm4M5c9cdi0nz1G2p6QXq
5sa8et1nwvwF6/Zh3rx1x2LVfHVb9vRLai1yfxeqO5b3fpG67z5uLVHXEexZ
evjnT1K9WamuHdTW4nVdY9zKdfvwYLG6xhFbpu48bFuhrkGYt2zdPrxcsW4f
eZesuyaerVI3H/asW9cU/FivbotPa9Q1C3tWr2sK54vWvQ72sVpd44htWNca
PFi1bm5ia9bNgVXr182Nc8vXNZd9r1P3vWQfa9Udy71cu25LbL+6NUZ9LFf3
+pi/Ud018WmzugbhyhZ1TcGb7eu+31iyaV3vGLdD9OHEJnXtI7ZlzMPLbePb
iElbRR92bhd95N081mS9HSMfPu1V1xGM2TtaHNq1rlNYsktdjzjft64pXOfO
dV0jtnHd62N/O0VuYrtFDnzaJ3Izf4O695jnsWdd19jH7jEWM/aIltjWcU2Y
fUBds/Dp0rrvPe/ywXU9wqFD6/qCK8fUrRPq7KC6xjHu2OjDiQMjH7HDYh5G
HlXXIPw7PPqw7ejoI+8hsSbrHRf58On0uo5gzIhoceikuk5hyYl1PeL8qGy4
1vBIh8cJdV0jdlZdX7Dh+MhN7OTIgU9nRG5MOrKus+z7tLqusY9TYizfqFOj
JXZJXVO4j0fE9TH/7FgTw86v6xEOXVjXF1y5oq4d1Nx5dY1j3JXRhwfn1vWO
2EUxDyMvi+fGt/fi6GMfl0cfeS+INVnvqsiHPTfXNQU/bokWn66raxb2XDs8
lorz/evWJe/NyLrG4c05cX3s7+rITez6yIFVt0ZunDsz7jHP46a6RrCPG2Is
dX9jtMT4TcbfL///n89FDmy7PVocuqeuQbhyX11T8ObRunZQW3fX9Y5xj0Uf
HtxV1z5i98c8vHy4bo1h3gPRh52PRB957401We+huvYx5/HIjUMv1nUEn56s
6xeWPF3XLxx6Kvo4f6WuLxjwQl2bmP9E5GP+s3WdoqZfitw493zd3/rMeS7i
nD8T6zDnwbgO9vpyzGO9V2NNTHqzrjtY8nZdRzDmo3gP8OONusYx7uPow4DX
63pH7J2Yh5Ef1LUP49+NPrz8MPrI+1asyXqfRD68+bauI5jxXbSY9EVdp/Dm
87qOcP5DXZuw5LO6rhF7La6P/X0auYl9GTnw6fvIzfwLGsPaGR7zDo9v6rrA
Pr6KsdT619ES+zHWxJif6xqET9M2rDHq4Ne6fmHPb9Hiyh91TcGbX2Ie40Zp
6Ah19nuMZdx/dV0j9k9dv6itf6Ml9lddQ7Hzz8jN+agN8+HKaA1b7Bm/oSn4
MUZDs/BjrIZmYc+YDfs4n6ihKdT96A1zMGfshmMxaZyGLUZO0DA35v0d+2Lf
Ezbsw7xxG47luzRew5Y9vV/3+8c79L+GY1n7p7jf3OvJG/qFPVM0bHFlqoam
4M1kDV1j3IzDP98xbO8cHlM2HMu4GRr6Qmy6hs8Ne6Zv2BKbpqGhPNepG+bm
fKaG+XBl5oYt9jQbmoIfszY0Cz+ShmZhT61hH+eTDv98Td29ztIwB3PShmMx
qd6wpaZbDXNj3sQNnwlO5w37MK/RcCxWZQ1b9vRe3Vrk/rYbjsWwTsMWe/oN
HcGeQUNf8Ib6wA5qq2zoGuOoGfrwoNfQOGKzNZyHbXM1NAjzZm/Yh5dzN+wj
b9VwTdabr2E+7Fm8oSn4sUTDFp8WamgW9izY0BTON2/43vO+L9DQOGKbNawx
YvM3zE1s4YY5sGrJhrlxbs6G5rLvxRq+l+xjkYZjuZeLNmyJbRFrUh9zNLw+
5i/d0DgcWr6hZTi0QsMWY1Zq6Av2LNfQOMYt29A1zldsOJZxazQ0iJpYraFl
WLh6w5bYKg09xdGVwzXO12w4D7fWbmgQVm3c0BdcWa+hQVi1QUNTMGaZhtfB
ntZt6Brj1mmYg/P1G85jzoYN52HAJg1z49lSDe8x92XThn08m7Ua7os9bdRw
Hnuizvj7Cd/vLeMe49YJDeuBd3+bhn5h0nYNPcKYXRv6Ra1s3dA1xu0+PCZp
WH9bRT5i28c8TNq5oVk4tEP0Yecu0UfebWNN1tsj8mHPgQ1NwZKDosWbfRoa
hFV7N/SL827D+uO3w14NjSN2aENrMGbPyE1s38iBSQdHbpzbqaG/7PuAht8k
9rFfjMWz/aMldnxDs7iPO8b1Mf+wWBOTjmroFyYd09AjjDm5oR3s/ciGrjHu
lOgrhscRDR0kdmzMw6QT47nh0HHRxz5Oij7yHh1rst6pkQ9jzm1Yn7hyXrRY
ckZDR3BrREPLqpjHfcWm0xv6RezwuD72d1rkJnZm5MCw8yM3/h0S95jncU7D
OmcfZ8VYbDs7WmIXNvQRzy5u6A4mzT/8e8sbw/bN4XFZQ8tw6IqGvuDKdQ3t
oOYubWgc466PPmy4JPIRuzLmYdU1DS2jzq6KPhy9NvrIe3msyXo3RD7subOh
KVhyV7R4c0tDg7Dq5oZ+cX5RXB/XdlND44jd27CeMebGyE3s1siBSXdHbkwa
2dB39n3H8Fg19nFbjMWz26Ml9nbDeqMmro7rY/59sSYmPdTQIwx7pKFHuPJ0
Q6+x5MGG3jHumejDgwcaGkfs0ZiHkU82/JbwnXks+rDtqegj78OxJus9G/mw
57WGpuDH69Hi04sNzcKeFxqawvlbDZ3iOp9vaByx++P62N9zkZvYS5EDq3i3
dov598Q95nm82tAI9vFyjKXuX4mW2BMNXeY6323oEVaNkVkP/F7+oKFBuPJR
Q1Pw5suGdlBb7zf0jnFfRR8evBf5iH0c8/Dy84Y1hnmfRB92fhF95P0w1mS9
ryMf9vzS0BT8+DVafPq+oVnY811DUzjnN9+q8V35tqFxxP5oaA0efBO5if0Q
ObDqt8iNc5819Jd9/9zwm8Q+foyx+PpTtMRGzzSL+/hpXB/z/4w18enfhgbh
yiiZpuDN2Jn1hiX/NPSOceNk9uHB3w3tIzZq5jy8HDPzuWHSaJl97GOszD7y
/hdrst64mfmwZ9JMU/BjsswWnybMNAt7Jsg0hfN3GtYl7834mcYR+yuuj/2N
l5mb2P8yc2DV5Jm5ce73uMc8j0kyjWAfE2WOpe4nzmyJ8e9i8O+V8u9UPd6w
LnmPp8w0DoemyzQIV2bINAVv+OdJ2EFtTZvpHeP4Z0z04cE0mfYRmzFzHl7O
mlljmDdTZh921jL7yDt95pqsV8/Mhz1Fpin40cts8amVaRb2NDNN4XzFzFri
3c8yjSO2QmbtEWtk5iaWZ+bAqjIzN87Nkukv++5m1jz7aGeO5f51MltiK2Wu
SU3MnHl9zK8yjcOhOTItw6E5M1uMmTvTF+yZPdM4xs2W6Rrnc2WOZdxCmb7z
Hi2QaRkWLpjZEps301McnSczN+cLZ87DrUUzrcGhZTNrFWOWyHQEt5bKNAhv
BpnXwZ4WzzSOcYtl5uB8ycx5zFk6cx51vFxmbqzqZ95j7svymX08m0Uy98We
lsmcx56myHzfeUdXzrzHmLRnZr1RE6tlWoZDa2T6givrZ5qFH6tmGse4DTL7
qLlVMvMRWzNzHlatm2kZdbZWZh+OrpfZR97VM9dkvQ0z82HMVpnfA1zZOlos
2TTTEdzaJNMyzqfKrD9+I2yc6Rex7TL9wpuNMnMT2ywzB4ZtE7nxb51M39n3
lpmeso/NYyy2bREtsT0y/eI+rp15fczfPtbEoZ0zLcOhXTN9wZV9Mu1g7ztl
Gse4faNv6uGxY6ZxxHaLeVi1Vzw3nu3u0cc+9o4+8u4Sa7LefpEPYw7PrE9c
OSJaLDko0xHcOjDTsuljHvcVmw7I9IvYDnF97G//yE3s4MiBYUdGbvzbNu4x
z+OwzDpnH4fEWGw7NFpi/LtrB4a5R2daiW1/tYbOD48Rw+OkTFOw5IxML6iz
M6PFgBMyvcOqs6IPJ47PtI/YiREn1ymZZmHniMx6I+/JsQ6x4zJ9ZP7pmfYx
7pJMU7DkskxrMOO8TIOw6txMvzjfpTl8RsNjouFxTqZxxC6NHMy/IrO28eb8
yIFJF2f+1me9i4bHfHF+QcQx7Oy4VvKelvkNYK+nxvVxfnnskTWuy3QHP27N
dBkzbouWWr8m0ylsuz36sGFkpn3Ero04uW7I9BHDbsn8xpD3+liH2NWZJjL/
gUw7cOLBaHHooWix565MO7Dq4ejDjyvjPmHq3RHHpDszjWPOVRFnvTti78Tu
z6x/1n4k8mHGfZm1TeyeyIdn90ZL7LFMdzDp68y64t3/Jlr+N6UnM93Bkqcz
HcGYlzK9oJ6eyDSOcS9HHwY8HrmJPRPzMPKFzLrCuWejDy9fjD7yPhVrst4r
kQ9v3s10BDPeixaT3sh0Cm9ez3SE813jPZ14eLyW6RqxDzN9wYBXIzexNyMH
Pr0fubHt+Uxz2fc7md8h9vFWjMXUt6MldnPm7w/em+fi+pj/UayJSZ9luoMl
X2Q6gjHfD49jhsexw+PTTOMY90P0UcefZHpH7MuYh5HfxnPDnq+ij+f6XfSR
9/NYk/V+jHy48lemC/jxd7T49GumWVjyS6Y7nD+a+a7xDv2caRaxj+P62N9P
kZvYb5EDq/6J3Jj3QdxjnsefmTXPPn6PsdT9H9ESuynzNwT398bMGuX838iH
l2M39QVvsIoao4Z4F2ip3TGa2oQ9vB/04cHoTe0jNtbwzxdm5hq3qZU4N2FT
48g7TtN1iI3W1ErmT9P0PcCPaZu2+DRd0xafJmvqDobN1bR+eN/nbtrybk7e
NI49kza1jDlzNq1D5kzSdO/Epm56j1h7gqZWstepmt4vYlM0zYdzUzZtic3T
dE1qZfym3wPmT990v9g5a1NTsCRpag0OzdTULJybpalljMubvit4M3PTOLG0
6TzsbDY1EcPqTftwtNW0j/m1pmuyXqepL9gzW9P6xJXZm7ZY0m/qDsbM2NRN
9jdD0+vgvNfUGmwrmnrHebdpbs7LpnFyzdE0N/d9vKbvAvdo0LTO2UfVdE3O
202vm73uFg7xrDZsWm/U2cZN64H3d8GmpmDJEk2dwowlm7bU1vxNvcOqpZr2
4cF8Te0jtkDTOLkWbmoWdi7etN7Iu1DTdYjNGz4yf+Wm3wAsWaVpix+rNm3x
admmfmHJKE2/2fwW+C+z/jhfrmkc25ZpahlzVm9qGfYs3XTvxFZq+h1i7cWa
+steV2xqGbHlm+bDvBWatsQ2anovuY+LNv02MH+1pvtlvfWamoIlmzbdK3vf
rGk76vBYp6l3WLV59FHTaze1j9i6TePk2qCpWTzLTZo+Q/Ku33QdYms19ZH5
OzatK+pyp2ixZOdosWrr4TFmU3tGjd9YmLJG03uGqdtEHOe2bGoWnq3ZNM56
W8Teie3Q9H1l7UWavgvco+2bukZs28iHZ9tFSyxr+juG+tw93l8cmmT4W3Yk
Hg2PvZo6hSv7NDUFbw5uWm/U355NvWPcIdGHGXtEPmL7xjwMO7CpldizX/Rh
6kHRR969Y03WO6Cps8w5NHLjzfFNfcGSw5vahGFHNjUFw46IPs5Palq3GHNc
XD/zD4t8zD+6qV9YdULkxrljh0cj5hwTcc6PinWYs39cB3s9Meax3smxJvac
3tQdDDujqSkYc37TbwNOn9bUL8ZdEH3U8alNLSN2ZszDyHObfjP4zpwVfXh5
XvSRd0SsyXoXRj5cuappTeLH1dHi06VNzcKSS5q6wznvBGbh08VNzSJ2Slwf
+7sochO7LHJg1cjIzfwv4lly769sWtvs4/IYy7t8RbTEro01ceX6pu5g1atN
6406u7GpTVhyU7RYcktTa3DohpjHuLub1h61dXOMZdxdTS0jdkdTH/HmzmiJ
3dbUUxy9NXJzfk/kw4Z7o8WYx5p+D7Dk/qYe4c2DTf3ClQeij/OnmjpFrd8X
OZjzUIzFp4ej5ZvzeOTGv9tjX+z7iejDwkdiLKY+Gi17Oqfp94936MkYy9rX
xf3mXj/f1CYseSFaLHmpqTU49FxT4xj3ZtPvIq68GGMZ90bT3+7EXovnxt87
X4+W2CtNPeW5vhy5OX8r8uHK29FizydNTcGPd5uahR/vNzULe96LPs6fHR5b
xV7fiRzM+SDGYtKH0VLTn0ZuzHs6ngk2fxZ9mPdRjMWqj6NlT2c3rUXu7+cx
lvf+y6bvPm5929QR7Pm+qS9481tTO6itb5q6xrjfow8Pvm5qHLEfYh62/dLU
IMz7Mfrw8tfoI+93sSbr/RH5sGe0lqbgx+gtW3z6p6lZ2PN3U1M4/yqug338
1dQ4YmO1tAYP/ozcxP6NHFg1RsvcOPdzU3PZ96gt30v28V+M5V6O0rIlVmtZ
Y9THT3F9zB+75Zr4NH5Lg3Blwpam4M3kLd9vLBmvpXeMm6JlH06M29I+Yv9r
OQ8vJ23pICZN1LIPOydr2UfeCVquyXpTtsyHTzO1dARjZm7Z4tC0LZ3Ckmla
esT5rC1N4TqnbukasXFaXh/7m6plbmLTtcyBT7O0zM38MVveY57HjC1dYx/T
txyLGTO0bIlN3PKaMDttaRY+Ldvyveddzlp6hEOtlr7gSn/452ea1lmjpXGM
q1r24US9ZT5iect5GFm0NAj/2i37sK3Xso/6a7Zck/UGLfPh03wtHcGY+Vu2
ODRnS6ewZI6WHnHO35n5Z3j8bwizt3SN2EItfcGG2VrmJjZXyxz4tEDL3JjU
beks+563pWvsY+6WY/lGzdOyJbZMS1O4j52W18f8hVuuiWGLt/QIh5Zs6Quu
rNDSDmpusZbGMW7Fln14sGhL74gt1XIeRi7X8rnx7V26ZR/7WL5lH3mXaLkm
663UMh/2rN3SFPxYp2WLT6u1NAt7Vm1pCudJy7rkvVmlpXHEFml5fexv5Za5
ia3eMgdWrdsyN84t2PIe8zzWamkE+1ij5Vjqfs2WLTF+k/H3S37XrtcyB7at
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
v5ejJfZbrElNPBbXx/w3c43DoXdzLcOh96LFmA9yfcGed3KNY9zbua5x/n6M
Zdxnub7zHn2SaxkWfhotsY9yPcXRDyM355/HPNz6MtcaHPoxt1Yx5ptcR3Dr
u1yD8OatuA729HWucYz7KnJw/m3MY873MY86/ilyY9UbcY+5Lz9HH8/mi9gX
e/oh5rGnu3Lfd97R3+MeY9KMbeuNmvgr1zIc+ifXF1wZo61Z+PFnrnGMG7Nt
HzX3R+Qj9m/Mw6rR2lpGnf0XfTg6ets+8v4da7LeWG3zYcxEbb8HuDJx2xZL
xmvrCG6N29Yyzu/JrT9+I4zT1i9ik7X1C2/Gbpub2Phtc2DYJG1z49+obX1n
3/9r6yn7mKDtWGybsG1LbIa2fnEfR2l7fcyfvO2aODR1W8twaNq2vuDKLG3t
YO9TtTWOcbO27bt3eEzZ1jhi07Wdh1UztX1uPNvp2/axj5nb9pF3mrZrsl6t
bT6M6bStT1zptm2xJGvrCG412lr2UOyD+4pN9WH/A7mxKdpeH/tL2ubGtmbb
HBhWtM2Nf5O2vcc8j3bbOmcfrbZjsS1v2xIbMcPwmzg8quFRtrUS276dbVgj
w+Po4TFnW1OwZIG2XlBnC7ZtMWD2tt5h1UJt+3Bitrb2EZujbZxcc7c1Czvn
b1tv5J2r7TrEBm19ZP58be1j3NJtTcGSZdtagxmLtTUIqxZt6xfn03SGz4h3
Yngs0tY4Ysu0zcH85dvWNt4s3jYHJi3V9rc+6y3Z1izOl2gb53zhttdK3nnb
fgPY6zxtr4/z5drukTVWa+sOfqzb1mXMWK9tS62v0tYpbFu/bR82rNzWPmKr
to2Ta422PmLYOm2/MeRdve06xFZqayLzt2hrB05sGS0ObRUt9mzU1g6s2jr6
8GOFtvcJUzduG8ekDdsax5wV28ZZb4O2eye2edv6Z+1tIh9mbNa2tolt0jYf
nm3atiW2XVt3MOmUtnXFu39qtPy3lnds6w6W7NzWEYzZq60X1NMObY1j3N7R
hwHbR25iu8Q8jNyjbV3h3K7Rh5d7Rh95d4o1WW+fyIc3h7Z1BDMOixaTDmjr
FN7s39YRzqft+J7eOjz2a+sasSPb+oIB+0ZuYgdGDnw6PHJj2+5tzWXfh7T9
DrGPg2Isph4cLbG12/7+4L3ZLa6P+UcPj7StSce3dQdLTmzrCMaMGB794VEN
j+PaGse4M6KPOj62rXfETop5GHlaPDfsOTn6eK6nRx95T4g1We/MyIcrF7V1
AT8ujhafzm1rFpac09Ydzrdt+67xDp3d1ixix8T1sb+zIjex8yIHVl0SuTHv
iLjHPI8L29Y8+zg/xlL3F0RLbK22vyG4v2u2rVHOL418eHlNW1/wBquoMWro
lmip3avb2oQ9t0YfHlzV1j5iIyNOruvaWolzN7U1jrzXxjrErmxrJfPvi/cA
P+6PFp8eiBaf7mjrDoa917Z+eN/fj5Z3886IY8/tbS1jzrtt65A5t8Xeid0b
94i1b2xrJXu9p+39InZX5MO5u6Ml9kGsSa3c0PZ7wPwHY7/Y+XhbU7DkybbW
4NAjbc3CucfaWsa4F9q+K3jzaMSJPRXzsPO5tiZi2NPRh6PPRx/zn4g1We+l
tr5gz1tt6xNX3o4WS15v6w7GPNzWTfb3UFwH56+2tQbbXmnrHecvR27OX4s4
ud6J3Nz369u+C9yjN9vWOft4I9bk/MW4bvY6Xcf3jGc1dsd6o87G7VgPvL+f
tjUFS74dHke1NeO7aKmtj9t6h1XfRx8efNTWPmKfRJxcn7c1Czu/bltv+PdZ
rEPsw3jmzP+j7TcAS/6MFj/+ihaffmrrF5Zc3vabzW+By9rWH+c/Rxzbfmxr
GXP+aWsZ9vwQeyf2e9vvEGt/1dZf9vpbW8uI/RL5MO/XaImN0/Fech+/bPtt
YP7fsV/WG6OjKVgyfse9svcJOrZXDI/ROnqHVRN27KOmR+1oH7HRO8bJNVZH
s3iW43V8huQds+M6xEbp6CPzp+xYV9TlVB1bLJm6Y4tVE3e0aWTsifuKKf/G
PcPUSTrGcW6ijmYx57+Is97/Ou6d2BQd31fW/iLeBe7R5B1dIzZpx3x4NlnH
ltizbX/HUJ/Td3x/cej24Z9XGR6rDo+ZOjqFK7N0NAVvso71Rv3N2NE7xjU7
9mHGDB3zEZu14zwMq3e0EntqHfswtdGxj7wzd1yT9dKOzjKn1TE33gw6+oIl
7Y42YVi3oykY1unYx/kcHesWY6qO18/8vGM+5vc6+oVVs3XMjXP94Z+fiXtW
doxzXnRchzlJx+tgr7N3nMd6c3ZcE3vm7egOhs3f0RSMWazjtwGn5+noF+MW
79hHHc/d0TJiC3Sch5GLdPxm8J1ZsGMfXi7asY+883Vck/WW6JgPV1bsWJP4
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
fc/rY36v55qYNOjpDpbM3tMRjJlv+OfXh+0bw6PqaRzj5u/ZRx33e3pHbI6e
8zBynp7PDXvm7NnHc523Zx95Z+u5Just0DMfrizZ0wX8WKpni0+L9DQLSxbu
6Q7nk/V813iHFuppFrGy5/WxvwV75ia2aM8cWLV0z9yY1+15j3keS/Ssefax
WM+x1P3iPVti/xX+huD+/ltYo5wv0zMfXq7S0xe8wSpqjBriXaCldlfqaRP2
8H7Qhwcr9rSP2Mo94+RaraeVOLdWT+PIu2rPdYit0NNK5m/W8z3Aj82jxact
osWnDXq6g2GH96wf3vcjouXd3LBnHHvW72kZcw7rWYfMWa/n3olt2vMesfaa
Pa1kr5v0vF/ENuqZD+c27tkSOzLWpFbW6Pk9YP6WsV/s3L6nKViyY09rcGib
nmbh3HY9LWPcnj3fFbzZNuLEdh4eE/a0c/eeJmLYLtGHo3tEH/N3iDVZb++e
vmDPwT3rE1cOiRZLDujpDsZs3dNN9rdVXAfn+/W0Btv27ekd5/tEbs73jzi5
Do3c3PfVe74L3KODetY5+zgw1uR8r7hu9vpAz/eMZ3VNz3qjzq7rWQ+8v8f1
NAVLTu3pFGacFi21dUxP77Dq9OjDg6N72kfs2IiT64SeZmHnKT3rjbzHxzrE
jopnzvzze34DsOSCaPHjwmjx6cyefmHJcj2/2fwWWLZn/XF+VsSx7YyeljHn
4p6WYc+I2Dux83p+h1j75J7+stdze1pG7OzIh3nnREvs2riX3MeTen4bmH9R
7Jf1ruppCpbc0HOv7P3GaJcfHlf09A6rboo+avrynvYRuzLi5BrZ0yye5fXx
DMl7daxD7LKePjL/7p51RV3eEy2W3BstVt3a06aVY33uK6ZcEvcMU2+LOM7d
0tMs5lwacda7OfZO7K6e7ytrnxjvAvfozp6uEbs98uHZHdES263n7xjq88Ge
7y8OrT/8LfvHsP1zeDzS0ylceaynKXjzbM96o/4e7ukd456LPsx4KPIRezzm
YdjTPa3EnieiD1OfiT7yPhprst5TPZ1lzvORG2/e6ukLlrzY0yYMe7mnKRj2
UvRx/m7PusWYN+P6mf9C5GP+az39wqq3IzfOvTE8do05r0ec81eHx04x58m4
Dvb6TsxjvfdiTez5qKc7GPZJT1Mw5uue3wac/rCnX4z7Jvqo4w96Wkbs05iH
kV/2/Gbwnfks+vDyq+gj78exJut9G/lw5beeNYkfv0eLTz/2NAtLfujpDue8
E5iFT9/3NIvY+3F97O+7yE3sp8iBVX9EbubPVvosufe/9qxt9vFzjOVd/iVa
Yn/FmrjyT093sGrW0nqjzv7raROWjFLaYslopdbg0L8xj3HjltYetTVq6VjG
jVNqGbGxSn3Em7FLW2JjlHqKo6OX5uZ8vNJ82DB+aYsxk5d+D7BkwlKP8Gai
Ur9w5X+lfZxPXeoUtT5BaQ7mTFw6Fp8mKW355kxRmhv/xizdF/uesrQPCyct
HYupk5W27OmLnt8/3qGpSsey9t9xv7nX05fahCUzlLZYMlOpNTg0XalxjKuX
fhdxZcbSsYxLS3+7E6uVPjf+3pmUtsRmKfWU5zpzaW7OG6X5cCUrbbGnLDUF
P1qlZuFHu9Qs7MlL+zifttRW9toszcGcTulYTOqWttR0vzQ35k1T+kyYX5X2
YV5ROhareqUte/q8Zy1yfwelY3nvZy9993FrnlJHsGe+Ul/wZtFSO6ituYd/
fqXnuMVK+/BgzlLjMG/+0nnYtnCpQZi3QGkfXi5S2kfeeUvXZL3FS/Nhzwql
puDHiqUtPi1dahb2LFVqCudzlF4H+1iy1Dhiq5RagwdLlOYmtkxpDqxaqTQ3
zi1Uai77Xr70vWQfy5aO5V4uV9oS27G0xqiPBUuvj/mrlq6JT2uWGoQra5ea
gjcblb7fWLJGqXeM27i0DydWL7WP2Dql8/Byg1IHMWnd0j7s3LC0j7xrla7J
epuU5sOnbUsdwZjtosWhLUqdwpLNSz3ifIdSU7jOzUpdI7Za6fWxv01LcxPb
MnLg0/aRm/krl95jnsc2pa6xj61iLGZsHS2x9UqvCbN3LjULn84ofe95l3cr
9QiH9ij1BVf2L60T6mzXUuMYd0D04cQukY/YnjEPI/ctNQj/9oo+bNsv+si7
e6zJegdGPnw6qtQRjDk6Whw6tNQpLDmk1CPO+Tsz/wyP/w3h4FLXiB1X6gs2
HBS5iR0WOfDpmMiNSfuUOsu+jyx1jX0cHmP5Rh0RLbERpaZwH/eO62P+8bEm
hp1c6hEOnVrqC66cXWoHNXdSqXGMOyf68ODEUu+InRbzMPLMeG58e0+PPvZx
VvSR95RYk/XOGx5zldpzeakp+HFFtPh0UalZ2HNhqSmc71Ral7w3F5QaR+yE
uD72d37kJnZx5MCqKyM3zh0b95jncVmpEezjkhhL3V8aLTF+k/H3S37XXhU5
sO3qaHHo+lKDcOXGUlPw5o5SO6it60q9Y9yd0YcH15baR+ymmIeXt5XWGObd
HH3YeXv0kfeGWJP1bi21jzl3RW4ceqTUEXy6p9QvLLmv1C8cujf6OH+81BcM
eLjUJubfHfmY/0CpU9T0o5Eb5x4q/a3PnAcjzvn9sQ5zbonrYK+PxTzWeyLW
xKRnSt3BkudKHcGYV+M9wI+nS41j3GvRhwFPlXpH7PmYh5Evl9qH8S9EH16+
En3kfTbWZL3XIx/efFDqCGZ8GC0mvV3qFN68VeoI5x+X2oQlb5a6RuzJuD72
90bkJvZO5MCnjyI380/pD2tneBTD4/1SF9jHuzGWWn8vWmKfxJoY81mpQfg0
Yd8aow6+KPULe76MFle+LjUFbz6PeYz7qdQR6uyrGMu4H0tdI/Z9qV/U1g/R
Evu21FDs/CZyc/5z5MOVX6LFnn9LTcGP30rNwo8/Ss3Cnt+jj/PR+5pC3f8a
OZjzZ4zFpL+ixcj/IjfmfRf7Yt+j9O3DvL9jLN+lf6JlTy+Vfv94h0Ybjj+3
dO1P435zr8fu6xf2jNO3xZXx+pqCN2P1dY1xkwz/PHLYXjM8xu07lnET9/WF
2P/6PjfsmahvS2yCvobyXMfvm5vzSfvmw5XJ+rbYM31fU/Bjir5m4cdUfc3C
nin79nE+Zl9n2evkfXMwZ+q+YzFpmr4tNT1D39yYN0bfZ8L8Gfv2Yd60fcdi
1XR9W/b0Ymktcn9n6jsWw2bu22JP2tcR7Gn09QVvqA/soLaSvq4xjpqhDw9q
fY0jlvWdh23tvgZhXrNvH152+vaRt953Tdbr9c2HPXP1NQU/5u7b4tOgr1nY
U/U1hfO1+r73vO/9vsYRW7NvjREr++YmNlvfHFg1T9/cOJf3NZd9z9n3vWQf
s/cdy72co29LbO2+a1Ifrb7Xx/z5+hqHQwv1tQyHFu7bYsyifX3BngX7Gse4
Bfq6xvkifccybum+BlETS/a1DAuX6tsSW7yvpzi6WLjG+TJ95+HWcn0NwqrV
+vqCKyv2NQirVu5rCsbM3/c62NMKfV1j3PJ9c3C+Ut95zFml7zwMWL1vbjyb
t+895r6s0bePZ7Ns332xp1X7zmNP1Bl/P+H7vU7fe4xbB/etB9799fv6hUkb
9vUIY7bs6xe1sl5f1xi3VfRRf+v2zUdso77zMGnz4Z9H7evQxn37sHOL6CPv
Bn3XZL2tIx/27NLXFCzZNVq82b6vQVi1XV+/OJ+lb/3x22HbvsYR26OvNRiz
TeQmtkPkwKTdIjfObdrXX6zdue83iX3sGGPxbKdoiR3U1yzu4yZ9r4/5e8aa
mLRvX78waf++HmHMYX3tYO/79HWNcYdH36zDY+++DhI7IOZh0iHx3HDowOhj
H4dGH3n3izVZ74jIhzEn9q1PXDkpWiw5pq8juHV0X8vqMY/7ik1H9fWL2F5x
fezvyMhN7NjIgWEnR2782z3uMc/jhL51zj6Oi7HYdny0xE7t6yOend7XHUwq
q6E/w/aZ4XFmX8tw6Oy+vuDKRX3toObO6Gsc4y6OPmwYEfmInRPzsOqCvpZR
Z+dGH45eGH3kPSvWZL1LIh/2XNPXFCy5Nlq8uaKvQVh1eV+/OD8tro9ru6yv
ccRu6FvPGHNp5CZ2ZeTApOsiNyad39d39j2y77+fwT6uirF4dnW0xJ7rW2/U
xHlxfcy/MdbEpFv7eoRht/f1CFfu6+s1ltzS1zvG3R99eHBzX+OI3RHzMPKe
vt8SvjN3Rh+23Rt95L0t1mS9ByIf9jzV1xT8eDpafHqkr1nY83BfUzh/tq9T
XOdDfY0jdlNcH/t7MHITezRyYNUzkZv518c95nk8OTw2i308FmOp+8ejxY+7
+7rMdb7Q1yOs+q1vPfB7+eW+BuHKq31NwZt3+tpBbb3U1zvGvRt9ePBi5CP2
WszDy7f61hjmvR592Pl29JH3lViT9d6LfNjzeV9T8OOLaPHpo75mYc+HfU3h
nN98S8R35YO+xhH7uq81ePB+5Cb2ceTAqi8jN8692ddf9v1Z328S+/gkxuLr
p9ES+7WvWdzHN+L6mP9NrIlPP/Q1CFd+6msK3vzZt96w5Pu+3jHur+jDg+/6
2kfs55iHl7/Hc8OkX6KPffwRfeT9MdZkvb8jH/aMWWkKfoxV2eLTKJVmYc9/
fU3h/Pm+dcl7829f44h9G9fH/v6J3MRGrcyBVWNX5sa5r+Ie8zzGqDSCfYxW
OZa6H72yJfZG/DMh/p2qu/rWJe/xuJXG4dD/Kg3ClYkrTcGbqSrtoLYmrPSO
cfy7uvThwQSV9hGbpHIeXk5RWWOYN2llH3ZOWdlH3okq12Q9/t1f8mHPrJWm
4EetssWnGSrNwp7pK03hfJHKWuLdn67SOGILV9YesWkrcxObsTIHViWVuXFu
8kp/2fcslTXPPmaqHMv9m7myJbZo5ZrUxGSV18f8eqVxONSqtAyH8soWY7rD
Pz/R155mpXGMyypd47xdORaHBpW+8x71Ky3DwqqyJdar9BRHi8rcnM9WOQ+3
5qi0BocWqKxVjJm70hHcmrfSILxpVF4He5qr0jjGzVmZg/N5KucxZ77KedTx
gpW5sSqtvMfcl4Uq+3g2s1fuiz3NXzmPPY1T+b7zji5WeY8xaZvKeqMmlqy0
DIeWrvQFV1aqNAs/lqg0jnErV/ZRc4tX5iO2TOU8rFqh0jLqbNnKPhxdsbKP
vEtVrsl6q1Tmw5h1K78HuLJeZYsla1Q6glurV1rG+XiV9cdvhNUq/SK2YaVf
eLNqZW5ia1bmwLD1K3Pj3/KVvrPvdSo9ZR9rVY7FtrUrW2JbV/rFfVyu8vqY
v1Hlmji0WaVlOLRFpS+4sn2lHex900rjGLdD9I0/PDapNI7YljEPq7aN58az
3Sr62Md20UfezWNN1tsx8mHMXpX1iSt7R4slu1Y6glu7VFo2UczjvmLTzpV+
Edu48vrY306Rm9hukQPD9onc+LdB5T3meexZWefsY/cYi217REuM/64k/41s
/vuw+0YOvOS/F8l/v5bYoZWmYMkxlV5QZ8dGiwEHV3qHVcdFH04cVGkfsUMi
Tq7DK83CzqMr6428h8U6xA6s9JH5R1Xax7gRlaZgyZmV1mDGycOjU2nViZV+
YdLmg+EzGh6jDY8TKo0jdkbkYP7ZlbWNN6dEDkw6vfK3PuudVmkW56dGnPPj
41rJe2TlN4C9HhHXx/lZsUfWuKjSHfy4stJlzLgqWmr9gkqnsO3q6MOG8yvt
I3ZhxMl1SaWPGHZF5TeGvBfHOsTOqzSR+TdX2oETt0SLQ7dGiz3XVtqBVbdF
H36cE/cJU6+LOCZdU2kcc86NOOuNjL0Tu6my/ln79siHGTdW1jax6yMfnt0Q
LbE7K93BpPcq64p3//1oeX/vqXQHS+6rdARjHq30gnq6u9I4xj0WfRhwV+Qm
dn/Mw8iHK+sK5x6IPrx8JPrIe2+syXqPRz68eaHSEcx4MVpMerrSKbx5qtIR
zreI93T04fFkpWvEXqn0BQOeiNzEnokc+PRS5Ma2hyrNZd/PV36H2MezMRZT
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
4N+V8m+qNkqsS97j6xONw6FbEw3CldsTTcEb/nsSdlBbtyR6x7j7og8Pbk60
j9gdMQ8v70msMcy7M/qw897oI+9tsSbr3R/5sOeJRFPw48lo8enhRLOw56FE
Uzj/IrGWePcfTDSO2OeJtUfsgchN7JHIgVVPRW6cuzvRX/b9eGLNs49HYyz3
77FoiX0Za1ITd8X1Mf+ZRONw6IVEy3DoxWgx5uVEX7Dn+UTjGPdcomucvxRj
Gfdmou+8R68nWoaFb0RL7NVET3H0lcjN+VsxD7feSbQGhz5JrFWMeT/REdz6
MNEgvHk2roM9vZdoHOPejRycfxDzmPNRzKOOP43cWPV03GPuy2fRx7N5O/bF
nj6OeezpusT3nXf0q7jHmDRZar1RE98mWoZD3yf6giu/JZqFH98kGse436OP
mvs68hH7IeZh1S+JllFnP0Yfjv4afeT9LtZkvT8iH8aMkfo9wJUxU1ss+SfR
Edz6O9Eyzm9IrD9+I/yV6BexcVL9wps/IzexfyMHho2Vmhv/fk70nX2Pnuop
+/gvxmLbaKktsUlT/eI+/hTXx/xxU9fEoQlTLcOhEam+4MqUqXaw9wlSjWPc
1IM/3zhobxoc46caR2zi1HlYNXnqc+PZTpLaxz6mSO0j70Spa7LeNKn5MGbW
1PrEldlSWyyZIdUR3Jo+1bLbYh/LJto0XapfxMZLvT72N21qbmIzpubAsNlT
c+Pf2Kn3mOcxS2qds4+ZUsdi28ypLTH+7dp0Ye6cqVZi2ymNgfODY5HBsUCq
KViyWKoX1NniqS0GzJfqHVYNpfbhxLyp9hGbPzVOrpGpZmHnoqn1Rt4FU9ch
Nk+qj8xfJNU+xrVSTcGSdqo1mFFPNQir0lS/OJ+oPnhGvBODI0k1jliRmoP5
ZWpt400jNQcmNVN/67NenmoW51lqnPNa6rWSd+HUbwB7XSj1+jjvpO6RNUal
uoMfy6e6jBkrpLbU+nCqU9i2YmofNlSp9hFbIjVOrqVSfcSw5VK/MeRdMnUd
Yv1UE5m/VqodOLF2aotD66S22LNKqh1YtW5qH350U+8Tpq6aGseklVONY04v
Nc56K6XundiaqfXP2uul5sOMNVJrm9hqqfnwbPXUltgGqe5g0mGpdcW7f3i0
/G9KG6e6gyWbpjqCMdukekE9bZRqHOO2jT4M2DA1N7HNYh5GbpVaVzi3efTh
5dbRR95NUtdkve0iH97snuoIZuwRLSbtlOoU3uyY6gjnI+q+p1cOjh1SXSO2
T6ovGLB95Ca2c+TAp70Gx1Sptm2Zai773i31O8Q+domxmLprtMSWTf39wXuz
RVwf8/eNNTHpwFR3sOTgVEcw5qjBMdfgmHtwHJBqHOOOjj7qeP9U74gdEvMw
8oh4bthzaPTxXI+MPvIeFGuy3jGRD1dOTXUBP06LFp9OSDULS45PdYfz9VPf
Nd6h41LNIrZfXB/7OzZyEzsxcmDV6ZEb8/aOe8zzOCW15tnHSTGWuj85WmLL
pP6G4P4unVqjnJ8R+fDyglRf8AarqDFq6Ipoqd3zUm3K4v2gDw/OTbWP2PkR
J9dFqVbi3GWpxpH3wliH2DmpVjL/pngP8OPmaPHplmjx6ZpUdzDsxdT64X1/
KVrezWsjjj1Xp1rGnBdS65A5V8Xeid0Y94i1L021kr3ekHq/iF0X+XDu+miJ
vRxrUiuXpH4PmH9r7Bc77041BUvuTbUGh+5INQvn7kq1jHEPp74reHNnxIn9
L+Zh54OpJmLYfdGHow9FH/PviTVZ79FUX7Dn2dT6xJXnosWSp1LdwZjbU91k
f7fFdXD+RKo12PZ4qnecPxa5OX8y4uR6PnJz3y9OfRe4R8+k1jn7eDrW5PyR
uG72OnHd94xn9WdqvVFnf6fWA+/vG6mmYMkHqU5hxofRUluvpXqHVR9FHx68
mmofsdcjTq63Us3CzvdT6428b8Y6xF6JZ878r1O/AVjyTbT48W20+PRpql9Y
clbqN5vfAmem1h/nn0Uc2z5JtYw536dahj0fx96JfZX6HWLt91L9Za9fplpG
7PPIh3lfREvsr7iX3Md3B8eeMf+72C/r/ZZqCpb8G3tl7/9Fe/bg+CXVO6wa
rW4fNf1zqn3Efo04uf5INYtn+U88Q/L+HusQ+ynVR+aPX7euqMsJ6rZYMmHd
FqvGrGvT+bEn7ium/BD3DFPHqhvHuTHqmsWcHyPOeqPX3Tux8eq+r6z9drwL
fD/HresasbHr5sOzceq2xB5I/R1DfU5S9/3FoasHfx4eHEsMjsnrOoUrU9Y1
BW9mqFtv1N9kdb1j3Ix1+zBj0rr5iE1Vdx6GTVfXSuyZum4fpk5ft4+8U9Rd
k/Wmressc2aqmxtv5qnrC5bMUtcmDJutrikYNmvdPs7nr1u3GDN33etn/sx1
8zF/jrp+YdW8dXPj3FyDP98f92zOunHOZ6+7DnOmqXsd7HW+uvNYb4G6a2LP
wnXdwbBF65qCMfW63wacXqiuX4xr1O2jjkfWtYzYYnXnYWRS95vBd2bxun14
mdbtI+8idddkvaxuPlzp161J/KjqtvhU1DULS1p13eGcdwKz8KlZ1yxiC9a9
PvaX181NrF03B1bxTpGb+QfVfZbc+17d2mYfnbpjeZe7gz+/kxobVXdNXFmq
rjtYtX3deqPOlqlrE5YsW7fFkuXrWoNDS9edx7jV6tYetbVc3bGMW7WuZcRW
rusj3qxStyW2Yl1PcXSFurk5X71uPmxYo26LMRvW/R5gyVp1PcKbder6hStr
1+3jfNO6TlHra9bNwZx1647Fp/XqtnxzNqqbG/9Wqrsv9r1x3T4sXL/uWEzd
oG7Lnmp1v3+8Q5vUHcvaS9a939zrLevahCVbRYsl29S1Boe2qGsc43au+13E
la1jLON2qvvbndgO8dz4e+eO0RLbrq6nPNdtIzfnu0Q+XNk1WuzZr64p+LF7
XbPwY8+6ZmHPHtHH+eZ1bWWvu0UO5uwVYzFp72ip6f0jN+ZtFs+E+QdEH+bt
E2Oxat9o2dNQ3Vrk/h4YY3nvD453H7cOr+sI9hxZ1xe8OaGuHdTWYXVdY9yJ
0YcHh9Y1jthRMQ/bjqtrEOYdHX14eXz0kfeIWJP1Top82HN2XVPw45xo8em0
umZhz6l1TeH8kLgO9nFKXeOInV/XGjw4OXITOz1yYNW5kRvnjq1rLvs+q+57
yT7OiLHcyzOjJXZv3RqjPo6J62P+BbEmPl1S1yBcubyuKXhzXd33G0surusd
466PPpy4qK59xK6IeXh5TV0HMenK6MPOa6OPvJcNjjLWuyHy4dOddR3BmLui
xaFb6jqFJTfX9Yjze+qawnXeVNc1YhfG9bG/GyM3sVsjBz7dHbmZf17cY57H
HXVdYx+3xVjMuD1aYlfFNWH2fXXNwqdP6r73vMsP1vUIhx6u6wuuPFW3Tqiz
B+oax7inow8n7o98xB6JeRj5RF2D8O/R6MO2J6OPvA/Fmqz3TOTDp1frOoIx
r0WLQy/UdQpLnq/rEef8nZn/hsf/hvBcXdeIvVnXF2x4NnITezFy4NPrkRuT
Hq/rLPt+pa5r7OOlGMs36uVoiX1c1xTu42Nxfcx/K9bEsPfqeoRDH9T1BVc+
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
t65wbuLcPrycPLePvBPmrsl6U+Xmw5uZcx3BjFlyW0yaLtcpvJk21xHOb473
dPnBMU2ua8Rmz/UFA6bOzU1s+twc+DRrbm5smzTXXPY9U+53iH3MkDsWU2fM
bYn9lPn7g/dmktzrY/4cuWti0jy57mDJfLmOYMwigz8/lWnG3LnGMW7R3D7q
eK5c74jNnzsPIxfKfW7Ys0BuH8914dw+8s6buybrLZabD1fyXBfwo5nb4lOS
axaW1HLd4Xyc3HeNd2go1yxic+ZeH/tbPDc3sTQ3B1a1cnNj3my595jnkeXW
PPuo546l7hu5LbEfM39DcH9/yKxRzovcfHg5nOsL3mAVNUYN8S7QUrv9XJuw
h/eDPjzo5dpHrMqNk2tUrpU4t0yuceRdIncdYt1cK5m/Ru57gB9r5rb4tFZu
i08r5bqDYXvm1g/v+17R8m6unBvHnhVzLWPOHrl1yJwVcvdObPXce8TaS+da
yV5Xy71fxFbJzYdzq+a2xPaONamVpXK/B8xfO3e/2LnR4M//ZFqySa41OLRe
rlk4t0GuZdizde67gjfr58aJbZo7Dzu3zDURwzaLPhzdKvqYv3Humqy3ba4v
2LNrbn3iym7RYslOue5gzLq5brK/dXKvg/Mdcq3Btu1zveN8u8jN+Y4RJ9fu
kZv7vmTuu8A92iW3ztnHzrEm59vEdbPXW3LfM57VBbn1Rp1dlFsPvL8H5JqC
JYfnOoUZR0RLbe2X6x1WHRl9eLBvrn3E9o84uQ7KNQs7D8utN/IeGOsQ2yee
OfNPyv0GYMnJ0eLHKdHi0zG5fmFJJ/ebzW+Bdm79cX5sxLHt6FzLmHNarmXY
c1TsndiJud8h1j4011/2ekKuZcSOi3yYd3y0xC6Me8l9PCT328D8U2O/rHdu
rilYcknuXtn7pdGWg+PsXO+w6rLoo6bPyrWP2DkRJ9f5uWbxLC+OZ0je82Id
Ymfm+sj863Prirq8IVosuTFarLoy16Yq1ue+Ysrpcc8w9aqI49wVuWYx54yI
s97lsXdi1+W+r6x9cLwL3KNrc10jdnXkw7NroiW2Re7vGOrz1tz3F4dWbA68
GbTfDI47cp3ClbtyTcGbB3Lrjfq7Pdc7xj0YfZhxW+QjdnfMw7D7cq3Ennui
D1Pvjz7y3hlrst7/cp1lzkORG2+ezfUFSx4dHBvmGvZ4rikY9lj0cf5Cbt1i
zDNx/cx/OPJh25O5fmHVc5Eb554eHJvHnKcizvkTsQ5z7o3rYK/PxzzWezHW
xJ5Xc93BsNdzTcGY93K/DTj9Sq5fjHs/+qjjl3MtI/ZGzMPId3K/GXxn3ow+
vHw3+sj7WqzJeh9EPlz5Mrcm8eOraPHpk1yzsOTjXHc4553ALHz6KNcsYi/F
9bG/DyM3sU8jB1Z9HbmZP2/TZ8m9/yK3ttnHZzGWd/nzaIl9G2viyve57mDV
VE3rjTr7MdcmLPkpWiz5JdcaHPoh5jHu79zao7Z+jrGM+yvXMmJ/5PqIN39G
S+y3XE9x9NfIzfk/kQ8b/o0WY8Zt+j3AktGaeoQ3YzT1C1dGb9rH+YRNnaLW
/4sczBmz6Vh8GqtpyzdnvKa58e/32Bf7Hr9pHxaO3XQspo7TtGVPb+d+/3iH
Jmg6lrW/i/vNvZ6kqU1YMmnTFksmb2oNDk3c1DjGTdf0u4grkzUdy7hpm/52
JzZ10+fG3zunadoSm7KppzzXKZrm5nz6pvlwZYamLfbM2dQU/JipqVn4MUtT
s7Bn5qZ9nI9oait7nbFpDubM2nQsJs3WtKWm52qaG/MmavpMmD930z7Mm73p
WKyao2nLnt7KrUXu7zxNx/Lezz/48yO5bi3U1BHsWaSpL3iTNrWD2hrZ1DXG
1Zv24cGCTY0jtmjTedhWa2oQ5i3WtA8vk6Z95F246Zqs12iaD3u6TU3Bj17T
Fp9aTc3CnmZTUzhfoOl1sI+8qXHEhptagwdZ09zEiqY5sKrfNDfODTU1l32X
Td9L9tFuOpZ72WnaEtu4aY1RH4s3vT7mL9F0TXxauqlBuLJsU1PwZpWm7zeW
LNXUO8at2rQPJ5Zsah+x5ZrOw8uVmjqIScs37cPOlZv2kXeZpmuy3mpN8+HT
+k0dwZgNmrY4tFZTp7BkzaYecb5RU1O4zjWaukZsVNPrY3+rN81NbO2mOfBp
w6a5mV81vcc8j/WausY+1mk6FjPWbdoSW6HpNWH2pk3Nwqejm773vMtbNPUI
h7Zq6guu7Ni0TqizzZsax7idog8nNot8xLaOeRi5fVOD8G+b6MO2HaKPvFvG
mqy3c+TDp32aOoIx+0aLQ7s3dQpLdmvqEefbF4O1BseEg2PXpq4RO6CpL9iw
S+QmtkfkwKf9IjcmbdfUWfa9d1PX2MeeMZZv1F7REjuqqSncx23j+ph/YKyJ
YYc29QiHDm/qC64c39QOau6QpsYx7oTow4ODm3pH7IiYh5HHxHPj23tk9LGP
4wbHfJH3sFiT9U6MfNhzVlNT8OPsaPHp1KZmYc8pTU3hfJOmdcl7c3JT44gd
FNfH/k6K3MROixxYdU7kxrn94x7zPM5sagT7OD3GUvdnREuM32T8/ZLftedG
Dmw7L1ocuripQbhyaVNT8OaapnZQWxc19Y5x10YfHlzY1D5il8U8vLyqaY1h
3uXRh51XRx95L4k1We/KpvYx57rIjUN3NHUEn25o6heW3NTULxy6Mfo4v7up
Lxhwe1ObmH995GP+LU2doqbvjNw4d1vT3/rMuTXinN8c6zDnirgO9npXzGO9
e2JNTLq/qTtY8mBTRzDmiXgP8OO+psYx7snow4D/NfWO2EMxDyMfa2ofxj8c
fXj5ePSR94FYk/Weinx483JTRzDjlWgx6bmmTuHNs00d4fy1pjZhyTNNXSN2
b1wf+3s6chN7PnLg06uRm/mHtQa1MzhmHxwvNXWBfbwQY6n1F6Ml9nqsiTFv
NjUIn0ZrWWPUwdtN/cKed6LFlfeamoI3b8U8xn3a1BHq7N0Yy7hPmrpG7KOm
flFbH0dL7IOmhmLn+5Gb888iH658Hi32/Dg4jm3qx5dNzcKPr5uahT1fRR/n
vzY1hbr/InIw55sYi0nfRouRP0VuzPsw9sW+f44+zPsuxvJd+j5anHu06feP
d+iXGMvab8T95l7/2dQv7PkrWlz5p6kpePNHU9cYN9bguZw/aC8YHH/HWMaN
2dIXYqO3fG7YM0bLlth/TQ3luf4buTkfu2U+XBmnZYs9k7Q0BT/Ga2kWfkzQ
0izsGb9lH+e/N3WWvY7bMgdzJmw5FpMmatlS05O2zI15v8UzYf5kLfswb0TL
sVg1ccuWPT3StBa5v5O3HIthU7RssWfalo5gz/QtfcEb6gM7qK1pWrrGOGqG
PjyYuqVxxGZoOQ/bZmlpEObN2LIPL2dt2Ufe6VquyXpztMyHPQu2NAU/RrZs
8WmelmZhz9wtTeF8mZbvPe/7XC2NI7Z0yxojNmfL3MTmbZkDqxZqmRvnZm5p
LvteoOV7yT7mazmWezl/y5bYsi3XpD5manl9zF+kpXE4NNTSMhyqtWwxJm3p
C/Ys3tI4xi3W0jXOk5ZjGddqaRA1kbe0DAubLVtijZae4mg9XOO8aDkPtzot
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
0DjG3RV9GHBd5CZ2c8zDyNsL6wrnbok+vLwj+sh7Y6zJendHPrx5uNARzHgk
Wky6r9ApvPlfoSOcr9X2Pf11cNxb6Bqxxwt9wYB7Ijex+yMHPj0aubHttkJz
2fdDhd8h9vFAjMXUB6Mldlbh7w/em1vj+pj/RKyJSc8UuoMlzxU6gjGvDo4d
B8dOg+PpQuMY91r0UcdPFXpH7PmYh5Evx3PDnheij+f6SvSR99lYk/Vej3y4
8kGhC/jxYbT49HahWVjyVqE7nF9T+K7xDr1ZaBaxJ+P62N8bkZvYO5EDqz6K
3Jj3WNxjnsf7hTXPPt6NsdT9e9ESO7PwNwT394zCGuX848iHl98U+oI3WEWN
UUO/REvtflVoE/b8Gn148GWhfcS+jji5viu0Eud+KjSOvN/GOsS+KLSS+f8V
vgf4MVrbFp9Gb9vi0x+F7mDYLG3rh/d91rYt7+afEcee3wstY87MbeuQOb/F
3on9G/eItX8stJK9/hP3i9hfkQ/n/o6W2Gxt16RWfij8HjB/jLb7xc7x2pqC
JRO0tQaHxm5rFs6N29Yyxk3W9l3Bm3HaxolN2HYedk7S1kQMm6htH45O2raP
+eO3XZP1pmjrC/bM0LY+cWXGti2WTNvWHYwZq62b7G/MttfB+dRtrcG2qdp6
x/mUbXNzPk3bOLlmapub+/59vAvco+nb1jn7mK7tmpxP3va62evabd8zntVw
23qjzka1rQfe37nbmoIlI9s6hRkLtW2prTnbeodVC7ftw4M52tpHbK62cXLN
29Ys7Fywbb2Rd5626xCbve0zZ3697TcASxptW/zI2rb4tFhbv7Dks8JvNr8F
Ph0cB8b54m3j2LZoW8uY02xrGfYs0nbvxNK23yHWXqCtv+w1aWsZsaG2+TCv
1rYltkTbe8l9nL/tt4H5edv9sl6vrSlYsnTbvbL3Zdq2nw+Osq13WLVs2z5q
utPWPmLdtnFyVW3N4lkuNfjzJ3EP+m3XIdZu6yPzV2tbV9Tl6m1bLFmjbYtV
K7S16evYE/cVU1pt7xmmrtg2jnPLtzWLOUXbOOst13bvxFZt+76y9nxt3wXu
0SptXSO2Utt8eLZy25bYxG1/x1Cf67R9f3Hot8GfTxocJw+O9ds6hSsbtjUF
b7ZoW2/U33ptvWPcltGHGeu2zUdso7bzMGyztlZiz8Zt+zB18+gj7wZt12S9
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
jpZh4UfREnu/o6c4+l7k5vyTmIdbn3U0CKu+6+gLrnzZ0SCs+rqjKRjzWlwH
e/qio2uM+zxycP5VzGPONzEPA76P3Hj2Stxj7ssP0cez+TT2xZ6+jXnsiTrj
7yd8v3+Je4xbM5TWA+/+7x39wqQ/O3qEMaOX+kWt/NbRNcaNUdpH/f0a+Yj9
FfMw6b+OZuHQ39GHnaOV9pH3j1iT9cYszYc9E5WagiUjSlu8GbfUIKwap9Qv
zu/qWH/8dhi71Dhik5ZagzFjleYmNl5pDkyauDQ3zv3b0V/2PWHpN4l9jF86
Fs8mKG2JTV9qFvfxn7g+5k9WuiYmTVXqFyZNU+oRxsxcagd7n7LUNcbNUtp3
9+CYotRBYtOWzsOkGUufGw5NV9rHPmYq7SPv1KVrst6spfkwZr7S+sSV+Utb
LJmz1BHcmqPUsvtiH9xXbJq91C9ik5deH/ubrTQ3sblKc2DYAqW58W+S0nvM
85i3tM7Zx9ylYx8cHPOUtsRGlvqIZwuXuoNJTw7+vOng2GxwLFZqGQ4NlfqC
K3mpHdTcoqXGMa5Z2ocNi5TmI1YrnYdVjVLLqLOktA9Hs9I+8i5euibrFYM/
v9HRniVKTcGSUaUt3nRLDcKqstQvzhcqvT6urVNqHLGlS+sZY9qluYn1SnNg
0pKluTGpXuo7+x4u/fcZ7KNfOhbPqtKW2Bal9UZNpKXXx/xlStfEpBVKPcKw
lUo9wpU1S73GkuVLvWPcWqV9eLBcqXHEVi6dh5Grl35L+M6sUtqHbWuU9pF3
xdI1WW/t0nzYs0mpKaPF86fFp/VLzcKe9UpN4XzzUqe4znVLjSO2bOn1sb91
SnMT26A0B1ZtFrmZv1TpPeZ5bFxqBPvYsHQsdb9RaUtstVKXuc6tSj3CqhNK
64Hfy9uWGoQr25eagje7ldpBbW1T6h3jdo8+PNg68hHbIebh5S6lNYZ5O0Yf
du4afeTdLtZkvT0iH/YcWGoKfhwULT7tU2oW9uxdagrn/Obj75R8V/YqNY7Y
oaXW4MGekZvYvpEDqw6O3Di3c6m/7PuA0m8S+9gvxuLr/tESO77ULO7jTnF9
zD8s1sSno0oNwpVjSk3Bm5NL6w1Ljiz1jnGnRB8eHFFqH7FjYx5enhjPDZOO
iz72cVL0kffoWJP1To182HNeqSn4cX60+HRmqVnYc0apKZxvWVqXvDenlxpH
7PC4PvZ3WuQmdlbkwKoLIjfOHRL3mOdxbqkR7OPsGEvdnxMtsZ3ivwnxb6pW
La1L3uOLS43DoStKDcKVq0pNwZsbS+2gti4v9Y5xN0UfHlxWah+xq2MeXl5f
WmOYd030YecN0UfeK2NN1rs58mHPPaWm4Me90eLT7aVmYc9tpaZw/nZpLfHu
31pqHLG3SmuP2C2Rm9gdkQOr/he5ce66Un/Z992lNc8+7oyx3L+7oiX2TqxJ
TVwb18f8+0uNw6GHSy3DoUeixZjHSn3BnodKjWPcg6Wucf5ojGXcM6W+8x49
VWoZFj4dLbEnSj3F0ccjN+fPxjzcer7UGhx6vbRWMealUkdw65VSg/DmgbgO
9vRiqXGMeyFycP5yzGPOqzGPOn4jcmPVfXGPuS9vRh/P5rnYF3t6Leaxp4sG
R6v0HX037jEmjdW13qiJD0otw6GPSn3BlS9LzcKP90uNY9xX0UfNvRf5iH0c
87Dq81LLqLNPog9Hv4g+8n4Ya7Le15EPY34p/R7gyq/RYsn3pY7g1nellnF+
SWn98Rvh21K/iP1R6hfefBO5if0QOTDst8iNf5+V+s6+fy71lH38GGOx7ado
iY3Z1S/u46dxfcz/M9bEoX9LLcOh0br6givjdbWDvf9Tahzjxu/ad+ng+LvU
OGKjd52HVeMM/nxhPNsxuvaxj3G79pH3v1iT9Sbomg9jpuhan7gyZdcWSybu
6ghujehq2ZWxD+4rNk3U1S9if8X1sb8Ju+YmNknXHBg2Vdfc+Pd73GOex+Rd
65x9TNp1LLZN1rUltvGSg3s3anAdg2PqrjnwcqNB/z+jjM3c1RQsmaurF9TZ
3F1bDJixq3dYNU/XPpyYoat9xGbqGifXrF3Nws45u9YbeWfpug6x6bv6yPw5
utrHuEW6moIli3W1BjMW6GoQVs3f1S/O/xv8+SzeicExX1fjiC3aNQfzh7rW
Nt4s2DUHJi3c9bc+6y3U1SzOR3aNcz5v12sl7+xdvwHsdbau18f54l33yBp5
V3fwo9vVZczodW2p9UZXp7Ct37UPG+pd7SOWdY2Tq9XVRwwru35jyNvsug6x
tKuJzF+2qx04sVzXFoeW79pizxJd7cCqFbr24Uet633C1FFd45g03NU45iRd
46xXdd07sWW61j9rr9g1H2Ys3bW2iS3ZNR+eLdW1JbZyV3cwac+udcW7v1e0
vL+rdXUHS9bo6gjGrN/VC+pp1a7GMW6Drn0YsErX3MTW7DoPI9ftWlc4t1bX
Prxcr2sfeVfvuibrbdg1H95s3dURzNgmWkzatKtTeLNJV0c4H63ne3rO4Ni4
q2vEtu/qCwZs1DU3sc0iBz5tG7mxbZ2u5rLvrQZ/Hjv2sXmMxdQtouUb1en6
+4P3Zu2u18f8HWJNTNqlqztYsltXRzBm38Ex7eCYbnDs3NU4xu0XfdTxTl29
I7Z7zMPIveO58X9TtUf08Vz3iT7y7hprst7+kQ9XjujqAn4cGS0+HdzVLCw5
qKs7nK/U9V3jHTqwq1nEdozrY38HRG5ih0QOrDoqcmPednGPeR6Hd6159nFo
jKXuD4uWWLvrbwjub9G1Rjk/OvLh5cldfcEbrKLGqKGzo6V2T+xq08h4P+jD
gxO62kfspIiT69SuVuLcmV2NI+8psQ6x47tayfxL4z3Aj8uixafLo8Wn87u6
g2GPdK0f3vdHo+XdvCDi2HNeV8uY83DXOmTOubF3YpfEPWLtM7payV4v7nq/
iF0Y+XDuomiJPRZrUiund/0eMP+K2C92XtfVFCy5oas1OHR1V7Nw7tquljHu
9q7vCt5cE3FiN8Y87Ly1q4kYdlP04eht0cf862NN1ruzqy/Y80DX+sSVB6PF
kv91dQdjrurqJvu7Mq6D83u6WoNtd3f1jvO7Ijfn90acXA9Fbu77aV3fBe7R
/V3rnH3cF2tyfkdcN3sdved7xrP6pmu9UWffda0H3t+nu5qCJS93dQozXomW
2nqyq3dY9Wr04cETXe0j9lTEyfVcV7Ow86Wu9UbeZwfHlhF7PJ4589/r+g3A
kvejxY8PosWnN7r6hSXHdv1m81vgmK71x/mbEce217taxpyPulqGPa/F3om9
2/U7xNovdvWXvb7T1TJib0U+zHs7WmLfxr3kPr7Q9dvA/A9jv6z3ZVdTsOSH
2Ct7/zHa4wbH5129w6qfoo+a/qyrfcS+iDi5vu5qFs/y+3iG5P0q1iH2aVcf
mf9317qiLv+JFkv+jRarfu1q00mxPvcVUz6Oe4apv0Uc537pahZzPok46/0c
eyf2V9f3lbWf7/oucI/+7Ooasd8jH579ES2xW7r+jqE+x+j5/uLQeYM/NwZH
NjjG7ukUrozb0xS8mbhnvVF/Y/X0jnGT9OzDjDF75iM2Xs95GDZRTyuxZ/ye
fZg6omcfecfpuSbrTdjTWeZM2jM33kzf0xcsmbynTRg2ZU9TMGyKnn2cz9Sz
bjFmup7Xz/zJeuZj/tQ9/cKqGXrmxrlpB3++Oe7ZND3jnE/Vcx3mTNDzOtjr
jD3nsd7MPdfEntl7uoNhc/Y0BWMW6PltwOnZevrFuAV79lHHs/a0jNhcPedh
5Hw9vxl8Z+bu2YeX8/fsI+8cPddkvZE98+FK2rMm8aPes8WnxQZ/fqarJYv0
dAfDeCcwC58W7mkWsVl6Xh/7W6hnbmKL98yBVbxT5Gb+rj2fJfc+6Vnb7GOo
51je5VrPlljec01cafV0B6s26llv1Fm7p01Y0unZYkm3pzU4VPScx7gle9Ye
tVX2HMu4UT0tIzbc00e8WaJnS6zf01Mc7fXMzflSPfNhw9I9W4xZpef3AEuW
7ekR3izf0y9cWa5nH+dr9HSKWl+mZw7mrNBzLD6t2LPlm7Nqz9z4V/XcF/te
rWcfFq7UcyymrtyzZU/z9vz+8Q6t3nMsazd73m/u9To9bcKSdXu2WLJ+T2tw
aO2exjFus57fRVxZr+dYxm3a87c7sY17Pjf+3rlJz5bYhj095blu0DM355tH
PlzZIlrs2bGnKfixVZiFH9v0NAt7to4+ztfqaSt73TJyMGfbGItJ20VLTe8U
uTFvzZ7PhPk7Rx/mbR9jsWqHaNnTPD1rkfu7S4zlvd8t3n3c2qunI9izT09f
8ObgnnZQW3v2dI1xh0QfHuzR0zhi+8Y8bDuwp0GYt1/04eVB0UfevWNN1js0
8mHPcT1NwY/jo8WnI3uahT1H9DSF893jOtjH4T2NI3ZST2vw4LDITeyoyIFV
J0RunDugp7ns+9ie7yX7ODrGci+PiZbYDT1rjPrYP66P+SfHmvh0Rk+DcOWs
nqbgzYU9328sOb2nd4y7KPpw4rTBsWjEzo55eHl+Twcx6Zzow84Loo+8Z8aa
rHdx5MOna3o6gjHXRotDl/d0Cksu6+kR59f3NIXrvLSna8ROievD5ksiN7Er
Igc+XRe5mX9i3GOex9U9XWMfV8ZYzLgqWmLnxjVh9k09zcKn13u+97zLt/b0
CIdu7+kLrvyvZ51QZ7f0NI5x90UfTtwc+YjdEfMw8p6eBuHfndGHbfdGH3lv
izVZ7/7Ih09P9HQEY56MFoce7ukUljzU0yPO76kGaw2ONQbHgz1dI/ZMT1+w
4YHITeyRyIFPT0VuTLq7p7Ps+/GerrGPR2Ms36jHoiX2Wk9TuI93xfUx/9lY
E8Ne7OkRDr3c0xdceaunHdTcCz2NY9zb0YcHz/f0jtgrMQ8j34jnxrf31ehj
H29GH3lfijVZ753Ihz2f9jQFPz6LFp8+6GkW9rzf0xTOb+xZl7w37/U0jthz
cX3s793ITezDyIFVn0dunHs67jHP45OeRrCPj2Isdf9xtMT4TcbfL/ld+0Xk
wLYvo8Wh73oahCs/9DQFb37vaQe19W1P7xj35+A4tacH3/S0j9iPMQ8vf+1Z
Y5j3U/Rh52/RR97vY03W+6Wnfcz5K3Lj0Nh9HcGnf3r6hSX/9fQLh/6NPs7H
6+sLBozV1ybm/x35mD96X6eo6XH65sa5Mfv+1mfOGH3jnI/Wdx3m/BzXwV7H
7TuP9cbvuyYmjejrDpZM0tcRjJm673uAHxP1NY5x0/Ttw4AJ+3pHbNK+8zBy
yr72Yfxkffvwcqq+feSduO+arDdt33x4M1tfRzBj9r4tJs3Y1ym8maGvI5zP
2dcmLJm+r2vEJuh7fexvur65ic3UNwc+zdE3N/NfGvx5u8Gx/eCYta8L7GPm
vmOp9Vn6tsTm6rsmxszT1yB8WqZvjVEH8/X1C3vm79viyoJ9TcGbefvOY9zi
fR2hzhboO5Zxi/V1jdgiff2ithbt2xJbqK+h2Dmyb27Oh/rmw5Va3xZ7ir6m
4Efa1yz8aPQ1C3vqffs47/Y1hbpP+uZgTtZ3LCblfVuMbPfNjXkL990X++70
7cO8Zt+xfJdafVv2NEXf7x/vUNl3LGvP3fd+c6+H+/qFPUv0bXFlyb6m4E3V
1zXGrTD481eD9uvBMarvWMYt39cXYsv2fW7Ys1zfltjSfQ3luS7VNzfnK/bN
hysr9W2xZ+2+puDHKn3Nwo/V+pqFPav27eO839dZ9rpy3xzMWb3vWExao29L
Ta/TNzfm9fo+E+avN/jzHz3NW7PvWKxaq2/LnibvW4vc3/X7jsWwDfq22LNp
X0ewZ/O+vowZ9YEd1NYmfV0bLWqGPjzYuK9xxLaIedi2TV+DMG/L6MPLbaOP
vJvFmqy3Q+TDnj37moIfe0WLT7v0NQt7du5rCudn9n3ved936mscsTP61hix
HSM3sV0jB1btHblxbuu+5rLvPfq+l+xjtxjLvdw9WmJnxZrUx1Zxfczft69x
OHRgX8tw6KBoMeaQvr5gzwF9jWPc/n1d4/zgGMu4o/oaRE0c0dcyLDwyWmKH
9fUURw+N3JwfHfNw69i+BmHVqX19wZUT+hqEVSf1NQVj9ovrYE/H93WNccdF
Ds5PjHnMOTnmYcBpkRvP9ol7zH05Pfp4NsfEvtjTKTGPPVFn/P2E7/fZcY9x
68HBsW7fd/+8vn5h0gV9PcKYy/v6Ra2c29c1xl0RfdTfOZGP2IUxD5Mu7WsW
Dl0Ufdh5WfSR9/xYk/WujHzYc1NfU7Dk5mjx5tq+BmHVNX394nzDvvXHb4er
+xpH7La+1mDMVZGb2HWRA5Nuidw4d0lff9n3jX2/Sezj+hiLZzdES+z+vmbh
ysVxfcy/PdbEpLv7+oVJ9/b1CGMe6WsHe7+rr2uMezT6Nhocd/Z1kNj/Yh4m
PRTPDYfuiz728XD0kfeeWJP1Hot8GPN83/rElReixZKn+jqCW0/2tWyzmMd9
xaYn+vpF7I64Pvb3eOQm9nTkwLAXIzf+3Rr3mOfxXN86Zx/PxFhsezZaYi/3
9RHPXu3rDibtMPh7y4SDY6LB8UZfy3Dorb6+4MqHfe2g5l7vaxzjPoo+bHgt
8hF7O+Zh1ft9LaPO3ok+HP0g+sj7ZqzJeh9HPuz5pq8pWPJttHjzeV+DsOqz
vn5x/kpcH9f2aV/jiP3Qt54x5pPITeyLyIFJ30VuTHqvr+/s++vBcXjs48sY
i2dfRUts4sp6oybejetj/o+xJib92tcjDPu9r0e48l9fr7Hkl77eMW60yj48
+LmvccT+iHkY+U/fbwnfmT+jD9v+jT7y/hZrst7olfmwZ4JKU/CD50+LT2NX
moU9Y1WawvmISqe4zjErjSP2U1wf+xujMjexcSpzYBXvFrmZ/33cY57H+JVG
sI9xK8dS9+NVtsT+7usy1zlppUdYlVbWA7+Xp6g0CFemqjQFb2astIPamrzS
O8bNVNmHB5NV5iM2deU8vJy+ssYwb5rKPuycobKPvFNWrsl6M1fmw555K03B
j/kqW3yavdIs7Jmt0hTO+c13WHxXZq00jtiCldbgwSyVuYnNUZkDq+avzI1z
01X6y77nqfwmsY85K8fi69yDPz/QN5ZUmsV9nLby+pg/snJNfFq00iBcWbzS
FLzJKusNSxap9I5xeWUfHixcaR+xocp5eFmvfG6YVKvsYx+Nyj7yLla5Jus1
K/NhT1VpCn4MV7b41Kk0C3valaZwPkllXfLeFGEcsYUqr4/9tSpzEysrc2DV
EpW5cW6BynvM8+hXGsE+upVjqfteZUuMf4vBvyvl31T91bcueY+XrDQOh5ar
NAhXVqg0BW/470nYQW0tW+kd4/hvTPThwTKV9hFbsXIeXq5aWWOYt1JlH3au
VtlH3uUr12S9NSvzYc9Glabgx8aVLT6tW2kW9qxTaQrnB1XWEu/+2pXGETuw
svaIrVWZm9h6lTmwapPK3Di3SqW/7HvDyppnH+tXjuX+bVDZEjs41qQmVq68
PuZvVmkcDm1VaRkObR0txmxb6Qv2bFlpHOO2qHSN821iLON2rvSd92jHSsuw
cKdoiW1f6SmObhe5Od8l5uHWbpXW4NB+lbWKMXtWOoJbe1cahDebx3Wwpz0q
jWPc7pGD871iHnP2iXnU8f6RG6s2rbzH3JcDoo9ns2vsiz3tG/PY06jK9513
9JC4x5h0dWW9UROHV1qGQ0cNjrkqXTmx0iz8OKzSOMadFH3U3KGRj9jRMQ+r
jq+0jDo7Jvpw9IToI+8RsSaenRz5MOacyu8BrpwbLZacXukIbp1WaRnnS1XW
H78RTq30i9gFlX7hzSmRm9gZkQPDzovc+Hdcpe/s++xKT9nHmTEW286KlthV
lX5xH4+N62P+hbEmDl1aaRkOXV7pC65cV2kHe7+k0jjGXR99Sw+OiyuNI3ZF
zMOqa+K58WyvjD72cW30kfeyWJP1boh8GHNnZX3iyl3RYsktlY7g1s2Vli0f
87iv2HRTpV/ELorrY383Rm5it0YODLs7cuPf+XGPeR53VNY5+7gtxmLb7dES
49+u8X8ngLn3VlqJbSNHDb5lSwysHxwPV5qCJU9VekGdPR0tBjxY6R1WPRN9
OPFApX3EHoo4uR6tNAs7n6ysN/I+EusQu7/SR+Y/UWkf416tNAVLXq+0BjNe
qDQIq56v9IvzS4cHz3xwlIPjuUrjiL0WOZj/ZmVt482LkQOTXqn8rc96L1ea
xflLEef82bhW8j5e+Q1gr4/F9XH+RuyRNT6odAc/Pq90GTO+iJZaf6/SKWz7
Mvqw4d1K+4i9H3FyfVTpI4Z9VvmNIe+HsQ6xdypNZP7PlXbgxC/R4tCv0WLP
t4PjyEqrfos+/Hgr7hOmfhdxTPq60ji8eTvirPdV7J3YT5X1z9q/Rz7M+LGy
tol9H/nw7Idoif1Z6Q4mzTJsXfHuzzpsy/+m9E+lO1jyX6UjGDPOsF5QT39X
Gse4cYftw4C/Ijex0Yadh5FjDVtXODf6sH14OfawfeT9N9ZkvfGGzYc3kw3r
CGZMPmyLSRMN6xTeTDisI5xfFu9pd3BMMKxrxKYa1hcMGH/Y3MRGDJsDn6YY
Nje2jTmsuex70mG/Q+xj4mHHYuokw7bEPq38/cF7M8aw18f8qYddE5OmH9Yd
LJlxWEcwZo7Bn/83aO8bHNMNaxzj5hy2jzqedljviM007DyMnG3Y54Y9Mw/b
x3Odfdg+8s4w7JqsN9ew+XBloWFdwI+Fh23xab5hzcKSeYd1h/M/4l3jHZpn
WLOITTPs9bG/uYfNTWz+YXNg1SLD5sa8KYe9xzyPkcPWPPtYYNix1P2Cw7bE
Pqn8DcH9/biyRjlfdNh8eNkY1he8wSpqjBriXaCldtNhbcIe3g/68CAZ1j5i
9WHj5MqHtRLn2sMaR97/s3TPYbAc3drGY9u2bRvTnnZPbNu2bWfHyY5t27Zt
23mTM/d5nj/6qt21qlZVY/16ds7+3m+5ntYhtmRPVjI/6ek9wI+0pxafsp5a
fFqzJ3cwbLue6of3fXu3vJu9nuLYs0ZPljFn257qkDmr97R3YnFP94i1V+rJ
SvYa9XS/iAU95cO5sKeW2A5ek1pZsafvAfP7Pe0XO9ueTMGSQU/W4FA1/PO3
a8q5pifLGLdBT+8K3tQ9xYmt1dM87FyvJxMxbO2e+nB0/Z76mN/1tCbrbdST
L9izVU/1iStbu8WSzXtyB2OKntzE1Lyn6+B8056swbZNevKO8417ys35Zj3F
ybWNc3PfV+jpXeAebdlTnbOPLbwm5xv2dN3s9XI7xLM6tad6o85O76keeH93
7ckULNmnJ6cwY1+31NbOPXmHVfu5Dw926sk+Yrs4Tq7dezILO/fuqd7Iu5vX
IbajnznzD+/pG4AlR7jFjyPd4tOBPfmFJYv39M3mt8BiPdUf5wc5jm0H9GQZ
c47uyTLs2d97J3ZYT98h1t6rJ3/Z66E9WUbsYOfDvEPcEjvN95L7uGdP3wbm
H+X9st5JPZmCJWf2tFf2fpbbJYbHCT15h1Vnu4+aPr4n+4id6Di5TunJLJ7l
GX6G5D3Z6xA7ricfmX9xT3VFXV7iFksudYtVI3qyaRmvz33FlGN8zzD1PMdx
7tyezGLOsY6z3jneO7GLenpfWXsPvwvcowt7co3Y+c6HZxe4JbZuT79jqM8r
enp/cWiN4W/Z94ftB8Pj6p6cwpVrezIFb27pqd6ov6t68o5xtw2PsiczrnQ+
Ytd5Hobd1JOV2HO9+zD1ZveR9xqvyXo39uQsc253brx5sCdfsOTOnmzCsLt7
MgXD7nIf54/0VLcY84Cvn/l3OB/z7+3JL6x6yLlx7v7hsY7n3Oc45/d4Hebc
4Otgrw97Hus96jWx58me3MGwp3syBWNe6unbgNNP9OQX4152H3X8eE+WEXvG
8zDyhZ6+GXxnnnUfXr7oPvI+5TVZ7xXnw5V3e6pJ/HjPLT690ZNZWPJ6T+5w
zjuBWfj0Wk9mEXvM18f+XnVuYm86B1a979zMnyHQs+Tev9NTbbOPtzyWd/lt
t8Q+9Jq48nFP7mDVOIHqjTr7tCebsOQzt1jyRU/W4NAnnse473uqPWrrc49l
3Hc9WUbsm558xJtv3RL7qidPcfRL5+b8B+fDhh/dYsxfPX0PsOTnnjzCm197
8gtXfnEf5//25BS1/pNzMOc3j8Wn393yzfnbufHva++Lff/jPiz8w2Mx9U+3
7On5nr5/vEP/81jW/sj3m3s9WiCbsGT0QC2WjBnIGhwaNZBxjJsg0HcRV8YI
NJZx4wf67U5s3EDPjb93jheoJTZ2IE95rmMFys35hIHy4cpEgVrsmTqQKfgx
SSCz8GOyQGZhz6SB+jgfJZCt7HXiQDmYM3mgsZg0RaCWmp4mUG7M+8/PhPnT
Dftv7cm8KQONxaqpArXs6bmeapH7O32gsbz3MwZ693Fr1kCOYM/sgXzBm/kC
2UFtzRLINcbNH6gPD2YOZByxOQLNw7Z5AhmEeXMG6sPLeQP1kXe2QGuy3gKB
8mHPkoFMwY+lArX4tEggs7Bn4UCmcD5ToOtgHwsFMo7YsoGswYMFA+Umtmig
HFi1dKDcODd3IHPZ9xKB3kv2sVigsdzLxQO1xLpANUZ9zBXo+pi/XKA18Wml
QAbhyiqBTMGbIND7jSUrBvKOcWGgPpxYIZB9xFYNNA8v1wzkICatFqgPO3uB
+si7cqA1WS8KlA+fqkCOYEwdqMWhLJBTWJIG8ojzNpApXGcSyDViywe6PvYX
B8pNrB8oBz41gXIzf5lA95jnUQZyjX3kgcZiRhGoJbZ6oGvC7LUCmYVPBwZ6
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
7WT3YcPhkewjdqTj5Domko8YdkKkbwx5j/Y6xA6LZCLzz4lkB06c6xaHRrjF
ntMi2YFV57kPPw7xfcLU0x3HpFMjGcecQx1nvVO8d2JnR6p/1j7f+TDjrEi1
TewM58OzM90SuzCSO5j0aKS64t1/zC3/W8uXRHIHSy6L5AjGXBPJC+rp4kjG
Me5a92HARc5NbKTnYeRVkeoK5y53H15e7T7yXuo1We8658Ob2yM5ghl3uMWk
myI5hTc3RnKE8yzWe/rl8LghkmvE7o7kCwZc79zEbnYOfLrTubHtykjmsu/b
In2H2MctHoupt7oldnyk3x+8N1f4+ph/j9fEpAciuYMlD0VyBGOejGTH5sPj
/kjGMe4p91HH90XyjtjDnoeRj/u58b+f/Yj7eK5PuI+8D3pN1nva+XDllUgu
4Mdrw2PnSD49H8ksLHkukjucXxDpXeMdejaSWcTu9fWxv2ecm9gLzoFVrzs3
5t3le8zzeDlSzbOPFz2Wun/JLbHjIv2G4P4eG6lGOX/D+fDyg0i+4A1WUWPU
0Bduqd33ItmEPV+6Dw/ejWQfsfcdJ9dHkazEuc8iGUfeD70OsXciWcn8nyK9
B/jxs1t8+sUtPn0TyR0MmyxW/fC+Tx6r5d381nHs+TqSZcyZNFYdMucr753Y
j75HrP1pJCvZ6w++X8S+cz6c+94tsSlirUmtfBLpe8D8X71f7Pw7kilY8r9I
1uDQH5HMwrm/IlnGuDFivSt486fjxP71POwcLZaJGPaf+3B09Fh9zP/Ha7Le
WLF8wZ6JYtUnrkwcq8WS8WO5gzG/R3KT/f3m6+B83FjWYNs4sbzjfOxYuTkf
L1acXJPEys19/9jvAvdowlh1zj4miLUm52PGum722o/1nvGslhv++dVIdbZC
rHrg/Z02lilYMksspzBj1lgttTV1LO+warZYfXgwVSz7iE0TK06u6WOZhZ0z
x6o38k4Xax1iU8Z65syfP9Y3AEsWiNXix4KxWnyaM5ZfWPJWpG82vwXejFR/
nM8VK45tc8SyjDkLx7IMe2aPtXdi88X6DrH2TLH8Za/zxrKM2Nyx8mHePLFa
YsvHupfcxxljfRuYv1Cs/bLeUrFMwZKVYu2Vva8cq317eCwRyzusWiVWHzW9
eCz7iC0ZK06uZWKZhZ0rxnqG5F061jrEFovlI/OjWHVFXcaxWixJYrVYtXos
m973nrivmLJIrHuGqWvEiuPcarHMYs6iseKst2qsvRMLY72vrD1DrHeBexTE
co3YmrHy4VkvVkts1Fi/Y6jPPNb7i0NfDf98+PA4YnhUsZzClSaWKXizbqx6
o/7KWN4xbr1YfZhRxMpHrI01D8PWjmUl9nSx+jB1nVh95K1jrcl6a8Vyljnr
x8qNN1vG8gVLNoxlE4ZtHMsUDNsoVh/n28SqW4zZItb1M3+DWPmYv2ksv7Bq
K+fGuc2Hxyies1msOOebxFqHOYNY18Fet/Y81tvWa2LPjrHcwbCdY5mCMXvF
+jbg9A6x/GLc3u6jjrePZRmxXTwPI/eI9c3gO7Or+/ByT/eRdyevyXr7OB+u
HBqrJvHjMLf4dEAss7Bk/1juTOt3ArPwab9YZhHbztfH/vZ1bmIHOsf0fqdm
8fyHYj1L7v0hsWqbfRzksbzLB7sldqTXxJWjY7mDVdfHqjfq7NhYNmHJcW6x
5IRY1uDQMZ7HuNNj1R61dbzHMu60WJYROyWWj3hzqltiJ8XyFEdPdG7Oz3A+
bDjTLcZcFOt7gCVnx/IIb86N5ReunOM+zi+L5RS1fpZzMGeEx+LT+cNj2Vjf
nIudG/9O9r7Y9yXuw8ILPBZTL3TLnnaP9f3jHbrUY1n7KN9v7vWVsWzCkqvc
Ysk1sazBoStiGce4m2N9F3Hlao9l3E2xfrsTu8HPjb933uiW2HWxPOW5Xuvc
nN/ifLhyq1vsuS+WKfhxeyyz8OPOWGZhzx3u4/zyWLay19ucgzl3eSwm3e2W
mr7fuTFvpJ8J8x9wH+bd47FYda9b9rRbrFrk/j7osbz3D8d693Hr8ViOYM+T
sXzBmxdi2UFtPRbLNca96D48eDSWccSe8jxsey6WQZj3tPvw8nn3kfcJr8l6
Lzkf9rwdyxT8eMctPr0WyyzseTWWKZw/4utgH6/EMo7Y+7GswYOXnZvY686B
Ve86N849G8tc9v1WrPeSfbzhsdzLN90S+ydWjVEfz/j6mP+B18SnT2IZhCuf
xTIFb76N9X5jycexvGPcd+7DiY9i2Ufsc8/Dy69jOYhJX7gPO79xH3k/9Zqs
973z4dMfsRzBmD/d4tDPsZzCkp9iecT537FM4Tp/jOUasQ99fezvB+cm9otz
4NNfzs3893yPeR6/x3KNffzqsZjxm1tiX/qaMPvfWGbh05yJ3nve5dGGfz4v
lkNjJPIFV8ZPVCfU2SiJjMOtCRL14cR/zkdszETzMHLcRAbh31iJ+rBtvER9
5B090ZqsN2GifPg0VSJHMGbqRC0OTZrIKSyZJJFHnI+bDddKh3mHx8SJXCM2
XSJfsGGiRLmJTZYoBz5Nkyg3Jo2TyFn2PWUi19jH5InG8o2aIlFLbI5EpnAf
x050fcyfPtGaGDZzIo9waNZEvuDKPInsoOZmSmQc4+ZN1IcHMybyjthsieZh
5FyJnhvf3tkT9bGPuRP1kXeWRGuy3nyJ8mHP4olMwY8lErX4tFAis7BnwUSm
cP6/WHXJe7NAIuOIzZDo+tjf/IlyE1s4UQ6sWjJRbpybNtE95nkslsgI9rFI
orHU/aKJWmL8JuPvl/yuXSpRDmxbOlGLQyskMghXVkpkCt6smcgOamv5RN4x
rpeoDw+WS2QfsZUTzcPL1RPVGOatkqgPO9dI1EfeFROtyXqrJbKPOUGi3DhU
JnIEn6JEfmFJksgvHIoT9XHeJPIFA4pENjE/TJSP+Vkip6jpKlFunMsT/dZn
Tj9RnPM00TrMWTXRdbDXOtE81msTrYlJaydyB0vWTeQIxmyS6D3Aj7USGce4
TRP1YcAgkXfE1ks0DyM3SmQfxq+fqA8vN07UR951Eq3Jepslyoc3OyRyBDN2
dItJWydyCm+2SuQI5zsnsglLtkzkGrEu0fWxvy2Gfx7VsW2cA592cm7mzzx0
5C7qZ3hsn8gF9rGtx1Lr27kltovXxJjdEhmET2cnqjHqYI9EfmHPnm5xZe9E
puDN7p7HuIMSOUKd7eWxjDswkWvE9k/kF7V1gFti+yYyFDv3cW7OD3Y+XDnE
LfYcm8gU/DgskVn4cUQis7DncPdxfmIiU6j7Q52DOUd6LCYd5RYjj3NuzNvP
+2Lfx7sP8472WL5Lx7hlTxsm+v7xDp3gsay9q+839/rURH5hz2luceWMRKbg
zSmJXGPcecNjmeGx7PA43WMZNyKRL8TO8XPDnnPdEjsrkaE81zOdm/PznQ9X
LnCLPVckMgU/LkpkFn5cksgs7LnYfZyfnMhZ9nqhczDnUo/FpMvcUtNXOjfm
neRnwvyr3Id5Iz0Wqy53y542SFSL3N+rPRbDrnGLPTcmcgR7bk7kC95QH9hB
bd2QyDXG3e0+PLg+kXHEbvE8bLsjkUGYd6v78PJO95H3Jq/Jevc4H/Y8msgU
/HjMLT49kMgs7Lk/kSmcf5boved9vy+RccQ+TVRjxO51bmIPOgdWPe7cOHd7
InPZ9yOJ3kv28ZDHci8fdkvsc69Jfdzm62P+U8Nj80QOPZfIMhx63i3GvJjI
F+x5NpFxjHsmkWucv+CxjHs9kUHUxKuJLMPC19wSezmRpzj6knNz/obn4dZb
iQzCqo8S+YIr7yYyCKveT2QKxjzt62BP7yRyjXFvOwfn73kecz7wPAz42Lnx
7AnfY+z/xH08mze9L/b0oeexJ+qMv5/w/f7C9xi3JkpVD7z7XyfyC5O+TeQR
xvySyC9q5atErjHuV/dRf186H7HvPA+TfkpkFg597z7s/Nl95P3Ga7Leb86H
Pf8lMgVLRknV4s1fiQzCqj8T+cX5tYnqj98OfyQyjtjoqazBmN+dm9jfzoFJ
o6bKjXM/JvKXff+b6JvEPv7xWDz7n1tiE6Yyi/v4g6+P+WOkWhOTxknlFyaN
l8ojjJk0lR3sfexUrjFuslR91w2PsVI5SGz8VPMwaeJUzw2HJkjVxz4mSdVH
3nFTrcl6k6fKhzEzpKpPXJkxVYslU6dyBLemSmXZTd4H9xWbpkzlF7ExU10f
+5siVW5i06TKgWEzpcqNf6Olusc8j+lT1Tn7mDbVWGybLlVLbJZUPuLZbKnc
waR7h39ea3isPTzmTGUZDs2dyhdcWTiVHdTcHKmMY9wiqfqwYfZU+YjNk2oe
Vi2QyjLqbN5UfTi60PDPTybKO1eqNVlv0VT5sGe5VKZgyfKpWrxZMpVBWLVE
Kr84nzXV9XFti6cyjthKqeoZYxZLlZvYUqlyYNIKqXJj0vypfGffyw7//Eqi
fSydaiyeLZOqJbZuqnqjJuZLdX3MXznVmpi0eiqPMGzNVB7hSprKayxZLZV3
jMtS9eHBqqmMI9ZLNQ8j41TfEr4zQao+bEtS9ZF3jVRrsl4/VT7sGaQyBT94
/rT4VKUyC3vKVKZwvk4qp7jOIpVxxFZJdX3sL0+Vm1idKgdW8W6Rm/krprrH
PI8ulRHso0k1lrpvU7XEolQuc53rp/IIqw5NVQ/8Xt4olUG4skkqU/Bm61R2
UFsbpvKOcdu4Dw82SJWP2Kap5uHllqlqDPM2S9WHnVu5j7wbp1qT9bZ1PuzZ
LZUp+LG7W3zaMZVZ2LNDKlM45zcff6fku7J9KuOI7ZXKGjzYzrmJ7eQcWLWH
c+PcFqn8Zd+7pvomsY+dPRZfd3FL7JBUZnEfN091fczf22vi0/6pDMKVA1OZ
gjdHpKo3LNkvlXeMO9J9eLBvKvuIHeR5eHmYnxsmHew+9nG4+8h7gNdkvaOc
D3tOGR4LpvLjVLf4dFwqs7Dn2FSmcL5eqrrkvTkmlXHE9vH1sb+jnZvY8c6B
Vac5N87t6XvM8zgplRHYdoLHUvcnuiU2Xqb/JjRyeISp6pL3+IxUxuHQuakM
wpXzUpmCN/z3JOygts5J5R3jLnMfHpydyj5i53seXl6cqsYw7wL3Yecl7iPv
CK+5jPdHPuy5PpUp+HGDW3y6KpVZ2HNlKlM4fz5VLfHuX5HKOGLPpao9Ypc7
N7GrnQOrbnRunLsolb/s+7pUNc8+rvFY7t+1bom94DWpiQt9fcy/OZVxOHR7
Kstw6A63GHNXKl+w57ZUxjHu1lSucX6nxzLugVS+8x7dl8oyLLzfLbF7UnmK
o3c7N+cPeh5uPZzKGhx6OlWtYsxjqRzBrSdSGYQ3t/g62NOjqYxj3CPOwfnj
nsecJz2POn7GubHqJt9j7suz7uPZPOR9saenPI89nZ7qfecdfdH3GJP+SFVv
1MQrqSzDoddS+YIr76YyCz9eTmUc495zHzX3kvMRe93zsOrtVJZRZ2+4D0ff
cR95X/WarPe+82HMF6m+B7jypVss+TiVI7j1USrLOD8zVf3xG+HDVH4R+yaV
X3jzgXMT+8Q5MOwr58a/t1L5zr4/T+Up+/jUY7HtM7fEfk/lF/fxTV8f87/1
mjj0YyrLcOjnVL7gyt+p7GDvP6QyjnH/uO+s4fF9KuOI/eJ5WPWnnxvP9rfh
cbL38Zf7yPuT12S9/zkfxoyVqT5xZexMLZaMmskR3Bolk2UjPI/7ik3/pfKL
2He+Pvb3r3MTGy1TDgwbJ1Nu/Pva95jnMWamOmcfo2cai21jZGqJ8TuMv1/+
/39Ly+Qa9uyTD50fHlMNj4kzWYZDk2byBVemyWQHNTdRJuMYN22mPmyYMJNx
xCbLNA+rpspkGXU2eaY+HJ06Ux95J8m0JutNmclW5kyXKTcOzZHJFLyZIZNf
uDVTJo9wa8ZMfZzPnamGcWX2TDYxf/pM+Zg/SyaP8GnOTLkxabZMv/uZM2um
OOczZ1qHOVNkug72Olemeaw3T6Y1cWiBTAbh1kKZDMKSJTMZjR/zZzKOcUtl
6sOA+TK5RmzhTPNwcfFM3w++LYtk6sOzJTL1kXfBTGuy3tKZ8uHNKpkcwYxV
M7WYtHwmp/BmuUyOcL56JpuwZNlMrhGbN9P1sb9lMuUmtkKmHPi0WqbczP9p
+Ofjh8cJw2PlTC6wjxUzjaXWV8rUElsj05oY08tkED5tl6nGqIMwk1/YE2Vq
cSXJZAreBJnmMa7K5Ah1Fmcay7gyk2vE8kx+UVtFppZYlslQ7Ewz5ea8zpQP
V5pMLfZskMkU/OgymYUfa2UyC3sGmfo43ySTKdR9mykHc9YZ/vnXVCatm6nF
yA0z5ca8fqZ9se+NMvVh3nqZxvJdWj9Ty54Wy/Sd4x3aONNY1l4z0/3mXm+R
yS/s2dItrmydyRS82TyTa4zbKZMpEwyPrTyWcTtm+p1HbHs/N/7vgTu4JbZt
JkN5rts4N+c7Ox+u7OIWe/bNZAp+7JbJLPzYI5NZ2LO7+zjfLJOz7HVX52DO
nh6LSXu5pab3c27M2zTTM2H+/u7DvL09Fqv2ccueFs1Ui9zfAzwWww50iz2H
ZXIEe47I5Mtsrg/soLYOzeQa405wHx4cksk4Ykd6HrYdm8kgzDvKfXh5nPvI
e7jXZL0TnQ97zspkCn6c7RafTs1kFvackskUzu/I9N7zvp+cyThit2eqMWIn
OTex05wDq85xbpw7JpO57PvMTO8l+zjdY7mXZ7gldqfXpD6O9vUxf0Qm43Do
wkyW4dBFbjHmkky+YM8FmYxj3PmZXOP8Yo9l3JWZDKImLs9kGRZe4ZbYZZk8
xdFLnZvzqzwPt67JZBBW3ZLJF1y5PpNBWHVjJlMw5jxfB3u6LpNrjLvWOTi/
wfOYc5PnYcCtzo1n5/oec19ucx/P5mrviz3d7Hns6edM7xnvxV2+x7j1YaZ6
4N2/b3isncmkBzJ5hDGPZ/KLWrknk2s494T7qL+7nY/Yg56HSY9mMguHHnIf
dj7mPvLe7zVZ70nnw56XMpmCJS+7xZtnMxmEVc9k8ovzgzLVH78dns5kHLHX
MlmDMU85N7HnnAOTXnFunHskk7/s+8VM3yT28bzH4tkLbol9kMks7uPDvj7m
v+41MentTH5h0ruZPMKYTzLZwd7fyuQa4z5138HD481MDhJ7z/Mw6SM/Nxx6
333s42P3kfcdr8l6nzkfxnyfqT5x5Qe3WPJVJkdw68tMlh3uedxXbPoik1/E
3vD1sb/PnZvY186BYT86N/696nvM8/guU52zj288Ftu+dUtsZKb6oz5/yfT+
Ys9J/aE/w2OB4fF7Jr/w7A+3mPRXJmsw5rdMljFu1L5MoRb/9FjGjdJXXRH7
N5OVePafW2L/ZLIMU/92bs7/5z7mjNZXbuyZoC9fcGWSvuoTM8bsyzIMG7sv
mzBsjL78IjZ6Xzk4H6evOA6N15dN3JsJ+8qNZxP11eLT+H3FWXvcvuYxZ+K+
4uxj0r72gj0L9lXP1N8UffmFQ1P21WLY1H15hCuT9+UX42bqy25cmaqvsYyb
sa9vCbHp+3KKb8gMfbXEpu3LTWybpq/cnM/cVz5cmaWvFnvm68sU/Ji9L7Pw
Y86+zMKeOfrq43yyvq6Pvc42/PO9mebM1ddYTJq7r5ba5Z0iN+aN1dfz4dnw
ntHHPZqnr7E4MW9fLXvaqq9nxjNcqK97iTeL9OURVi3aV4thi/XV4tDifbUY
s0RfLcYs2VeLQ0v11eLi0n21uLhMXy2GLdtXS50t11eLf8v31WLSCn211O6K
fbUYs1JfLQ4lfXlBTa/Sl19YslpffuHQyn2NJbZ6X304tEZfLS6u2VfLdybo
yyx8ivsyjjXCvvqwsNfXWMZFffUxbrq+3hHeobSvfeHQBn3VMLXe78ssDMv7
anGo6KvFmLKvFmOqvlocqvtqcbHpq8XFtq8Ww7q+Wv6uM+ir5bu6Vl8tPq3d
V/vr8FinrxZ71u2rxaqsr72z1/X7Motr2LCv68CV9ewasY366sOejftq8WaT
vlqs2qwvpzBs4b7eO965zfvqw7xN+xrLuC3ch1VbuuXd3drvLz69Ozz2Gh57
D4/t+nIKh7Z3iys79uUR3mzbV80wbo++fKH+dvBYxu3el4PEdu3LLEzazS2x
nftyE9t2cm7O93S+yb0vWqw6uC9T8GafvszCof36MgtX9nUf50cMj1n78mBv
52DO/h6LSQe45b07xLlxbhfvi30f6j6sOtBjce4gt+xpG99L7sthHotnF/dV
e9TcMX35hUnHusWk4/uyBmOO7ss1xp3mZ4wrx3ks407tyx1iJ/dlFq6f4pbY
iX0ZinMnODfnpzsfPp3hFp8u6MsR/DirL6fw6Zy+bMKks93H+VF9ucxez3QO
5pzrsbg1wi1uXejcmHSknwnzL3If9+g8j8W2892yJ2qL3wJ81y/xvcSkp/p6
73nHL+/LLHy6wi0+XdWXTXgzcnis6nE39uULNXqlxzLuhr5MJHZdXzZh2PVu
iV3Tl3F4drVzc36T8+HTzW7x6Z6+HMGPW/tyCp9u78smTLrNfZw/0Jcj2HCL
czDnDo/FrTvd4ta9zo1J13pf7Ps+9+HTXR6LbXe7ZU+X9eU+9+V+j2XtS32P
iT3Sl1n49KhbfHq8L5vw5uG+jGbcc335Qk085rGMe7avbyexp/3cMOkZt8Se
7Ms4nusTzs35886HPS+4xao3+zIFb17qyywceqUvs3DlZfdx/lBfFrPXF52D
Oa96LCa95hYD3nJunHvQz4T5b7sPq173WJx7wy17esdxDHuvL4Nw6+nlhtc+
PLYcHh/15REOfdKXL7jyTV91Qp192JdxjPvWfTjxQV/eEfvU8zDyq+FxeF/+
feY+bPvafeT92Guy3hd9GYdb3zk3Vv3RlzU49ENfZuHQT32ZhSs/uo/zv/sy
BQ9+78sj5n/vfMz/pS+b+F3/p3Nj0m99WcacXx3n/Gevw5zPfR3s9S/PY71/
vCZujZLLIOwZLZcpWDJurnea9/2/vlxj3Hi5+rDh376MIzZ6rnm4OHYux7Fn
jFx9eDZOrj7yjpprTdYbP1c+TJoilx24wn+bp8WeiXPZhB8T5TKI86lzOYIf
E+ayjNj/fH3sb4JcuYlNkisHJvHf/cnN/MeGf954eGwyPCbPZRn7mDTXWJyY
LFdLbJpca+LNdLmcwqSVc9UA7/sMuczCoRlztTg0cy5fcGX6XPMYN1eumqHm
Zso1lnFz5jKO2Oy5nMKeOXK1xGbN5Sa2zZIrN+dz58qHN/PkavFp0VyOYMx8
uZzCngVyOYUl8+fq43zJXI5gwLy5cjBnwVxjcWihXC3fmcVy5ca22XLti30v
nqsPnxbONRbbFsnVsqexcn3neIeWyDWWtafNdb+518vmMguHlsvV4tAKuXzB
lWVyWca41XOZ8v7wWD7XWMatluv3HLFVcj03HFo1V0tspVxu8lxXzJWb8zVy
5cOVNXO12JPnMgU/glxm4UeUyyzsCXP1cb50LovZay9XDubEucZiUpKrpaaL
XLkxb6lcz4T5Za4+zEtzjcWq/vDPX/a1pzFz1SL3t8o1FsPqXC32rJXLEexZ
J5cveEN9YAe1NcjlGuOoGfrwoMtlHLF1c83Dtg1zGYR56+Xqw8uNcvWRd+1c
a7LeprnyYc92uUzBj+3d4tOWuczCni1ymcL5cbnee973zXMZR+zYXDVGbLNc
uYlt5RxYtYNz49wGucxl39vmei/Zx9Yey73cxi2x470m9bF+rutj/k65jMOh
3XJZhkO7u8WYPXP5gj275jKOcbvkco3zPTyWcfvnMoia2DeXZVi4n1tie+fy
FEf3cm7OD/A83Dool0FYdVQuX3Dl0FwGYdXhuUzBmJ19HezpkFyuMe5g5+D8
MM9jzhGehwFHOzee7eh7zH05xn08mwO9L/Z0pOexp8dzvWe8Fyf4HuPWrbnq
gXf/5Fx+YdKpuTzCmHNy+UWtnJTLNcad6z7q70TnI3aa52HSWbnMwqHT3Yed
Z7uPvKd4TdYb4XzYc1kuU7BkpFu8uTCXQVh1QS6/OG9y1R+/Hc7PZRyxK3NZ
gzHnOTexi5wDky53bpw7M5e/7PvSXN8k9nGxx+LZJW6J3ZLLLO7jGb4+5l/l
NTHpulx+YdINuTzCmDty2cHer83lGuPudF87PK7J5SCxm4ZHlsuk2/zccOhm
97GP291H3uu9Juvd5XwY83Cu+sSVR9xiyX25HMGte3NZtrbncV+x6Z5cfhG7
2tfH/u52bmL3OweGPerc+HeF7zHP46Fcdc4+HvBYbHvQLbEncr2zePOkW0za
tBj6Nmz/Gx5P5/ILz55xi0nP5bIGY57yPMa9mssUavFZj2XcK7nqithLuazE
s5fdEnshl2WY+rxzc/6a8+HN625x6INcvuDKm7n8wq23c3mEW2+5j/NPctUw
rrzhHMx5x2Nx6F23+PShc+PZi94X+/7IfVj1nsfy7zXed8ueVii0V9b52GNZ
e5RCtU0tfpHLMkz60i2efZ3LJoz5PJdljPspl+MY85XHMu7HXN8VYt/nMovv
yQ9uiX2by1Cc+8a5Of/Z+TDmF7c49L9cvmDJb7n8wpI/cvmFQ7+7j/PPcjnL
Xn91Dub86bH49Jdb6vhf58a/T/1MmP+f+7hHf3ssZvzjlj195+vgOkctdC+x
Z95C9UZNjFnIMhwaq1CLMeMU8gV7xihkHOMmLmQKNTd2obGMm6iQccQmKGQZ
dTZhoZbYeIU8xdFxC+XmfJJC+TBm0kItDk1fyBcsmbyQX1gy1fDPN+ZyaIpC
fXg2cyFfMGCyQjmYM3Whsfg0TaEWL2colBv/xi+0L/Y9Y6E+/Ju20Fi+UdMV
atnT6IV8577MVGgsa49W6B4Tm72QZTg0R6EWY+Yq5Av2zFbIOMYtWMgajJmz
0FjGLVDo20lsvkLPjb/rzF+oJTZPIU95rnMXys35QoXyYc/ChVqsWqaQKXiz
aCGzcGjxQmbhymKF+jiftZC57HWRQjmYs0ShsZi0ZKEWA5YtlBvnZin0TJi/
XKE+rFqq0FicW7pQy574dxP82y7+PdbyhcZiBL/T+W8J/P1/lUJ+YdKqhVpM
Wr2QNRizciHXGBcXqh/qb7VCYxkXFfKOWFDILBwKC7XE1ixkKM6tUSg350mh
fNiTFmqxqi1kCt70C5mFQ0Uhs3AlL9TH+dqFTMGDrFAO5pSFxmJSVailprtC
uXGuV2hf7HtQqA+r6kJjca4p1LKnlQp9A7gvaxUay9q7F6pD6m/9Qn5h0gaF
WkzaqJA1GLNeIdcYt2Wh956a2LDQWMZtUcgdYpsVMgvXNy/UEtukkKE4t3Gh
3Jxv5XzYs7VbrNqlkCl4s20hs3Bo+0Jm4cp27uN83UIus9dtnIM5O3gsJu3o
FgN2dW6cW6fQM2H+bu7jHu3ksTi3s1v2tGKh7xj3dw/fSxw6v1A98O7vW8gv
TNrPLSYdUMgajNlneEzpcYcXqh/qb3+PZdxhhbwjdkghs3DoULfEDipkKM4d
6NycH+F82HOkW6w6qZApeHN0IbNw6NhCZuHKMe7j/LRCpuDBUc7BnOM8FpOO
d8s352TnxrmDvS/2fYr7sOoEj8W5E92yp70KfQPw/lSPZe09fY+JnVXIL0w6
2y0mnVvIGow5s5BrjLvYz4yaOMdjGXdRod8lxC7wc8OhC90SO6+QoTzXEc7N
+SXOhz2XusWqawuZgjcjC5mFQ1cUMgtXLncf52cUcpm9XuYczLnSYzHpKrcY
cJ1z49zpfibMv959WHW1x+LcNW7ZE/+7kvzv1PK/D3uDx+LZTYU8wrA7CpmC
JfcXqg1q6wG3eHBbIbOw6kH3Ycmthewjdrvj5LqrkJV4dl8hB8l7p9chdksh
K5l/byGzGPdUIUcw5plCBmHGo4WcwpJHCnnE+dnl8H0YHksOj4cLuUbsaedg
/nOFrMGJx5wDn54s5BfrPVHodz/njzvO+UO+VvLeU8hi9nq3r4/zZ71H1ni1
kCP48U6h95h3/L3hsXchA14u5BQ+ve8+/HipkHfEXnGcXK8X8hHD3i5kEHlf
8zrEXizkI/O/KOQFlnzpFm++cosTHxVyB5++dh9mPO/7hMEfO44xHxZyjTkv
OM56H3jvxD4vZBZrf+N8+PFZIReIfeJ8GPapW2LfFbIJhyYv9d7zjk9RquX9
/bGQQdjzcyFTsOSvQrVBbf1QyDXG/e0+bPjeuYn94nm4+EchdzDvV/fh2Z/u
I+9PXpP1/nE+TBqzlB24MlapFntGKWUTfvxXyCDOz/F7utTw+LeQZcTGLWUK
HvzPuYmNWioHJo1dKjcO/V7IVvY9RinL2MdopcbyXRq9VEvsrUK/A3hvfvP1
MX+8Umvi1kSlDMKeSUqZgiVTl/Li5uExYSnXGDdNqT7qeIJSxhGbtNQ8XJyy
1HO7cXhMVqqP5zpVqT7yTlxqTdabtlQ+XJmtlAv4MXupFp9mLGUWlsxQyh3O
v/W7xjs0fSmziI1f6vrY33SlchObqVQOrJqjVG7MG6fUPeZ5zFqq5tnHzKXG
UvezlGqJvVnoNwT3941CNcr5nKXy4eWCpXzBG6yixqgh3gVaanf+UjZhD+8H
fXgwXyn7iC1QKk6uhUtZiXOLlzKOvAuVWofYvKWsZP7Kpd4D/FilVItPqw3/
/G4hn5Yt5Q6GbVSqfnjfNy7V8m4uVyqOPcuUsow5G5aqQ+YsXWrvxFYqdY9Y
e7FSVrLXFUvdL2LLl8qHcyuUaoltUmpNamXRUt8D5q9ear/YGZUyBUuSUtbg
UK+UWTgXlrKMcVWpdwVvglJxYmmpedhZlDIRw7JSfThalupjflxqTdZrSvmC
PeuVqk9cWb9UiyVrl3IHY9Ys5Sb7W6PUdXA+KGUNtnWlvOO8LZWb87VKxcm1
Qanc3PdFSr0L3KN1S9U5+1in1Jqc16Wum72ea4d4VkeWqjfq7OhS9cD7u2Up
U7Bkh1JOYcaObqmtzUt5h1U7uQ8PNitlH7EtHCfX1qXMws7tS9UbebfyOsQ2
tY/M37vUNwBL9nGLH/u6xaddS/mFJXOX+mbzW2CuUvXH+W6OY9supSxjzv6l
LMOenb13YnuV+g6x9nal/GWve5ayjNjuzod5e7gldpTvJfdx21LfBubv5/2y
3mGlTMGSY0vtlb0f53ae4XFIKe+w6nj3UdMHl7KP2KGOk+uIUmbxLI/xMyTv
4V6H2EGlfGT+GaXqiro80y2WnOUWq04qZdMCXp/7iikH+J5h6smO49yJpcxi
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
WK0aIzZ+rdzEJq6VA6umrJUb58asZS77nqzWe8k+Jqk1lns5aa2W2BK11qQ+
xqh1fcyfupZxODR9LctwaIZaLcbMVMsX7JmulnGMm7aWa5zPWGss4+aoZRA1
MVsty7Bw9lotsVlqeYqjM9s1zuesNQ+35q5lEFYtXMsXXJmvlkFYtUAtUzBm
mlrXwZ7mreUa4+aplYPz+WvNY86CteZhwCK1cuPZVLXuMfdl0Vp9PJu5au2L
PS1Uax57os74+wnf76WG/S9Wcmu9WvXAu79sLb8waflaHmHMarX8olaWqeUa
41av1Uf9LV0rH7EVas3DpFVqmYVDK9bqw85Va/WRd7laa7LeGrXyYU9WyxQs
6ddq8SasZRBWBbX84vzvSvXHb4deLeOIlbWswZg1a+UmFtXKgUl5rdw4t3It
f9l3WuubxD7iWmPxLKnVElu3llncx5VqXR/zq1prYlJXyy9MWquWRxizYS07
2HtbyzXGbVSr75/h0dRykNjateZh0vq1nhsOrVOrj31sUKuPvINaa7LexrXy
Ycw2teoTV7Z1iyWb13IEtzarZdkonsd9xaZNa/lFrK51fexvk1q5iW3hHBi2
nXPjX1HrHvM8tq5V5+xjS4/Ftq3cEtvBvynwbKda7mDS+MO/v4zEpuGxay3L
cGj3Wr7gyn617KDmdqllHOP2dx827Ox8xPbwPKzap5Zl1Nme7sPRfd1H3t28
Jusd4HzYc2QtU7DkKLd4c0gtg7Dq4Fp+cb6jr49rO6iWccSOrVXPGHOgcxM7
1Dkw6WjnxqS9a/nOvo+o9f+vMPs4zGPx7HC3xK6sVW/UxF6+PuYf5zUx6aRa
HmHYKbU8wpVzhseStSw5sZZ3jDvXfXhwQi3jiJ3qeRh5Zq1vCd+Z09yHbWe5
j+/AyV6T9UY4H/ZcVssU/BjpFp8urGUW9lxQyxTOr6jlFNd5fi3jiB3v62N/
5zk3sYucA6sud27mH+N7zPO4tJYR7ONij6XuL3FL7IxaLnOdV9fyCKterFUP
/F6+rpZBuHJDLVPw5vZadlBb19byjnF3uA8PrnE+Yjd6Hl7eWqvGMO8m92Hn
be4j7/Vek/XudD7seaiWKfjxsFt8ureWWdhzTy1TOOc336z+rtxdyzhij9Wy
Bg/ucm5i9zkHVj3i3Dh3Sy1/2feDtb5J7ON+j8XXB9wSe6GWWdzHm319zH/c
a+LT07UMwpVna5mCN6/UqjcseaqWd4x71X148GQt+4g953l4+ZKfGyY97z72
8bL7yPuM12S915wPe96vZQp+fOAWn96qZRb2vFnLFM6vqlWXvDdv1DKO2BO+
Pvb3unMTe9s5sOpD58a5R32PeR7v1TKCfbzjsdT9u26J8W8x+Pdc/Juq02vV
Je/xx7WMw6EvahmEK1/VMgVv+O9J2EFtfV7LO8b95D48+KyWfcS+9jy8/L5W
jWHeN+7Dzh/cR94vvSbr/ex82PNPLVPw49/hcXYtn36vZRb2/FbLFM5nbFRL
vPu/1jKO2AyNao/YL85N7A/nwKr/nBvnvqvlL/v+u1bNs48/PZb795dbYjM1
WpOa+NbXx/xRGxmHQ2M2sgyHxmrUYsw4jXzBnjEaGce40Ru5xvnYjcYybqJG
vvMeTdDIMiycsFFLbLxGnuLouI1ycz5xo3m4NWkja3Bo2ka1ijFTNHIEt6Zq
ZBDejNboOtjT5I2MY9xkjXJwPmWjecyZutE86ni6RrmxapRG95j7Mn2jPp7N
JI32xZ6maTSPPX1U633nHZ250T3GpDUb1Rs1MVsjy3Bojka+4Mr8jczCj1kb
Gce4BRr1UXOzNMpHbM5G87Bq3kaWUWdzNerD0fka9ZF39kZrst6CjfJhzFKN
vge4snSjFksWbeQIbi3SyDLOP6lVf/xGWLiRX8SWa+QX3izUKDexxRrlwLBl
GuXGv3ka+c6+l2zkKftYvNFYbFuiUUtsjUZ+cR/nbnR9zF++0Zo4tHIjy3Bo
1Ua+4ErYyA72vlIj4xgXNer7dHis2Mg4Yqs1modVvUbPjWe7eqM+9hE06iPv
Ko3WZL24UT6MqRvVJ640jVos6TdyBLeyRpZ96X1wX7EpbeQXsRUaXR/7Sxrl
JpY3yoFhbaPc+Ldso3vM86ga1Tn7KBqNxbayUUuMf7/Gv6Xl39EOGlmJbU90
Q+eHx2bDY4NGpmDJFo28oM62dIsB6zXyDqu2ch9OrNvIPmLrN4qTa6NGZmHn
5o3qjbwbNlqH2DqNfGT+Zo3sY9zOjUzBkl0bWYMZ2zUyCKu2beQX56u0w2fE
OzE8tmlkHLFdnIP5uzeqbbzZ3jkwaadGv/VZb8dGZnG+g+Ocb+1rJe+mjb4B
7HWT4Z//V+t8N++RNfZr5A5+HNrIZcw4zC21vk8jp7DtcPdhw96N7CO2r+Pk
OqCRjxh2SKNvDHn39zrE9mpkIvNPaGQHTpzoFodOcos9RzWyA6tOdh9+7OH7
hKlHO45JRzYyjjl7Os56R3jvxI5vVP+sfYrzYcZxjWqb2DHOh2fHuiV2WiN3
MOnORnXFu3+XW/5vSmc2cgdLzm7kCMZc2MgL6umMRsYx7iL3YcDpzk3sHM/D
yPMb1RXOnes+vLzAfeQ9y2uy3sXOhzdXN3IEM65xi0kjGzmFN5c1coTzVVu9
p+8Oj0sbuUbs+ka+YMAlzk3scufAp2udG9vOa2Qu+76q0XeIfVzhsZh6pVti
Bzf6/cF7M8LXx/wbvCYm3dLIHSy5rZEjGHPv8FhreKw9PG5uZBzj7nMfdXxT
I++I3e55GHm3nxv23OE+nus97iPvrV6T9e53Plx5spEL+PGUW3x6uJFZWPJQ
I3c4P7XRu8Y79GAjs4jd6Otjfw84N7FHnAOrnnZuzLvO95jn8USjmmcfjw2P
jRvV/eNuiR3U6DcE9/fARjXK+TPOh5evNPIFb7CKGqOG3nFL7b7UyCbsedd9
ePBiI/uIvew4uV5rZCXOvdXIOPK+6nWIvdDISuZ/1ug9wI/P3eLTF27x6YNG
7mDYWK3qh/d97FYt7+aHjmPP+40sY86YreqQOe9578Q+9T1i7TcbWcleP/H9
IvaR8+Hcx26JjdNqTWrljUbfA+Z/6f1i5/eNTMGSHxtZg0PfNDIL575rZBnj
/mj0ruDNt44T+8nzsPO3RiZi2M/uw9Hf3cf8H7wm6/3VyBfsGa1VfeLK6K1a
LPmvkTsY83UjN9nfV74Ozv/XyBps+6eRd5z/7dyc/+s4ucZolZv7/rrfBe7R
qK3qnH2M0mpNzv/0dbPX1Vq9ZzyrhVrVG3W2SKt64P2dsJUpWDJFK6cwY8pW
LbU1fivvsGqqVn14MF4r+4hN0CpOrolbmYWdk7eqN/JO1GodYuO2eubMn7nV
NwBLZmnV4sesrVp8mraVX1jyXKNvNr8Fnm1Uf5xP1yqObdO0sow5s7eyDHum
brV3YjO1+g6x9mSt/GWvM7ayjNj0rfJh3gytWmILt7qX3MdJW30bmD9bq/2y
3vytTMGSxVrtlb0v3qp9fnjM08o7rFqiVR81PXcr+4jNN/zzo41yLdjKLJ7l
oq2eIXkXaLUOsbla+cj8FVvVFXW5UqsWS1Zu1WLV0q1setl74r5iyhyt7hmm
LtMqjnNLtTKLOXO2irPekq32TmyFVu8ra0/S6l3gHi3fyjViy7bKh2fLtWqJ
/drodwz1uXqr9xeH3hv+ee/hsc/w6LVyClfCVqbgTd6q3qi/NVt5x7iiVR9m
rNEqH7Go1TwMy1pZiT1xqz5M7bfqI2/Qak3WS1s5y5yyVW68WbeVL1hSt7IJ
w9pWpmBY06qP8w1a1S3GrNPq+plftcrH/EErv7BqvVa5cW7t4Z9/8T1bq1Wc
867VOsxJWl0He12/1TzW27DVmtizaSt3MGzzVqZgzHatvg04vUkrvxi3vfuo
441bWUZsC8/DyG1afTP4zmzpPrzc1n3k3azVmqy3g/Phyp6tahI/9nKLT7u0
MgtLdm7lzoR+JzALn3ZqZRaxjVpdH/vb0bmJ7eocE/udmsLzb2v1LLn3e7Sq
bfaxm8fyLu/ulti+XhNX9m/lDlZd0qreqLMDW9mEJQe5xZJDWlmDQwd4HuOO
blV71NbBHsu4o1pZRuyIVj7izZFuiR3WylMcPdS5OT/G+bDhWLcYc3qr7wGW
nDA85m3lzUmt/MKVE93H+dmtnKLWj3MODDvZY/HpFLd8c85wbvw73Pti32e6
DwtP9VhMPc0te9q61fePd+gsj2Xt/Xy/udfntbIJS853iyUXtrIGh0a0Mo5x
l7f6LuLKBR7LuJGtfrsTu9TPjb93XuaW2MWtPOW5XuTcnF/hfLhypVvsuamV
KfhxdSuz8OPaVmZhzzXu4/zcVray16ucgznXeSwmXe+Wmr7ZuTHvHD8T5t/i
Psy7wWOx6ka37GmrVrXI/b3VY3nvb2/17uPW3a0cwZ57W/mCN4+0soPauquV
a4x71H14cGcr44jd53nY9lArgzDvfvfh5cPuI+89XpP1HnM+7Hm+lSn48YJb
fHqqlVnY82QrUzi/w9fBPp5oZRyxl1tZgwePOzexp50Dq150bpx7sJW57Pu5
Vu8l+3jGY7mXz7ol9kOrGqM+HvD1Mf8Vr4lPb7QyCFfeamUK3nzY6v3Gktdb
ece4j9yHE6+1so/Y256Hl++3chCT3nEfdn7gPvK+6TVZ72Pnw6dvWjmCMd+6
xaHPWzmFJZ+18ojz71uZwnV+2so1Yq/6+tjfJ85N7AvnwKfvnJv5L/ke8zy+
buUa+/jSYzHjK7fE3vU1YfbPrczCp2k7vfe8y7+18giH/mjlC67816pOqLNf
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
k90bk/byM2H9KZ7jHp3gWmw70ZE9cbb4uwC/66f5XmLSvaHee97xs0KZhU9n
O+LTuaFswpszh5/FXXdJKF84o+e4lrqLQ5lI7sJQNmHYRY7kzg9lHJ6d596M
L3U/fLrMEZ+uD+UIflwRyil8uiqUTZh0pecY3xzKEWy43D1Yc7VrcesaR9y6
wb0x6QLvi33f6Dl8uta12HadI3s6I5T73JebXMu1T/c9Jnd7KLPw6Q5HfLor
lE14c1soo6l7MJQvnIk7XUvdA6F+O8nd5+eGSfc7krsnlHE817vdm/FD7oc9
Dzti1TOhTMGbR0OZhUOPhzILVx7zHONbQ1nMXh9xD9Y84VpMetIRA551b5y7
xc+E9c95Dqueci3OPe3Inp53HsNecMShFx0x7JVQfmHSq46Y9HooazDm5VCu
Ufd+qPPD+XvNtdS9F8o7cu+EMguH3nUk91YoQ3HuzeFnF4/f9hxrPnBvHPoq
lCl4810oLzjrH4fyC5M+DeUXxnwUyjhyH7oH48+cx6QvQv2dHre+dm+c+8YR
n750nmt/7nWs+dZ59vG994JV40Y6e5y5n0KZhUM/O+LQr6F8wZUfQ1lG3T+h
3nXOwS+upe7vUNaQ+zOUU1j+lyO530O5iW2/uTfjf90Pb/5zxKexIjmCMSNH
cgp7Ro3kFJaMEmmO8Q/+fux1pEg9WDNapFocGj1S5NyPHak3tn3i58OzGSfS
HPdojEi12DZmpMie7hz+efPhZ4vhZ7xI9xJ7JohkFj5NGCni1kSRIiZNHCli
0iSRIt5MGinizWSRIhZOHini1hSRIlZNGSni0FSRIhZOHSly/qaJFDnH00aK
2DNdpIhVc0cygvM9QySzcGimSGbhyvSRasnNHGkOe2aJFPltmTVSxKrZIzmF
YXNF8ohrzBFpDvNmi1RL3ZyR5qj7w+8I79A8kfaFVctFOsOc9fkiOYVb80eK
mLRApIhJC0aKeLNQpIg3C0eKWLhIpIhbi0aKWLVYpIhJi0eKmLREpIhJS0aK
Lw0/S0WK2LN0pIhV80baO3tdNpJZfIcVhn9+I5Qry0SqJbdipDnsWSlSxJuV
I0WsWjWSUxg2fqT37v+/k5HmMG+VSLXUrR5pDqvWiBTxZs1IEYfWihSxat1I
TuHQepEirmwQySO8WSfSmaGOc4AvnL/1I9VSt1kkB8ltEsksTNo0UiS3USQ3
sW3DSL0Zc67ohz0jIkWs6kUyBW/CSGbhUBzJLFyJIs0x3i/SGeDdDyL1YE0S
qRaT0kiR964fqTfObRxpX+y7iDSHVVmkWpzLI0X2tL+vw9kqI9XiWR3JIwxr
I5mFYZ0jPg0c8WlLR+zZyhF7tnbExW0cMWxbR9zazhHjt3fEpx0ceV8a74V9
7Og53No5kllYtWskp/BpN0d82iOSTZi0i2up2915cns6j1U7uTd9945kFlZV
ke4N92Ufz+HWXl5H3b6e4/nNGMkkPDrA9xiTLo90Hnj3D3Ydbh3iiFWHRXIK
nw6KZBx1x0ayD2MOdS11x0Qyi9xRkczCp6MdyR0RyS+cO9y9GR/nfpz74x2x
6oxIpmDJiZHMwqqTIzmFTyd5jvE5kUzBkhPcgzWnuBbDTnXEsDPdG5+O9L7Y
91mew6rTXItzpzuypwN9L7kvZ7uWa68dyQPO+YXDPy8fya2LHLHqkkhO4dP5
kYzD6asj+YIrF7uWuqsiGUTuCj83fLrSkdxlkfziuV7q3oyvcT/2da0jDt0W
yRdcuT6SX7h1YySPcOsGzzE+L5K57PU692DNTa7FoZsd8el298azc/1MWH+H
5/DvFtdixq2O7InfBP7eyt9H74rkGp7dE8kjDLsvklkYdr8jPj0YySa8ude1
1D0R6fzgygOupe7xSO6QezSSZbj1mCO5hyOZhaMPuTfjJ90PG55yxKqXI5mC
Jc9EMgurnovkFD496znGr0c681jytHuw5nnXYtgLjhj2invj0yPeF/t+1XP4
9KJrce4lR/Z0t+8l9/E113LtnyOdQ87f25H8wqd3HDHsvUhO4c1bkbyj7tNI
vnAm3nUtdZ9E8p3cR5Fs4rflY0dyH0QyDs/ed2/Gn7kf9nzuiFU/RDIFb76M
ZBYOfR3JLFz5ynOM34xkLnv9wj1Y841rMelbRwz40b1x7g0/E9b/5Dnu0Xeu
xbnvHdnTh/4efM9ffC9xaPpY54F3/49IfmHSn46Y9HckazDm90iuUTdqrPPD
+fvLtdSNEss7ciPFMguHRo4Vyf0byVCc+8e9GY8Wqx/2jDH88wWRrJowlil4
M1Yss3BonFhm4crYseYYTxrLFDwYM1YP1owbqxaTxosV+c2ZKFZvnPvP+2Lf
E8eaw6rxY9Xi3ASxInv6LdJvAPdlkli1XPtX32NyU8byC5OmihUxaZpY1mDM
FLFco27mWOcBV6aOVUvdTLHcITdDrOfGP7vMGCuSmy6WoTzXaWP1ZjxLrH7Y
M2usiFXzxTIFb2aPZRYOzRnLLFyZI9Yc48ljucxeZ4vVgzVzxarFpLljRQyY
P1ZvnJss1jNh/QKx5rBqnli1ODdvrMie+Pcy/Pt4/l38grFq8WzhWB5h2GKx
/MKkxWNFTFoyljUYs2gs16jj3/Vyfjh/S8SqpW75WN6RWzaWWTi0XKxIbulY
huLcUrF6M+bfHdMPe1aKFbFq7Vim4M0qsczCodVimYUrq8aaY9zFOlecg5Vj
9WDN6rFqMWmNWJEzvU6s3ji3TKx9se91Y81h1ZqxanFurViRPW05/PPosc7Z
erFq8WyDWB5h2EaxzMKwjWNFfNokVsSnTWNF7NksVsSezWNFXNwiVsSwEbEi
bgWxIsaHsSI+RbEiZ2jDWHthH3GsOc5cGssj3MpjmYVDvVgRt4pYvuBNFquW
un6sPLkyVp5zn8TqTd86ll+4tX6se8N9aTyHc1WsddS1nuP5LRTrPeUd3cr3
GIdOiHXeOBPbxjILw7ZzxKcdYtmEN9vE8o663WO5xhna3rXU7RbLHXK7xLIM
t3Z1JLdTLLNwdEf3ZryH+3Gm93TEoYNi+YIre8fyC7f2jeURbu3jOcaHxfIF
V/ZyD9bs51oc2t8Rnw52bzzb2fti34d4Dv8OcC2/UQc6sqetfS+5L4e6lmsv
EssDzvlRsczCsKMd8enYWDbhzZGxvKPuFD8zXDnGtdSdHMsdcif6ueHWSY7k
jo9lFs/1OPdmfKr7sa/THHHo/Fi+4MoZsfzCrbNieYRbZ3qO8RGxnGWvp7sH
a852LQ6d44hPF7g3nh3uZ8L6Cz2Hf+e6FjPOc2RPa+dDG7KhKcPPOrnip8PP
pbE8wrArYvmFSVfF8ghjbox1TvDj8liuUXeT5zjHl7kHuau9DpOuj2UWDl3j
Oey8wXP0vdLX5HrXxbKPNTe7N1bdG8sR/Lg1lllYdXssp/DpNs8xfiDWmceS
e2J5xPpb3I/1d8ayDMPuc28cujuWZay5y3nGd/g6rLnW34O93u91XO9BXxOT
Ho3lEVY9HssjXHk+lh2874/Eco26FzyHDQ/Hso/cE16HW88OP4NYxj/pOdx6
znP0fczX5Hovuh8mvRXLDlx52xF7Xo1lE368Essgxu/GcgQ/Xo5lGbmH/P3Y
30vuTe4198Ckd9yb9Ucnw3M6/Mw1/LwZyzL28bprceINR3Lv+Zp480EspzBp
jERngPf9o1hm4dDHjjj0aSxfcOVDr6Pum1hnhjP3iWup+zqWceS+jOUU9nzl
SO7zWG5i22fuzfhb98Ob7xzx6fdYjmDMD7Gcwp6fYjmFJT96jvHfsRzBgO/d
gzU/uxaHfnHkd+YP98a2L7wv9v2n5/DpV9di22+O7OnpWL9n/H3kL9dy7fd9
v7nXIyUyC4dGThRxaNREvuDKf7Eso26c4fwlsSwZJVEtdWMP/3xxrNyYiZ4b
/5v8WIkiudETuclzHS1Rb8bjJuqHK+MlitgzeSJT8GOCRGbhx0SJzMKeCRPN
Mf43lsXsdfxEPVgzcaJaTJokUeRMT5GoN+b942fC+ikTzWHepIlqsWqyRJE9
PRXrLHJ/p0pUi2FTJ4rYM0MiR7BnpkS+4A3nAzs4W9Mnco06zgxzeDBdIuPI
zZxoHbbNnsggzJsl0RxezpFojr4zJrom15s7UT/sWTSRKfixWKKIT/MnMgt7
5ktkCuNNE733vO/zJjKO3CaJzhi5eRL1JrdAoh5YtXii3jg3WyJz2fciwz8/
E2sfCyaq5V4ulCjyzm6W6Jqcj1kTfT/WL5nIOBxaNpFlOLRcoogxKyTyBXuW
SWQcdUsnco3x8olqqVstkUGciVUSWYaFqyaK5FZK5CmOrmjXGK+eaB1urZnI
IKzaMJEvuLJOIoOwar1EpmDMUom+B3taO5Fr1K2VqAfjdROtY836idZhwEaJ
euPZEonuMfdl40RzPJs1Eu2LPW2QaB17OsY2815snuge49Zeic4D736QyC9M
ihJ5hDH9RH5xVkYkco26ItEc52+LRP3IxYnWYVKeyCwcShLNYWcv0Rx9w0TX
5Hplon7Ys3UiU7BkG0e8aRMZhFVNIr8YT5Po/PF3hzqRceS2T2QNxlSJepPr
3AOTtnVvnMsS+cu+t0r0m8Q+Bq7Fsy0dye2ZyCzuY5ro+7F+B18Tk3ZJ5Bcm
7ZbII4zZN5Ed7H3nRK5Rt5/nph1+dkrkILndvQ6T9vZzw6E9PMc+9vEcfXf1
Nbne/u6HMUckOp+4cqQjlhycyBHcOiiRZTN6HfcVmw5M5Be5Hf392N8B7k3u
EPfAsKPcG/+28z3meRye6Jyzj0Ndi22HOZJbOdH543wem+j9xZ550qE/w/jo
8HNCIr/w7ERHTDo5kTUYc3wiy6g7O5EpnMWTXEvdWYnOFbkzElmJZ2c6kjst
kWWYeurws7DHp3uONee4N/ZclsgXXLkq0fnEjPMTWYZhFyayCcPOS+QXuXPd
g/FFzuPQJYls4t5c7t54doUjPl3qPNe+2OtYc6Xz7ONq7wV7Hkt0njl/1yXy
C4eud8SwGxN5hCvXJvKLujsS2Y0rN7iWutsT/ZaQuzWRU/yG3OZI7uZEbmLb
Te7N+E73w5W7HLHn4USm4Mc9iczCj/sSmYU993qO8TX+fuz1bvdgzf2uxaQH
HDm7j7g35l3g58OzedRz3KMHXYsTDzmyp1FTPTOe4eO+l3jzZCKPsOopRwx7
2hGHnnHEmGcdMeY5Rxx63hEXX3DExRcdMewlR87Zy47494ojJr3qyNl9zRFj
XnfEoU8SecGZfjORX1jydiK/cOgN15J7x3M49K4jLr7nyO/MB4nMwqePExnH
NT70HBa+71rqPvIcdbckekd4hz71vnDo90RnmLP+eSKzMOwLRxz60hFjvnLE
mK8dcegbR1z81hEXv3PEsO8d+WedHxz5Xf3REZ9+cjxu+PnZEXt+ccSqz7x3
9vpbIrP4Dn8OP6ckcuVX15L7y3PY87cj3vzjiFX/JXIKw55I9N79/zcw1Rzm
/eta6kZONYdVo6SKvLujpXp/8Ym/0/PvQ/l3B2OmcgqHxkoVcWWcVB7hzRip
zgx1E6fyhfM3dqpa6iZK5SC5CVKZhUkTporkxkvlJraNm6o340lS9cOeSVNF
rJoulSl4M3kqs3BoylRm4coUqeYYz5TKFDyYLFUP1kyVqhaTpk4Vee+mT9Ub
58ZPtS/2PUOqOayaJlUtzk2bKrKn0VPdS+7LjKlqufZyqc4eZ262VH5h0uyp
IibNmcoajJk1lWvULZDqGePKHKlqqZs/lTvk5k1lFq7PlyqSmzuVoTg3V6re
jBdM1Q+fFkoV8WnpVI7gxyKpnMKnxVLZhEmLpppjPEsql9nrwql6sGbxVLW4
tUSqiFvLpOqNSTOneiasXzbVHPdoyVS12LZUqsieOFv8XYDf9eVT3UtMqlO9
97zjK6cyC59WSRXxabVUNuHNSsM/v5Wobt1UvnBGV01VS906qUwkt1YqmzBs
7VSR3BqpjMOz1VP1Zrxeqn74tH6qiE9bpHIEPzZM5RQ+bZzKJkzaKNUc4yiV
I9iwQaoerNkkVS1ubZoq4taIVL0xac1U+2LfQao5fNosVS22bZ4qsqcVU7nP
fQlT1XLtFVLdY3J5KrPwqZcq4lORyia8yYZ//iNR3SCVL5yJfqpa6rpUv53k
Gj83TGodyVWpjOO5lql6M97S/bBnK0es2jmVKXizTSqzcGi7VGbhyraeY5yk
spjfk63dgzXbuxaTdnDEgF3cG+fiVM+E9bt6Dqt2dC3O7eTInnZzHsN2d8Sh
PRwxbO9UfmHSPo6YtF8qazBmr1SuUXdoqvPD+dvXtdQdkso7cgelMguHDnYk
d0AqQ3Fuf/dmfKDnWHOYe+PQCalMwZtTUnnBWT8ylV+YdHQqvzDmiFTGkTvc
PRgf4zwmHZfq7/S4daJ749xJjvh0vPNc+1ivY83JzrOPU70XrLoh1dnjzJ2R
yiwcOtMRh85O5QuunJ7KMuouSvWucw7Oci11F6ayhtz5qZzC8gscyZ2byk1s
O8e9GV/sfnhziSM+XZvKEYy5LJVT2HNFKqew5HLPMT7N34+9XuoerLnStTh0
lSPn/jr3xraj/Hx4Ntd7jnt0tWux7RpH9tTLhud6GP8efm70vcSem1OZhU+3
OOLWrY6YdJsjJt3uiDd3OOLNnY5YeJcjbt3tiFX3OOLQvY5YeJ8j5+9+R87x
g8NPmsqehxyx6vlURnC+H0llFg49lsosXHnYteQe9xz2POHIb8uTjlj1dCqn
MOy5VB5xjWc8h3lPuZa6Zz1H3Xmp3hHeoRe8L6z6KNUZ5qy/lMop3HrZEZNe
ccSkVx3x5jVHvHndEQvfcMStNx2x6i1HTHrbEZPeccSkdx33HH7ec8Se9x2x
6kXvnb1+mMosvsPH/h648oFryX3iOez51BFvPnPEqi9SOYVhN6V67/7/O+k5
zPvctdR95Tms+toRb75xxKFvHbHqh1RO4dCPjrjycyqP8Ob7VGeGOs4BvnD+
fnItdX+mcpDc76nMwqQ/HMn9mspNbPvFvRn/7X7Y848jVo2RyRS8+S+VWTg0
ciazcGWkTHOM5xj++YFU7/6/7sGaUTLVYtKomSLv3ZiZeuPcb94X+x4r0xxW
jZapFudGzxTZ05yZrsPZGjtTLZ6Nm8kjDBs/k1kYNkGmiE8TZor4NFGmiD0T
Z4rYM0mmiIuTZooYNlmmiFuTZ4oYP0WmiE9TZoq8L+Nl2gv7mCrTHG5Nk8ks
rJouk1P4NH2miE8zZrIJk6bNVEvdDJny5GbKlMeqqTP1pu8smczCqnEy3Rvu
y6yZ5nBr5kzrqJst0xyGPZrKJDyaK9M9xqQNMp0H3v15M9Xh1nyZIlYtkMkp
fJonk3HULZ7JPoyZP1MtdYtlMovcIpnMwqdFM0VyC2XyC+cWzNSb8RKZ+nHu
l8wUsWqlTKZgydKZzMKqZTM5hU/LZJpjvFomU7BkqUw9WLNcploMWz5TxLCV
M/XGp4Uz7Yt9r5JpDqtWyFSLcytmiuxp7kz3kvuyaqZarv1dKg8452tl8he3
1s4UsWrdTE7h05qZjKNuk0y+4Mo6mWqp2ziTQeQ2zPTc8GmjTJHc+pn84rmu
l6k3400z9WNfm2WKOJRm8gVXtsjkF24FmTzCrRGZ5hivkclc9rp5ph6sCTPV
4lCUKeJTlqk3nq2e6ZmwPs80h39xplrMSDJF9sRvAn9v5e+j/Uyu4VmZySMM
qzOZhWGNIz51mWzCmypTLXXbZTo/uNK6lrptM7lDbutMluHWNo7ktsxkFo4O
3Jvx9u6HDTs4YtWemUzBkp0ymYVVu2RyCp929hzjfTOdeSzZ0T1Ys6trMWw3
Rwzby73xaSvvi33v7Tl82t21OLeHI3sqMt1L7uM+ruXaZ2U6h5y/AzP5hU8H
OWLYIZmcwpsDMnlH3TGZfOFMHOxa6o7O5Du5I4ef2TP9thzlSO6wTMbh2aHu
zfhY98Oe4xyx6vRMpuDNCZnMwqGTMpmFKyd6jvH+mcxlr8e7B2tOdi0mneKI
AWe4N87t52fC+jM9xz061bU4d5ojezrc3wODz/a9xKGHMp0H3v3zM/mFSRc4
YtJFmazBmPMyuUbdlZnOD+fvQtdSd0Um78hdlsksHLrckdwlmQzFuYvdm/FV
7oc9Vzti1S2ZTMGbazOZhUPXZzILV67zHOM7MpmCB9e4B2tucC0m3ejIb86t
7o1zl3pf7Ps2z2HVTa7FuZsd2dO5mX4DuC+3u5Zrn+N7TO6eTH5h0r2OmHR/
Jmsw5u5MrlH3WKbzgCv3uZa6RzO5Q+5hPzf+2eURR3IPZjKU5/qAezN+3P2w
5wlHrHoxkyl481Qms3DomUxm4crTnmN8VyaX2euT7sGaZ12LSc85YsBL7o1z
d/qZsP5lz2HV867FuRcc2RP/XcWK/vezr7gWz17L5BGGvZnJL0x6yxGT3slk
Dca8kck16vhvxzg/nL+3XUvdR5m8I/dBJrNw6ENHcu9lMhTn3nVvxp+4H/Z8
6ohV32cyBW8+z2QWDn2ZySxc+cJzjCfMda44B5+5B2u+ci0mfe3Imf7BvXHu
fe+Lff/oOaz6dvg5IpNz3zmyp4lyXYdz9pNr8eyXTB5h2G+ZzMKw3x3x6Q9H
fPrTEXv+csSevx1x8R9HDPvXEbf+c8T4kXJFfBo5V+QM/eq9sI9Rcs1x5kbL
5RFujZHLLBwaM1fErbFz+YI3o+eqpW6sXHly4+TKc+5HzdWbvuPl8gu3fva9
4b6Mn2sO58bNtY66CXLN8fxezfSe8o5OnOse49CSuc4bZ2KyXGZh2OS5Ij5N
mcsmvJk0l3fUzZDLNc7QFLlqqZs+lzvkps1lGW5NlyuSmzqXWTg6Va7ejGfM
1Y8zPVOuiENz5/IFV2bJ5RduzZbLI9yaNdcc4/lz+YIrM+fqwZrZc9Xi0By5
Ij7Nk6s3nk2Ta1/se95cc/g3Z65afqPmyhXZ0yS57iX3Zb5ctVz79UwecM4X
zmUWhi2SK+LTYrlswpuFcnlH3bK5nhmuLJqrlrplcrlDbqlczw23ls4VyS2R
yyye6+K5ejNeLlc/9rV8rohDa+TyBVdWzOUXbq2cyyPcWinXHOMFcznLXlfI
1YM1q+SqxaFVc0V8WjNXbzxbINczYf1auebwb7VctZixeq7Invj34Pzvn/xv
n+vmsgyH5qqG978c3v/hZ8NcfmHSJsM/f5PJmDDXOcGPDXK5Rl2Ua45zvH4u
B8ltmmsdJo3IZRYObZZrDjuDXHP03SjXNfFvi1z2sSbO1Rur6lyO4Eeayyys
ynM5hU9ZrjnGXa4zjyVVLo9Yn+Tqx/p+LsswrHFvHCpzWcaaIleecS/XdViz
ea7vwV5br+N6A18Tk7bJ5RFWbZfLI1zZNZcdvO9b53KNut08hw1b5bKP3PZe
h1s75/otwfgdPIdbu3iOvtv6mlxvd/fDpANy2YErBzpiz965bMKPvXIZxPjg
XI7gx565LCO3pb8f+9vDvcnt4x6YdJB7s37R3vDcDeNzw8/+uSxjH/u6Fif2
cyR3iK+JN4flcgqTrs51Bnjfj8hlFg4d6YhDR+fyBVcO9zrqTsp1ZjhzR7mW
uhNzGUfu+FxOYc8JjuSOzeUmth3j3oxPdj+8OcURn87N5QjGnJbLKew5I5dT
WHK65xhfmMsRDDjVPVhzpmtx6CxHfmfOc29sO877Yt/new6fznYttp3jyJ52
yvV7xjt0gWu59qG+39zrS3OZhUOXOeLQFbl8wZVLcllG3fW5TFlv+LnctdRd
l+u/4yd3jZ8b/43/tY7krsrlJs/1SvdmfIP74cqNjthzdy5T8OPmXGbhx225
zMKeW4efjT2+OJfF7PUm92DN7a7FpDscOdP3uDfmXeRnwvp7PYd5d7oWq+5y
ZE875jqL3N/7XIth9ztizyO5HMGex3L5gjecD+zgbD2cyzXqnvMcHjyUyzhy
j3sdtj2dyyDMe8JzePmM5+j7qK/J9Z53P+x5I5cp+PGmIz69nMss7HkplymM
/8j13vO+v5jLOHK/5zpj5F5wb3KvuAdWveXeOPdULnPZ9+u53kv28apruZev
OZL709fkfDzp78f6d3IZh0Mf5LIMhz50xJiPc/mCPe/nMo6693K5xvgj11L3
ZS6DOBOf57IMC79wJPdpLk9x9BP3ZvyV1+HWN7kMwqpfcvmCK9/nMgirfsxl
Csa86+/Bnr7L5Rp137oH4x+8jjU/eR0G/OreePa27zH35TfP8Wy+9r7Y089e
x54W6+k94734y/cYt2bp6Tzw7v+byy9MGqknjzBmzJ784qz8k8s16sbqaY7z
97f7kRu5p3WYNHpPZuHQKD3NYecYPc3R9z9fk+uN3VM/7JmkJ1OwZNKeIt6M
35NBWDVeT34xfiDX+ePvDuP2ZBy5KXqyBmPG6ak3uQl66oFJk/XUG+dG68lf
9j1xT79J7GPCnmrxbKKeIrmZezKL+zhqT9+P9VP2dE1Mmq4nvzBphp48wpjZ
e7KDvU/bk2vUzdHT3IPDzzTDP9+SKzdjT+swadaenhsOzdTTHPuYrac5+k7f
0zW53pw99cOYhXo6n7iycE8RS+btyRHcmqcnyx71Priv2DR3T36Rm6qn74fT
c/XUm9x8PfXAsEV66o1/k/d0j3keC/Z0ztnH/D3VYtsCPUVyn+U6f5zPxXt6
f7Hn+eGftxp+th5+lurJLzxbuqeIScv2ZA3GLNmTZdSt0pMpnMVleqqlbuWe
zhW5FXuyEs9W6imSW74nyzB1uZ56M16hpznWrNpTb+xZvydfcGXjns4nZqzR
k2UYtlZPNmHY6j35RW61nnowXrunPA6t25NN3JsNeuqNZxv2FPFpvZ7yXHud
ntaxZqOe8uxjk572gj3b9HSeOX+b9+QXDm3RU8SwoCePcGWznvyiLu/JblwZ
0VMtdVlPvyXkkp6c4jck7SmSi3pyE9vCnnoz7vXUD1f6PUXs2bInU/Cj7Mks
/Kh7Mgt7qp7mGG/a0/djr0VPPVjTuBaTWsdR/U7RG/PW7On58Gy29hz3qHMt
Tgwc2dMVPT0znuG2vpd4s31PHmHVDo4YtqMjDu3kiDE7O2LMLo44tKsjLu7m
iIu7O2LYHo6csz0d8W8vR0za25Gzu+/wM3VPxuzniENH9+QFZ/qAnvzCkoN6
8guH9nctuYM9h0OHOOLioY78zhzek1n4dFRPxnGNIzyHhYe5lrojPUdd3NM7
wjt0jPeFQ+f1dIY568f1ZBaGHe+IQyc4YsyJjhhzkiMOneyIi6c44uKpjhh2
miP/rHO6I7+rZzji05mOSww/Zzliz9mOWHWs985ez+3JLL7D+f4euHKOa8ld
4DnsudARby5yxKpLenIKw7br6b37/2+g5zDvYtdSd5nnVh1+Lnfk3b2yp/cX
n74vhs9p+Dl6+LmmJ6dw6FpHXLm+J4/w5uqezgx1t/XkC+fvOtdSd2tPDpK7
uSezMOkWR3I39uQmtt3g3oxvdz/sucMRqx7syRS8uasns3Donp7MwpW7Pcf4
0Z5MwYM73YM197oWk+5z5L17yL1x7ibvi30/7Dmsut+1OPeAI3u6yveS+/KI
a7n2Rz2dPc7ckz35hUlPOWLSMz1ZgzFP9OQadS/7GePK066l7qWe3CH3Qk9m
4fqLjuSe68lQnHvWvRm/4n749KojPr3XkyP48XpPTuHTmz3ZhElveI7x4z25
zF5fcw/WvOVa3HrbEbfed29MeszPhPUfDj/7+B6941pse9eRPXG2+LsAv+sf
+15i0rh9vfe845/3ZBY+feGIT1/1ZBPefDb8HOi6H3vyhTP6pWup+6EnE8l9
15NNGPa9I7lvejIOz752b8Y/uR8+/eyIT//05Ah+/NqTU/j0e082YdJvnmM8
cl+OYMMv7sGaP1yLW3864ta/7o1J33pf7Ps/z+HTX67Ftr8d2dOnPbnPfRmp
r1qu/YnvMbnR+zILn8boK+LTWH3ZhDej9WU0dRP25QtnYsy+aqmboK/fTnLj
9fXcMGn8viK5cfoyjuc6dl+9GU/UVz/smbiviFXT9GUK3kzal1k4NHlfZuHK
ZH3NMR61L4vZ6yR99WDNFH3VYtKUfUUMmLav3jg3Sl/PhPXT9TWHVVP1VYtz
U/cV2dP0feUxbIa+Ig7N2FfEsFn68guTZu0rYtLsfVmDMTP35Rp18/V1fjh/
s/VVS928fXlHbu6+zMKhefqK5Obsy9CHhp85+urNeK6+5lgzf1+9cWjJvkzB
m2X78oKzvlBffmHSIn35hTEL9mUcuQX66sF40b7ymLR4X3+nx62l+uqNc0v3
FfFpib7yXHuxvtaxZpm+8uxjub72glVBX2ePM7diX2bh0Ep9RRxapS9fcGWF
viyjbp2+3nXOwcp91VK3dl/WkFuzL6c+Gn7W6iuSW60vN7Ft1b56M163r354
s15fEZ8278sRjNmgL6ewZ6O+nMKSDfuaY7x8X9+Pva7fVw/WbNxXLQ5t0lfk
3G/RV29sW7iv58OzGdHXHPdo075qsW2zviJ7GmP4238BZ3X4Cfu6l9gT92UW
PiV9RdxK+4qYlPUVMSnvK+JNr6+IN/2+IhYWfUXcKvuKWFX1FXGo7itiYePI
+WsdOcedI/YMHLFq176M4Hxv1ZdZOLRNX2bhypauJbet57BnO0d+W7Z3xKod
+3IKw3bpyyOusZPnMG8H11K3s+eoW2P4+aCnd2g37wurjujrDHPW9+jLKdza
0xGT9nLEpL0d8WYfR7zZ1xEL93PErf0dseoAR0w60BGTDnLEpIMdZxp+DnHE
nkMdsWp37529Ht6XWXyHI/09cOUw15I7ynPYc7Qj3hzjiFXH9eUUhkV9vXe8
c8d7DvOOdS11J3gOq050xJuTHHHoZEesOq0vp3DodEdcObMvj/Dm1L7ODHWc
A3zh/J3hWurO78tBcuf2ZRYmnedI7uy+3MS2s9yb8YXuhz0XOWLVNX2ZgjeX
9GUWDl3Wl1m4cqnnGD/d1xng3b/YPVhzuWsx6crhZ/W+3rtr3RvnzvG+2Pd1
nsOqq1yLc1c7sqdnfB3O1vWuxbMb+/IIw27uyywMu8URn251xKfbHLHndkfs
ucMRF+90xLC7HHHrbkeMv8cRn+515H25yXthH/d5Drce6MssrHqoL6fw6WFH
fHq0L5sw6UHXUveI8+Qecx6r7ndv+j7Rl1lYdYPvDfflSc/h1uNeR91TnuP5
bd2XSXj0rO8xJv3c13ng3X/Bdbj1oiNWvdyXU/j0fF/GUfdWX/ZhzEuupe7N
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
tdRtMfzzD4Vym5V6bvxv8puXiuQ2KeUmz3XjUr0ZB6X64UpYKmJPUcoU/IhL
mYUfaSmzsCcpNcd43VIWs9eoVA/WZKVqMSkvFTnTZanemLdOqWfC+qrUHOb1
StViVb9UZE9TlTqL3N+6VC2GNY7Ys1UpR7Bnm1K+jO3zgR2crS1LuTaGzwxz
eDAoZRy5bb0O23YsZRDmbec5vNzJc/Td2tfkeru6H/bsV8oU/NjfEZ/2LGUW
9uxRyhTG55d673nfdy9lHLnzSp0xcru5N7m93AOrDnBvnNuhlLnse99S7yX7
2Nu13Mt9HMld4GtyPrb392P9QaWMw6HDSlmGQ4c7YsyRpXzBnkNLGUfdIaVc
Y3yEa6k7vpRBnIljS1mGhcc5kju6lKc4epR7Mz7B63DrpFIGYdVZpXzBlVNL
GYRVp5cyBWMO9vdgT6eUco26k92D8Wlex5ozvA4DznZvPDvQ95j7cu7ws7Sf
zYneF3s60+vY05ul3jPeiwt9j3Hr8VLngXf/klJ+YdJlpTzCmGtL+cVZubiU
a9Rd5znO30XuR+5yr8Okq0uZhUNXeA47r/EcfS/1Nbne9e6HPXeUMgVL7nTE
m5tLGYRVN5Xyi3Fb6vzxd4cbSxlH7p5S1mDMDe5N7hb3wKS73BvnrirlL/u+
vdRvEvu41bV4dpsjucdKmcV9vNLfj/X3+pqY9GApvzCJ/48THmHMU6XsYO8P
lHKNuqc91w0/95dykNwjXodJT/i54dCjnmMfT3qOvg/5mlzvGffDmFdLnU9c
ec0RS14o5QhuPV/Ksq29jvuKTc+V8ovcff5+7O9Z9yb3ontg2OvujX93+x7z
PF4pdc7Zx0uuxbaXHckdU+r8cT7fKvX+Ys9u1dCf4WfS4efdUn7h2XuOmPRB
KWsw5p1SllH3eSlTOIvvu5a6z0qdK3KflLISzz51JPdRKcsw9UP3Zvyx51jz
hXtjz0+lfMGV30qdT8z4upRlGPZtKZsw7KtSfpH70j0Yf+c8Dv1Qyibuzc/u
jWe/OOLTj85z7e+9jjW/Os8+fvdesGeySueZ8/dXKb9w6G9HDPu3lEe48mcp
v6gbo5LduPKPa6kbvdJvCblRKznFb8holSK5kSq5iW3/uTfjMSv1w5WxKkXs
mbiSKfgxTiWz8GO8SmZhz7iV5hj/4e/HXseu1IM141eqxaQJKkXOLu8UvTHv
Gz8fng3vGXPcowkr1eLERJUie9qw0jPjGU5e6V7izZSVPMKqqSpFDJu6UsSh
aSpFjJm2UsSY6SpFHJq+UsTFGSpFXJyxUsSwmSpFztnMlSL+zVIpYtKslSJn
d7ZKEWNmrxRxaJFKXnCm56zkF5bMXckvHJqjUi25eSrN4dC8lSIuzlcp8juz
QCWz8GnhSsZxjQUrzWHh/JVqqVuo0hx1owz/fE6pd2jRSvvCodUrnWHO+uKV
zMKwJSpFHFqyUsSYpSpFjFm6UsShZSpFXFy2UsTF5SpFDFu+UuSfdVaoFPld
XbFSxKeVKsW3h5+VK0XsWaVSxKrFKu2dva5WySy+wxqVvgeurGrXyK1ZaQ57
1qoU8WbtShGr1q3kFIZNUem9451br9Ic5q1TqZa69SvNYdUGlSLv7kaV3l98
4u/0/PtQ/t3BppWcwqHNKkVc2aKSR3izSaUzQ11ayRfO3+aVaqlLKjlILqpk
FibFlSK5oJKb2DaiUm/GWaV+2JNXilg1qGQK3vQrmYVDZSWzcKWoNMd4m0qm
4EGvUg/WVJVqMakZfkau9N5t6d44F1baF/veynNY1boW5zpH9rRxpXvJfdna
tVz7iEpnjzO3QyW/MGlHR0zauZI1GLN9Jdeo26vSM8aVnVxL3Z6V3CG3eyWz
cH0PR3K7VjIU53Zxb8Z7ux8+7eOIT4dWcgQ/9qvkFD4dUMkmTNrfc4y3q+Qy
e93XPVhzoGtx6yBH3DrMvTFpWz8T1h/uOe7Rwa7FtkMc2RNni78L8Lt+pO8l
Jt1Q6b3nHT+2kln4dJwjPp1QySa8OabS//+cutMr+cIZPd611J1WyURyp1Sy
CcNOdSR3UiXj8OxE92Z8hvvh05mO+HRRJUfw4+xKTuHTuZVswqRzPMf4skqO
YMNZ7sGa81yLW+c74tbF7o1JJ3tf7PsSz+HTBa7Ftgsd2dPRldznvlzqWq59
lO8xuasqmYVPVzvi07WVbMKbKysZTd0tlXzhTFzjWupurvTbSe5GPzdMusmR
3PWVjOO5XufejG91P+y5zRGr7q9kCt7cUcksHLqrklm4cqfnGF9RyWL2ert7
sOZu12LSPY4Y8IB749zlfiasf9BzWHWva3HuPkf29JDzGPawIw494ohhj1fy
C5OeHH7qSiY9XckajHmskmvUvVTp/HD+nnItdS9W8o7c85XMwqEXHMk9W8lQ
nHvGvRk/5znWvOzeOPRuJVPw5sNKXnDWX6vkFya9UckvjHm1knHkXnEPxm86
j0lvV/o7PW695944974jPr3jPNd+y+tY84Hz7OMj7wWr/q109jhzn1YyC4c+
c8ShLyr5giufVLKMuu8rveucg89dS913lawh900lp7D8W0dyX1VyE9u+dG/G
P7gf3vzoiE9/VXIEY36u5BT2/FrJKSz5xXOMP/b3Y68/uQdrfnMtDv3uyLn/
272x7XU/H57NP57jHv3hWmz705E9XVMPz+nws/bw85/vJfaMXMssfBqlVsSt
UWtFTBqtVsSk0WtFvBmjVsSbMWtFLByrVsStsWtFrBqnVsShcWtFLByvVuT8
jV8rco4nqBWxZ8JaEaumq2UE53viWmbh0KS1zMKViWrVkpus1hz2TF4r8tsy
Ra2IVVPVcgrDpq3lEdeYutYc5k1Zq5a6aWrNUfe13xHeoelr7QurFqp1hjnr
M9ZyCrdmqhUxaeZaEZNmqRXxZtZaEW9mqxWxcPZaEbfmqBWxas5aEZPmqhUx
ae5aEZPmqRUfHX7mrRWxZ75aEatmqLV39rpgLbP4DgvX+h64ssDwz09Uyi1S
aw57Fq0V8WaxWhGrlqjlFIaNVOu9+//vZK05zFu8Vi11S9Waw6qla0W8WaZW
xKFla0WsWqGWUzi0Yq2IKyvX8ghvlq91ZqjjHOAL52+lWrXUrVnLQXKr1zIL
k9aoFcmtWstNbFulVm/GnCv6Yc86tSJWbVrLFLxZr5ZZOLRBLbNwZf1ac4x3
rHUGePfXrdWDNRvWqsWkjWpF3rvNavXGudVq7Yt9b15rDqs2rlWLc5vUiuxp
J1+Hs7VFrVo8C2p5hGFRLbMwLK4V8SmpFfEprRWxJ6sVsSevFXGxVytiWL9W
xK2iVsT4slbEp8pO8b6EtfbCPupac7jV1jILqwa1nMKnLR3xaetaNmFS51rq
tnKe3DbOY1Xj3vTdrpZZWDWi1r3hvmzvOdza1uuo28FzPL9JapmERzv7HmPS
WbXOA+/+bq7Drd0dsWrPWk7h0661jKPugFr2YcwerqVu/1pmkdu3lln4tJ8j
ub1r+YVze7k34wPdj3N/kCNWHV3LFCw5pJZZWHVYLafw6VDPMT6+lilYcrB7
sOZw12LYEY4Ydox749M+3hf7PtZzWHWka3HuKEf2tIvvJfflONdy7eVqecA5
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
u0Dk7E7cyibs4f1gDg8mamUfuUla5ek1eSsrcW7qVsbRd7JW1yE3YSsrWT9H
q/cAP+ZsFfFprlYRn2Zs5Q6GrdHq/PC+r9kq8m7O1CqPPTO0sow1q7c6h6yZ
vtXeyc3e6h5x7alaWcleZ2t1v8jNMvzzPY2cm7VVJLdWq2tyVqZs9XvA+rlb
7Rc7F2xlCpYs3MoaHJqvlVk4t0Ary6hbqtW7gjfzt8qTW6TVOuxcopWJGLZo
qzkcXbLVHOsXanVNrrdMK1+wZ5VW5xNXVm0VsWTFVu5gzLyt3GR/87T6HoyX
b2UNti3XyjvGy7bqzXiFVnl6rdaqN/d9ilbvAvdo5VbnnH2s1OqajJdu9b3Z
6wF2iGe1TavzxjnbrtV54P1dv5UpWLJZK6cwY/NWkbO1bivvsGqLVnN4sE4r
+8it1ypPrw1bmYWdm7Y6b/TdoNV1yK1tH1mft/oNwJJeq4gf/VYRn8JWfmHJ
+K1+s/m7wHitzh/jqFUe24JWlrGmbGUZ9oxotXdyWavfIa69SSt/2WvayjJy
cat+mJe0iuS29b3kPm7c6reB9UWr/XK9LVuZgiU7tNore9/RcYLhp2vlHVbt
5DnOdNvKPnID5+m1dSuzeJbb+xnSdytfh1zTykfW793qXHEu93HEkn0dsWrX
VjZN4utzXzGlanXPMHU353Ful1ZmsaZuled6O3vv5PZq9b5y7Y1avQvcoz1b
uUZud/fDsz0cyS3e6u8xnM8D/f7i0Azd0JthvHP4OXT4mbmVK4e3MgVvjmt1
3jh/B7fyDs+O9xxmHOR+5I7wOgw7ppWV2HOk5zD1WM/R9zBfk+sd3cpZ1pzg
3nhzVitfsOSkVjZh2CmtTMGwkz3H+NxW5xZjzvT3Z/2J7sf601r5hVVnuzfO
nTH8LOY1pzvP+FRfhzVH+Xuw13O8juud52tiz0Wt3MGwS1qZgjFXt/ptwOkL
W/lF3TWe4xxf0Moycpd6HUZe2eo3g9+ZyzyHl1d5jr4X+5pc71r3w5XbWp1J
/LjdEZ9ubGUWltzQyh3GvBOYhU/XtzKL3Pn+fuzvOvcmd5N7YNUd7s36X/0s
ufe3tjrb7ONm1/Iu3+JI7i5fE1fuaeUOVn3Y6rxxzu5rZROW3O+IJQ+2sgaH
7vU66p5odfY4Ww+4lrrHW1lG7tFWPuLNY47kHm7lKY4+5N6Mn3Q/bHjKEWNe
bvV7gCXPtPIIb55r5ReuPOs5xq+3coqz/rR7sOZ51+LTC4785rzi3vj3iPfF
vl/1HBa+6FpMfcmRPV3R6vePd+g113Ltu32/uddvt7IJS95xxJL3WlmDQ2+1
Mo66T1v9LuLKu66l7pNWf3cn95GfG//c+bEjuQ9aecpzfd+9GX/mfrjyuSP2
/NjKFPz4qpVZ+PFNK7Ow52vPMX6zla3s9cvh5xCv+da1mPSdI2f6J/fGvDf8
TFj/s+cw73vXYtUPjuzp8lZnkfv7i2t5739r9e7j1l+tHMGef1r5gjejdbKD
s/VnK9eoG73THB780co4cv96HbaN0skgzPvPc3g5aqc5+v7ta3K9MTr1w54J
O5mCHxN1ivg0TiezsGfsTqYw/t3fg32M1ck4cpN2sgYPxuzUm9y4nXpg1cSd
euPcyJ3MZd8TdHov2cd4nWq5l+N3iuQW6nTGOB8jdfp+rJ+s0zXxaapOBuHK
NJ1MwZuZO73fWDJlJ++om6XTHE5M0ck+ctN2WoeXM3ZyEJOm6zSHnTN1mqPv
1J2uyfVm7dQPn+br5AjGzN8p4tCcnZzCkjk6ecR4wU6m8D1n7+Qauck7fT/2
N1un3uTm6tQDnxbo1Jv1k3S6xzyPeTu5xj7m7lSLGfN0iuSm7/SdMHuRTmbh
U9jpveddXryTRzi0ZCdfcGWFTueEc7ZYJ+OoW7HTHE4s2qkfuaU6rcPI5ToZ
hH9Ld5rDtuU7zdF3iU7X5HordeqHT2t3cgRj1ukUcWi1Tk5hyaqdPGK83JbD
aw2GfYefVTq5Rm6D4Z+/aGXDyp16k1u9Uw98WrdTb0xatpOz7HutTq6xjzU6
1fIbtWanSC7oZAr3cZlO34/1G3a6JoZt2skjHNq8ky+4knSygzO3SSfjqEs7
zeHBxp28I7dFp3UYGXV6bvz2jug0xz7iTnP03azTNble1qkf9rSdTMGPzhGf
ik5mYU+/kymMF+50Lnlvep2MI7dRp+/H/vJOvcmVnXpg1cC9cW69TvcY75tO
RrCPqlMt577uFMnxdzL++ZK/127pHti2lSMObd/JIFzZsZMpeLNHJzs4W9t1
8o66PT2HB9t2so/cTl6Hl7t1OmOYt7PnsHN3z9F3B1+T6+3ayT7W7OXeOHRI
J0fwaZ9OfmHJfp38wqF9Pcf48E6+YMDBnWxi/d7ux/oDOjnFmT7UvXHuoE5/
12fNgc4z3t/XYc0u/h7s9TCv43pH+JqYdEwnd7DkuE6OYMypnd4D/Di6k3HU
neY5DDiqk3fkjvc6jDy5k30Yf4Ln8PIUz9H3WF+T653ufnhzQSdHMONCR0w6
u5NTeHNWJ0cYX9zJJiw5s5Nr5I7092N/Z7g3uXPcA58ucm/Wbzp05Nth/G74
Ob+TC+zjXNdy1s9zJHeJr4kxl3UyCJ+e6XTGOAdXdPILe650xJWrO5mCN5d7
HXU3d3KEc3aVa6m7qZNr5K7v5Bdn68bhZ33nru1kKHZe496Mb3E/XLnVEXvu
62QKftzeySz8uLOTWdhzh+cYP9TJFM79be7Bmrtci0l3O2Lk/e6Nedd5X+z7
Ac9h3j2u5XfpXkf2dFKn3z/eoQddy7Uv9f3mXj/WyS/sedwRV57sZArePNrJ
NepeGH62Hn62GX6ecC11z3fyhdyzfm7Y85wjuac7Gcpzfcq9Gb/ofrjykiP2
vN3JFPx4pZNZ+PFaJ7Ow51XPMX6kk7Ps9WX3YM3rrsWkNxw50++4N+Y97GfC
+nc9h3lvuhar3nJkTyd2Oovc3/dci2HvO2LPJ50cwZ7POvmCN5wP7OBsfdzJ
Neq+8xwefNTJOHKfex22fd3JIMz7wnN4+Y3n6Pupr8n1vnc/7Pmjkyn48acj
Pv3cySzs+amTKYynGei9533/sZNx5KYe6IyR+8G9yf3iHlj1l3vj3FedzGXf
v3d6L9nHr67lXv7mSG7aga7J+fjS34/1/3QyDodGHsgyHBploIgxow3kC/aM
NJBx1P3XyTXGow5US904AxnEmRhrIMuwcOyBIrkxBvIUR0cfqDfjcQdah1vj
D2QQVk0x/PMNnVyZaCCDsGqSgUzBmH/9PdjThAO5Rt0EA/VgPPFA61gz6UDr
MGDKgXrj2d++x9yXqQaa49mMN9C+2NNkA63DPM4Z/3zC7/d0A91j3FploPPA
uz/jQH5h0swDeYQxcw3kF2dlhoFco27ugeY4f9MP1I/cLAOtw6Q5BjILh2Yd
aA475xxojr4zDXRNrjfPQP2wZ9GBTMGSxQaKeLPAQAZh1fwD+cX4g07nj787
zDeQceSWHMgajJl3oN7kFhyoByYtPlBvnJt9IH/Z9yID/Saxj4UGqsWzhQeK
5FYeyCzu42wDfT/WLzXQNTFpuYH8wqQVBvIIY1YfyA72vuxArlG3xkBzHw4/
ywzkILkVB1qHSasO9NxwaKWB5tjHagPN0Xf5ga7J9dYcqB/GbDTQ+cSVjQeK
WLLuQI7g1joDWfap98F9xaa1B/KL3NIDfT/2t9ZAvcmtN1APDNtkoN74t8RA
95jnseFA55x9rD9QLbZtMFAkt9lAPuLZFgO5g0k/DP989PBzzPATDmQZDsUD
+YIrxUB2cOaCgYyjrhxoDhtGDNSPXDLQOqzqDWQZ5ywdaA5H+wPN0Tca6Jpc
rxqoH/ZsM5ApWLKtI950AxmEVe1AfjHefKDv9z+W7jLcjiKLwvA9RvDg7pIg
wd3d3d1J4LR3n74hJASCBw0W3F2Du7u7OwR3d5v6Zq0f9eyU7aqWevuQYWa4
tmFdGUdf2dV5xpihXeWmr+scmJQ7Nybt0ZXv7DsJfx7gfUQei2exI33jujpv
nIndu7o+5ldeE5OGd+URho3oyiNcGdOV11jS35V3jDvUbXhQd2UcfSNDmbEr
Iw/u6lvCd2aU27DtELeR9wCvyXqHOR/2HNeVKYP9/In4dFRXZmHPkV2ZQv3E
rpziOo/oyjj6er4+9ne4c9N3tHPM73drIc8vfI95Hsd2ZQT7GOuxnPtjHOkb
3ZXLXOfJXXmEVbd3dR74vXxaVwbhyuldmYI353VlB2fr1K68Y9z5bsODU5yP
vjM8Dy/P6eqMYd6ZbsPOc91G3vFek/UucD7subIrU/DjKkd8uqQrs7Dn4q5M
oc5vPv6Zku/KRV0ZR9+1XVmDBxc6N32XOgdWXe3cOHd2V/6y7yu6+iaxj8s8
Fl8vd6Tvtq7M4j6e5etj/nVeE59u7MogXLm5K1Pw5q6uzhuW3NCVd4y72214
cH1X9tF3i+fh5R1+bph0q9vYx51uI+9NXpP17nE+7Hm0K1Pw4zFHfHqgK7Ow
5/6uTKF+Ulfnkvfmvq6Mo2+Cr4/93evc9D3oHFj1uHPj3DW+xzyPR7oygn08
5LGc+4cd6fs4DecwlDGhHNTVueQ9frIr43Doua4MwpUXujIFb/j7JOzgbD3b
lXeMe8NtePBMV/bR96Ln4eWrXZ0xzHvJbdj5mtvI+7zXZL03nQ97PurKFPz4
2BGf3gvlwK7seacrUzCsFeks8e6/3ZVx9DUjnT363nJu+t53Dqz6xLlx7pWu
/GXfE7s68+zjA4/l/n3oSF870pqciZd9fcz/rCvjcOirrizDoa8dMebbrnzB
ni+7Mo5xX3TlGvVvPJZxP3flO+/Rj11ZhoU/OdL3fVee4uh3zk39F8/Drd+6
sgaH/uvqrGLMn105glt/d2UQ3nzu62BPf3RlHON+dw7qf3kec/7xPM5xX6Tc
WPWp7zH3pRGpjWfzq/fFnv71PPb0RFfvO+9oJ9I9xqRFI503zsSkkSzDockj
+YIr00YyCz8GRDKOcdNFauPMTRIpH31TRJqHVQMjWcY5mzJSG45OE6mNvJNF
WpP1po+UD2PmiPQ9wJU5I0UsmTmSI7g1UyTLqD/V1fnjN8KMkfyib55IfuHN
DJFy0zdLpBwYNlek3Pg3dSTf2ffskTxlH7NGGotts0WK9C0SyS/u41SRro/5
80ZaE4cWjGQZDg2O5AuuLB7JDva+QCTjGLdEpLanQ5k/knH0LRRpHlYNifTc
eLYLR2pjH4tFaiPvoEhrst6SkfJhzEqRzieurBwpYsmykRzBrWUiWfa898F9
xaalI/lF33yRro/9LRUpN33LRcqBYatEyo1/c0e6xzyPFSOdc/axfKSx2LZC
pEgfv8P450v++XO1SFZi24QkOB/KxqGsF8kULNk0khecs80iRQxYJ5J3WLV5
pDacWDv8+d2u+taN1E+uDSKZhZ2bRDpv5F0/0jr0rRnJR+zcOJJ9jNshkilY
slMkazBj60gGYdVWkfyiPigOz4h3IpQtIxlH346RcjB/l0hnG2+2iZQDk7aP
9Fuf9baLZBb1bSP1U98i0rWSd6NI3wD2umGk66O+c6Q9ssbekdzBj24klzEj
cuSs7xnJKWyL3YYNe0Syj769IvWTa99IPmLY/pG+MeTdJ9I69O0eyUTm15Hs
wIl+Rxwa7og9WSQ7sOoAt+HHrpHuE6bm7sekNJJxzNktUj/rJd47fb1I55+1
RzgfZlSRzjZ9hfPhWelI38hI7mDSBZHOFe/+hY78Z0qjI7mDJYdEcgRjjork
BefpoEjGMe5ot2HAKOemb4znYeQRkc4Vzh3qNrw80m3kPdhrst5Y58ObkyM5
ghmnOGLS8ZGcwpvjIjlCfXCs9/ThUI6N5Bp94yP5ggHHODd9JzgHPp3q3Nh2
eCRz2fdJkb5D7ONEj8XUcY707Rfp9wfvzWG+Puaf7jUx6exI7mDJuZEcwZhL
Qlk9lDVCOSuScYy71G2c4zMjeUffeZ6HkRf5uWHP+W7juV7sNvKe4zVZ7/JQ
1orkyvWRXMCPGxzx6epIZmHJVZHcoX5gpHeNd+jKSGbRd4avj/1d4dz0XeMc
WHWjc2Peab7HPI8Jkc48+7jWYzn31znSNyzSbwju79BIZ5T6Tc6Hl3dF8gVv
sIozxhl6yJGze0ckm7DnYbfhwe2R7KPvTveT655IVuLcA5GMI+/dXoe+2yJZ
yfxnIr0H+PGsIz4954hPj0VyB8O+jnR+eN+/ceTdfNz92PNoJMuY81Wkc8ic
R7x3+p72PWLt+yNZyV6f8v2i7wnnw7knHen71mtyVu6L9D1g/vPeL3a+GskU
LHk9kjU49FIks3DulUiWMe69SO8K3rzsfvre8DzsfCeSiRj2pttw9F23Mf81
r8l6H0TyBXs+j3Q+ceULRyz5JJI7GPNiJDfZ3wu+DuofRbIG2yZG8o76h85N
/WP3k+tL5+a+3xvpXeAefRbpnLOPT70m9fd93ex1oVjvGc9qhljnjXM2U6zz
wPv7UyRTsOTPSE5hxl+OnK0fInmHVX+7DQ++j2QffT+6n1y/RDILO/+IdN7I
+7PXoe87P3Pmd2J9A7BkklgRPwbEivj0XyS/sOSWSN9sfgvcHOn8Ue+L1Y9t
/0ayjDmTh/bLItnzj/dOXzvWd4i1f4/kL3ttxbKMvkasfJjXjBXpmzHWveQ+
/hbp28D8SWPtFzunjWUKlswSa6/sfdZY8dZQBsbyDqtmi9XGmZ46ln30TROr
n1zTxzKLZzlzrGdI3ulirUPfVLF8ZP78sc4V53KBWBFLFowVsWrOWDbd6T1x
XzFlilj3DFPnitWPc3PEMos5U8bqZ73ZY+2dvvliva+s/avfBe7RvLFco2/u
WPnwbJ5Ykb63I/2O4XwuHOv9xaFHwp/3CGXPUIbEcgpXFo9lCt4sF+u8cf4W
jeUd45aP1YYZi8TKR98SseZh2DKxrMSeJWO1YeqysdrIu1isNVlv6VjOMmeF
WLnxZq1YvmDJSrFswrBVYpmCYSvHaqO+bqxzizFrxrp+5q8YKx/zV4vlF1at
HSs3zq0R/vyW79nqsfqprxprHeYsFes62Os6seax3nqx1sSejWK5g2GbxDIF
Y7aO9W3A6Q1j+cW4bWK1cY43iGUZfZvGmoeRW8b6ZvCd2SxWG15uFauNvBvH
WpP1to2VD1d2i3Um8WP3WBGfdoxlFpbsEMsd6rwTmIVP28cyi771Y10f+9su
Vm76doqVA6t4p8jN/HNjPUvu/a6xzjb72DnWWN7lXWJF+vaKtSau7BPLHaw6
JtZ545wNjWUTlgxzxJL9Y1mDQ/vGmse4ItbZ42zt57GMy2NZRl8Sy0e8yUKZ
zH1RLE9xtOvc1Evnw4bKEWNGxfoeYEkdyyO8GR7LL1zpdxv1Q2I5xVnvOQdz
DvBYfBrhyDfnIOfGv9j7Yt+j3YaFB3ospo50ZE9bxPr+8Q4d7LGsvXes+829
PjyWTVhyhCOWHBXLGhw6LJZxjDsh1ncRV470WMYdH+u3O33H+rnxz53HOdI3
NpanPNejnZv6ic6HK+McsefMWKbgx8mxzMKPU2OZhT2nuI36obFsZa8nOQdz
TvNYTBrvyJk+y7kxb4yfCfPPdhvmne6xWHWGI3vaPNZZ5P6e47G89+fFevdx
66JYjmDPJbF8wZurY9nB2bowlmuMu8ZteHBBLOPou9TzsO3KWAZh3mVuw8ur
3Ebei70m613rfNhzayxT8OM2R3y6IZZZ2HN9LFOon+/rYB8TYhlH352xrMGD
65ybvhudA6tud26cuyKWuez7lljvJfu4yWO5lzc70vd6rDPG+bjc18f8u7wm
Pt0XyyBceSCWKXjzeKz3G0vujeUd455wG07cE8s++h70PLx8NJaDmPSQ27Dz
MbeR936vyXpPOh8+vRzLEYx5xRGHno3lFJY8E8sj6q/FMoXrfDqWa/Td7etj
f085N33POQc+verczL/D95jn8VIoqffxvMdixguOmPewrwmz34xlFj79F+u9
511+J5ZHOPReLF9w5ZNY54Rz9nYs4xj3qdtw4i3no+99z8PIj2IZhH8fuA3b
PnYbed/1mqz3mfPh0/exHMGYHxxx6KtYTmHJl7E8os4/M/N3ePxnCF/Eco2+
n2P5gg2fOzd9XzsHPv3o3Jg0MZaz7Pu7WK6xj288lm/Ut470/RvLFO7jh74+
5v/iNTHsj1ge4dBfsXzBlWYiOzhzv8cyjnGtRG148Fss7+j72/Mwsi/Rc+Pb
+4/b2EcjURt5//SarNdOlA97pkpkCn5MnSji06SJzMKeAYlMof5GrHPJezNJ
IuPo+9XXx/46iXLTN1miHFg1MFFunPvJ95jnMWUiI9jH5InGcu6nSBTp4zdZ
v3/XTpMoB7ZNmyji0EyJDMKVWRKZgjdzJ7KDszVjIu8YN0+iNjyYIZF99M2a
aB5ezpnojGHebInasHOuRG3knTnRmqw3RyL7mDNvotw4tGgiR/Bp/kR+YcmC
ifzCoQUStVFfPJEvGLBIIpuYP1+ifMwfnMgpzvSQRLlxbuFEv/WZs1CifuqD
Eq3DnNkTXQd7XSzRPNZbItGamLRMInewZPnw5xdjGbNaovcAP5ZOZBzjVk/U
hgFLJfKOvhUSzcPIVRLZh/ErJmrDy1UTtZF32URr4tYaifLhzYaJHMEM/m6e
iEnrJHIKb9ZO5Aj1TRLZhCVrJXKNviUTXR/7WzNRbvrWTZQDn/h7f3Iz/4/w
59NCGR/KBolcYB/rJRrLWV8/UaRv00RrYszmiQzCp16iM8Y52DKRX9izVaKI
K9skMgVvtkg0j3E7J3KEc7Z1orGM2ymRa/TtkMgvztaOiSJ92yUyFDu3TZSb
+i6J8uHKroki9gxNZAp+7J7ILPzYM5FZ2LNHojbq3USmcO53S5SDOXslGotJ
eyeKGDnMuTFv+0T7Yt/7uQ3z9kk0lu/Svokie1o50fePd2h/j2XtzRLdb+51
msgv7MkccaVIZAreJIlcY9wBoUwXyvSh5B7LuOGJfKGv9nPDnn5H+qpEhvJc
S+emPsL5cOVAR+w5LJEp+DEqkVn4MTqRWdhzkNuox4mcZa8jnYM5B3ssJh3i
yJk+3LkxL/IzYf4RbsO8MR6LVYc6sqeVEp1F7u+RHothRzliz3GJHMGeExL5
gjecD+zgbB2byDXGjXcbHhyTyDj6TvQ8bDslkUGYN85teHmq28h7vNdkvdOd
D3suTGQKflzkiE/nJDILe84OZTnXH0j03vO+n5nIOLy5P9EZo+8M56bvXOfA
qoudG+dOTmQu+74g0XvJPs7zWO7l+Y70Peg1OR8n+fqYf2ki43DoykSW4dBV
jhhzTSJfsOeKRMYx7vJErlG/2mMZd2MigzgT1yeyDAtvcKTvukSe4ui1zk39
Js/DrVsSGYRV9yTyBVduT2QQVt2ZyBSMuczXwZ5uS+Qa4251Dup3eB5z7vI8
DLjXufHsEt9j7st9buPZ3Ox9sae7PY89cc745xO+3w/5HuPW54nOA+/+o4n8
wqTHE3mEMc8l8ouz8kgi1xj3vNs4fw87H31PeB4mPZPILBx60m3Y+azbyPuY
12S9F5wPe95MZAqWvOWIN68kMgirXk7kF/WjE50/fju8lMg4+t5NZA3GvOjc
9L3qHJj0tnPj3NOJ/GXfbyT6JrGP1zwWz153pO+zRGZxH5/y9TH/Pa+JSRMT
+YVJHyfyCGO+SmQHe/8wkWuM+9ptY0P5IJGD9H3ieZj0hZ8bDn3qNvbxpdvI
+5HXZL1vnA9jfk10PnHlN0cs+SGRI7j1fSLLjvc87is2fZfIL/re9/Wxv2+d
m74fnQPDfndu/HvH95jn8Uuic84+fvJYbPvZkb4/E/mIZ38ncgeTzkiDP6Es
E0pfKstwqJnKF1yZLJUdnLn/EhnHuMlTtWHDv6Gc5b5WqnlYNSCVZZyzdqo2
HJ00VRt5G6nWZL0pUuXDnhlSmYIlM6aKeDMwlUFYNXUqv6j/5evj2qZKZRx9
s6Q6zxgzZarc9E2TKgcmzZQqNyZNksp39j19qn8/g31Mm2osnk2XKtK3XKrz
xpnopLo+5s+aak1MmjOVRxg2dyqPcGVQKq+xZI5U3jFucKo2PJg9lXH0zZNq
HkYukOpbwndm3lRt2LZgqjbyzpVqTdZbKFU+7FkqlSn4wfMn4tOQVGZhz6Kp
TKG+bCqnuM5FUhlH32ypro/9LZwqN32LpcqBVbxb5Gb+zKnuMc9jyVRGsI/F
U43l3C+RKtI3fyqXuc4VUnmEVbulOg/8Xl45lUG4smoqU/BmnVR2cLZWSuUd
49ZN1YYHK6bKR99qqebh5VqpzhjmrZ6qDTvXTtVG3lVSrcl666XKhz2bpzIF
P7ZIFfFpo1RmYc+GqUyhzm8+/pmS78oGqYyjb+tU1uDB+qly07dxqhxYtWWq
3Di3Zip/2fdmqb5J7GOTVGPxddNUkb5dU5nFfVwj1fUxf5tUa+LTDqkMwpWd
UpmCN3umOm9Ysn0q7xi3d/jzP4k82C6VffTtnGoeXu6e6rlh0i6p2tjHHqna
yLtjqjVZb59U+bAnSWUKfqSO+LRfKrOwZ1gqU6gvn+pc8t4MtXH0bZvq+tjf
vqly07e/c2BV5tw4t1Wqe8zziFMZwT66Hsu5jxzp49/F4O+E+Heq5kt1LnmP
i1TG4VB/KoNw5YBUpuDNwans4GzVqbxj3CFuw4NeKvvoG+F5eHlQqjOGeQe6
DTtHu428w70m641xPuw5JpUp+HGsIz4dkcos7Dk8lSnUr0p1lnj3D0tlHH1X
pjp79B3q3PQd6RxYdZxz49yoVP6y77Gpzjz7OMpjuX9HO9J3tdfkTIz09TH/
hFTG4dDJqSzDoVMcMea0VL5gz0mpjGPcuFSuUT/VYxl3dirfeY/OTGUZFp7l
SN/pqTzF0fHOTf0cz8Ot81JZg0OXpTqrGHNhKkdw6+JUBuHNib4O9nRBKuMY
d75zUL/I85hziedxji93bqw63veY+3KF23g253pf7OlSz2NPear3nXf0Gt9j
THop1XnjTExIZRkO3ZDKF1y5PZVZ+HFdKuMYd4fbOHPXOh99N3oeVt2ayjLO
2U1uw9Hb3Ebe670m693pfBjzUKrvAa487Igl96ZyBLfuSWUZ9TLV+eM3wt2p
/KLv8VR+4c1dzk3ffc6BYY84N/7dksp39v1gKk/Zx/0ei20PONL3Yiq/uI83
+/qY/4TXxKFnUlmGQ8+l8gVXXk1lB3t/OpVxjHvNbVUoT6Uyjr7nPQ+rXvZz
49m+4Db28YrbyPus12S9150PYz5IdT5x5UNHLHk7lSO49VYqy4Z7HvcVm95M
5Rd9T/r62N8bzk3fO86BYROdG/8eC2UvP4/3U51z9vGux2Lbe470feR5GPlJ
Ktewh/+9SP73a/nfrv0ilWU49FUqX3Dlx1R2cOY+T2Uc435yGzZ8lso4+r72
PKz6PpVlnLNv3IajP7iNvF96Tdb7LpWtzPnZuXHo31Sm4M2vqfzCrd9TeYRb
v7mNeiPTGcaVf1LZxPxfnI/5f6byCJ/+c25M+jvV737m/OV+6n94HeZ86+tg
r32Z5rFeM9OaODRJJoNwa9JMBmHJwExG40cnk3GMmyZTGwa0M7lG32SZ5uHi
VJm+H3xbJs/UhmdTZ2oj74BMa7LetJny4c1smRzBjNkzRUyaMZNTeDNDJkeo
z5nJJiyZPpNr9LUyXR/7my5TbvpmypQDn+bIlJv5z4Q/7xfK/qHMmskF9jFz
prGc9VkyRfrmyrQmxsyTySB8Wj/TGeMczJfJL+yZP1PElQUzmYI382aax7jF
MjnCOVsg01jGDcnkGn2LhD8/mupsLZop0jc4k6HYOShTbuqLZ8qHK0tkitiz
YiZT8GOpTGbhxzKZzMKepTO1UV81kymc+yUz5WDOspnGYtJymSJGrpQpN+Yt
lGlfuLtypjbMWz7TWL5LK2SK7GnKTN853qFVMo1l7bkz3W/u9ZqZ/MKetTJF
XFknkyl4s0Ym1xi3cSZTPg1l7UxjGbdRpv8OFX0bZHpuOLRhpkjfepkM5bmu
myk39U0y5cOVTTNF7Nkukyn4sXkms/Bjy0xmYc8Wmdqor57JWfa6WaYczNkq
01hM2jpT5Exvnyk35q2W6Zkwf4dMbZi3TaaxWLVtpsiepsh0Frm/O2Yai2E7
ZYrYs3smR7Bnz0y+4A3nAzs4W7tlco1x+7sND3bNZBx9e2Wah21DMxmEeXtn
asPLYW4j7x6Z1mS9rvNhT5XJFPzoOeJTmsks7EkymUL91EzvPe97nMk4+k7J
dMboi5ybvsw5sKp2bpzbN5O57LvM9F6yj9xjuZeFI32neU3Oxz6Zro/5wzMZ
h0MjM1mGQ6McMWZ0Jl+w58BMxjFuRCbXqB/ksYw7PJNBnIlDM1mGhYc50ndI
Jk9x9GDnpn6E5+HWUZkMwqpxmXzBlWMyGYRVx2UyBWMO8HWwp7GZXGPc0c5B
/VjPY87xnocBJzk3nvX7HnNfTnYbz+ZI74s9nRjKwt7Ts5neM96L8b7HuHV3
pvPAu39mJr8w6exMHmHMRZn84qyckck1xl3sNs7f6c5H3zmeh0kXZDILh851
G3Ze6DbynuU1We8S58OeazOZgiXXOeLNFZkMwqrLM/lFfedM54/fDpdlMo6+
GzJZgzGXOjd9VzoHJk1wbpw7P5O/7PuaTN8k9nGVx+LZ1Y703ZXJLO7jeb4+
5t/oNTHp1kx+YdLtmTzCmPsy2cHeb8nkGuPud9suodycyUH67vA8TLrHzw2H
7nQb+7jXbeS9zWuy3gPOhzFPZjqfuPKUI5Y8kskR3Ho4k2V7eB73FZseyuQX
fTf5+tjfg85N36POgWFPOzf+Xe97zPN4ItM5Zx+PeSy2Pe5I35hM54/z+Vym
9xd7ojz4E8okobyYyS88e8kRk17JZA3GvJDJMsa9nckUzuLLHsu4tzKdK/re
yGQlnr3pSN9rmSzD1Fedm/rrbmPOO86NPZ9m8gVXvsx0PjHj/UyWYdiHmWzC
sPcy+UXfu85BfaL7cejjTDZxbz5zbjz73BGfPnE/a3/kecz5wv3s4yvvBXsG
5DrPnL9vM/mFQ985YtiPoZyQyZVvMvnFuD8y2Y0r33ssbv2e6VtC36+ZnOIb
8psjfT9nchPbfnJu6n86H6785Yg97Vym4Mc/mczCj/8ymYU9/7qN+te+Pvb6
t3Mwpy/XWExq5IqcXd4pcmPeB34+PBveM9q4R81cY3GilSuyp7VzPTOe4aS5
7iXeTJ7LI6yaIlfEsClzRRyaKlfEmKlzRYwZmCvi0DS5Ii5Omyvi4nS5IoZN
nytyzmbIFfFvxlwRk2bKFTm7M+eKGDNLrohDC+bygjM9Wy6/sGSOXH7h0Ky5
xtI3Z642HJorV8TFuXNFvjPz5jILnxbIZRxrzJerDQvnyTWWcfPnamPcL35H
eIcG5doXDq2Y6wxz1hfKZRaGLZwr4tAiuSLGLJorYsyQXBGHFssVcXHxXBEX
l8gVMWzJXJF/1lkqV+S7unSuiE/L5IrPh7Jsrog9y+WKWDU4197Z6wq5zOIa
Vsp1HbiyvF2jb+VcbdizSq6IN6vmili1ei6nMGyyXO8d79waudowb7VcYxm3
Zq42rForV+TdXSfX+4tPx5ThOYWyYCjr53IKhzbIFXFlo1we4c16uc4M47bM
5Qvnb8NcYxm3RS4H6dssl1mYtHmuSN8mudzEto1z5aa+Va582LN1rohVu+Yy
BW+2zWUWDu2Qyyxc2T78+YdM9T1zmYIH2+TKwZwdc43FpJ1yRd673XLlxrlN
c+2Lfe+eqw2rds41Fud2yRXZ07q57iX3ZY9cY1n7oFxnjzO3by6/MGlorohJ
++WyBmP2yeUa47JczxhXhnks49Jc7tAX+9uI64kjfd1chuLc/s5NPXc+fCoc
8enAXI7gR5XLKXyqc9mEST23Ud87l8vstXQO5vR7LG4Nd8Stkc6NSXvleibM
H+U27tEBHottIxxn8NnitwDf9dG+l5h0aa73nnf80Fxm4dNhjvh0RC6b8GZM
KLN73HG5fOGMHu6xjDs2l4n0jc1lE4Yd40jfUbmMw7MjnZv68c6HTyc44tPp
uRzBj3G5nMKnk3PZhEknuY362bkcwYYTnYM5p3gsbp3qiFtnODcmHe19se8z
3YZPp3ksto13ZE+H5HKf+3KWx7L2wb7H9J2fyyx8usARny7KZRPenJfLaMZd
mcsXzsSFHsu4K3J9O+m7zM8Nky53pO+SXMbxXC92bupXOR/2XO2IVTfnMgVv
rs1lFg5NyGUWrlznNurn5rKYvV7jHMy53mMx6QZHDLjFuXHuHD8T5t/qNqy6
0WNx7iZH9nSb+zHsdkccusMRw+7J5Rcm3euISffnsgZj7s7lGuMey3V+OH/3
eSzjHs3lHX0P5zILhx5xpO/BXIbi3APOTf0htzHncefGoRdzmYI3r+bygrP+
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
G1gpH/bMWskU/JitUsSnGSqZhT3TVzKF+kqV3nve9+nCn68r1bdipTNG3zSV
cuPfjJVyYNXslXLj3OSVzGXfs1R6L9nHTJXGci9nrhTpW7nSmpyPySpdH/Pn
rGQcDs1byTIcmq9SxJgFKvmCPfNUMo5xc1dyjfr8lcYybpFKBnEmFqpkGRYu
XCnSN6iSpzi6oF2jvmilebi1WCWDsGq5Sr7gypKVDMKqpSuZgjFzVboO9rRE
JdcYt3ilHNSXqjSPOctUmocBy1fKjWdzVLrH3JcVKrXxbIZU2hd7WrbSPPbU
s828F6tUuse4tVel88C7v3olvzBpzUoeYcwGlfzirKxWyTXGbVipjfO3aqV8
9K1VaR4mrVfJLBxau1Ibdq5fqY28a1Rak/U2qpQPe7auZAqWbFMp4s1mlQzC
qk0r+UW9r9L547fDJpWMo2/7StZgzMaVctO3eaUcmLRtpdw4t24lf9n3VpW+
Sexji0pj8WzLSpG+PSuZxX1cp9L1MX+HSmti0i6V/MKk3Sp5hDH7VrKDve9c
yTXGDa3U1ghlp0oO0rd7pXmYtHel54ZDe1RqYx/7VGoj766V1mS9Yc6HMXml
84krhSOWRJUcwa1uJcs6nsd9xab9K/lF346Vro/97efc9MXOgWGlc+PfdpXu
Mc8jq3TO2UfisdiWOtJX+53Fm+GhTFvJpGl6wZ8Qrw1lRCW/8OxAR0waVcka
jDnA8xh3WCVTOIsjPZZxh1Y6V/QdUslKPBvjSN/oSpZh6kHOTf1w58ObIxxx
6IRKvuDKUZX8wq2xlTzCraPdRv3kSmcYV450DuYc47E4dKwjPp3o3Hh2sPfF
vse5DauO89jBoRzvyJ6+8F5Z5ySPZe3rKp1tzuL4SpZh0umOeHZmJZsw5rRK
ljHugkqOY8wZHsu48yt9V+g7t5JZfE/Oc6Tv7EqG4txZzk39QufDmIsccejq
Sr5gySWV/MKSyyr5hUOXuo36qZWcZa8XOwdzLvdYfLrCkXN8jXPj3yl+Jsy/
1m3coys9FjOucmRP5/g6uM4JvpfY82ql88aZuKmSZTh0syPG3FrJF+y5sZJx
jLunkimcuVs8lnF3VzKOvjsrWcY5u8uRvtsreYqjtzk39XudD2Puc8Shxyv5
giUPVPILSx6q5BcOPeg26k9X8gUD7ncO5jzssfj0iCNePuHc+HeH98W+n3Qb
/j3qsXyjHnNkTzdU8p378pTHsvb1vsf0PV/JMhx6wRFjXqrkC/Y8V8k4xr0V
Sn8lY170WMa9UenbiUOv+bnxzzqvO9L3SiVPea4vOzf1t50Pe95xxKpPKpmC
N+9VMguHPqhkFq687zbqz1Yyl72+6xzM+dBjMWmiIwZ86tw494yfCfM/cxtW
feSxOPexI3vCBn7v8Hvoc4/FCH7f83cJ/D3CN5X8wqRvHTHp+0rWYMzXlVxj
3G+Vzg/n7zuPZdyvlbyj7+dKZuHQL470/VjJUJz7wbmp/+582POHI1Y1ezIF
b/6qZBYO/VPJLFz5223UJ+nJFDz40zmY86/HYtJ/jpzpVk+5ce4n74t9t3tq
w6q+nsbiXKOnyJ6+qvQN4L50ehrL2vP1dA45f5P35BcmTdFTxKSperIGYybr
yTXGzdDTe8+ZmLKnsYybvid36Ju2J7NwfbqeIn0DezIU56buKTf1GXvKhz0z
9RSxau6eTMGbWXoyC4dm68ksXJm1pzbqk/bkMnuduacczJm9p7GYNEdPEQPm
6Sk3zg3o6Zkwf96e2rhHc/Y0Fufm6imypy8rfce4v/P3dC9xaJOezgPv/uCe
/MKkhXqKmLRIT9ZgzKCeXGPcUj2dH87fwj2NZdySPXlH3+I9mYVDS/QU6RvS
k6E4t2hPuakv3VM+7Fmmp4hVq/ZkCt4s15NZOLRCT2bhyvI9tVFfqydT8GDZ
nnIwZ8WexmLSSj1Fvjmrhz+/Wcm5xXraF/teo6c2rFq5p7E4t0pPkT0t2NM3
gPuyZk9jWXuBnu4xfev15Bcmrd9TxKQNe7IGY9btyTXGbdHTM+NMbNDTWMZt
3tPvEvo27em54dBmPUX6Nu7JUJ7rRj3lpr5lT/mwZ6ueIlbt3JMpeLNNT2bh
0HY9mYUr2/bURn2dnlxmr1v3lIM52/c0FpN26CliwC495ca5tXt6Jszftac2
rNqxp7E4t1NPkT1tOzisOyisG8puPY3Fsz168gjD9u7JL0zap6eISUN7sgZj
9urJNcYlPZ0fzt++PY1lXNyTd/R1ezILhyJH+vbryVCcG+bc1Pd3G3NS58ah
A3oyBW9G9eQFZ73oyS9MqnryC2PynoyjL3MO6j33Y1J/T7/vcWuEc+PcgY74
NNz9rF17HnNGup99HOS9YNUZPZ09ztwhPZmFQ2McceiwnnzBlYN7soxxx/T0
rnMODvVYxo3tyRr6jurJKSw/2pG+I3pyE9sOd27qxzof3hzniE+n9eQIxpzQ
k1PYM64np7DkRLdRH+3rY6/HOwdzTvJYHDrZkXM/3rmxrfTz4dmc7jbu0Ske
i22nOrKn9etwrkOcGMqZvpfYc3ZPZuHTOY64da4jJp3niEnnO+LNBY54c6Ej
Fl4cymo9uXWJI1Zd6ohDlzli4eWOnL8rHDnHVzpiz1WOWHVbT0Zwvq/pySwc
uq4ns3Dlao+lb4LbsOd6R74tNzhi1U09OYVht/bkEWvc7DbMu9FjGXeL2xh3
ZE/vCO/Q7d4XVj3Z0xnmrN/Zk1O4dZcjJt3tiEn3OOLNvY54c58jFt7viFsP
OGLVg4449JDj7qE87IhJjzjuGcqjjtjzmCNW3eG9s9cnejKLa3jK14Erj3ss
fU+7DXueccSbZx2x6vmenMKws3p67/7/nXQb5j3nsYx70W1Y9ZIj3rzsiEOv
OGLV6z05hUNvOOLKWz15hDev9XRmGMc5wBfO35sey7gPenKQvvd6MguT3nek
752e3MS2t52b+kTnw56PHLHq655MwZtPejILhz7rySxc+dRt1KesdQZ49z92
DuZ87rGY9IUj7903zo1z73pf7Ptbt2HVlx6Lc185sqepaq3D2frOY/Hsh548
wrCfejILw352xKdfHPHpV0fs+c0Re353xMU/HDHsT0fc+ssR4/92xKd/HHlf
fvRe2Me/bsOtvlpmYVWzllP41KoV8WmS8OeLejKpUWss49q1+nFrQK1+rPrP
uck7WS2zsOp73xvuy+S12nBr0lrzGDdFrTae37U9mYRHU9e6x5i0bK3zwLs/
ba1xuDVdrYhVM9RyCp+mqWUc42avZR/GTF9rLONmq2UWfbPUMgufZq0V6Zup
ll84N2Ot3NTnqJWPcz9nrYhVg2qZgiVz1zILq+at5RQ+zVOrjfoitUzBkrlq
5WDOfLXGYtj8tSKGDa6VG59mrrUv9r1QrTasWqDWWJxbsFZkTwNr3Uvuy8K1
xrL2qz15wDlfvJa/uLVErYhVS9VyCp8Wq2Uc41as5QuuLFlrLONWqGUQfcvV
em74tHytSN8ytfziuS5dKzf1lWrlY18r14o4tE4tX3Bl1Vp+4dbqtTzCrdVq
tVEfUstc9rpKrRzMWaPWWBxas1bEp3Vr5cazRWs9E+avV6sN/9aqNRYz1q4V
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
R1Pf/AlNncPT3PZ7U6a0w7xWS5797jUw6G/nwrBmS2uc4P3+0JRlrP9vU279
4zlnuY06jnD/pmrJ6x98nRjUaWltDJosxElbMmUKfn+3tNfpQpy2Jc/oH9DS
dUzfUh/G0TZJSwZN2dJ83JmmpeeHT6xPHwaRjz68Yx3WxpQZWsrLuZwzxDla
smOulur4MUuIM7fkCHGmln5vXe/7i1u0zdiSteyL68Qt2lgDs2ZtKRc+8buA
NbCe58C95nyz/uwtWTZbS3M487RRx6/5Qpy3JW8WCHH+UHYK5T76W3JncIiD
WnJk4RAXaumMLRniEi3ZRv+CLZ2/pVrqwzbayItDi7Q0n3O1eIiLteTWoi31
cebIRx9+sQ5rY8zSLeXFjlVCXLklS1ZtqY49y4e4XEsGEZdtyVCuievEMtqW
aekcrxHi6i15RhtrYNAKLeXCoNVaWgNz2e+Qlixj/ZVacmvFlubgGW3UOQO7
hrhLS98D5nGdGLRmS2vj0LohrtOSI+uHuF5LdmwW4qYtOUX/2i2d/81b6sM2
2tZqyaENWprPN2QT3qmWLNuwpT7cJx99eMc6rI0rW7SUFy92DHGHlvzgPaCO
NduEuHVLlhC3askRrm/nlnyhbcuWrGVfXCee0cYa2LRtS7lwbWe/a3jKc+Be
YwPrb9/SOd+upTmce9qo4zHXt1FLDu0e4m4tnYMjQjm8JUf2CnHPlizZJ8S9
WzpLUSjdlmyif4+WzlnsPsyjjbz4tG9L8zlb+4eyX0tWDm2pr+189GEW67A2
riTOixf9odQt+THcdawpQslbsoSYtfR3WnxPVrRttKUtnf8DQxnRkmep18Cm
0rlw7QCv0fR+h7VkGev3WvKs8pyp3UZ9Lt+/w1ryepivE3tGem0cOTiU0S1Z
MiaUQ1o6Z2NDObolm+g/qKXzf4z7ZnbbqJZ8OtTzMeioUI5sycrD3Def89E3
m9dhbVw51nnx4tRQTmnJj9Ncx5oTQzmhJUuIx7f0jeJ94XwOdttxLbk7ytc5
yG2sgU3jnAvXxnuN6f0cuNeLef2TWzrnJ3nOELdR33RA8D2UGwbo9wTvL+cT
d84I5fSWHDk3lHNasuT8UM5r6Szx90qXtmQT/We3dM4ud99ybjurJZ8u8HzO
1iWhXNySlRe6bw3no29Fr8PauHKF8+LFDaFc35IfN7qONdeEcnVLlhCvauld
fyGU51vyhbYrWzpXtD3XkmdXeg1suta5cO0mr7Ga93tRS2ed9Sf4fl3nORu5
jTpn4EWvvarncZ24c0soN7fkzh2h3N6SKXe6jit3h3JXS7bRf1tLnhFvbcmd
uzyH9+bBUB5oybD7W/pe7uI26rjJ9/Oeljy7x2vw3j3k+RjzSCgPt3RGnwnl
6Zb8eDyUx1ry5clQnmjJ0Vt9PXu5/9GWDHvUufbxWOZzbp/yfGx61mts7vvB
ve76mdC3u/fC/oZ5L8znu8u7yXuPNy/5XnMG/gjl95bceTWUV1py5PVQXmvJ
i/dCebcl2+h/uaUz9r77MreRF4fe8HzO1TuhvN2SW2+6b4Tz0Vd6Hdbm7H7g
vDjyZShftGTHV67jx8ehfNSSI8SJLX3/z2zpHI5224ct+fJtKN+05NaHXgOz
PnEufPraawz3ft9qydHPQ/msJcs+9ZzD3Eb9VN+/31r6Hrzl68Sd77w27vwU
yo8tOfJLKD97r3+H8ldLttH/g6/jH/cd77bvW3LoV8/nWf7p53eK1//Vz/kv
943zOqyNKf86L+dyQDt8M9uyY9K26vjRDLHRliNE/gXUZT2ffeEWbf+15Ov3
vk7c+s9rYFarrVz4xN+js8ZYPwfuNeeb9TttWdZuaw5nnjbq/N0Zv9X4XYZl
U7T19/IzTRLelVBGTiI7pgtt07Z1rmYNcZa2ztlsbdWxaZoQB7blwext9WEe
bVO35RE5GIdVM4Q4fVvnjHwzt2UVbayHi8ybqq1zSP9MbdmxQIjzt2XEoBAX
bMueuUOcqy2DiHOGcmIoP4XyY1uW0TZHWw4xj1yc6YVCHNyWQfO0lQuzWGe+
tqwiztuWVUTGYSH5uGZcZo8ztvUNIHKdeEFu9ooXS4S4eFtGLB/icm2d7RXa
quPTYiEOaevcr9hWH2bRtmhbZpGDcZi1VIhLtuU7+ZZtyyfaWA8LmbdIWy6s
FeKabTmxdlt1rFmnrTpmrBLiym15sW5bfRi6cFv3C4NWbWscvjB2pbasZR3G
4RltXAPnnjXXaMuI9drKy5mmbfW2/Fqtrbycc9qo480GIa7vdz0NJWnr3c9c
x46NQ9yoLT82DXGTts7PtiFu05ZH9G/Y1tnarq0+nKONNTBx8xA3a+s8bR3i
Vm35uEVbfbhDPvpwinVYG0u2bysvRuwR4u5tmbFnW3V82TnEndryg7hjKOOo
+33FFNp2aOvM7xPi3m0ZRhtr4NEubeXCsr3aWoPzz363bMsv1t+tLcN2bWsO
ptJGnd8dvC/LtGU087hOvNm3rbWxY/9Q9mvLjyiUbihThlKGUrTlEf3D2jq3
lfsabhvalkmx52NN7uc3wM+Tvimcj76212FtPOg5Lx4cFMqotvwY7Tp2HBDK
8La8Ifa39V3i3eGdm8ZtdVvWsi+uc6DbWAOHRjgXxh3sNfCd58C9nsnrj2zr
nB/oOTO6jTq/HbivS7f1G4LIWcXHQ5wXV44O5ai2zgxmndDWGRrnOtYcGcoR
bZ3jk9w3t9sOb8ukozwO144JZWxbZ5V8x7fl2VivN5fnHdbW8z8rlDPb8uNs
1/HoHNfx5tRQTmnr/b4rlDvbehfvdh1rTvO4xTz25LbOGGPvaMuwk30Ny3jN
M9oykj0e5/tF2+ltGTbeeZdyG3XOwT1ee5DnHduWled639hxcSgXtWXMpaFc
0pZVF4RyflvW0H9hW+/INaFc3ZZrF3ocbl3m+Zh1VShXtuXm5e5bz/PoW93r
sDauXBfKtW2dy9tCubUtO253HVNuDuWmtrxkX+e15eZ5vh6MuSGU69uyhjih
Lc8meI3NnOPGtny6w2ss6HvDO7Gl17+lrXN+i9fewHu8xs/ml7Y84lx9GMoH
bb2vH4UysS07HgzlgbaMeCKUx9s6S0+6jk33h3JfW+fsKfft5LZ72/LoAY/D
qodDeaitc0a+x9qy6iGvt6Pn8eyx4+VQXmrLi1dcx49XXceOZ0N5pq1v9aGh
jGnrm03kHGLMcx63n8c+3ZY1r4fyWluGPe1rSL3mi21ZwB4fbcsw2l5oy7jn
nTd2G/XRvn/c0z0975G2rHzN+8aO90J513v8JJSPvfdPXcemd0J5u60z/Jn7
hrvtrbY8etfjRvkZvu9r/tjPcqTbWK/f895s6zx9H8p3bZ3LH1zHkh9dx5ov
Q/mird9Wh3mPGPqG7x0mfeVxR3js521Z+6bHHe42ruFYr/ltW99L7g3vxDFu
+6Ytv7523rFuo85vFM7lFW0Z82tb7/FinWBRKCd35MgfofzeliV/hfJnW+es
GfobHflF/29tncVWR32nuI28+PS352MN/yWz/9ry7B/3cW7JR994r8PaeMrY
f9vypd3RGtgxdYhTdWTSJCF2OrJk0hAHdGQKkT7O67QhTtPRdTNvyo7cYh55
sWnyECfryKeBHa3BPWLsFB0ZRmQcxjGW9c7yHrkeXGAd5mPNdB2tjTczhzhT
R5bMGuIsHbk8T4hzd+QR/TN2dG7n7agPw2YIcfqOTJqto/l8K+YKcc6OfJy9
oz6+MeSjD7NYh7XxYL6O8nIWFw1xkY78GNJRHTsGhbhgR94QF+jIo8U7ekcw
iLb5OzKVfXGdWEUba+DQ4I5yPeF3a4jvdTeU/Ts606y/cEfv7kIdzeFdpo06
jizR0dp4s1SIS3Z0rrYPcbuO7FgmxKU7smPZjuoYs3yIy3VkFv3M5yytFuKq
HXlDP3M4h7St0pEvK4e4Ukfe0EYdN1cMcYWObCOyBmd09Y7yYsMaHdWxY8MQ
N+jIl7VCXLMjR9YJce2O7CHSx9neNMRNOvKJseTCnnU7moNP63VUx6eNOloD
x9kv+8O+jTvqw9D1O5qDqeyFOt893p05OjKRNZmD39xj7jt2bBniFh3ZsVVH
dYzZJsStOzKL/s07cmTnEHfqyBv6mcM3krYdO3Jxh46eH7/jaaOOmzzPbTuy
jcgaOLJLR3lxZdeO6ngxNJR9O/Ji9xB368iaPUPcoyNLiPRhKnvcrCO3GEsu
DNqrozmc4b07qmPSMK+Bu8zj2WDcfu7j3O/T0RysYi/U+T3BfeVMYtb+noM3
UUdnAD+yUNKOXClCyTs6SweEMrwjX+hPOjpnI9w3wG1xRz6Vno89/aHUHTlX
uW9a56Nvcq/D2lgzMpQDO/Li8FAO68iPI1zHmoNDGd2RJcSDOrI19vXM7LZR
HZ3/o0M5qiPPRnkNbDrEuXDtSK8x0PvtdfQ+sv6hvndjPGcOt1HnPFwayiUd
Gd3zdWLPWK+NI8eHclxHlpwYygkdvdfjQzmtI5voP7YjF05334JuO6Yjn8Z5
Pgad2tE3EitPct8SzkffQl6HtfHmDOfFjwtDuaAjYy5yHTvOCeXsjhwintWR
HVzfxR3ZRNuZHbl7jK9zGbexBg6d61yreR5rzOvnwL1e2euf35ER53nOSm6j
jtEn+9rw6PJQLuvo3X0mlKc7cueqUK7syJFrQrm6o/NxUyg3duQU/Vd0dOZu
dt/abiMvDl3r+dhzQyjXd2TZde7b1PnoW8/rsDbe3OK8+HFvKPd0ZMx9rmPH
HaHc3pFDxNs6+s8M+GfyKewZbbd2ZMGDoTzQkXG3eg0cutO5MOh+r7Gx9zuh
I79Y/+6ODLvLc7Z3G/Vhvn9PdeTyBF8nDj3ktXHnsVAe7ciRJ0J5vKMz9nwo
z3XkFP2PdHT+XnDfHm57uCOHnvR87HnWz2+o16ev63z07e11WBtXXnRevHgr
lDc78uNt17Hm1VBe6cgS4ssdfa94Xzifmdte6sjfh32dqdtYA5tecy5ce8dr
7OLnwL2uvf4bHZ3z1z2n5zbq/H0cv9X4jYZl74XybkfuvO86jnwcykcdWfJp
KJ90dJa+CeXrjmyif2JH5+xb941224cd+fSZ53O2vgrly46s/Nx9RzsffWO8
Dmsf6bFfdGTMd14DP/4I5feO7PghlO87cuenUH7syJUf3ceZ/zuUv/5H03nH
cTl2f/xR+u69KokyEkmUSEKJkpEIhUqRpCUVLWkoGiqSyt5777333nvvvff+
nffr8/n9cV7HOec+51zXdV/nfX/F42km7pD3WzPx7HvXZYZ/Cfm5mbj2p3us
8LO/NtOs/+rnlvtZ+s33GtnPKvchH978496wYy3+gxAJ8aNp6CYJvf9M6HRC
PCL+XzPNfDahGJzD928zMWnthPJhXip0MiE+Nksoxn2iHjE4RR96w5JcQnVh
RD10LSFm8Gf02PClFLqYED/QhYTY0SJ084SYgi+fEGv/9T5hGD56wKNyQrVg
GXn0ODTksZBHE+IB/asJzXYloRxmHR82TGmZUG/Y0yr0Ognd+56hd0qINa1D
r5sQR9ZLyIYlbUKvnxDPiJPPXG0Sul1CrCFODkzBt3FCs7RR6A0Tmi182LBy
g9BtE2IYmh7Ma/uE6sKVTROy4UXn0FslxIsOoTdLiDUdQ2+eEEvQxJjzbUJ3
TYhbPEstGLRFQjkwqVNCNkzqklAPOMt6WR+M2zqhGBzdMqEcuMZasPnucXcS
CfGLnuTAcs6Yc4c13UNvlxBHtk/IhiU7hO6REM+Idwt5P/5619C7JMQa4uTA
FXy9E2LNzqF7JcQafNiwkve5Y0IMQ9MDjvRJqC5c6ZuQDS8GhN47IV70C71b
QqzZI/TuCbEETQy+ssZtE+IWz1ILBu2ZUA4zvFdCNkzaJ6EeMJg83g2M2zeh
GHPfP6EcWMVasPk9wbkykzBrYEI5sGa/hGz4cWDowQlx5eDQByU0S8zJiIT4
QnxQQnN2WEIx2IbvgIT4NCShfNgzPPQhCXFuaEIxGEQ9YvCLPvSGKyMTqgsv
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
dT32PMhrvCupb8Bd3udo12at8OLVkFeSYsQ7IW8nNdvv2oZPL4e8lNTcv+fY
BPteTIpZr/g5mPV6yGtJ8Z16byXFp9fcb7zzXkiKC5+HfJYUJ76wDWu+tA0z
Pgz5IClefOUYDH3O5wWDPvJzx/nZ95Ni7fN+bqZ97GGee36aFCO+dt259n2S
FL8+dt059mHDm29DvknqrlfjfVZSuq+1lGzY8UPI90nx46eQH5Oanz9D/kiK
R8S/S2q2/nJssX30gEk/O595+j3kt6T4+ItjK12P2FL3oTcs+dt1YUSzWNfa
KTEjkZINX/iPNP+XFD/Q/4ZsQ+z/76t9/yQ18+nwpVJi2D/uAY/WSqkWLEum
1GOF1/trUvyif9OUGNYkpRyYig/7WN+XN5Ni9K/eJ7zJpNQbdhRC51PiRyl0
MeTG+OvmoRsp8Yh4LqW5bZFSDM7hy6bEpHJK+fCmntL7g4+8T2L876uoRwxO
0Yfe8KBlSnXhwQah26bEjw1TsmFH69DrpsQbdKuUvkvf+M7BIHzrpMRa1sU+
YRU+esCh9VKqBeM2SqkHfOc9cNbMOv3bpDTn66eUw9zjwz7G5/pGUr8h0Mwq
fNw4pbpwpWPozVOama1Dd0lpVrkTMAzWdAi9WUpzvG1KMTiFb9OUmEQNnoNr
nUJvkdKsUq9zSjzDRz8YSV77lN5/z9A7pcSPXinZ8GjnlGx40z30dind7+Gh
D0npLo5IyYY126f0HGzi2W4pzRjPDkuJYfjYA2dDzx1TYiRr3Cqlc8K3Q0oM
65FSXc4OHzZzcGhKvWEreVumxMreKa0bdvQLvVtKjNkj9O4psapP6F1TYg3x
vindkX1D75MS1/DxHNzaM6V8mDUg9N4pcXOvlGLcLfKIwS360Buu7Bd6YEpz
OST0wSmxY2hKNkw5MPTglHjJunZJiZto9gNjBoU+ICXWoPdPiWdoesAsavAc
fOK86cG3jrPhTjDf9D8opTlH0xv2scZ9/W7OTolHzNVJISf6vi4KWZgSO44I
GZUSIyaEjE9plo6yDZsODxmZ0pxNdAzm4TssJR6N8nOw6siQ0SnNGfXGpcSq
0e4HF8nj3cOO6SHTUuLFDNvwY6Zt2DE5ZFJK3+pNQrdL6ZuNZg5hzBQ/l/ez
R6fEmlkhx6XEsKO9h6p7Tk2JBaxxbEoMw3dsSow7xnXL9mFv6PPjTBPOG5MS
K4/zumHH/JATvNYlIYtTWvvJtmHTvJC5Kc3wUsfWtW9OSjw6wc+19Ttc4D0v
9rtsYx/9WjlvdkrztCrk9JTmcrVtWLLGNqw5JWR5Sr+t2nuNMPR4nx1MOtXP
beZnl6XE2tl+blP72MOW7rkype8lZ8Od6GTfaSnxa4XrbmEfNr9RmMv+KTHm
nJTu8UvY6bjXaXHk/JDzUmLJhSEXpDRnV4RcnhK/iJ+b0ixe6dh29lEXPl3k
fFhzWcilKfHsYsd6ux6xHu5D715+9pKU+HKVe8COW0JuTolJ14RcnRJLrgu5
NiWmXOsY83p7yG0p7Zu8m1Li1tWuC5tuCLk+JT7d6h79/eyNKTHsRj+3h5+l
X0+vkf3s6z7kw5o73Bve3BNyd0osuS/k3pS4/GjIIynxiPhdKc3tY44dYN+d
KTHpfufzrXg45KGU+PiAY8Ndj9iB7kNvePC46zKLL4Q8nxI/XrQNO54OeSol
3qCfTIlHL6d0Rw6374mUmHqn9znSPnrAoWdca4LzXvRZl+J+FdOaafo/l9Ld
fdY5Y+zDhiOvuDe8eS3k1ZTm6u+Qv1Jixxshr6fEjjdtw5i3Q95KiVmvO59Z
+ijkw5R485ZzZtn3QUp8eT/kvZR484FtuPluyDspse0d92BGP3Zd2PCJbdjx
bcg3KfHls5BPU+LIFyGfp8Sezx1jtn8M+SElPn3qWrDnS+fAp69sw6fv3GOG
18v6YN/3jsHQr52z0GvB5rvH3XkwJSb+4JyjfcacO+z4NeSXlNjxm20Y80fI
7ykxi/jPKXFkLf5PV9Lize/O4RuJ77+U/j7z35B/Uvod/5/tVX6ff6bEtj/d
A440SasuXGmalg0vcqGzafGiWei102JNMnQiLZagiS33Gn9KiVs8Sy0YlEor
hxlOp2XDpHxaPZY5j3cD4wppxZj7TFo5sIq1YA/1uTKTMIv7Tg68Kac1A/Cj
HrqWFleah26kNUvrhW6dFl+IV9Oas/XTisE2fJW0+NQirXzYs27oVmlxrmVa
MRhEPWLwiz70hitt0qoLLzYN3T4tfmyWlg1rNgq9YVosQW+QFlvpz37gC762
ac1/x9Cbp8UzfPSATRunVQuudUirB6xkveukdR/pv0laZ9curRzOEh8287B7
6H5pMZo89gl7tkirNxzpHHqrtFiydeguad3r7UN3T4tNxLdMiws90orBPHyd
0uJT17TyYdB2aX0jYeU2acWYE+oRg1n0oTe82SGtuvCjT+hd02JM37Rs2NEr
dM+0OITeKS12sL/d0mITvh3T4i7rYp8wDh894NDOadWCQeTRA9bzHjhr+EX/
XdJiRO+0cmAGPmwYzfefvcGjPUPv4bs7OWRSWtzZO3T/tDiyT+gBac3H4NCD
0uIU8b3SmrkD04rBOXzUhUP7ppUPew4IvX9aLBuYVox5ox4x+EUfesObg9Kq
Cz9Ghj4sLcYcnpYNO4aFHpoWh9BDqJmJmtmomRWb8B2cFgtGhxyRFuPw0QMO
HZJWLRg0yj1gJevdLy1+0f/QtBg2PK0cGIdvRFq84PyOTovL5LFPOHSke8Od
8SHj0uLIUSET0pqxY0OOSYtTxMemNX9THUvYNyYtDk10PuyZ4veXc39iJdcj
lnYfesOVaa4LL+aGzEmLH/Nsw5rjQmamxRL0jLS+V9wX5rNu3/S0+DvG+6zZ
Rw/YNMu14NoJ7tHE74GzbuX+s9Oa8+Ods4592Px5HL/V9jIj57sW3FlgG44s
DlmUFktODlmS1iydFrIiLTYRX5jWnK10bEP7TkqLT0udz2ydGnJKWqxc5lhH
1yPWzn3o3cHPLk+LMae7B/w4L+TctNixOmRVWtw5I2RNWlxZ4xgzf2HIBWlx
h7xz0uLZKtdlhs8KOTMtrp3vHt387NlpzfrZfq6rn6XfZl4j++nhPuTDm4vc
G3ZcFnJpWvy4IuTytN7/9SHXpcUj4pekNfM3ONbTvovTYtKVzod514ZckxYf
r3Jsd9cj1tt96A1LbnRdGHFXyJ1pMeNu2/Dl1pBb0uIH+ua02HFvyD1pMQXf
TWmx9mLvs7999IBHt7nWYOfRIxU8GR8yLiMe0P+OtGb7dufsZx82TLnPvWHP
AyH3p3XvPwv5NC3WPBTyYFocedg2LHks5NG0ePag85mrZ0OeSYs1xB9Jiyn4
nk5rlp4KeTKt2XraNqx8IuTxtBj2uHswr8+5Llx53ja8eCPk9bR48WLIC2mx
5uWQl9JiyUuOMefvhLydFrdecC0Y9IpzYNKrtmHSm+5xuNfL+mDcW47B0dec
M9lrwea7x925Oi1+ve2cg33GnDus+SDk/bQ48qFtWPJxyEdp8Yz4eyEnhnwV
8mVarPnIOQvs+yIt1nzu9zffPuy5fp+fpMWwT9wDjnztunDlG9vw4teQX9Li
xXch36bFmh9Cvk+LJd87NsNrfDctbn3rWjDoR+cwwz/Zhkm/ucd05/FuYNzv
jjH3PzvnFK8Fu6/PlZmEWX84B9b8aRt+/Bfyb1pcWYv/c8KMZok5SWbEF+L/
pDVn6Yxia+z7Oy0+NckoH/YkQjfLiHNNM4rBIOoRg1/0oTdcyWRUF15UQ1cy
4kctIxvWFELnM2IJOpfR/d46dJeM+IIvm9EM4OucEc/w0QM2FTOqBdfqGfWA
lax37YzuI/3LGZ1dKaMczhIfNvPQNaPeMJo89gl3moduZMSdVqHXyYgp62Zk
w5X1QrfOiG3EW2bEM3SLjLhDnBxmYKPQG2bEsA1Ct82IR/iw4Wab0OtnxDM0
PZihjTPKhz2bhG6XEUe2DN0pI/Z0CL1ZRizpGHrzjDjKWtgPbCK+aUZca59R
LbjDs+Qz81tklA+rtsqoB6znPDhr2MY7IQYHWQvrgxmshfwNPG/MMezZJqOz
5q4PCX1wRgzaLnS3jJiyfejuGc3GzqF7ZcQz4ttmNDe9M4rBOHzUhUE9MsqH
Oz1D75QRn3bIKAaTqEcM3tGH3szxLhnVhR17hd4zI5b0z8iGPbuF7psRg9B9
Mvrm/+U5hGX4ds2IKfuEHpARz/DRAwb1y6gWDNs7ox6wlfXumBHL6L9HRtza
PaMceIYPG45wfgdlxGvy2CcM2jej3jDogND7Z8SUwaEHZbTWQ0IPy4hnxPfL
aB/DM4rBOHwDM2LQgRnlw52hGb0/+ER/YjCIesTgHX3oDVNGZFSXuRwTcmRG
7BhrG34cHjIyI46gD8vo99bfPl+4he/QjFjLutgn3MJHD5g1yrXg0zj3gPW8
B856bfcfnRHLjnBOU/uw4deEjH5bwJuJIUeFXIodf++SyYo7k0MmZcSRY0Km
ZDRjx4XMzIhtxI/OaP5mOZazj7pw6FjnM1czQqZnxK2pjjVcj1jRfegNY453
XdhxUsiJGbFkoW3YMy9kbkYMQs/JiKFHeZ+t7Jud0RwvCVmcEc9muwcMOsG1
YNAi96h5vdMyYhn9F2TErfnOaWMfNjNwRcjlGX0PpnmfMOhk94ZDp4ackhFH
TgtZkRE7zgw5IyNOEV+e0fyf5dhm9i3LiEMrnc83ZE3I6oxYdrpjW7sesY7u
Q2+4crbrwotLQi7OiB+X2oY154eclxFL0OdmxBH2d1lGfMF3TkbMZV1LM+LZ
Oe4Bmy5wrZ2dR4+N/R44653c/6KM5vxC5+xoH3Zn729VRhy6KuTKjObghZDn
M+LItSHXZMSS60Ouy2iWbgu5NSM2Eb86ozm73bG+9lEXPt3gfGbrlpCbM2Ll
jY7t43rEdncfesOVO1wXXjwY8kBG/HjINqy5J+TujFiCviujP9Pie7LAbMN3
Z0bz/2jIIxnx7E73gE33uhZce9g99vZ6b8qIZfS/PyOe3eecg+3DHuvzey4j
Xt/kfcKex9wbjjwV8mRGLHkm5OmM5uzlkJcyYhPxJzKa/1ccG2nf4xnx6Vnn
w6AX/f7GuD+xCa5H7Aj3oTdcedV14cV7Ie9mxI/3bcOaN0PeyIgl6Ncz+kZx
X5jPyfa9lhF3H/c+J9lHD9j0lmvBtQ/cY7jfA2c93f3fyWjO33bONPuw+fdJ
+Xcy+Pc1+D3B/WU+4c5HIR9mxJHPQz7LiCVfhnyR0Szx50o/ZMQm4p9mNGc/
OTbXvk8y4tNXzme2vgv5NiNWfu0YDPresfnuQ2+48rPrwot/Qv7OiB//2oY1
v4f8lhFL0L9mdNdbx3dj3az4gu+XjOYKX6usePaLe8CmP1wLrv3nHou83m8y
mnX6/+Xz+tM5q+zDZgbWy6r3QuexT7izFv9n5llxp1notbNiSiIrG66kQiez
YhvxplnxDN0kK+4QJ4d7Uwidz4phuay+l7AQHzbc5PuZzopnaHpw74pZ5cOY
cuhSVjPaMnSLrPhRC13Nii+N0PWsOMpa2A98IV7JimFoasEpniWfuW2eVT5s
WierHrCe8+Cs4RbvhBi8Yy2sj7lnLeTP8t3k3sOb9bM6a2Zg19C7ZMWdDUK3
zYojG4XeMCtedAi9WVZsI94mqxnbPKsYbMNHXTi0cVb5zNWmodtnxa12WcWY
OeoRg1/0oTez2zGrunBkm9Bds2LHtlnZ8GOr0FtmxRF0p6y+/x9nNIdwC98W
WfGle+jtsuIWPnrArM5Z1YJP3bLqAXNZ7yZZcZT+W2fFsi5Z5cA2fNhwivPr
ndX3gDz2CXe2z6o33Nkp9I5ZcaRX6J5ZrXW30H2zYhvxHbLaR7+sYrANX4+s
OLRzVvm8yz5ZvT+4RX9ivGfqEYNf9KE3TNk9q7rM5cDQ+2bFjv2ysuFH/9B7
ZcUR9J5Z/eb6xOcLt/DtkRVfWRf7hFv46AGz9s6qFrzjz9H3z+r7wXvgrJlv
+u+TFcsGZJXDzOPD3sus5d9lg2WDs/pz+cPycVdCHsuLHYeEb1hWczUq5PCs
5uwI27BpaOghWfFgtGMwD9/BWfGIGjwHq0aEHp7VnFFvZFaswkc/uEjeQVnN
IfHDsmLH0SETs2LE5JBJWbFnXMjYrBiEHsM74i7k4h3lxDJ8R2bFoUmuxUwf
EzIlKwaNd62s+xyVFavQE7Ji1QQ/t7brsWe4zBoPzeobgGafRddmrfDiuJCZ
WTHihJB5Wc32fNvwaUbI9KzmfoFjNfumZcWsmX4OZh0fMisrvlNvblZ8muV+
VedNzYoLy0KWZsWJ5bZhzSm2YcbCkJOy4sWpjsHQY31eMGiRn9vAz56YFWun
+rm29rGH9u55claMWOG6m9i3JCt+LXbddvZhw5uVIadlddfvDLkjq7t/l23Y
sTpkVVb8OCNkTVbzc37IeVnxiPjpWc3WBY5taR89YNKZzmeezg05Jys+nuVY
d9cj1sV96A1LLnRdGHFVyJVZMeNq2/Dl0pBLsuIH+uKQt4nlfF/tuyirmb8u
5NqsGHaRe8Cjy1wLll3jHt283rOz4hf9r8iKYZc7Zxf7sPndwX2ZkxWjz/Y+
4c317g07bg65KSt+3BpyS8iBIfeG3JMVj4jfmNXc3ufYXvbdkBWTbnM+rLnb
7w8+3u7YYNcjNsB96A0P7nddePBEyONZ8eNJ27Dj4ZCHsuIN+sGsvkvcHe7c
UPseyIq1N3ifQ+yjBxx6xLVg3FPu0c/vgbM+zP0fy2rOH3XOofZht/K5zs7q
NwSaWYWPT7suXHk55KWsZgZmvZnVDL1tG9a8GPJCVnP8jmPj7Hs+Kya95Ofg
2qshr2Q1q9R7IyueveJ+Y533nN//pyGfZMWPz2zDo89tw5v3Q97L6n4nYGpO
dzGZkw1rPvBzM/zsu1nNGM+unRPD3vUe5rjnx1kxkjW+7nPC91FWDPvQdY+3
D5s5SOXUe7LzXsuKlV943bDju5Bvs2LMDyHfZ8Wqr0O+yoo1xL/J6o78HvJb
Vlz7xs/BrR+dD7N+DfklK27+5NgK5xFb4j70hit/hvyR1Vw2ifWulRM7muZk
w5T/Qv7Nipes68usuPml9wNj/gn5OyvWoP/Kimd/uccZrsFz8Inzpscknw13
gvmm//9ymnM0vVd6jb/73eycE4+Yqy1Cd8zpvm4ZulNO7MiHzuXEiFroak6z
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
WR2yqihWrQg5tSjWED+tqDtybsg5RXHtND8Ht9Y4H2adHXJWUdw8w7FuziO2
lfvQG66cH3JeUXN5RcjlRbHjStsw5dKQS4riJes6pShunuL9wJiLQy4qijXo
C4viHfqCoph1iZ/r4/OmRwufDXeit/tfVtScX+be3b3Gc/1uPi+KR8zVyyEv
FXVfXw15pSh23BxyU1GMuCvkzqJm6W7bsOnGkBuKmrN7HNvTvuuL4tFNfg5W
3RpyS1FzRr07imLVLe63h/N497Dj0ZBHiuLFY7bhx+O2Ycf9IfcV9a2eEjK5
qG82mjmEMQ/4uYP87L1FsebJkCeKYti93sNw93y4KBawxtuLYhi+h4pi3IOu
O8w+7Ik+P850oPNuK4qVT3jdsOOFkOe9xtdDXvPa37ANm54LebaoGX7TsSPt
e6YoHj3v5yb4Hb7oPb/mdznePvqNdt7TRc3TRyEfFjWXH9uGJZ/YhjXvhLxd
1G+rY7xGGPqUzw4mvevnpvrZt4pi7dN+7lj72MMs9/ygqO8lZ8OdOM6+94vi
13uuO9M+bH6jMJdnFsWYL4q6x21KwaKQ+SVx5OuQr4piybch3xQ1Z7+E/FwU
v4h/WdQs/urYAvuoC5++cz6s+Snkx6J49r1jy12P2EL3ofdSP/tDUXz5zT1g
x1qxxv+VxKQ/Qn4viiV/hfxZFFP+dIx5XTuebVrSvsn7ryhu/e66sOmfkL+L
4lOTknpwRjz7b1EM+9fPrfaz9DvZa2Q/cIE+5MOaROhmJfEmEzpdEktyobMl
cbkaulISj4inSprbWkkxGIYvWRKT8iXl860ohy6VxMdCSTG+MdQjBrPoQ294
UC+pLrO4XujWJfFj/ZJs2NEydIuSeINuXhKP2pZ0R2AQvkZJTGVd7BNW4aMH
HFqnpFp3+W7Rg7MeEvrgkmaa/uuWdHdblZTDXcaHDUc2KKk3vNko9IYlzVW/
0LuVxI52oTcuiR2blGTDmE1Dty+JWcTJZ5a2DN2pJN4QJ4c5xLdFSXzpGHrz
kniDDxtudgi9WUlsQ9ODGd2qpLqwoXNJNuzYPnT3kviydeguJXFkm9BdS2IP
mhizvVPoHUviE89SC/ZsW1IOfOpWkg2fepTUA46zXtYH+3YoKQZDtyspB6ay
Fmy+e9ydYklMpCc58Jsz5txhR+/QO5fEjl1KsmFMn9C7lsQs4r1K4sheofcs
iTfEyeEbiW+Pkri4e0nvj9/x+LDhJu+zb0lsQ9MDjvQvqS5c2bskG14MDj2o
JF7sE3pASawZGHrfkliCJgZTWWPPkrjFs9SCQfuVlMMM71+SDZMOLKkH3CWP
dwPjDiopxtwfUFIOrGIt2Pye4FyZSZjFfScH3gwtaQbgx4jQw0viymGhDy1p
lsaGjCmJL8QPKWnOxjkG2/ANK4lPI0vKhz2jQ44oiXOHlxRr5npHlsQv+tAb
rox3XXhxbMgxJfFjqm1Yc3TIxJJYgj6qJLbSn/1k7JtQ0vzPCJleEs8muAds
muRacG2aezTxekeVdB/pP8VnN9k5RfuwmYfVIatKYvQo7xP2zHRvODI75PiS
WDI3ZE5J93phyEklsYn4rJK4sMixFvYdVxKf5jkfBp1Y0jcSVp7g2AauR6yV
+9Ab3ix2XfhxWsiKkhiz0jbsWBaytCQOoU8uiR3s7/SS2IRvSUncPc77bGcf
PeDQctfa0nn0qPk9cNYd3f/UkhhxinM2tw8bRs/33uDRGSFrSrq794XcWxJ3
zg45qySOnBtyTknzcUnIxSVxiviZJc3cpY51tY+6cOg858Oei0IuLIll5zu2
k+sR6+Y+9IY3l7ku/Lg+5LqSGHODbdhxVciVJXEIfQW9KlEv5MKK2ITv8pJY
cHPITSUx7nL3gENXuxYMutE9dvB6LyiJX/S/tiSGXeOcfvZhH+jzu6ckLl/g
fcKhW9wb7twRcntJHLkr5M6SZuzBkAdK4hTx20qav4cc29e+W0vi0N3Ohz33
+/0Ndn9iQ1yP2P7uQ2+48rDrwotnQ54piR/P2YY1j4c8VhJL0I+W9L3ivjCf
I+x7pCT+3up9DrePHrDpCdeCa8+7R3+/B84aNjwd8lRJc/6kc0bZh82fx53p
32iw7AXXgjsv2oYjr4W8WhJL3gh5vaRZej/kvZLYRPyVkubsA8cm2vdySXx6
0/nM1rsh75TEyrccm+F6xCa7D72n+dm3S2LMh+4BP74O+aokdnwc8lFJ3Pk0
5JOSuPKJY8z8dyHflsQd8r4siWcfuS4z/HnIZyVx7Rv3WOBnvyhp1r/wc/P8
LP2meo3sZ5H7kA9vvndv2PFzyE8l8ePXkF/8/v8J+bskHhH/saSZ/9expfb9
UBKTfnM+zPsr5M+S+Pi7Y6tdj9gp7kNvWPKf68KIVDm+k2UxI12WDV+ahm5S
Fj/Qa5XFjmzoTFlMwfe/slj7g/cJw/DRAx6tXVYtWEYePfYPuTPkjrJ4QP9E
WbPdrKwcZh0fNkzJldUb9hRC58u691uH7lIWa0qhi2VxpFyWDUuqoStl8Yw4
+czVOqFblsUa4uTAFHwtypql5qEbZc0WPmxYWQ9dK4thaHowr63KqgtX1i3L
hhcbh96oLF6sF7p1WaxpE3r9sliCJsacbxq6fVnc4llqwaC2ZeXApA3KsmFS
u7J6wFnWy/pg3CZlxeDohmXlwDXWgn26784fJfGLnuTAcs6Yc4c1HUNvXhZH
tijLhiVbhu5UFs+Idwh5Kf66W+hty2INcXLgCr5tymJN17LeH6zBhw0reZ+d
y2IoequyOLJdWXXhSveybHjRO/TOZfGiR+jty2LNjqF3KIslaGLwlTVuVha3
eJZaMGinsnKY4Z5l2TBpl7J6wGDyeDcwbteyYsx9r7JyYBVrwV7pc2UmYVaf
snJgTd+ybPixZ+g9yuJK/9B7lTVLzMl+ZfGF+O5lzdkBZcVgG75+ZfFp77Ly
Yc/A0PuWxbkBZcVgEPWIwS/60BuuDCqrLrwYHvqQsvgxoiwb1hwc+qCyWII+
0Pd7TsjssviCb7BnAN/xZfEMHz1g05CyasG1Q8vqAStZ7z5l3Uf6Dyvr7IaW
lcNZ4sNmHua6N4wmj33CnZGhDyuLO6NDjiiLKUfahitjQ8aUxTbio8riGfrw
srgzxjnMwNEhE8ti2FEhE8ri0UTbcHN8yLiyeDbOPZihSc6HPVNCJpfFkeNC
ZpbFnqkhx5bFkukh08riKGthP2XHjymLa8e4VtXPks/Mz3A+rJrlHrCe8+Cs
W/qdECt4Layv4bWQz9+XMG8vmT3zfNbc9StCLi+LQQtC5pfFlJNCTixrNpaF
LC2LZ8RPKGtulju2nn3UhUELnQ93Tg5ZUhafFjnW3vWItXUfejPHp7gu7Dgz
5IyyWHKWbdizMuS0shiEXlHWN3+3suawo32nlsWUc0POKYtnp7oHDFoVcnpZ
DDvbPdp5vYvLYhn915TFrdXO6WIfdm+f32Vl8Xqx9wmDznNvGHRRyIVlMeWS
kIu91qtDriqLZ8QvKGsf1zjWw77zy2LQpc6HO1f6/e3s/sT6uB6xndyH3jDl
WtdlLm8LubUsdtxuG37cGHJDWRxBX1/W761+Xtce9l1XFmvP9z53t48eMOsm
14JPd7hHN78Hznof97+lLJbd7JwB9mHDr7vK+m0Bb+4JuTvkx5BB8fcuB1TE
nftD7iuLIw+GPFDWjD0R8nhZbCN+b1nz96RjB9pHXTj0kPOZq8dCHi2LWw87
dpjrERviPvSGMU+5Lux4OeSlsljyim3Y81zIs2UxCP1MWQy92/scbd/TZc3x
6yGvlcWzp90DBj3vWjDoVfcY4fU+UhbL6P9iWdx6wTnj7cNmBn4J+bms78Ej
3icMesO94dA7IW+XxZH3Qt4tix2fhnxSFqeIv1XW/H/m2LH2vVkWh953Pt+Q
j0M+KotlHzg2x/WITXcfesOVz10XXvwQ8n1Z/PjRNqz5OuSrsliC/rIsjrC/
n8riC74vymLtm97nfPvoAZu+ca1lzqPHJL8HznqJ+39X1px/65zF9mEf7/19
WBaHfgv5taw5WC/ubOuKOPJXyJ9lseSfkL/LmqW1I960IjYR/6OsOWtWUQzm
/e668Olf5zNbTSK+VkWs/M8xGEQ9Yqvdh95wJVFRXXhRDF2oiB+limxYkwmd
rogl6FRFf6bF94TfgPAFX7Ki+a+GrlTEM3z0gE3ZimrBtXJFPWAB6/1fRSyj
f74inuUqyoGv+LDhCOe3bkW8Jo99wp5aRb3hSIvQzStiyTqhW1Y0Z21Dt6mI
TcQbFc3/BhXFYB6+ekV8alVRPgxav6L3ByvpT4y5pR4xmEUfesOVDSuqCy82
D92hIn50rMiGNZuEblcRS9AbV/SN4r4wn/AF30YVcZd1sU94ho8esKl9RbXg
2hYV9YD1vAfOGjbQf7OK5nzTinKYe3zYn9aD741geUO/J7i/zCfc2TLinSri
SNfQW1fEkm1Db1PRLPHnSjtUxCbiXSqas50qisE8fJ0r4lO3ivKZrR6ht6+I
ldtVFINB1CMGs+hDb7jSs6K68KJf6N0q4sfuFdmwZpfQvStiCXpn3/UxIUdW
xBd8vTxX+EZXxDN89IBNu1ZUC67tUVEPWMB6u1c06/TvW9F59akoh/PD18cz
MNa94TV57BPu7BV6z4q4s0/oARUxZd+KbLiyX+iBFbGN+N4V8QzdvyLuECeH
e3NQ6AMrYtjgir6XsBAfNtzk+7l/RTxD04N7d3BF+XBnWOihFc3oqJDDK+LH
iNDDK+LLYaEPrYijrIX9wBfih1TEMDS14BTPks/cjqwoHzYd4R6wnvPgrJv6
nRCDd0MqWt//vBby+e5yN7n38Gacz5oZWBFyakXcOSpkQkUcOTpkYkW8mBYy
tSK2ER9f0YxNdyxlH3Xh0CTnM1fHhhxTEbcmO1ZxPWJZ96E3szvDdeHICSHz
KmLHfNvw4/iQWRVxBH1cRd//rSqaw+b2zayILyeFnFgRt2a6B8ya7VrwaYF7
lLzeKRVxlP5zK2LZHOesax/25j6/Uyr6HkzxPuHOQveGOyeHLKmII8tClnqt
p4esrIhtxBdXtI9Vjm1s36KKOLTc+bzL0/z+Org/sU6uR6y9+9Abpqx2Xeby
/JDzKmLHBbbhx1khZ1bEEfQZFf3m6ux1bW3fmor4usj77GIfPWDW2a4Fny50
j7Z+D5x1d/c/tyKWneOc7ezD5s/O+K023oy8uKI/l7+uFvcvWFytix1XhVxZ
0VzdGHJDRXN2k23YdEXI5RXx4GbHett3WUU8utLPwaprQq6uaM6od31FrLra
/XZ23qUVzSHx6ypixz0hd1fEiPtC7q2IPbeH3FYRg9C38o6q8Y5CTq6KZfhu
qYhD97oWfHkw5IGKGHSHaw1yn7sqYhX6zopYdaefG+B67Hl3r/Hair4B13qf
8OJ+rxVePBHyeEWMeD7kuYpm+wXb8OmxkEcrmvsXHRth3yMVMetxPwezngp5
siK+U+/Zivj0pPsNd97DFXHhrZA3K+LE27ZhzTu2YcYrIS9XxIt3HYOhD/m8
YNCrfu4oP/tSRax92M9NsI89HOOeb1TEiPdcd4p9r1fEr9dcd7J92PDmg5D3
K7rriXifzaq6+8mqbNjxcchHFfHj05BPKpqfb0K+rohHxD+saLa+dWyWffSA
SZ85n3n6KuTLivj4uWMnuR6xOe5Db1jynevCiN9DfquIGX/Yhi8/hfxYET/Q
P4RsGntY9v/31b7vK5r5v0P+qohh37sHPPrZtWDZn+6xwOv9oiJ+0f/Xihj2
i3NOtQ+b3x3cl2cqYvQX3ie8+ce9Ycdasa7/VcWPpqGbhFwSf50Jna6KR8T/
q2hus1XF4By+fyti0tpV5cOaVFXvDz7yPonBIeoRg1P0oTc8yFVVFx7UQ9eq
4kejKht2lEIXq+INulDVd+l93zkYhC9fFWv/9T5hFT56wKFyVbVgXPOqeqzy
e+CsmXX6V6ua80pVOcw9PuzRPtenK/oNgWZW4WOLqurClTah169qZmDWJlXN
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
/FgRcmpN7Fgcsqgm7pwcsqQmrixxjJk/PWRlTdwh75SaeLbIdZnhZSFLa+La
ae7Rwc8ur2nWl/u59n6Wfq29RvbTyX3Ihzer3Bt2nBlyRk38ODvkrJre/0Uh
F9bEI+Jrapr5ix3rYt/qmph0jvNh3gUh59fEx3Md28H1iG3jPvSGJZe4Loy4
NuSamphxnW34ckXI5TXxA31ZTey4IeT6mpiC79KaWLva++xlHz3g0ZWutYfz
6PFXyPB6zGRdPKD/1TXN9lXO6WsfNky50b1hz80hN9V0798MeaMm1twWcmtN
HLndNiy5M+SOmrhG/Jaa5uqBkPtrYs0dzjnYvvtqmqV7Q+6pabbusw0r7w65
qyaG3eUezOuDrgtXHrINL54OeaomXjwS8nBNrHks5NGaWPKoY8z58yHP1cSt
h10LBj3uHJj0hG2Y9Ix7DPZ6WR+Me9YxOPqkc0Z5Ldh897g759XEr+ec099n
zLnDmpdDXqqJI6/YhiWvhbxaE8+IvxgyPeTdkHdqYs2rzplm39s1seYtv7+p
9mFP8ft8vSaGve4ecOQ914Ur79uGF1+EfF4TLz4M+aAm1nwc8lFNLPnIsfFe
4ws1cesD14JBnziHGf7UNkz60j3GOY93A+O+coy5/8w5J3gt2N19rswkzPra
ObDmG9vw48eQH2riys8hP9U0S8zJnzXxhfj3Nc3Z344tse+7mvj0i/Nhzx8h
v9fEuV8dO931iC1zH3rDlX9cF14kYi6b1cWPZF02rFkr9P/qYgn6v5ru9ybx
1+3q4gu+f2uaAXwb18Wzf90DNjWpqxZcS9XV4zSv97ea7iP9167r7JrWlcNZ
4sNmHtrX1XuF89gn3MmEL10Xdwqh83UxpViXDVfKoUt1sY14ri6eobN1cYc4
OcxA89CNuhhWr+ufZcIjfNhwk3+2WamLZ2h6MEMt6sqHPa1Cr1MXRzYMvUFd
7FkvdOu6WNIm9Pp1cZS1sB/YRHzduriGphbc4Vnymfm2deXDqo3q6gHrOQ/O
GrbxTojBQdbSsi5msBby+fsS5o05hj2b1nXW3PW9Q/evi0Gbh+5QF1O2CN2x
rtnoGnrrunhGfLO65mabumIwDh91YVCnuvLhTpfQnevi05Z1xWAS9YjBO/rQ
mznetq66sKNn6J3qYkmvumzYs33o7nUxCL1dXd/8bz2HsAxft7qYskvo3nXx
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
zH0GpsSVU70uvDgjNCYlfoy1D2tOC41MiSXYESl9o3hfmM8NHRueEnfZF/fZ
0jF6wKZRXguujXMPWM9z4Kxbuf/olOb8dNds5hg+f5+Uv5PB39fg9wTvL/MJ
dyaExqfEkamhKSmxZHpoWkqzxJ8rzUmJTeQnpzRnc53LODYpJT7NcD2zNTs0
KyVWnulczeuRy7sPveHK2V4XXiwLLU2JH8vtw5qFoQUpsQQ7P6V3/Y7Q7Snx
hdi8lOaK2G0p8Wyee8CmRV4Lrp3jHhXvd2ZKs07/JT6vxa7ZxjF8ZuBO9y67
jvuEO+eFzk2JOxeGLkiJKRfZhyuXhC5OiW3kz0+JZ9gVKXHnYtfw3lwZuiIl
hl2e0veym2P4cJPv56Up8exS9+C9u8r1MOaa0NUpzegtoZtT4sf1oetS4suN
oRtS4ugK38/ezl+bEsOu9Vr7+lrqmdubXA+bbnWPDj4PzrqHnwm5Pb0X9neA
90I9313eTd57eHOXz5oZ+CD0fkrcuTd0T0ocuT90X0q8eCz0aEpsI393SjP2
uHO9HWNdOPSA65mrR0IPp8StB5072uuRO9x96M3sPuF14chLoRdTYsfL9uHH
s6FnUuII9umUvv8TU5pDuPVU6MmU+PJa6NWUuPWke8Cs57wWfHrFPfp6vw+l
xFH6v5ASy553zYmO4Z/h81uV0vfgId8n3HndveHO26G3UuLIu6F3vNePQx+l
xDbyb/o+PnFuhGNvpMSh91zPs/zQz2+M+7/n5/yRc6Pch94w5VOvy1x+F/o2
JXZ8bx9+fBn6IiWOYD9P6TfXJO9rimOfpcTXN3yfkx2jB8z6ymvBpx/cY6if
A2c90/2/SYllX7vmTMfw+bv7sJa/ywbLfkzpz+X/zsS7ko13MCt2/B76LaW5
+i/0b0pztkZaPmz6NfRLSjxollZugWM/p8Sj33wdrPoz9EdKc8Z6/6TEqj/c
b77rVqc0h+T/Tokd68fa66XFiJZhN0iLPWuHXSstBmGbh04LvR16Ky2WEVsz
LQ5Rx1rM9EZhN0yLQeuktRbMos+6abEK2yItVmG5DhayHve83Hv8K6VvwF++
T3jB2uwVXmwRdvO0GJENm0lrtnNp+fCpVdjN0pr7fFo5mEVs07SYxRpcB7MS
YZvS4jvrpdPiEzH6wULqNkmLC42w9bQ40TotH9a0ScuHGaWwxbR4sWVaORi6
cVrnBYPKaV0HX7i2kBZr6cN18IwY98Dc07OWFiPaprUuM02smha/Kmmty5wT
w4dBW4fdKq13vVfYQ9J693un5cOO7cJumxY/tg/bPq356RS2Y1o8Ir9NWrO1
S1o5OEeMHjCpQ1r1zNPOYXdKi487pJWDO6xHDk7Rh96wpHNa68KIvcLumRYz
uqflw5fdwnZNix/YLqFR+H5fYQqxXdOa+X3D7pMWw4jRAx51S2stWLZ3Wj2Y
f/a7Y1r8ov8eaTFs97RqYCoxfH538L6k0mI0ddwnvNkvrd6w46CwB6bFj4PD
9gj9FP98eNjD0uIR+QPSmtsj0srBOWL7p8WknmnVw5pD03p+8JHnSQ4OsR45
OEUfesODI9NaFx4cF/bYtPgxIC0fdvQL2zct3mD7pPVdapfWOweDiB2VFmvZ
F/cJq4jRAw4dndZaMO74tHrAd54DZ82s079/WnN+TFo1zD0xfH47cK7JtH5D
YJlV+DgwrXXhyimhk9OaGZg1Mq0ZGmUf1gwJnZTWHJ/u3NqOnZgWk072dXBt
WGhoWrPKeiPS4tlQ91vLdSek9fwnhSamxY/J9uHRFPvw5ozQmLTe74tDF/ld
vMQ+rBnr61r52tFpzRjXXpgWw0b7HlLuOSEtRrLH4T4vYuPTYtg4r5twDJ85
uNS9W7ru1LRYOdX7hh2zQjPTYsyc0Oy0WDUjND0t1pA/My2+LAotTItrZ/o6
uHWW62HW/NC8tLg51znerQXOVd2H3nBlSWhxWnN5fmhFWuy4wD5MOTd0Tlq8
ZF/T0uLmNN8PjFkeWpYWa7BL0+LZUvfY3mtwXUefNz028NnwTuzo/uelNefn
uffW3uMiP5t30+IRc/Vk6Im03tenQ0+lxY4rQ1ekxYgbQtenNUs32odNl4dW
pjVnNznX1bHL0uLRFb4OVl0duiqtOWO969Ji1VXu18V1PHvYcXforrR4cY99
+HGvfdhxa+iWtL7Vg0OD0vpmY5lDGHObrzvQ196cFmvuD92XFsNu9j30cs87
02IBe7w2LYYRuyMtxt3udXs6hj/A58eZdnfdNWmx8j7vG3Y8FnrUe3w29Iz3
/px92PRI6OG0Zvh55/o69lBaPHrU1x3rZ/i47/kZP8v+jtGvj+seTGue3gi9
ntZcvmkflrxlH9a8FHoxrd9WJ3iPMPQBnx1MetnXneRrX0iLtQ/6uhMd4x5O
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
1oJhx+bVA7ay34PzYhn9++XFrb551cAzYvjr+vxOzovX1HGfMOj4vHrDoBNC
g/NiykmhE73X4aFT8+IZ+UF53ccI55o5NjAvBg1xPdwZ5ufXwv3JbeD1yK3l
PvSGKSO9LnM5ITQ+L3ZMtA8/RodOz4sj2FF5/d7ayPvaxLHT8mIt++I+N3aM
HjBrjNeCT5PcA9bzHDjrhPuPy4tlY0Nn5DXz4+zz24K5ZA5hzdS83uO78Avx
XhfErRmh6Xkx6Ez7MGVWaGZeDCM/La/Zmx+alxeDZrqmjWNn58WvuaGz8pqx
s+3DsDmh2Xlxa7Z71H0tOeZ7gXvAkfNC5+Y1lxeGLsiLWYtDi/Ji0tLQkry4
RWxhXtxa6LXgzjJfx1mcE1qeF6tWuAc8Ot9+B/fkuva+lvqd3Z/rYM1F3hPz
dk/o7ry4c2nokrw4dJl9OHJ5aGVe3CJ/cV4cuS50bV6cWuma7o5dkxefrg5d
ldc35Br7sOzK0BV5seoK94Aj13tduHKDfXhxZ+iOvHhxU+jGvFhzS+jmvFhy
s3O7eI/c536+lrVg0K2uYVZvsw+T7nKPbfxMeE69fTbkmO/bXdPTe7ndz+rX
0C958eVenykcuj90X16sesA+3HnQPkx5yD5Medg+jHnEPhx61D4cfMw+zHrc
PnP1hH3m7En7MOgp+8zq0/aZ3Wfsw5hn7TPDb4XezIsdz4eey4s7L4ZeyItV
z7kG7rzkHBx62T5cfMU+PHot9GpeDGLtN/Ji1evODXWemuHOk+PbxrvDuwJj
3vb+mN1vQ9/kxap3Q+/kxZ337MOU90Or8mLKB/ZhzIf24dBH9uHgx/Zh1if2
Ydin9vmOfmYfHn1uHz59YR/WfGkf9nxlf5T3yD2c6b1/nRdHvvP9zHCMGhjz
vXPw5Qf78OZ/9uHTT6Ef8/q+8a7x/sGz1c7NdZ4a2PSzc/DlF/uw57e83uO3
isGCUsx6Sdz5M/RHXhz5yz58+Sf0d16zQv73vOZtrWBz84LY87drYA2xNQti
ULOwaxTEJGL4sOy/0L95Mexf92CO1y5oXdizTkE+LNk47EYFcWfdsC0K4sj6
YdcriElYcsx/q7CbFcQ1rmUt2LNBQTW8Zy0L8mHYJgX1gK3sl/3Bpk0LyvFu
blhQDVxjL/iLfR6cKfyiJzXM2DZhty6IQYmwTQUxKFmQD1PSYVMF8Yz8FgU9
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
mO2amveCn/D9cT9wZ77PlHf9jtDtRTFocWhRUQxaYh+mLAstLYpn5BcWNTcX
hM4vikFLXbOTYyuK4s55oXOL4tAK+3DtnNDyori13D2Y4wu9Luy5yD4suSp0
ZVHcuSR0cVEcuSx0aVFMutQ55v+60LVFce1irwV7VroGJl1uH4Zd7R4dvF/2
B5uuca5b6ArX7O694LfzeSwoil/XuqatY5w1DLopdGNRDLrZPky5NXRLUTwj
f0NRc3BP6O6iGHSLa3o7dldRrLrTz6+XY/gH+3neVhS3bnMPWHOv14U999mH
JY+HHiuKOw+E7i+KIw+FHiyKSQ86t6/3eH1RXLvfa8Geh13DzD9i/9jQE+6x
j+t4NrDpSefgxKOuOcZ7wee/6fHnVvw5Dfx6yjVw6JnQ00Ux6PnQc0Ux6AX7
MOWl0ItF8Yz8s0XNDX/m+2ZRDHrRNSMce6Mo7rweeq0oDr1hH669GnqlKIZi
Xy5qjt/2urDnHfuw5JPQx0Vx573Qu0Vx5P3QqqKYtMo53vs1S8Hmkrj2rteC
PR+4hhn+0D4M+9Q9hnm/7A82feYcc/+RayZ4L/jMVfOS+k2Jf/7cNXDoy9AX
RbHq69BXRfHoG/vw6Fv7sOY7+7Dme/uw5wf7MOt/9uHUj/bh1k/24dFq+8zM
z/anuz97Yp5+cQ4O/Rb6tSju/BH6vSgO/Wkfrvwd+qsolv3ummWOcR1z/o+v
W+j16AGn/gv9WxSXv/AZwbA1Ssqd6zz1MI/nRo5vJO8m7yvcWauks2YGtgzb
piRWtQi7Tkk8WrckH76sH3a9klhGfu2SZmbTsJuUxCzy1MAbYhuXxKmNwm5Y
EoOI4cOqlmE3KIlZWHowi5uVtC4z3aokH45kw2ZK4tQWYTcviUOJsE0l8QhL
Do4UwxZKYhjXshbcSZZUA4dSJfmwKldSD5jLftkfbMuXlINh6ZJqYBx7wYfl
nAdnCsvoSQ2/V5hvuACrqhGrlMSjWkk+fGmErZfEMvLlkp7V1mG3KolZ5Knh
+RFrVxKn2pb0/GAQMXxYxfNsXRKzsPRgH9uUtC772rYkH450CtuxJE61D7td
SRzqEHb7kniEJQdf2WOpJIZxLWvBnR3D7lASh3YqyYdVu5TUAy5Tx7OBbfw3
LnIwYueSamAGe8GfWA2WhD4OTQp9ah8O7Rb5riUxaI+wu5fElL3C7lnSfBwQ
dv+SeEa+W0lze2BJORhHjLU+in/uXlI93Nkv7L4l8WnvknLMG+uRg3f0oTdc
49p9SmLDQSX1gBdHhD28JDYdHLZHSTw6JGzPkjiFJces9wl7VEncoe6wkhhH
HevCrN5he5XEnSNL6gGzuPbQkliG5Tp4x7X0g8vskfuBKfShHgb1Lak3HOof
9piSOHJc2GP9fp8YOqEkTpE/uqR3/yTnYByxfiVxaEBJ9TB9cGhQSZw6vqRc
c69HDt7Rh94wZojXhRmnhUaWxJVR9uHFsNDQktiDPaUkXowOnV4Sj4idXBJr
2Rf32cIxesCeU73Wpq6jx8Ohejnmrixm0X9ESVwY7poNHcOHL2PcGwaNDZ1R
0vt9ceiikrgzPjSuJO5MsA9HJoUmlsSwca5nVs4MzSiJOxNdU3RsekmsmRaa
WhJ7ptuHZVNCk0ti1WT3YHZnel14M8s+/FgYWlASa+aEZpfEjrmhs0ri0FnO
MfNLQ0tKYtlsrwVvznYNHJpnH24tco+c98v+4NFi52DZfNe09V7w+Y7x7gws
iVlLXLO5z5hzhzvnhc4tiTsr7MORC0Lnl8Swc0LLS2LHytBlJXHnfNd0cezS
kvh0iZ/fro7hd/LzvLAkVl3oHnDkcq8LV66wDy9uDN1QEi+uCl1ZEmuuCV1d
Ekuudq6997isJG5d6bVg0LWuYYavsw+TbnKP7VzHs4FxNzvH3F/vmn29F/w1
fK7MJMy6xTWw5lb78OOu0J0lceWe0N0lzRJz8lBJfCF/R0lz9ohzPR27vSQ+
3et62PNg6IGSOHefc328Hrne7kNvuPKo14UXz4WeLYkfz9uHNU+GniiJJdjH
S3q/vw19UxJfiD1W0gwQ+7oknj3mHrDpKa8F115wjyO93/tLeh/p/4zP7mnX
DHQMn3n4zr2PcB33CXdeCr1YEndeC71aElNetw9X3gy9URLbyL9SEs+wL5fE
nTdcwwysCr1XEsPeDb1TEo/esw833w69VRLP3nIPZuh918OeD0MflMSRL0Nf
lMSeT0Ifl8SSz0KflsTRl30/E5z/qCSufeS1Jvla6pn5z10Pq75yj5N8Hpz1
DD8TcmO9F/Y31XuhnvegURajYc/3Pmve9S0itnlZDPox9L+SmLI69FNJs/Fn
6I+SeEb+h5Lm5i/n5jjGujDoZ9fDnd9Dv5XEp1+cW+L1yJ3tPvRmjv/2urBj
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
+2N2x4fGVcSnk0NDKmLQKfZh0FD78GWYffhyqn14M9w+nBphHzaNtA+DTrMP
g0bZh0Gn24dJo+3DmjH2Yc8Z9tfxHrmHJu99bEUcmeD72cIxamDMROfgyyT7
8Gayffg0NTSlom8d7xrvHzyb5lzWeWpg03Tn4MsM+/DmTPtwaKZ9uDMnNLsi
jpxlH77MC51d0ayQn1XRvDEPSypiz1zXbOPY4ooYtCi0sCImLbYPyxaE5lfE
sPnuwRwv87qwZ7l9WHJx6KKKuHNu6JyKOLIidF5FTDrPOd71B0MPVMS1c7wW
7DnfNbxnF9iHYZe4Rzvvl/3Bpkud49280DWdvBd8Zukh94Nfl7kGDl0eWlkR
q64MXVERj66yD4+utg9rrrEPa661D3uusw+zrrcPp26wD7dutA+PbrLP+3Gz
/W7uz554d25xDjbdFrq1Ih7dEbq9Ih7daR8G3R26qyJ+3e6aXo5xHWy6x9cd
5PXoAZvuC91bEZdX+ozg1P3OHeY89Uf6uZHjNxEcgk0w6GGfNe/6F6HPK8o/
Fnq0IjY9bh8ePRl6wvXkH6mIKS+Enq+IX0+45gTHnquIR8+GnqmIT8/Zh1tP
h56qiF9PuQdz/qLXZe5fsg873g69VRGbXgm9XBGPXgu9WhGnXnUOdqwKvVcR
1172WjDrddfArDfsw6N33GOg98v+YNO7zsG1N10z0nvB7+fz4ExHuyc1fAuZ
b7gApz4KfVgRmz62D48+DX1SEdvIf1ARR74JfV0Rvz5xzQzHvqqIR1/6+U13
DH+Kn+dnFfHrM/dgH996Xfb1nX048lvo14o49UPo+4o49VPox4p49D/nxnqP
71fEsO+9FtxZ7Ro49LN9WPW7e5zhOp4NbPvDORjxi2sWei/4/Hs13wa+FfDr
r4p+N8Chf0J/V8Sq/0L/VsSjNary4cua8c/NqmLZv65hbtaL2LpVMYs8NcwS
sRZVcWqdsGtXxSBi+LBqrbDNq2IWlh6wYP2q1oUNG1Tlw47Nw7aqik0bhm1Z
FY82DrtRVZzCkmPWk2ETVXGNa1kLZm1SVQ3M2rQqHx5tUVUPmMt+2R88aqoq
B9c2q6oGrrEX/OU+P84UvtCTGuatQ9jtq+JRNmymKj7lqvLhSyFsviqukU9X
NQP1sLWq+EWeGlhDrFoVkyphy1Wxnhg+/CqFLVbFMCw9mK1GVevCntZV+bBk
u7DbVsWdLcO2qYoj7cK2rYpJWHKwlj2mquIa17IW7NmqqhpmfuuqfBjWvqoe
MJo6ng1s4mzIwYltqqqBa+wFH+Zyf9wP3NmhqjPlXe8Xtm9VDOoYdueqGNSp
Kh+mdA67S1U8I79TVXOzR9jdq2IQeWqYJWLdquLObmG7VsUhYvhwrUvYXavi
FpYezPGeVa0Le/aqyoclB4U9sCru7B22e1Uc2TfsPlUxCUuO+T8kbM+quMa1
rAV79quqBibtX5UPw3pU1QO2sl/2B5sOrioH1w6oqgausRd8+M557FgVv+hJ
DYwnxlnDoMPDHlYVg46oyocpR4U9siqukT+0qjk4Nmz/qhhEnhpmg9gxVbHq
6KqeHwwihg/XeJ59quIWlh6w5riq1oU9A6ryYcnJoSFVcWdg6PiqODI4NKgq
Jg1yDub2DturKq5xLWvBnhNcw8yfaB+GneIesJk6ng1sGuocnDjJNet4L/j8
/VT+XJa/ZwG/hrkGDg0PnVoVg04LjayKQaPsw5TRodOr4hn5EVXNDX+HbEJV
DDrdNUnHxlfFnXGhsVVxaLx9uHZGaExV3BrjHszxJK8LeybbhyWzQ7Oq4s7U
0JSqODI9NK0qJk1zjvf+qtCVVXFtiteCPTNcwwyfaR+GzXGPLbxf9gebznKO
uZ/pmor3gs9cXe1+8Guua+DQvNDZVbFqQWh+VTxaaB8eLbIPaxbbhzVL7MOe
pfZh1jL7cGq5fbh1jn14dK59ZuY8+1u6P3tinlY4B4cuCJ1fFXcuCl1YFYcu
tg9XLg1dUhXLLnRNZ8e4jjm/zNft5PXoAacuD62sistn+4xg2BXOdXWe+t39
3MjxjeTd5H2FO9f4rJmBl0MvVcWq60PXVcWjG+zDl5tCN1bFMvLXVjUzd4bu
qIpZN7qmp2O3V8Wp20K3VsWg2+3DqltCN1fFrJvdg1m8y+vCnXtCd1fFkUdD
j1TFqftC91bFoQdC91fFo/udgyNPhp6oimH3ei2486Br4NBD9mHVY+5xkPfL
/mDb487BsIdd0897we/u8+BMj3VPavi9wnzDBVj1bOiZqnj0nH348kLo+apY
Rv5pP6vXQ69VxaznXTPMsVer4tQrfn5DHcMf4uf5YlXMetE92McbXpd9vWkf
jnwY+qAqTr0deqsqDr0beqcqHr3j3PHe41NVMewtrwV33nMNHFplH1Z95B4D
XMezgW0fOwcj3nfNWO8Fn79DwX8n4M/F4c5nVf392r5t4uxDD7URg74KfVkV
U74JfV3VfPwU+rEqnpH/oqq5Xe3cVMc+r4pB37oe7vwv9ENVfPrOublej9wM
96H3HF/7fVVs+Nk94MW/oX+qYtOvoV+q4tHvod+q4tRvzjHrzWrx3auJO9T9
XRXjfvG6MOvP0B9Vcec/91jua/+qimV/+bolvpZ+s71H7gem0Id6GLRmTb3h
0Dph166JI+uGbVHT+71x2I1q4hT5tWp69zepKQfjiDWviUPr1VQP0zcM27Im
Tq1fUw4GsR45eEcfesOYTWtaF2akw6Zq4kqmJh9ebBF285rYg21VEy/yYXM1
8YjYZjWxln1xn3CNGD1gT1NNa8GdbE09BoeeCz1bE7Pon6yJC4maauAEMXz4
UqipNwwqhS3W9H53D7tXTdyphC3XxJ1qTT4cqYet1cQw8tQzK1uFbVcTd8hT
w/wQa1sTa7YM26Ym9hDDh2WtwzZqYhWWHszu1jWtC2+2qcmHHzuH3akm1mwX
dtua2LF92PY1cQhLjpnvHHaXmljGtawFbzrUVAOHdqjJh1sda+oBT9kv+4NH
nWrKwbIda6qBZewFn+8Y784GNTGLntTAdc6Yc4c7u4XtWhN3utXkw5E9wu5e
E8PId6mJJfuF3bcm7pCnBr4Q26cmPu1d0/Pj7/QTw4dlPM89a2IVlh5wZP+a
1oUrB9Tkw4tDw/auiRcHhT2wJtYcHLZHTSzBkoOz7HHXmrjFtawFg3rWVMMM
H1KTD5MOq6kHPKaOZwPjDq8px9z3qqkGVrEX/P//fVDTTMKsI2qqgTVH1uTD
j6PD9quJK/3DHlPTLDEng2riC/m+Nc3ZCc7BNmJ9auLTsTXVw56BoeNr4txx
NeWaeT1y8Is+9IYrJ3pdeDEiNLwmfoy0D2tOCZ1cE0uwQ2p6vxeHFtXEF2In
1TQDxBbWxLOT3AM2DfVacO0094CV7HdATe8j/U/12Q1zzQaO4TMPS9wbRlPH
fcKd00OjauLO2NAZNTFlnH24MiE0via2kR9TE8+wo2viznjXMAPTQ9NqYt/U
0JSaeDTNPtycFJpYE88mugczNMP1sGdm6MyaODI/NK8m9swJza6JJXNDZ9XE
0dG+n6rzs2ri2iyvVfe11DPzZ7seVi1wj018Hpx1Oz8TciXvhf218V7O9nvw
fE2Mhj1Lfda86/eG7qmJQeeEltfElPNC59Y0G5eELq6JZ+SX1TQ3lzq3nWOs
C4NWuB7uXBS6sCY+ne/cLl6PXAf3oTdzfJnXhR3Xha6tiSXX24c9V4auqIlB
2Mtr+uYfVdMc7ubYypqYclPoxpp4ttI9YNBVXguG3eAeHb3fC2piGf2vqYlb
V7tmL8fwD/X53V0Try/wfcKgm90bBt0euq0mptwZusN7fSB0f008I39rTffx
oHMHOXZLTQy6y/Vw5z4/v97uT+4Ir0eup/vQG6Y85HWZy6dDT9XEjmfsw4/H
Qo/WxBHsIzX93urjffVz7OGaWHuL77OvY/SAWY97Lfj0rHvs5+fAWQ9w/ydr
YtkTrjnOMXx+W0yuaQ5hzQs1vcdr14M/oRPr4tbLoZdqYtAr9mHKa6FXa2IY
+Rdrmr13Q+/UxKBXXTPKsbdr4tdboTdrmrG37cOwN0Kv18St191jhK8lx3y/
5x5w5IvQ5zXN5Tehr2ti1geh92ti0kehD2viFrFVNXFrldeCOx/7Os7i09An
NbHqS/eAR1/Zn+Ken9XErU9cP8P9uQ7WfOs9MW8t4izXqYs7P4S+r4lD/7MP
R34K/VgTt8h/VxNH/gj9XhOnfnTNYsd+q4lPv4Z+qekb8pt9WPZzaHVNrFrt
HnDkT68LV/6yDy/Wij02r4sX/4T+rok1/4X+rYkl/zo3y3vkPpf7WtaCQWvU
VcOsNqvLh0m8W/QY52fCc4JxnA055nvNumrgBHvB51ntHrZbXXxZt64zhUPr
h12vLlZtUJcPd1rW5cOUDevyYcpGdfkwZuO6fDi0SV0+HNy0Lh9mbVaXz1y1
qstnzjavy4dBW9TlM6tNdfnMbqIuH8Yk6/KZ4VrYal3sSIdN1cWdbNhMXawi
Rg3cydWVg0P5uny4WKjLh0elsMW6GMTalbpYVa4rB8vIUwP7yJNb4HeHdwXG
1OvaH7O7c9id6mJV67CNurjTpi4fpmxZlw9T2tblw5h2dflwaKu6fDi4dV0+
zNqmLh+GbVuXz3d0u7p8eNS+Lh8+bV+XD2s61OXDnh3q8mEne+Qe4A5737Eu
jnSs637gFzFqYEynunLwZZe6fHjTuS4fPnUJu2td3zfeNd4/eNa1rhz8Ik8N
bNqtrhx84Z3Fhz171PUeV1vHnIdmtRZ3ukdsr7o4snddPnzZL+y+dc0K+T3r
mreeYQ+uiz371FUDa4j1qItBB4U9sC4mEcOHZQeE3b8uhmHpwRwfUte6sKdX
XT4s6Ru2T13cOTRs77o4cnjYw+piEpYc898/7DF1cY1rWQv2HFFXDe/ZkXX5
MKxfXT1gK/tlf7Dp6LpyvJtH1VUD19gLPuzgPDhT+EVPapix8aFxdTHo+LAD
6mLQwLp8mDI4NKgunpE/rq5nOzR0Sl0MGuSadR07uS5WDanrG9nCMXy4xjfz
hLq4dYJ7wKNhXhcenWofXpwRGlMXj0aEhtfFoNNCI+ti00jnYC57PLYulg33
WnBqlGvg1On2YdBY94DN1PFsmnw25GDZaNe08l7w+fcPZuwFc2uCz5R3emXo
srp4NCU0uS4eTbUPX6aHptXFMvKT6prJs0Jz6mLWNNfUHJtdF5NmhWbWxbDZ
9uHXmaEZdTFshnsw63O9Ljw62z68WBZaWheP5ofm1cWghaEFdbFpgXOw4LzQ
uXWxbJ7XglOLXAOnFtuHQcvdo+z9sj94dI5zsGyJa7b1XvDTPo+JdTHrXNek
HOOs4dGFoQvq4tFF9uHLJaGL62IZ+fPrmoGrQlfWxayLXbO7Y1fUxaDL/fy6
OYbfxc/z0roYdql7MFtXe13Yc419WHJb6Na6uHNd6Nq6OHJj6Ia6mIW9vi4G
s8cVdXHtWq8Fe25yDTN/s30Ydrt77Og6ng1susM5OHGLaw7yXvBh1p2+Du7c
ZR8O3W0fBt0XurcuBt1vH6Y8GHqgLp6Rv6euuXki9HhdDHrANf0de6wu7jwa
eqQuDj1mH649HHqoLm495B79fC05ZvpJ94AlL4deqmu2Xw+9VheDngk9XRdT
ngs9WxfLiD1VF8Oe8lqw53lfB6deDL1QF8NecQ949Kr9Ie7JdSf6WuqHuT/X
wZs3vCdm7MfQ/+riztuht+rizjv24ch7oXfrYhj5N+t6xz8JfVwXd951zQTH
PqqLTx+GPqiLOx/Zh2Xvh1bVxapV7sE8fep14c1n9uHH96Hv6mLNF6HP62LH
V6Ev6+LQl86N8B65zym+lrXgzdeuYc6/sQ+3fnCPQX4mPKezfDbkYMO3rpnl
veDv0og5DV3UEGt+8pnCo59Dq+vi0y/2YdCv9mHQb/bhy+/24csf9uHNn/bh
1F/2YdPf9uHOP/bh0L/2mbf/7DN/azTkM8fNGvJhz5oN+czzxmE3aog7a4Vt
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
JR+O9A/1S4lTx4c9LiUOnRC2d0o8wpKDI4NCJ6XEMK5lLbjTJ6UaONTXPqwa
4B4wl/2yP9g20DkYdqJrVvJe8GE558GZruae1PB7hfmGC7BqSGhwSjwaah++
DAudmhLLyJ+S0rMaHRqVErNOdU07x0amxKkRfn4bOIbf1s9zeErMGu4e7GOM
12VfZ9iHI5NDk1Li1JmhsSlxaHxoXEo8GufcGt7jySkxbKzXgjtnuQYOTbAP
q852j9au49nAtinOwYiJrtnCe8F/IRvMyAVPcvrv+vlv1/hv4uDQtNC5KTFo
ZmhGSkyZFTovpfmYH7ogJZ6Rn57S3C5wLuUYa8Gg810Pd+aF5qbEp9nOlb0e
uaz70Lvoa+ekxIYL3QNeXB26KiU2XRy6KCUeXRJamBKnFjrHrF8XujYl7lB3
ZUqMu8jrwqzLQpemxJ1r3GN7X3tFSizDXp4S7y51v8R75H52ch/qYdD17g2H
bg7dlBJHbg3dktL7fU/o7pQ4Rf7GlN79e53r4dgNKXHoNtfD9LtCd6bEqdud
28/rkdvDfegNY+7zujDjf6HHUuLK4/bhxUOhB1NiD/aBlHjxZOiJlHhE7P6U
WHuD77OXY/SAPQ97raNdR4+10zF3oaFpMYv+j6bEhUdcc7hj+PDlKfeGQc+E
nk7p/f4u9G1K3Hku9GxK3HnePhx5MfRCSgx71vXMyhuh11PizguuGeTYaymx
5tXQKymx5zX7sOzl0Espseol92B23/S68OYt+/Djo9CHKbHmndDbKbFjUejd
lDj0rnPM/GehT1Ni2dteC9685xo49L59uPWxewzwftkfPPrEOVj2gWtGeC/4
fMd4d+5IiVmfuuY4nzHnDne+DH2REne+sg9Hvg4tSYlh5BenxI4fQ0tT4s4S
10x17IeU+PS9n985juFP9vP8JiVWfeMecGSZ14UrP9mHF3+H/kqJF7+Efk6J
Nb+Ffk2JJb86d6b3+HlK3PrZa8Gg313DDP9hHyYtd4+xruPZwLh/nGPu/3TN
XO8Ff2+fKzMJs/51Daz5zz78WDnmYKW0uLJa2FXTmiXmZK20+EJ+xbTmbJ20
crCNWKu0+LR6WvWwp03YNdPiXOu0cjCI9cjBL/qskhZX1k1rXXixcdj2afFj
k7R8WLNB2PXTYgl2vbTe723CNtPiC7G2ac0AsUZaPCNGD9jULq214NqmafWA
lex3jbTeR/pvlNbZbZhWDWdJDJ956JpWbxhNHfcJdzqE3Swt7mwZdou0mNIp
LR+udA67VVpsI98xLZ5hN0+LO+SpYQYyYdNpMSwVtiUtHhHDh5tbh+2SFs+w
9GCGsmnVw5582FxaHKmFrabFnmLYJC2WlMOW0uIoe+F+YBP5Qlpcw7IW3OFa
6pn5Slr1sKqeVg9Yz3lw1rCNZ0IODrIX9gcz2EvF78EwMxr2bJvWWfOuHxf2
2LQYtH3Y7dJiyo5hd0hrNnYL2yMtnpHvltbc7J5WDsYRY10Y1D2teriza9hd
0uLTTmnlYBLrkYN39KE3c7xHWuvCjgPC7p8WSw5My4c9e4ftmRaDsHul9c1f
Ia05hGXE9kyLKQeHPSgtnhGjBwzaJ621YFivtHrAVva7c1oso/9+aXFr37Rq
4BkxfDjC+R2TFq+p4z5h0CFp9YZBR4Q9PC2mHJXW/+aJvZ4QtndaPCN/WFr3
0SetHIwjdmhaDDo6rXq4c3xazw8+0Z8cDGI9cvCOPvSGKX29LnM5OHRKWuwY
Yh9+DAwNSIsj2P5p/d5q5X3BrX6hE9NiLfviPld0jB4w6ySvBZ+Guges5zlw
1mu4/8lpsWyQa1o7hs9vC+aSOYQ1w9N6j2/Ez8R7nRG3RoROT4tBI+3DlNGh
UWkxjPxpac3eWaHxaTFolGs2c2xcWvw6MzQ2rRkbZx+GnREakxa3xrjHxr6W
HPM9wT3gyPTQtLTmclbovLSYNTk0KS0mTQmdnRa3iE1Mi1sTvRbcOcfXcRbn
hqamxaoZ7gGPZtpvcU+u6+Jrqc+6P9fBmvO9J+bt5tBNaXFnbmhOWhyaZx+O
zA9dkBa3yM9OiyOXhi5Ji1MXuGYbxxamxaeLQxel9Q1ZaB+WXRhakBarFrgH
HLnM68KVy+3DixtC16fFiytDV6TFmqtDV6XFkqucK3iP3Od2vpa1YNA1rmFW
r7UPk250j05+Jjyn3Xw25Jjv61yzi/dynZ/V16ElafHlFp8pHLotdGtarLrd
Pty5wz5MudM+TLnLPoy52z4cusc+HLzXPsy6zz5zdb995uwB+zDoQfvM6kP2
md2H7cOYR+wzwy+Enk+LHfzvMh9NizuPp/W/1TzcMWrgzhPOwaEn7cPFp+zD
o2dCT6fFINZ+Li1WPevccc5Tc4Lz5Pi28e7wrsCYF70/Zvfj0EdpseqV0Mtp
cedV+zDlNfsw5XX7MOYN+3DoTftw8C37MOtt+zDsHft8R9+1D48W2YdP79mH
Ne/bhz0f2O/vPb6UFnfY+4dpceQT388Ix6iBMZ86B18+sw9vPrcPn74ILU7r
+8a7xvsHz7507kznqYFNXzkHX5bYhz3fpPUe83eX/O7nNz7c+T70XVoc+cE+
fPkxtDStWSH/bVrz9nvot7TYs9Q1sxz7NS0G/RL6OS0m/Woflv0UWpYWw5a5
B3P8h9eFPX/ahyUrxnegVUbc+Tv0V1oc+Se0PC0mLXeO+V81rl0lI6795bVg
z7+u4T37zz4MWymjHjO8X/YHm1bOKMe7uUJGNXCNveBP9nlwpvCLntQwY53C
bpkRg9YI2zojBq2ZkQ9T1grbJiOekV89o2e7Ad+9jBhEnhqeN7H1MmJV24y+
kTCIGD5c45u5dkbcwtIDHrXLaF14tGFGPrzoGHbzjHjUPuxGGTFok7AbZ8Qm
LDmYyx5Xy4hlXMtacGrTjGrg1GYZ+TBoi4x6wGbqeDbwiLMhB8s6ZFQDy9gL
Pn/+YMaYORi0VUZnyju9V9g9M+JRS9itM+JRKiMfvmTCpjNiGfkuGc1kOWwp
I2aRpwbWFMMmGTGpEDafEcOI4cOvXNhsRgzD0oNZr2S0LjyqZuTDi+3CdsuI
R/WwtYwY1AzbyIhNWHKwoHvYHTNiGdeyFpzaJqMaONU1Ix8GbZ9RDxjKftkf
PNohoxws2zajGljGXvDhPefROSNm0ZMaeE+Ms4ZHu4bdJSMe9cjIhy+7h90t
I5aR3zmjGdg37D4ZMYs8NbCG2N4ZMahnRs8PJhHDh188zz0yYhiWHszWfhmt
C3v2z8iHJYeHPSwj7hwY9oCMOHJQ2F4ZMQlLDgazx50y4hrXshbsOTijGmb+
kIx8GHZERj3gNHU8G9h0ZEY5OHFoRjVwjb3gw6yjMroO7hydkQ+HjsnIh0HH
hz0uIwb1zsiHKX1CJ2TEM/LHZjQ3J4UGZsQg8tSs6tiAjLjTP9QvIw4NsA/X
Tgz1zYhbfd1jJV9Ljpke5B6w5PTQaRnN9ujQqIwYNDh0SkZMGRoakhHLiJ2c
EcNO9lqw51RfB6eGh4ZlxLAR7gGPRtpv655ct46vpb6d+3MdvBnjPTFj80MX
ZMSdM0NjM+LOOPtw5KzQ+IwYRv6MjN7xc0JTMuLOeNds5djZGfFpcmhSRtw5
2z4smxiakBGrJrgH8zTV68Kbc+3Djzmh2RmxZnpoWkbsmBmakRGHZjjX3nvk
Plt8LWvBm/Ncw5zPsg/L5oXmZvStGOLnVPbZkIMN57um4L3gfxrqkY25zoo1
C3ym8Oii0IUZ8eli+zBooX0YdIl9+HKpffhymX14c7l9OHWFfdh0pX24c5V9
OHS1febtGvvM37X2mePr7MOe6+0zz/eE7s6IOzeGbsiIIzeHbsqIXze4Bsbc
4hzsudU+bLrNPny6I3R7Rtxh7bsy4tmdzvV0npp9nSfHt413h3cF3tzr/TG7
z4WezYhP94fuy4hBD9iHQQ/ahy8P2YcvD9uHN4/Yh1OP2odNj9mHQf+zD4Me
tw+DnrAPk560D2uesg97nrZ/oPfIPfT23p/JiCPP+36Od4waGPOCc/DlRfvw
5iX78OmV0MsZfet413j/4NmrzvV3nhrY9Jpz8OV1+/DmDftw6E37cOed0NsZ
ceRd+/DlvdCijGaF/FsZzRvz8ElG7FnkmtGOfZwRgz4KfZgRkz62D8s+CL2f
EcPedw/m+DOvC3s+tw9Lvgt9mxF3vggtzogjX4W+zIhJXzrHu94mZnTNrLi2
2GvBniWu4T372j4M+949Rni/7A82/eAc7+Y3rpnsveAzS2tl1Q9+LXUNHFoW
+jEjVv0c+ikjHv1iHx79ah/W/GYf1vxuH/b8YR9m/RX6MyNO/W0fbi23D4/+
sc/78a/96e7Pnnh3/nMONrWKva+QFY9WCrtiVjxaOSsfBq0adpWs+EWeGjhF
jOtg02pZXQf7WI8esKl1/PPqWXH5R58RnFojqxwsI089zOK5keM3ERyCTTBo
7azOmne9GraSVb5t2HWzYtN6WfnwaIOw62dVT36drJiyadhNsuIXeWpgFbGN
s+JR+7AbZcUnYvhwa8Ow7bLiF5YezPlmWa3L3HfIyocdW4ftkhWbOobdPCse
bRl2i6w4hSUHOzJh01lxjWtZC2Z1yqoGZm2VlQ+PWrLqAVvZL/uDTamscnCt
c1Y1cI294MN1zoMzhV/0pIZvIfMNF+BUIWL5rNiUZOXDoxL/fj0rtpHPZcWR
ZthGVvwiTw2sIVbPike1rJ4fPCKGD7d4nuWs+IWlB/vYJqt12VfXrHw4snPY
nbLiVLew22bFoe3DbpcVj7DkYC17zGbFMK5lLbizQ1Y1cGjHrHxYtUtWPWA0
dTwb2Mb3nxyM6J5VDcxgL/j8uZpvA98K+LVbVr8b4NAeYXfPilV7hd0zKx71
zMqHL/uE3TsrlpGnhrk5KGyvrJhFnhpmidiBWXHqgLD7Z8UgYviwar+w+2bF
LCw9YMHBWa0LGw7Jyocdx4U9Nis2HRb20Kx4dETYw7PiFJYcs94ndEJWXONa
1oJZR2ZVA7OODntUVjw6PqseMJf9sj941DurHFw7JqsauMZe8OE458eZwhd6
UsO8jQ+Ny4pH/UP9suLTAPvw5aTQwKy4Rv7ErGbg1NDQrPg10DVrOTYkKyYN
Dp2SFeuH2IdfJ4cGZcWwQe7BbA3zurBnuH1YMjZ0RlbcOT10WlYcGRkakRWT
Rji3ovfYNyuunea1YM8o1zDzo+3DsDPdo5XreDab+mzIwYkxrmnvveCv4fvj
fuDOWT5T3vXrQ9dlxaDJoUlZMehs+zDlnNCUrHhGfmJWc3NeaGZWDJrimoxj
M7LizvTQtKw4NMM+XDs3NDUrbk11D+Z4lteFPefbhyUXhS7MijtzQrOz4si8
0NysmDTXOeb/0tAlWXFttteCPRe4BibNtw/DLnaPFu+X/cGmhc7BtQWuqXkv
+B19HhOy4tclrtncMc4aBl0ZuiIrBl1lH6ZcE7o6K56RvzyrObg5dFNWDLra
Nbs5dmNWrLrBz6+HY/g7+3lemxW3rnUPWHOL14U9t9qHJfeF7s2KO7eHbsuK
I3eG7siKSXc41817vCwrrt3mtWDPXa5h5u+2D8Pud49tXcezgU0POAcn7nHN
Ad4Lfhf/vSz/nQX8etA1cOjh0ENZMeix0KNZMejx0P+yYsqToSey4hn5R7Ka
G/4bsuezYtATrunj2HNZcefZ0DNZceg5+3Dt6dBTWXHrKfdgjl/0urDnJfuw
5O3QW1lx55XQy1lx5LXQq1kx6VXneO9/Df2SFdde9lqw53XXMMNv2Idh77jH
8d4v+4NN7zrH3L/pmsHeCz5z9Zv7wa9FroFD74fey4pVH4Y+yIpHH9mHRx/b
hzWf2Ic1n9qHPZ/Zh1mf24dTi+3DrS/sw6Mv7TMzX9k/3f3ZE/O0xDk49E3o
66y4813o26w49L19uLI09ENWLPvWNec4xnXM+Y++bqLXowec+im0LCsuv+cz
gmE/OzfNeepn+rmR4xvJu8n7Cnd+91kzAx1y8U3LiVV/hf7Mikd/24cv/4SW
Z8Uy8n9kNTMrR91KOTFruWvgDbEVc+JUq7Ar5MQgYviw6r/Qv1kx61/3YBZX
yWldZnrVnHw4sk7YtXPi1OphV8uJQ2uEbZ0Tj7Dk4Mj6YdfLiWFcy1pwZ82c
auBQm5x8WLVuTj1gLvtlf7CtbU45GLZWTjUwjr3gz/Z5cKawjJ7U8HuF+YYL
sGqjiG2YE4/a5+TDl03CbpwTy8i3y+lZbRl2i5yYRZ4anh+xjjlxavOcnh8M
IoYPq3iem+bELCw92EennNZlX1vl5MORfNhcTpzaOmyXnDiUCtuSE4+w5OAr
e9wgJ4Z1zmktuJPOqQYOZXLyYVUhpx5wmTqeDWzjv5klByOyOdXADPaCX+0Q
70dofgfxq5TTf2sLhyphyzlxpBm2kdNM7BB2+5zmc8ecfDhVD1vLaXa755SD
c8SqOfGLNbgOJnUNu01OM8Z62+XEKWL0g4/UsQ84Rb5bTrzYM+weOXGhZ9i9
cmLQrmF3yYlN2J15vjz/fDzfvPhFbKecWEMda8GAfcLunRO/euS0Fpyiz+45
8Qu7W05cw3IdfGQ97hn+ssdtc2I0lvuEL6zNXmHHQWF75fROHxn2iJze8aNy
8mHVgWEPyIkHR+eUg1/E9s+JX6zBdbDpkLAH58Qd1js8J1YRox98pG6/nDhx
YqhvTizpZx8u9LcPb44Le2xOjBjgHDzdN6fzginH53QdbOLaY3LiLn24DsYR
4x5auWefnHgx0Ouu4NgJObGqd07rwghi+HBnUOgkv9OzQ+fn9I7PsQ9rBodO
yYkdQ0NDcpqJkaERObGJ/Mk5zdko51o7Rg/Yc6rr4c3podNy4tcw59b3euTa
uA+9YcxorwszJoYm5MSVSfbhxZmhsTmxB3tG6G5yeb+vjo3Jaf6nhM7OiWtj
3AP2jPNacGeye7T1fofnxCz6n5UTt8a7poNj+Pwm4H05LCcWD/d9wqmpoXNy
Ys2M0PSc2HFeaGZOjLggNC8nNpGfltPczneuxbFzc2LPLNfDmrl+fnk/T3Il
r0cu4z70hgcLvC48uCJ0eU78uNI+7FgYujgn3mAvyukbxbvDO1d37MKcmHuu
77PmGD3g0CVeC8Zd5R6d/Bw4627uf1lOc36pa7Z1DJ/fCJzroTn9VsAyq/Dx
aq8LV24O3ZTTzMCsO3Oaobvtw5obQzfkNMf3OLerY9fnxKSbfB1cuzV0S06z
ynp35MSzW9xvF9ddl9PzfzT0SE78eMw+PPqffXhzf+i+nN7vj0Mf5fQufmIf
1jzg6w70tffmNGNc+2FODLvX93CYez6cEyPZ4+0+L2IP5cSwB73uIY7hMwef
undP192WEysf975hx7OhZ3JizPOh53Ji1VOhJ3NiDfmnc3pHXgu9mhPXnvZ1
cOsF18OsV0Iv58TNF50b6DpyJ7gPveHKG6HXc5rL90Pv5cSOD+zDlHdD7+TE
S/b1RE7cfML3A2PeDr2VE2uwb+bEszfdY6jX4LoRPm967OWz4Z0Y7v6Lcprz
Re49yHt8zc9m07x4xFytFnbVvN7X1mFXz4sdX4a+yIkRP4S+z2mWltqHTYtD
n+c0Zz86N9axz3Li0Re+DlYtCX2V05x9F/o2J1Z95X5nuI5nDzv+DP2REy/+
sg8//rYPO34O/ZTTt/ra0DU5fbOxzCGM+cXXTfe1y3JizT+h5TkxbJnvYbZ7
/p4TC9jjNzkxjNhvOTHuV687yzF8OML5caaTXPd1Tqxc7n3DjpUjv1Jee1wz
7Bp57b1NXj5sWjFsq7xmeK28cjCP2Ap58Yg1uA5W8QxXyeueWY9nCauI0Q8u
UvdfTvO0Yfxzu7zmcqO8fFjC7yl8WLNu2HXy+m11nc8Xhv7rs4NJbfO6DlZx
7dp5sfY/XweHiHEPvKf03CCv7+XXfid4d4mtnxe/1strXXhGDJ/fKMzlSzkx
ZrO83uMDQ/eF7s2LIx3Dbp4XS7YMu0Vec5YK25IXv8h3yGsW03nl4Bkx1oVP
nfKqhzVbh+2SF8+2yivH3LIeOZhFH3rDU67tnBdfMnn1gB3VsJW8mJQLm82L
JYWw+byYgiXHvDbC1vO6b+rKeXGLOtaFTcWwSV58quXVgzPi2lJeDMNyHYzj
WvrxDWCP3A9coA/1sKaZV2940y3stnmxZPuw2+XF5V3D7pIXj8h3zWtue+SV
g2HEtsmLSTvkVc+3YuewO+XFxx3zyvGNYT1yMIs+9IYHu+W1LrO4X9h98+LR
AWH3z4sde4XdMy/eYPfIi0e9/I7AIGK758VU9sV9wipi9IBDPfNaC8ZRd4DP
emZoRl4zTf998np3986rhneZGD4cOSiv3vDmkLAH5zVXY0Kj82LHYWEPzYsd
h+flw5gjwx6RF7PIU88s9Q57fF68IU8Nc0jsuLz4cmzYY/LiDTF8uHl02KPy
YhuWHszoCXmtCxv65OXDjpNDg/Liy4mhvnlxpH+oX17s6eccsz00NCQvPvX1
WrBngGvg00D78OkU94Dj7Jf9wb7BzsHQk1yzuveCz3ePd6d7Xkwc4hr4zRlz
7rDjtNDwvNhxun0YMzI0Ii9mkR+WF0fGhc7MizcjXLOJY2Pz4uIZfn4bO4a/
oZ/nqLzYNso94Mh4rwtXzrIPL84NTc2LFxNDE/JizeTQpLxYMsm5dbzHU/Pi
1gSvBYPOdg0zPMU+TJrmHmu7jmcD46Y7x9yf45ou3gs+vyc4V2YSZs1wDbw5
L68ZgB9zQrPz4sq80Ny8Zmlh6OK8+EL+/Lzm7BLn8o7NyotPF7ge9lwUujAv
zs13ruH1yBXdh95w5VKvCy+uC12bFz+utw9rrgxdkRdLsJfnxdZZvp9ujl2W
1/zfFLoxL55d5h6w6SqvBdducI+a97sgr/eR/tf47K52TXfH8JmH50PP5cXo
Bb5P2HOze8OR20O35cWSO0N35PVePxh6IC82kb81Ly485Nyejt2SF5/ucj0M
uj+vbySsvCd0d15z8oBze7sPveHNw14XfjwdeiovxjxjH3b8L/RYXhzCPpoX
O7i/Z/NiE7FH8uLuLb7PwxyjBxx63Gv1dh09evg5cNbHuv+TeTHiCdcc4xg+
jL7X9waPXgy9kNe7+1NoWV7ceSX0cl4ceS30al7z8W7onbw4Rf6lvGZukXP9
HGNdOPS662HP26G38mLZG84N9XrkBroPveHNe14Xfnwe+iwvxiy2Dzs+Cn2Y
F4ewH9ArifVCbyViE7H382LBV6Ev82Lc++4Bhz72WjDoC/cY7P2+mRe/6P9p
Xgz7xDVjHMOf5vP7MS8uv+n7hENL3BvufBf6Ni+O/BD6Pq8Z+zX0S16cIv9N
XvP3m3OTHPs6Lw4tdT3s+dnP71z3JzfT65Gb4j70hiu/e114sUIhvm958aNV
QT6s+Tv0V14swf6Z1/eK94X5nOPYH3nx92vf52zH6AGblnstuLZiQT3G+zlw
1rCB/v/mNef/uGaBY/j9/HuW32iwbKWC1oI7Kxfkw5HWYVcviCVrhl2joFla
L2zbgthEfrWC5mz9gnIwj9iqBfGpTUH1zNa6YdcpiJVrFZSDQaxHDmbRh97M
IdeuXRBjNiioB/zoGHbzgtixYdh2BXGnfdiNCuIKlhwz3ynslgVxh7oOBfGM
OtZlhjcNu0lBXNuioB7wi2s3K2jWsVwHy7h244K4zB65H/hFH+rhzVYF9YYd
LWG3Logf6bCpgp5/MWxSEI/Idylo5ksF5eAcsc4FMSlTUD3MK4TNF8THbEE5
3ifWIwen6ENvWFIuaF0YsW3YrgUxo1tBPnyph60VxA9stSB2bB92u4KYQqxS
EGvZF/cJw4jRAx41CloLllFHjymh70PfFcQD+m9T0Gw3C6ph1onhw5QdCuoN
e7qH3dHvfd9Qn4JYs3PYnQriyC4F+bCkR9hdC+IZeeqZq73D9iyINeSpgSnE
9ipolvYMu0dBs0UMH1buHna3ghiGpQfzuk9B68KVfQvy4cWhYQ8piBf7h92v
INYcGPaAgliCJcecHxn2iIK4xbWsBYN6FVQDkw4qyIdJhxXUA86yX/YH4w4v
KAdHDy6oBq6xF3y+e7w7uYL4RU9qYDlnzLnDmmPDHlMQR44ryIclvcMeXxDP
yB8dWiU0INS/INaQp2Zlx/oVxJoT/fxWcgx/BT/PEwpiGJYecGSg14UrJ9mH
F8NDwwrixcmhQQWxZnDolIJYcopz8JU9HlUQtwZ5LRg0xDXM8FD7MOk094DB
1PFsYNzpzjH3p7pmHe8Fn98TnCszCbNGuAbWjLQPP84MjS2IK+ND4wqaJebk
7IL4Qv6MgubsHOdg25jQ6IL4dJbrYc/k0KSCODfBuU5ej9ym7kNvuDLV68KL
2aHzC+LHHPuwZkZoekEswU4r6P2+M3RHQXwhdm5BM0Ds9oJ4dq57wKaZXguu
zXWPLbzfiQW9j/Sf5bM7zzU5x/CZh7vcu6PruE+4c0FoXkHcuSh0YUFMudg+
XLkktLAgtpFfUBDPsPML4s5C1zADV4WuLIhhV4QuL4hHV9qHm5eFLi2IZ5e6
BzN0tethz7WhawriyK2hWwpizw2h6wtiyU2hGwvi6Hzfzy7OX1cQ167zWj18
LfXM/M2uh1W3uUfJ58FZ9/QzIdfde2F/e3gv1PPnEuaNOYY9d/usedffD71X
EIPuC91bEFMeCN1f0Gz8L/RYQTwjf09Bc/O4c/s7xrow6EHXw51HQ48UxKeH
nDvC65Hr5T70Zo6f8Lqw48XQCwWx5CX7sOeZ0NMFMQj7VEHf/FEFzeGxjj1Z
EFNeDb1SEM+edA8Y9KzXgmEvu8dh3u/DBbGM/s8XxK3nXNPHMfzhPr9FBfH6
Yd8nDHrNvWHQW6E3C2LKO6G3vdePQh8WxDPyb/g+PnbuZMdeL4hB77oe7nzg
5zfM/cmN8HrkhrgPvWHKJ16Xufwm9HVB7PjWPvz4IrS4II5gPy/o99Zo72us
Y58VxNrXfZ9nOPZpQcz60mvBp+/cY4CfA2c90f2XFMSyr1wzwTF8+PVDQb8t
4M2PoaWhLvHnlqmhcxJx5+fQTwVx5NfQLwXN2PLQ3wWxjfyygubvH+emOca6
cOg31zNXf4X+LIhbvzs3z+uRm+k+9IYx/3pd2LFa7GvVRCxZPZEPe1YM2yoR
g7ArJGLoUt8nLCP2X0FzvGb88xqJePafe8CglRKtBYNaJ+oxx/v9oyCW0X+V
RNxaOVENPCOGzwykwrYk+h784fuEQW0S9YZD64ZdJxFH1gvbNhE7Ng7bPhGn
yK+daP43SZSDbcTWSsSh9RPV8w3ZKOyGiVi2QaIc3Gc9cvCOPvSGK5smWhde
dA67VSJ+8B7gw5qOYTdPxBJsh0Qc4f62TsQXYpslYi374j7hGTF6wKYtEq0F
16ijBzzlOXDWsIH+nRLN+ZaJaph7YvjwmPtrl4hDmbDpRHOwf9j9EnEkHzaX
iCVJ2EKiWaqHrSViE/lsojlrJMrBPGKsC5+KieqZrWrYSiJWlhLlYBDrkYNZ
9KE3XGkmWhdedA+7YyJ+7JTIhzXdwm6biCXYron+TovvCb8B4QuxbRLNf4+w
uybiGTF6wKbtEq0F13ZO1AMWsN9yIpbRf4dEPNs+UQ18JYYPRzi/fRPxmjru
E/bslqg3HNkr7J6JWLJ32J6J5qxX2AMTsYn8Honm/6BEOZhHbPdEfNonUT0M
OiDR84OV9CfH3LIeOZhFH3rDlYMTrQsvjgl7dCJ+HJvIhzWHhz0sEUuwhyb6
RvG+MJ/whdghibjLvrhPeEaMHrDpiERrwbXjEvWA9bskOmvYQP+jEs35kYlq
mHti+O0rwfHQmIp+T/D+Mp9wp3fY4xNxpF/oxEQsGRDqn2iW+HulwYnYRL5v
ojkb6lwrx/ok4tNA1zNbp4ROTsTKk5xb0+uRW9l96A1XTvW68GJMaHQifpxh
H9acHjotEUuwwxO96xeHLkrEF2LDEs0VsQsT8WyYe8CmEV4Lro11j9be76BE
s07/UT6vka5p5xg+M7DQvVd3HfcJd8aFzkzEnYmhCYmYMsk+XDk7NDkR28if
lYhn2PGJuDPZNbw300PTEjHs3ETfyxbH8OEm388piXg2xT1472a4HsacF5qZ
aEbnhy5IxI/ZofMT8WVuaE4ijo73/eSdn5WIYbO8VuJrqWdu57keNi1wj018
Hpx1zc+EXMZ7YX9l74V6vru8m7z38OYSnzUz8FToyUTcuTx0WSKOXBm6IhEv
bgzdkIht5C9NNGM3OdfVMdaFQ1e5nrm6LnRtIm5d7dyuXu/6RPy6wr2Z3Zu9
Lhy5J3R3Inbcax9+3B66LRFHsLcm+v6fkGgO93TslkR8eSB0fyJu3eIeMOsO
rwWf7nOPnbzfaxJxlP53JWLZna7Z1zH8Y3x+TyT6Hlzj+4Q7D7o33Hk09Egi
jvwv9Jj3+mzomURsI/9wovt4zrlDHXsoEYcedz3P8mk/v6Pdn9zxXo/cEe5D
b5jyvNdlLt8IvZ6IHW/ahx8vh15KxBHsi4l+c/Xxvk507IVEfH3I99nXMXrA
rFe8Fnx6yz16+Tlw1oPc/7VELHvVNSc5ht/Nv9X4XQbL3kn09/KfleL9K8e7
WRY7Pgp9mGiuvggtTjRnX9qHTR+E3k/Eg6+cO82x9xLx6ENfB6s+CX2caM5Y
7/NErPrY/Ya7blGiOST/WSJ2/BhamogRP4WWJWLPt6FvEjEI+3Xo8GI8n9Aj
RbGM2JJEHFrmtZjpX0I/J2LQd15rqvv8kIhV2O8Tsep7XzfB63HPZ3iPnyb6
Bnzq+5zhtdkrvPg79FciRqwY+2pV1GyvVJQPn/4M/ZFo7lcuKjfbsd8TMesv
Xwez/gktT8R31luhKD4td7/zXfdbIi6sHfm1iuLEOkX5sGbdonyYsVrYVYvi
RduicjD0V58XDFq9qOvgC9euUhRrf/N18IwY98Dctwm7ZlGMWK+odZlpYmsU
xa/WRa3LnBPDhzcbhF2/qHd9m7DNot79rkX5sGOjsBsWxY+Nw7Yvan62CNux
KB6Rb1fUbG1ZVA7OEaMHTNqkqHrmafOwHYri46ZF5eAO65GDU/ShNyzpVNS6
MCIbNlMUM3JF+fBl67BdiuIHtnPoCHy/rzCF2FZFzXwStlAUw4jRAx61FLUW
LMsX1YP5Z7+bFcUv+qeLYliqqBqYSgyf3x28L/8lYjR13Ce8KRbVG3ZUw1aK
4kc9bC30bvzzdmG7FcUj8uWi5nb7onJwjlipKCY1iqqHNdsW9fzgI8+THBxi
PXJwij70hgc7FLUuPNg97G5F8WOPonzYsXPYnYriDbZ7Ud8l3h3eORhEbMei
WMu+uE9YRYwecGiXotaCcXsW1QO+8xw4a2ad/j2KmvNdi6ph7onh89uBc/03
0W+Ifz2r8HGvotaFKweGPaComYFZhxU1Q7wT+LBm/7D7FTXHR/p9gVPE9i2K
SazBdXDtoLC9ippV1ju0KJ4Rox+MpG6fop5/n9AJRfGjr314dKJ9eHNM2KP9
fk8OTfK7eLZ9WHNsUdfBJq49qqgZ49qJRTGM2JF+5+jZuyhGssdDijonYscX
xbDjilqXsyOGzxxMcW/YSt3BRbGyn/cNO04ODSqKMYNDpxTFqoGhAUWxhvxJ
Rb0jI0KnF8W1k3wdrBwaGlIUs04LDS+Km6c6t57ryK3hPvSGK6NCI4uay7NC
44tixwT7MOXM0NiieMm++hfFzf6+HxhzRmhMUazBji6KZ6PdY2OvwXUdfd70
4FvH2fBObOb+44qa83HuvYH3OMLP5n9F8Yi5ujl0U1Hv662hW4pix/TQtKIY
MSc0u6hZmmsfNp0bmlrUnM1zrotj5xTFo2m+DlbNDM0oas5Y7/yiWDXD/Tq7
jmcPOy4NXVIULy6zDz8utw87FoTmF/Wt3jtsz6K+2VjmEMZc6OsqvvaColhz
ZeiKohh2ge9hG/dcWBQL2OOsohhG7OKiGHeR1204hr+Hz48zzbnuvKJYeYX3
DTtuCF3vvd4euq2ovd9hHzZdF7q2qBm+07mdHLumKB5d7+t28zO80fd8m59l
D8fo1911Vxc1Tw+FHixqLh+2D0sesQ9r7gndXdRvq328Rxh6lc8OJt3r6/bz
tXcVxdqrfd2+jnEPB7vnA0V9Lzkb3omDHLu/KH7d53V7OYbPbxTmclhRjHm8
qPf4z9DR8bv2qJI48lToyaJY8kzo6aLm7OXQS0Xxi/wTRc3iK84d7Rjrwqdn
XQ9rXgy9UBTPnnOun9cjd5z70Luvr32+KL686h6w4/3Qe0Ux6fXQa0Wx5M3Q
G0Ux5Q3nmNePQh/6vqlbVBS3XvO6sOmd0NtF8ekD9xjma98timHv+rohvvat
or4Bz/t+RrgP9bDmY/eGN5+HPiuKJV+EFhfF5e9C3xbFI/KfFjW33zs3xrFP
imLSl67nW/FN6Oui+PiVc5O9Hrkz3Yfe8OAHr8ss/h76rSh+/GEfdvwUWlYU
b7A/FsWjv4p6R851bGlRTP3E9znVMXrAoZ+91hzX/eGzrsX7VS1ppun/a1Hv
7i+uOc8xfDjyt3vDm39Cy4uaq06xxpYlseO/0L9FsWOFknwYs2L8c6uSmPWv
65ml1hFbvSTekKeGOSS2Wkl8WTXsKiXxhhg+3Fw57EolsQ1LD2Z0jZLWhQ1r
luTDjg3Crl8SX9YK26YkjqwTdu2S2IMlx2y3D7tRSXziWtaCPeuWVAOf2pbk
w6d2JfWA4+yX/cG+DUvKwdD1SqqBqewFf6LfnSVFMZGe1FzgM+bcYcdmEdu0
JHZ0KMmHMR3Dbl4Ss8hvUhJHtg7bpSTekKeGbySxziVxcauSnh+/44nhw02e
5xYlsQ1LDzjSUtK6cCVVkg8vSmGLJfEiEzZdEmtyYbMlsQRLDqayx41L4hbX
shYMypdUwwwXSvJhUrmkHnCXOp4NjKuUlGPuk5JqYBV7wZ/gc2UmYRbvOzXw
pl7SDMCPbcN2LYkr24XtVtIs7RJ255L4Qn6bkuZs15JysK0ZtlESn7YvqR72
7BS2e0mc26GkHAxiPXLwiz70his9SloXXuwbdp+S+LFfST6s2TPsHiWxBLt7
SWylP/cDX4jtVtL8Hxj2gJJ4RowesGmvktaCa/uX1ANWst8dS3of6b93SWfX
s6QazpJYT8/D4NApJTGaOu4T9vQqqTccOTTsISWx5PCwh5X0Xh8X9tiS2ET+
4JK4cHxJOZhH7KCS+HRESfUw6JiSvpGw8siScswJ65GDWfShN7zpXdK68OOk
0MCSGDPIPuw4MdS3JA5h+5TEDu7v5JLYROyEkrjLvrhPGEeMHnCon9dq7Tp6
wHqeA2e9qvsPKIkR/V2zimP4MJrvP/cGj4aGhpT07s4PXVASd4aHhpXEkdND
p5U0H2NDZ5TEKfKnljRzZzq3tmOsC4dGuB72jAmNLollI51r7/XItXUfesOb
cV4XfpwTmlISY6bahx0TQxNK4hD2rJL+nQF/JufP0B0cG18SC6aHppXEuPHu
AYcmeS0YdK57bOj9jiqJX/Q/uySGTXZNJ8fwyz6/eSVxeZTvEw7NcG+4c35o
VkkcmROaXdKMXRS6sCROkT+vpPm72LmsYzNL4tBc18OeBX5+JfcnV/N65Aru
Q29Yc0loYUm8uDZ0TUn8uM4+rLkidHlJLMFeVtL3iveF+dzWsUtL4u9M32dX
x+gBm670WnDtevdo8XPgrLu7/9UlzflVrtnRMXz+Po7faqeakTd4Lbhzo304
clvo1pJYckfo9pJm6f7QfSWxifwtJc3ZA87t4djNJfHpTtczW/eG7imJlXc5
d6DXI9fTfei9v6+9uyTGPOge8OOp0JMlsePh0EMlcefR0CMlceUR55j5Z0PP
lMQd6p4oiWcPeV1m+H+hx0ri2tPucbSvfbykWX/c1x3ha+m3n/fI/RzvPtTD
m+fcG3a8FHqxJH68EnrZz//t0Fsl8Yj8CyXN/DvO9XXs+ZKY9KrrYd6boTdK
4uNrzg32euT6uw+9Ycm7XhdGfBr6pCRmfGYfvnwQer8kfmDfK4kdi0Ofl8QU
YotKYu3zvs9hjtEDHn3otca6jh6FcsxO6PyyeED/j0ua7Y9cM8oxfJjyhXvD
nq9CX5b03q8Va7QpizVfh5aUxJFv7MOS70LflsSzJa5nrn4O/VQSa751zXTH
lpU0Sz+GlpY0W8vsw8ofQt+XxLDv3YN5/cXrwpVf7cOLf0P/lMSL30O/lcSa
P0N/lMSSP5xjzleKe1qxLG795rVg0F+ugUl/24dJ/7nHVO+X/cG4FcrKwdHl
rpnvveDz3ePdeb0kftGzVVks/9LnDmtWi9iqZXFk9bJ8WLJG2NZl8Yz8KqGb
4p/bhl23LNaQpwauEFunLNasXdbzgzXE8GElz3PNshiGpQccWa+sdeHK+mX5
8GKzsJuWxYt2YTcoizUbhd2wLJZgycFX9rhyWdziWtaCQe3LqmGGNy7Lh0kd
yuoBg6nj2cC4zcvKMfeblFUDq9gL/iCfKzMJszqWVQNrtijLhx9dwnYuiyst
Ybcua5aYk3xZfCG/VVlzlpSVg23EOpXFp1RZ9bAnFzZbFufSZeVgEOuRg1/0
oTdcKZa1LrzYJmyzLH50LcuHNdWwlbJYgi2X9X4fFvbQsvhCrFTWDBA7pCye
EaMHbKqVtRZc27asHrCS/WbKeh/p3yjr7Opl1XCWxPCZh8PL6g2jqeM+4c52
YbuVxZ3uYXcsiyk7leXDlV3C7lwW28jvUBbPsNuXxR3y1DADe4bdoyyG7V7W
v8uER8Tw4Sb/bnPXsniGpQcztFdZ9bBn77A9y+LIQWF7lcWe/cLuWxZLDgi7
f1kcZS/cD2wiv09ZXMOyFtzhWuqZ+QPLqodVB5fVA9ZzHpw1bOOZkIOD7IX9
wQz2Qj1/LmHebjJ7jijrrHnXzwqNL4tBR4c9qiymHBv2mLJmo1/oxLJ4Rv7I
suamv3MwjhjrwqDjyqqHO31Dfcri0/Fl5Vb0euTgHX3ozRwP8Lqw49TQ0LJY
Msw+7Dk5NKgsBmFPKuubv2VZc7iaYwPLYsrpodPK4tlA94BBp3gtGDbcPWDr
CWF7l8Uy+g8pi1uDXdPGMfzNfH7jyuI1ddwnDBrh3jBoTGh0WUwZGzrDe50U
mlgWz8iPKus+JjvXzrGRZTHoTNfDnQl+fpu6P7mOXo9ce/ehN0w52+syl+eF
ZpbFjln24ce5oallcQR7Tlm/tzp5X50dm1IWa0f6PrdyjB4wa5rXgk/nu0db
PwfOOuP+M8pi2XTXpB3Dh19zyvptAW/mheaGXsSvBH8q4s6C0PyyOHJR6MKy
ZuyK0OVlsY38BWXN35XOlR1jXTh0seuZq8tCl5bFrYXOdfN65GruQ28Yc5XX
hR03h24qiyW32Ic914WuLYtB2GvKYuhc32d3x64ua45vD91WFs+udg8YdL3X
gkG3ukdX7/eSslhG/xvL4tYNrunhGD4z8Ero5bK+B5f4PmHQHe4Nh+4J3V0W
R+4L3VsWOx4NPVIWp8jfVdb8P+bcvo7dWRaH7nc935CHQw+VxbIHnDvM65E7
wH3oDVf+53XhxQuh58vix4v2Yc1ToSfLYgn2ibI4wv29VBZfiD1eFmvv9H0e
5Rg9YNPTXquf6+ixl58DZ93H/Z8ra86fcQ1z/6z9Q3x/D5bFoddCr5Y1B7+H
fiuLI2+G3iiLJW+H3iprlj4MfVAWm8i/XtacfeTcIMdYFz6943pm6/3Qe2Wx
8l3nTvd65Aa7D73hysdeF14sCX1VFj++tg9rPg99VhZLsJ+W9XdafE/4DTjG
sU/Kmv/vQt+WxbNP3AM2LfZacO0b9xju/S4qi2X0/7Isnn3hmvGO4c/y+f1a
Fq8X+T5hz/fuDUeWhX4siyU/h34qa87+Cv1ZFpvILy1r/v92bqpjP5TFp19c
D4P+8PM7z/3JzfF65Ka7D73hynKvCy9WCVatXBE/Vq3IhzUrhP2vLJZg/y3r
G8X7wnwucOyfsrj7g+9zvmP0gE2tKloLrq1WUY/Jfg6cNWyg/0oVzfmKFdUw
98Tw+e9JF/nvhvg9wfvLfMKd1pFfvSKOrB12rYpYsm7YdSqapY3CblgRm8i3
qWjO+G92ycE8YmtWxKe2FdUzW+3CblARK9erKAeDWI8czKIPveHKxhWtCy86
hd2yIn5sVZEPazqE3awilmA3rehd3znsThXxhdgmFc0Vse4V8YwYPWDT5hWt
Bdc6V9QDFrDf9SuadfpvUdF5dayohvMjhs8M7FJRb3hNHfcJd7YO26Ui7mTC
pitiSrYiH9YUwuYrYhv5VEU8w7ZUxJ1cRTW8N9WwlYoYVq7oewkLieHDTb6f
SUU8w9KD965WUT2MaYStVzSjO4TdviJ+dA27TUV86RZ224o4yl64H/hCvlkR
w7CsBae4lnrmdruK6mHTjhX1gPWcB2cNt3gm5OAde2F/zD17oZ7vLu8m7z28
2bWis2YGBoYGVMSd3cPuVhFH9gy7R0W82D/sfhWxjXyPimbsgIpysI0Y68Kh
vSqqZ672DbtPRdzqWVGOmWM9cvCLPvRmdg+saF04cmTYIypix1EV+fDjkLAH
V8QR7EEVff/XqGgO4RaxXhXx5diwx1TELWL0gFmHVrQWfDq6oh4wl/3uXRFH
6X94RSw7rKIa2EYMfxWfX/+KvgfUcZ9w57iKesOdPqETKuLIiaG+3uvJoUEV
sY1874ru4xTnYBux4yviUD/X8yxP8vNb2f3Jre71yLVyH3rDlMFel7kcGRpR
ETtG2Ycfw0KnVsQR7NCKfnOt6X2t5diQivjKvrjPNo7RA2YN91rwabR78P3g
OXDW67v/6RWx7DTXrOcYPkwc43pYM7ai/20D/9/Z/P9R8v8fCXfOCo2viCMT
QxMqmrFzQ1MrYhv5cRXN3zTnNnXszIo4NMn1zNU5oSkVcWuyc128HrnN3Yfe
W/nasyvizXT3gCXzQxdUxKmZoRkVcer80KyKeHSec8zuRaELK2IQdfMq4tkM
rwuH5oRmV8SgBe5R8rVzK+LWXF9X8LX06+Q9cj8196Ee7lzs3rDnstClFbHj
itDlFfHi+tB1FbGJ/CUVzfwNzm3j2MKK2HOl6/luXBu6piJ+XeXczl6PXDf3
oTcsudHrwoi7QndWxIy77cOXW0O3VMQP7M0VsePe0D0VMYXYTRXxdaHvczfH
6AGPbvNa+7uOHq2qMTuhPlXxgP53VDTbt7tmb8fwYcp97g17HgjdX9F7/3Ho
o4pY81DowYo48rB9WPJo6JGKePag65mrp0NPVcSaR1xzrGNPVjRLT4Qer2i2
nrQPK/8Xeqwihj3mHszrM14XrjxrH168Fnq1Il48H3quIta8GHqhIpa84Bxz
/lbozYq49ZzXgkEvuQYmvWwfJr3uHkd5v+wPxr3hHBx9xTUDvRd8vm+8O1dX
xK83XdPLZ8y5w5pFoXcr4sh79mHJB6H3K+IZ+XcqYsnnoc8qYs37rjnDsU8r
4s4nfn5jHMMf6ef5YUUM+9A94MhirwtXvrAPL34IfV8RL74KfVkRa74OLamI
JUucG+o9vl0Rt770WjDoG9cww9/ah0lL3WOI63g2MO5H55j771wzxXvB39Hn
ykzCrGWugTU/2Ycff4R+r4grf4X+rGiWmJMVquIL+d8qmrMVq8rNcuzXivj0
t+thz3+hfyvi3HLnYBDrkZvjPvSGKytVtS68aBN2zar4sVZVPqxZLeyqVbEE
u0pV73cubLYqvhBbuaoZIJapimfE6AGbVq9qLbi2dlU9Fni//1T0PtJ/jarO
rnVVNZwlMXzmIV9V7/mu4z7hzroRW6cq7mwQdv2qmNKuKh+ubBR2w6rYRn69
qniGbVsVd8hTwwx0CLtZVQzbNOwmVfGIGD7c3Dhs+6p4hqUHM7R5VfWwZ4uw
HaviSCpsS1Xs2Spsp6pY0iVs56o4yl64H9hEfsuquIZlLbjDtdQz81tXVQ+r
0lX1gPWcB2cN23gm5OAge2F/MIO9bO334EQzGvYUqjpr3vVeYQ+sikGlsMWq
mFIJW65qNrqG3aYqnpFPqpqbbavKwThirAuDqlXVw51m2EZVfKpVlYNJrEcO
3tGH3sxxt6rWhR27ht2lKpb0qMqHPTuG3aEqBmG3r+qb/7PnEJYR264qpuwR
dveqeEaMHjCoe1VrwbDdquoBW9lvvSqW0X/nqri1U1U18IwYPhzh/A6oitfU
cZ8waM+qesOgfcLuXRVT9gu7b1V7PSTswVXxjHzPqu7j0KpyMI7YXlUxaP+q
6uHOQVU9P/hEf3IwiPXIwTv60BumHB72sKrmsnfY46tixwlV+fDj6LBHVcUR
7JFV/d76xecLt4gdURVr2Rf3CbeI0QNmHVPVWvCJ3wX0gPU8B86a+ab/cVWx
7Niqaph5Yvj8tmAumUNY08/v8SX4tXiva+LWwNCAqhh0kn2YcnJoUFUMI9+/
qtkbHhpWFYMGuWYdx06til9DQ0OqmrFT7cOwwaFTquLWKe7RxteSY75Pcw84
Mi50ZlVzOTE0oSpmjQyNqIpJo0OjquIWsdOr4tbpXgvujPF1nMXY0BlVsWq8
e8Cjs+xv4p5c197XUr+5+3MdrJnkPTFvl4UurYo7U0JnV8Whc+zDkXNDU6vi
FvnJVXHk/NCsqjg11TU5x86rik8zQzOq+oacZx+WTQ9Nq4pV09wDjsz2unBl
jn14sTB0cVW8mBeaWxVr5ocuqIolFzi3pffIfRZ9LWvBoAWuYVYvtA+TLnGP
dn4mPKeuPhtyzPdFrml4Lxf5WX0Qer8qvlzuM4VDV4auqIpVV9mHO1fbhynX
2Icp19qHMdfZh0PX24eDN9iHWTfaZ65uss+c3WwfBt1in1m91T6ze5t9GHO7
fWb40dAjVbHjztAdVXHn7tBdVbHqDtfAnXucg0P32oeL99mHRw+E7q+KQaz9
cFWsetC5Xs5TA/seco5vG+8O7wqMecz7Y3ZfD71WFaseD/2vKu48YR+mPGkf
pjxlH8Y8bR8OPWMfDj5rH2Y9Zx+GPW+f7+gL9uHRi/bh00v2Yc3L9mHPK/aP
9B65h5O891er4sgbvp+BjlEDY950Dr68ZR/evG0fPr0beqeq7xvvGu8fPFvk
3FDnqYFN7zkHX963D3s+rOo9fqQeLGjErDfEnU9CH1fFkU/tw5fPQ59VNSvk
P6pq3r4JfV0Vez5zzUTHllTFoK9CX1bFpCX2YdkXocVVMWyxezDH33pd2POd
fVjya+iXqrjzQ+j7qjjyY2hpVUxa6hzz/2foj6q49r3Xgj3LXMN79pN9GPab
e4z3ftkfbPrdOd7Nn10z03vBH+nz4Exnuyc1zFi7+HZtUBOD/gktr4pB/9qH
KStE/r+qeEb+bz/b1fju1cSg/1zD8ya2Sk2sWrmmbyQMIoYP1/hmtqqJW1h6
wKPVa1oXHrWuyYcX64VtWxOP1gy7Rk0MWitsm5rYhCU3z3v8qyqWcS1rwam1
a6qBU+vU5MOg9WvqMdd1PBt4xNmQg2Xr1lQDy9gLPn/+YMaYORi0YU1nyju9
fdjtauLRJmE3rolHm9bkw5cOYTeriWXk29c0k13Cdq6JWeSpgTXEtqqJWZ3C
blkTw4jhw6+OYTeviWFYejDrW9e0LjxqqcmHF8WwSU08SodN1cSgbNhMTWzC
koMF1bCVmljGtawFp3I11cCpfE0+DCrV1AOGblHT/uBRuaYcLCvUVAPL2As+
vOc8NqqJWfSkBt4T46zhUTNsoyYebVOTD1+2Ddu1JpaRr9c0AzuF7V4Ts8hT
A2uI7VgTg3ao6fnBJGL48Ivn2a0mhmHpwWztXNO6sGeXmnxYsnfYnjVxp0fY
XWviyO5hd6uJSVhyMJg91mriGteyFuzZo6YaZn7PmnwYtk9NPeA0dTwb2LRv
TTk4sVdNNXCNveDDrP1qug7u7F+TD4cOqMmHQQeF7VUTgw6uyYcph4Y9pCae
kT+wprk5JuzRNTGIPDXMErGjauLOkWGPqIlDxPDh2uFhD6uJW1h6wDWuJcdM
H1tTD1gyINS/ptk+OTSoJgb1Dnt8TUzpEzqhJpYRO64mhmFZC/b09XVwql/o
xJoYNtA94NFJ9ld2T65b0ddSv7r7cx28OcV7YsbODU2tiTtDQ0Nq4s6p9uHI
8NCwmhhGfnBN7/iY0OiauDPMNRs6NqomPo0MjaiJO6Psw7LTQ6fVxKrT3IN5
OsPrwpux9uHHlNDZNbFmXOjMmthxVmh8TRwa79ya3iP3uYmvZS14M8E1zPlE
+3DrHPfgW8Ez4Tl18dmQg2WTQ5NqYtnZ9t8MbRO/A5p1sWaazxQezQhNr4lP
M+3DoPPsw6BZ9uHL+fbhy2z78GaOfTg11z5smmcf7lxgHw7Nt8+8LbDP/F1o
nzm+yD7sudg+83x96LqauHNJaGFNHLksdGlN/FroGhhzuXOw5wr7sOlK+/Dp
6tBVNXGHta+tiWfXOLeD89Ts5Dw5vm28O7wr8OYG74/ZfSj0YE18uil0Y00M
utk+DLrFPny51T58uc0+vLndPpy6wz5sutM+DLrLPgy62z4Musc+TLrXPqy5
zz7sud9+D++RezjYe3+gJo487Ps5yDFqYMwjzsGXR+3Dm8fsw6fHQ/+r6VvH
u8b7B8+ecO5I56mBTU86B1+esg9vnrYPh56xD3eeDz1XE0desA9fXgq9WNOs
kH+2pnljHt6oiT0vuuZkx16viUGvhV6tiUmv24dlr4RerolhL7sHc/yW14U9
b9uHJR+HPqqJO++G3qmJI++FFtXEpEXO8a7/F/q3Jq6947Vgz/uu4T37wD4M
+8Q9Bnq/7A82feoc7+aHrhnpveAzSyvU1Q9+feYaOLQ49HlNrPoy9EVNPPrK
PjxaYh/WfBP6uibWfGsf9nxnH2Z9bx9O/WAfbi21D49+tM/7scz+OPdnT7w7
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
vLdTnfvjpFiG/igpxn3kXPDjq5Avk+Ipe3ojKRajX0+K1697D9zj30J+Tepe
/26bvv/DNnz5PmRlUj29Rqy9WUoM+y5kRVK8+zbkm6RYQ75fkuLTD44/3TmI
meU4YuDHminlhQVrpWTDDuqsTooLnBljMPRr73Oa98rZwaS/Qv5Mii9/215k
36qkGPyN4+l7cv+XFEeaR+51U2IBvn+TYuIqnwXc+sd5uce7xtxdUrrXXVOy
+fcN/0vJhhcbht4gpT5oG3rjlPppk5RseLR+6BYp8aBdSmMwC996KTGIHMyD
Wa1Ct0ypr8jXJiU+4aMeXCSO/cCJbUNvkxJLtkvJhgvtU7LhzeahNwvpje37
ul/IHbZhyhYpzYNNzN00JRZ0CL19SozDxx5gEzW3TomRrLF1SvzCt1VKrNoy
pbwwDB82b9uPvjewlbiNUuIXdVg3vNgpdJeUOLF76N1S6uc9UrLhUefQnVLq
2z1TGoNZ+DqmxCByMA9m8T13Tok75ONbwid81IOLxO2YUm+lQidT4kc6JRse
ZVKy4cfeobul9C5xv+h/OLpDSmcHa7qnNA/WMHevlPhLHebBHnzsgT6mZiKl
t4qz4U7Q0/iaUmJTj5Ty0uf4sOe7L39O6vcC+qekfzf43OkNmNUrpV7hTmDT
q/v5jsChauhKSvkOCX1wShwqhy6lxLVi6EJKvUq+fVJiZC2leBhGDmLgF3HE
wI9DU8oLj/qnZLNe6hyUUp9MDDnJd+5k29zBU2zDmwNC90mJQX1TsmEQvv1T
6kNyTEjpDMh9YEpMr6e0Vs4FX7+UuEUcZ8EdxdfX3/6SkItTYhJ77ZkS0xsp
5YI3x4Y+JiUmDQh9REr3YnjIsJS4c3TogSn18ciQESlx56jQR6bEJ3IwD24O
CjnOd4scQ1NiJz7qwUHiqEc/jQ85IaW+PNH2xj4DbJjHug5PiX3ow1J6D9B8
D3gzNmRMSnwaHXJ8SpxCj0qJYaO8h41cc1xKvOZsOJfm3h/739D5yNXKc8f6
O92ZEo/oq0t91kmf90Up9dLskFkp9czptumhObZhzNSQKSkx+uyQs1Ji0OSQ
SSmx7VTfoe2db2ZK3Jrm+C2dg5jNHUcMvDjHeeHHItu7us7ClN7zfOhcSu86
OpvSbxc07IBHZ4bMTYlP82x3su+MlFi2OOTclLhF7gUpcXe617qzffNT4tYZ
Poud7Jvnepf5TNt7rzNSeidOcy7WeEXI5Smt/Urb9PZVtmHMhSEXpPRtbw65
KSUGnR9yXkpsWxay1Hu+3LUT/obE93AOYvZ2HDH00y3OC0tutd1wnRtT+t1U
8Bph5RKf0e4+J74HrLk25JqU2HOd7ZJ9V6fE2qWOrzv3DSm9lzN8LjX7rk+J
WVf7LKr2kZffLPTikJAVIfungxshK+OfDwjdJy2u3Bdyb0p9tjzkkZT671Hb
8OWekLtT6uHHPHaAfXelxKF7PQ9GPhByf0r9Sr6HU2Lb/a7Xx3H0VX+PP+S1
vhDyfEoseSnkxZR483TIUylxB/2k19Il9tE5LWbhe8L7ftG56O9XQl5OiUfP
ONdg13kuJYahn02JW896Htx63HUO9RofTOlteND7HO7crBVmvB3yVkpvwEch
H6bUzx/bhjFvhryRUt9+4rHR9r2eEnfe8jz4+G7IOym9MeT7ICWeveN6xzvu
tZR66NuQb1Lixwrb8Og72/Dj85DPUmLTSo/Byld9XrDmC8+b7LmfpsTU1zxv
kn3sYYZrfp1Sn3/vvKfZ91VKXPjSeafbhw1Xfgz5IaW+ahffc5O0+mzTtGyY
8UvIzynx5reQX1Pqk39C/k6JKYz/lFIP/euxM+2jBiz83fH05V8hf6bEzT88
ttj5GFvgOtSGBf85L+xoHutaNy2WrJeWDUfWDL1GWixBNwu5rRB8L8Z+iuIL
vtUp9e0G8c/rp8Wb1a4Bk9ZKKxe8a5FWjUVe76qUuEn9ddJ6i9ZOK4b3CR/2
Sb4v76f0HqzyPmHGhmnVhhmtQ2+UFm82Dt0mrTdvi9Cbp8UUxlul1bdbpjUG
v/C1TIuFbdOK53f8Zml9P7jJ92SM3/TkYwyGUYfa8GCrtPLCgx1D75AWPzqm
ZcOO7UJvmxZv0Nuk9bb84DsHg/BtnRZTWRf7hFX4qAGH2qeVC8Z1SqsGbwnf
gbOm16nfIa0+3z6tGPoeH/YEn+t7Kf12QdOr8BEmkReu7B56t7R6pkfo7mn1
UFNaNqz5X+iuafVxIq0xOIVv17SYRA7mwbU9Q++RVq+Sb++0eIaPejCSuF3S
+v7F0IW0+FFKy4ZH5bRseJMOnUqLo8TtnNZdPCb00WmxJpPWPNjE3GRa/V8N
XUmLYfjYA2dDzXxajGSN3dI6J3y5tBiWTSsvZ4cv6545LuTYtNhK3F5psZI6
rBuu7Bu6V1rfv1/ovmn1+YFp2fBln9A902LAQWmNwSB8jbQ4RA7mwUreyd5p
3Sfy8V7CNnzUg4nE1dNixJGhB6TFjKPSsuHOwLRs+HFo6EPSYgdnyRjsrKV1
dvCof1rzYA1zD06Lu9RhHmzDxx5gADWPSOut42y4E/Q3vsPTYtlhaeWl5/Fh
w3re//19788ImZPWnT0zZG5a/BgWMjSt/hkTMjqtfhprG9YMCRmcFgPGeWxN
+walxaChngcfR4QMT4s75Ds+LYYNd701HMe3hxGnhpySFjMm2YY7k23DjxND
xoesn418IaOy+h3A/d0pLR5N8LzWnntCWiyYGjIlLbad4D1s6ponp8UD1jgq
rXcI38S0WHaS825iH3Ynnx9n2sJxI9Pi2hSvG37MDpmV1hoXhMxPq+cW2oY1
M0NmpNXHZ3lsO/tOS4tBszxvR3/D071n8s1Li2Gnu962jpueVi+eF7IsLX6c
bxseXWAb3iwKOSetd4lehAVwdJrPDtac63n/89yz02LwdM/rah976OaaS9N6
z0b6Tuxl35K0GLbYefe0D5u/g+M3Ir/d1rQeZI5e6HXDlStDrkirZ24IuT6t
HrrRNny5POSytPr4Jo9l7Ls0LQ5d4Xmw8uqQq9LqVfJdlxbbrnK9tOMuSYtP
jF+bFjvuDrkrLR7dG3JPWhy5LeTWtNiDvoVvmolvGjIzIx7huzktDt3jXPT/
/SH3pcWk252rj+vcmVZvo+9Ii2d3eF5P52PPZa/xmrTegGu8zwOdm7XCkkdD
lqf1/Z8JeTqt/nzWNkx5JOThtHr3OY/1t++htNiz3PPg4+Mhj6V1n8j3VFo8
e8z1DnXcg2n13+shr6XFjDdsw6A3bcOYF0NeSItBb3kMXj7g84IvL3neEM99
Pi3WPuh5g+1jD6Nc89W0uPC2846075W0uPWy846wDxvGvBvyTlq91Cy+5+q0
7ugaGdnw4oOQ99PiykchH6bVM1+GfJEWXxh/L61++spjJ9pHDVj1seNhzOch
n6XFyk88NtX5GJvoOtSGB187L7z4OeSntPjxi23Y8V3IirR4g/42rfef+35x
WgzC901aff57yG9pseob14BDK50Lxv3qGpO93k/TYuePIT+kxbPvHXOGfdi8
n9yXJ9N6Az71PmHMH64NL/4O+Sstrvwb8o/Xunac/VoZ8YXxP72PdTIaW2Tf
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
a4LztrUPG8ZMC5maVy9dFXJlXnf0atvwYkbIaXlxZVbIzLx6Zl7ImXnxhfHp
efXTfI9tYx81OoTMdjyMmRtyRl6sPN1jnZ2PsfauQ214sMB54cXSkCV58WOZ
bdhxTsjZefEGfVZe7z/3vZIXg/AtzKvPLwg5Py9WLXQNOLTIuWDcea7R0eud
kxc7qb84L56d65g97MPm/eS+jMjrDZjjfcKYC10bXlwackleXLk85DKv9bqQ
a/PiC+MX57WP6z2WtO+ivFh1heNhzDX+fnl/T8bKzsdYxnWoDQ9ucF54cGfI
HXnx4y7bsOOWkJvz4g36przeIu4Od65h34158fUi77NuHzXg0K3OBePudo3u
/g6c9X6uf3tefX6bY3rbh93c5zo8r98uaHoVPt7jvHDlkZCH8+oZmPVkXj30
tG1Y81DIg3n18TMeO8S+B/Ji0sOeB9ceDVmeV6+S74m8eLbc9Q523P15ff9X
Q17Jix+v2YZHr9uGN8+HPJfX/f4l5Oe87uKvtmHNC543yHOfzavHmPtTXgx7
1nsY4Zov58VI1vi4zwnfS3kx7EXnHWYfNn3wm2sf6bjH8mLlG1437Hg/5L28
GPNhyAd5sertkLfyYg3j7+Z1R74I+TwvruF7Jy9ufeR4mPVZXv8uE25+7LEp
jmPsJNeh9vSQr0K+zKsvfwj5Pi92/GgbpnwXsiIvXrKuN/Pi5pveD4z5NuSb
vFiD/jovnn3tGrOcg3ln+rypMcBn82he/U39lXn1+UrXnuY1sn/uVteC3k76
asvQWxR0X7cOvVVB7Pgr5M+8GLFG+JoV1EtrFmTDplUhf+TVZ2sVNHa2fb/n
xaM/PQ9W/RPyd159Rr7VebHqb9c7y3F8e9ixYczZoCBetCzIhh+tCrJhx7qh
1ynorb4v5N683mw0fXhZSPOC5sEw5q5dEGtah96oIIbhYw+8N9RcvyAWsMb/
8mIYvhYFMW69gvLCNXzYcITz40yXOe7fvFhJHdYNOzYLvWlBa9w29DYFrX27
gmzY1C70JgX1cPuCxmAevrYF8YgczINVfMPNC9oz+fiWsAof9eAicRsX1E87
he5SUF/uXJANS/g9hQ1rdgjdoaDfVvf7fGFom4LODibtWNA8WMXc7QtiLXWY
B4fwsQfuKTU7F/Re/us7wd3F16kgfnUsKC88w4cNV3YL/b+Q47BDngkZFPKc
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
xmAYdagNC/YpKS/s6Be6b0ksObAkG47sF7p3SSxB71vS313xG3Fz8wVfr5L6
9pDQB5fEG3zUgEn7l5QL3h1UUg04wnorJXGT+geU9Bb1KSmG9wkfNr8vuC9d
SnoPiGOfMOPQkmrDjCNCH14Sb44MPaCkN29QyHElMYXxw0rq28Eeg1/4+pfE
wqNKiud3/LElfT+4yfdkrJnzMQbDqENteDDEeeHBmJDRJfFjrG3YMSJkeEm8
QQ8r6W3h7nDn1rFvaElMZV3sc237qAGHRjoXjBvnGrwlfAfOegPXP76kPh/l
mPXtw+Y3C+fauaTfLmh6FT6e4Lxw5dSQU0rqmdNCppfUQzNsw5qTQyaW1Mcz
PbaJfSeVxKRTPA+uTQ6ZVFKvkm9aSTyb5HptHTehpO8/P2ReSfxYYBseLbQN
b04PmV0SR4k7saS7eEvIzSWxZo7ndfDcWSX1/9khZ5XEsFneQxfXPLMkRrLG
qT4vfHNLYtgZztvJPmz647aQW0tiK3FTSmLlWV43XDkvZFlJ3//SkEtK6vPL
bMOXpSFLSmLA5R7b077FJXFomefBSt7J80u6T+TjvexuH/X2cNy5JTHihpDr
S2LGjbbhzk224cdVIVeWxI6bPQY7z/HZwaOrPS/vuVeUxN1Fnpezjz1UXfO6
kt46zoY7UbHv2pJYdo3zlu3DhvW8//wm4N6/FfJmSXf2nZC3S+LH3SF3ldQ/
D4U8WFI/PWwb1twZckdJDHjEY/vZd3tJDLrL8+DjvSH3lMQd8j1QEsPucb3e
juPbw4hnQp4uiRnP2oY7z9mGH4+FPBpycCXyhdxf0bvN/eX3ATx63POO8Nzl
JbHghZDnS2Lbcu/hGNd8qiQesMb7S3qH8D1ZEsuecN6B9mGP8/lxpgc57r6S
uPa81w0/Xg95zWt8L+Tdknrufduw5tWQV0rq4w88NsK+l0ti0GueN8bf8A3v
+V1/y9H2UW+4414qqRe/DPmiJH58ZRsefW0b3nwc8lFJ7xK9CAvg6Is+O1jz
ieed7LkflsTglzxvon3sYaprfl7Se8bZcCem2PdZSQz71Hkn24e9n3/P8tut
tzW/3WDlN143XPkp5MeSemZVyB8l9epfIX+WxJcfQr4vqY//9tgc+1aWxKEf
PQ9W/hLyc0m9Sr7fS2Lbz653uuO+K4lPjP9WEjvWLsf7VhaP1g29TlkcWR3y
X0nsQf/LN42x10JeLYtH+P4piUPEkYv+Xy9087KY1KysXPQ0ddYsq7fRa5TF
MzTzljgfe17oNf5a0hvwq/cJH8nNWmHJRqFblfX9Nw3drqz+3KwsG6a0DL1h
Wb27eVljcAffBmWxhxzMg49tQrcu6z6Rb5OyeIaPenCQuPXL6r/tQ7cvixkd
yrJh0A5l2TBmq9BblsWgHcsag5ctyjov+LJ1WfPgEXO3KIu11GEe3MLHHuhd
am5XFhc6lpWXO4tv27K4tU1ZebnH+LBhTOfQncrqpV6h9ynrju5blg0vdg69
U1lc2TX0LmX1zF6h9yyLL4x3KaufupU1BsvwUQNWdS0rHsbsEXr3slj5v7LG
6FXyMQarqENteLB3WXnhRTZ0pix+5MqyYUcidFNZvEH3KOv9576vKIlB+LqX
1efF0IWyWIWPGnAoWVYuGJcvqwZMZL27lcVO6qfL4lmqrBh4ig+b95P70ras
N4A49gljSmXVhhe10NWyuNIIXS9rrfuH3q8svjBeKWsffcoag2X4ymWxqmdZ
8TCmd1nfD1byPRn7tqR8jMEq6lAbHhxQVl54cFjo/mXx4/CybNhxUOgDy+IN
ul9ZbxF3hzsHg/D1LYuvrIt9wip81IBDB5eVC8YNCH1EWW8G34Gzptepf2hZ
fX5IWTH0PT5sfpdwrhuX9dsFTa/CxyPLygtXBocMKqtnYNbIsnroeNuw5riQ
Y8vq49Eeg1P4jimLSYM8D64NDRlSVq+Sb0RZPBviejCSuKPL+v4TQ04qix8n
24ZHp9iGN+NCxpZ1v5eFLPVdPM82rDnB81p67piyeoy5S8pi2Bjvoa1rTiiL
kaxxuM8L34llMWy887axD5s+ON+113XcsLJYearXDTumh0wrizEzQk4ri1VT
QiaXxRrGp5Z1R+aGnFEW16Z6Htya6XiYNSfk9LK4OctjHR3H2LauQ224Mi/k
zLL68tyQRWWxY7FtmHJ2yFll8ZJ1TSqLm5O8HxizMGRBWaxBzy+LZ/NdY1fn
YN6ePm9qrOOz4U7s5vrnlNXn57h2Z6+R/XO3Xi/r7aSvHgl5uKz7+ljIo2Wx
45KQi8tixNUhV5XVS9fYhk0XhVxYVp9d67Em+y4oi0cXex6suizk0rL6jHxX
lsWqS12vh+P49rDjtpBby+LF7bbhxx22YccNIdeX9VYPDH1UWW82mj6EMTd6
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
CTd3rWuMu0UcY3CLOtSGK3uF3rOuvkyFTtbFjnRdNkxpCt2jLl6yrh3q4iaa
/cCY7qH3ros16G518QxNDZhFDubBJ86bGrx1nA13gv6mfqKuPkdTG/axxj18
t07220lfDQ4Z5Ps6NGRIXeyoha7WxYjeofetq5f2q8uGTeXQpbr6bP+6xmAe
vmJdPCJHpS5WNULX6+oz8vWqi1X4qAcXiePbw45DQx9SFy/612XDj8PqsmFH
39AH1PVWNw+9bl1vNpo+hDH96poHw5jbpy7WHBH68LoYho898N5Q8+C6WMAa
96mLYfgOqotxB9aVF67hw17L58eZwmvietbFSuqwbthxbOhjvNbhIcPqWvsI
27Dp6NAD6+rhkR6DefiOqotH5GDeGv6Gx3nPw/wtm9lHPbhI3JF19dOJIePr
6ssJtmHJSbZhzeiQ4+v6bbWe1whDB9R1djBpjOet77mj6mItdZjXwj720No1
T6jrveRsuBMb2TeuLn6Ndd5W9mHDlVNDTgm5DbsRnAm5Pf5584Zs+DEtZGpd
vXV6yOy6em6ObVgzJWRyXf1/hse2sG9SXQya6nkw7LSQ6XX1Kvlm1cWw6a63
ueNYH+w4J+TsunixyDb8ONc27JgXcmZdrGRP9CT3786QO+pizHzP6+y5c+vq
4yUhi+ti2FzvoatrnlUXH1njzLoYhm9hXYxb4Ly72IdNT9wdcldd7wFxM+ri
xWKvG5ZcFHJhXVy+MuSKunr1Ktvw6YKQ8+vq46s91t2+8+ri0YWeBx8vCbm4
rjeGfJfXxbCLXW9vxy2rqxdvDbmlLn7cZhse3W4b3lwfcl1dPLrDYzB0qc8O
1tzgeRXPvbYu1i7zPBh2jfewj2veXNfbydlwJ3rad1NdDLvReRv2YWe9p8vq
6qv3Q96ri78fhnxQF1ceCLm/rp55LOTRunrocdvw5b6Qe+vq4yc81s++e+ri
0P2eBysfCnmwrl4l3/K62Pag6/V1HN8eXrwY8kJd/HjJNjx62Ta8eTrkqbr+
7orfiPym29V6odn2jOcd7blP1tX/r4a8UhfDnvQehrjm83UxkjU+UhdD8T1X
F8Oedd5B9mGf5PPjTA9z3MN1sfIVrxuuvBPydl199nHIR3X16ie24ctbIW/W
1cefemyMfW/UxaG3Pe9Ef8N36+rbj/wtx9tHvdGOe72uXlwR8m1d/PjONjxa
aRvefBHyeV1vEb0IC2Dnaz47WPOl503x3M/q4u7rnjfZPvYw0zW/qeu9fNh3
YoZ9X9fFsK+c9zT7sPmzIkyBH/zW4P5eWhcrv/e64crvIb/V1TP83f0/dfXQ
f7bhy68hv9TVx6s9Nt++n+vi0G+eBytXhfxRV6+S7++62PaH681z3E919dZ6
wf7mDfGjRUM2PFq/IRverBl6jYZ6ZqfQXRq6fzs3ZMOatRqaB5uY26yh3mNu
54YYhm+1z4Oa6zbESNb4l88I3zoNMWzthvLCOXzY3P1dGqp9ruP+rIuVGzS0
btixceg2DTFmk9BtG2LVRqFbNcQaxls3dF+2Cr1lQ1zDxzy41a6heFi4RUPv
Jdzk/WSMe0YcY3CLOtSGDdvwrjbUWx1D79hQj3ZqyIYlHUJv3xBDWVfLhri5
YUP7gUntQ2/XEJvQ2zbELTQ14BE5mAerOG9qLPLZrPL9pf4ODd1jNLXhF2tk
/2l/A86bHts/fPs1dF8PCN2nIX7sHnq3hvqqR+juDfVPU0M2rPlf6K4N9Vai
oTG4hm/XhhhEDubBsD1D79EQe8i3d0MMw0c9WEgc3x5uFUMXGmJHqSEblpQb
smFNOnSqoXf+x5Af6nrvf3AfwqRMQ/NgFXOTDfGrGrrSEIfwsQdYSc18Q3xk
jd0a4hm+XEP8yjaUF57hw4ZTnB9nyntA3F4NMZQ6rBt+7Bu6V0Nr7Be6b0Nr
P7AhG9bsE7pnQz18UENjcA1foyEGkYN5MIxv2LuhPZOPbwnD8FEPFhJXb6if
jgw9oKG+PKohG5bw7xWxYc2hoQ9p6LfVTz5fuFlr6OxgUv+G5sEq5h7cEF+p
wzw4hI89cE+peURDbydnw53g7uI7vCF+HdZQXniGD5v/vp3/Lov/RgrGHNfQ
/4/tgwfEHe8bvdFXfTU2ZExDfTbONn1+gm0YMyxkaEN9Pink1IYYNCRkcENs
G+Qa9OfokOMb4tZwx6/tHMSs6ThiYN4Iz4MXk11jM9c5pSF2TAg5ke/IXegZ
37Gn7t9FIRc2xJiTPA/2THGuNo4b3xDDxntvmzr3yQ0xCz2xIa5NdC4YMC1k
akMMZU+jGnoD0CMbehtGeg/wd0HI/IZ6cqFtevQs2zDm9JDZDfXKeSHLGmLV
rJCZDfFsRshpDb0l5JvXEKvmOL6DcxDzf5rOO/7rsfvjSTaVHRmhUKjsUBKJ
72fvVSK0qKSQklIqTVoa9kz23snee+8te9/26neej9fr98d5HOdc1znnuq73
dZ7XR7jvdo4jBk5c6Lxw5yLb+7jOkiZx52KPwcrJ3mdb75Wzg0MLQxY0iTXn
2+5s3/wmsfZsx+/t3IubxIzLQi5t0n3Ft6hJnJvvs9jTPvLSP4+HPNakfnrC
Nv/c/knbsOTqkKua1Cc3hFzfpL650TZMuTLkiib17k0e62Hf5U1iz1WeBx+v
CVnWpP4k33VN4tky1+vuOPYDI+4OuatJzLjHNgy61zaMuTXklpAvQ9IJ3dev
4q8zCdnw5TbPS3ruzU3q+ftD7msSt272HvKueWeTuMgar20SN/Hd0SRu3e68
WfuweVNnNune9Hbc8ibx8T6vG5Y8EvJwkxjxdMhTTernZ2zDlIdCHmxS3z7r
sYZ9K5vEnoc972h/z0eb9L+d/ZS/ZX/7qFd33ANN6q3XQl5tEo/eCHm9STx6
0zb8eCHk+Sa9P9wv+h9ervDZwZoXPW+I5z7XJNY+4HmD7WMPI1zzlSa9kZwN
d2K4fS83iU0vOe8w+7D5HUdfzm7S7wv0rCb9zpjlc6c3YNbnTeqVL23Tq1/Z
hkMfhXzofD+H/NQkDn0Q8n6TuPZeyLtN6lXyrWoSIz92/DjnIOZ0xxEDP/7n
vPDoF9uzXefHJvXJJnE3N07ozm2akM0d3CwhG958G/JNkxj0ne1p9n3dpD4k
R+uEzoDcPzSJ6Z94rTPt+75J3PraZzHDvu/87Q+E8Qkxib1+1iSmf+pc8Obf
kH+axKQ/Qn73vWgRcWsmxJi/Q/5qUh+vHb61EuIOvj+bxKd/PA9urg75r0l3
ixzNE2Lnf6630HHUo59axvhGCfVlq4RsWMIZYM/3un5rEvvQvzbpPfjV3wPe
bBBz10+IT+uFXjchTqHXSYhhaPbAPaXmhgnx+jOfC5xif+wffpGPXNxp5lKD
884mxCP66qCEzpo+6BZ6/4R6qV3o7RPqmR0SsumhHROyYcxWodskxOjdQndK
iEFbht4iIbZtntAdgjfk2y4hbm2dUDycIgcxMJE4YuDF7gnlhR97JGTzNlCn
Y0Lv+TshbzfpXUe/1aTfLmjYAY86xNz2CfFp54RsuIVvp4RY1iV054S4Re5d
E+Ju24TWCrfw7ZIQt4jjLGAZPvJSr3tCZwpb2eu2Cb0T2ySUizUeHLpHQmvv
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
+9gD95SaLdJ6O9/2neDu4lszLX41TysvPMOHzZ/B8duR33EwZsO0+LtFNr5f
yLis+LFx+Fqn1VttQm+ZVs9tlZYNa1qFbplW/2+d1hhcw7dRWgwiB/Ng2Kah
N0mrV8m3RVoMw0c9WEgca4JNjG+eFkd2Cr1jWvzoELp9WvzYLvS2aXEEvU3I
nJCfQ35Ki1v42qbFHeLIRR/vEnrntJi1fVq5+H1PnR3S4ha6XVr8QjMP5pGP
PcN91rhZWu8Bmn3CCHKzVvjROfQeabF4X/6Zc1r9uV9aNkzaPfRuafXu/mmN
wSl8ndJiEDmYBxO7hu6S1rtCvr3T4hY+6sE/4jqm1X+HhO6ZFjN6pWXDoEPT
smHMgaEPSItBh6U1Bjd3Teu84MtBac2DR8ztlhZfqcM8uIWPPdC71Dw4LS70
TisvdxZfj7S41T2tvNxjfNgwpk/ow91Lw0JOTKu3htuGF02hj0yLK8nQibR6
phA6nxZfGD8irX4qpjUGy/BRA1al0oqHMbnQ2bRYmU5rjF4lH2OwijrUhgel
tPLCi/6hj0qLH0enZcOOWuhqWrxBV0LOZez/72tKvnJafX5s6AFpsQofNWBT
I3Q9LcYdk1YNmMh6M2mxk/r90uJZ37Ri4Ck+bH5rcF/2SusNII59wpjj0qoN
LwaHDEqLK0NDhqTFi5EhJ6XFF8YHptW3J3usmX3Hp8WqExzPPw8c4e+3tr8n
Y+s7H2Nrug614cEo54UHZ4SMS4sf423DjtNCTk2LN+hT0nqLuDvcuVb2jU6L
r6yLfba0jxpwaIxzwbgzXYM3g+/AWW/u+mPT6vPTHbOZfdj8puBc90zrtwWa
XoWPE5wXrkwLmZpWz8Cs2Wn10Lm2Yc2UkLPT6uPzPLadfZPTYtJUz4Nr00PO
SatXyTcrLZ6d43rbOm5SWt9/ScjitPix1DY8usA2vJkfMi+t+31PyN1p3cV7
bcOaBZ63u+fOTavHmHtXWgyb6z3s5ZqL0mIka5zp88J3floMW+i8Xe3Dpg/u
c+0OjpuRFisv9Lphx+Uhl6XFmCtDrkiLVZeEXJwWaxi/NK07cl3ItWlx7VLP
g1tXOR5mLQ+5Ji1uXu2x3o5jrIfrUBuu3BByfVp9eUfI7Wmx407bMOXWkFvS
4iXruigtbl7k/cCYm0NuSos16BvT4tmNrpF0Dublfd7UaO+z4U5kXP+2tPr8
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
o0P3L2rtxxRlw6ZK6HJRPTygqDGYh69UFI/IwTxYxTesF7Vn8vEtYRU+6sFF
4opF9dMJIUOL6ssTbcOSYbZhzfGhjyvqt9U/Pl8YWijq7GDSwKLmwSrmHlsU
a6nDPDiEjz20cM0hRb2XnE0P3118g4vi1yDnbW4fNlwZGXJSyDLs+HuX9UOu
ib/esCQbfpwackpRvTU+5Iyieu5M27BmdMioovp/gsc2su/kohh0iufBsDEh
pxXVq+QbVxTDTnO9DR3H+mDHOSHTiuLFdNvwY4Zt2DEp5KyiWMmeRvj+XRuy
vCjGTPa8tp47sag+nhUysyiGTfQednDNqUXxkTWOLYph+KYUxbiznXd7+7Dp
ietDrivqPSDu9KJ4MdPrhiXzQ+YVxeULQpYW1asX2oZPc0POK6qPL/JYJ/vO
LYpH8zwPPi4MWVDUG7MkZHFRDFvgeh0dN6eoXrw65Kqi+LHMNjy6xja8uTTk
kqJ4tNxjMHS2zw7WXOZ5B3juxUWxdo7ndbOPPfR0zSuLejs5G+7EwfZdURTD
LnfeHvZh7+U9LSqqr14KebEo/r4S8nJRXLkl5OaieubukLuK6qF7bMOXm0Ju
LKqP7/XYkfbdUBSHbvY8WHlbyK1F9Sr57iyKbbe63hGO49vDi0dCHi6KH4/a
hkeP2YY3K0LuL+rPrviNyG+6dtZTzLYHPK/iufcV1f9PhDxeFMPu8x76ueZD
RTGSNd5RFEPxPVgUw1Y6b8M+7GE+P84067jbi2Ll4143XHk+5Lmi+uy1kFeL
6tXXbcOXZ0OeKaqP3/DYQPueLopDz3neCf6GLxTVt6/6Ww61j3rHO+6ponrx
w5APiuLHR7bh0ce24c3bIW8V9RbRi7AAdj7ps4M173jeaM99syjuPuV5o+xj
D2Nd8/2i3svbfSdOt++9ohj2rvOOsQ/7Z753SX9OxG8N7u/5RbHyE68brnwd
8lVRPcOfK/1YVA/9bBu+fBnyRVF9/D+PTbbv86I49JXnwcpvQ74pqlfJ90NR
bPvG9SY5blVRvfVPyN9F8ei/kH+L4tFq2/Dmt5Bfi+qZbWNP25R0/7YryYY1
v3veXM/9pajeY27bkhj2i/ewyDX/KoqRrPF7nxG+P4ti2B/Ou9A+bO7+9iXV
nuG474piZbOS1g071o6/Xqskxqwbep2SWLVm6OYlsYbxFiXdl1ahW5bENXzM
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
cceU1UNjQk4rix+n24ZHY23Dj5NDRpbFpnEeg5VHl3VesGaU523guSeVxVTq
MG99+9jDxq55all9fobztrbvlLK4MNp5W9mHDVfODBlfVl9dGXJFWX12lW2Y
cVbIxLJ4MzlkUll9MiNkellMYXxCWT0002Nb2UcNWHi24+nLc0KmlcXNKR7b
yfkY28Z1qA0LZjkv7Dg/ZGFZLFlkG47MDTmvLJagzy3rvxHn36vlv53qaN+c
svp2aciSsngz2zVg0jzngneLXWMHr3dqWdyk/oKy3qL5julsHza/L7gvQ8t6
D6Z6nzDjAteGGZeEXFwWby4LubSsN++akGVlMYXxi8rq2+Ue29++C8ti4eWO
53f81f5+Pfw9GevlfIwd6DrUhgfXOi88uC3k1rL4cbtt2HFjyA1l8QZ9fVlv
C3eHO9fHvuvKYuqF3ufh9lEDDt3kXDDuDtfY29+Bs065/i1l9fnNjknah93C
5zqkrN8uaHoVPt7pvHDlgZAVZfXMYyGPltVDj9uGNfeH3FdWHz/hsbJ995bF
pBWeB9ceDFlZVq+S75GyeLbS9UqOu8ff/8WQF8rix0u24dHLtuHN0yFPlcVR
4u4u6y7+GPJDWax5xvOO89wny+r/V0NeKYthT3oPQ13z+bIYyRof9jnhe64s
hj3rvIPtw6Y//hfyc1lsJe6hslj5itcNV94Jedvf/+OQj8rq809sw5e3Qt4s
iwGfemyUfW+UxaG3PQ9W8k6+W9Z9Ih/v5Wn2Ue9kx71eFiO+DfmmLGZ8Zxvu
fG8bfnwesqosdvzgMdj5ms8OHn3heWd57mdlcfd1z5toH3uY5ppfl/XWcTbc
ian2fVUWy7503in2YcN63n9+E3Dv21Sihyq6s1uH3qoifvwR8ntZ/bM65L+y
+qlZRTas+S3k17IYsEZFY3Pt+6UsBv3uefDxr5A/y+IO+f4ti2F/ut55juPb
w4j1I996FTFjg4psuLNhRTb8aBF6zYr+2QB/T171u8395fcBPFqronmwhrnN
K2JBy9AbVcQ2fOwBZlFz3Yp4wBr/KesdwrdORSxbu6K8sA0fNj3P+XGmix33
d1lcow7rhh+bh96sojVuE7ptRT23bUU2rNk09CYV9fF2FY3BLHwbV8QgcjAP
PvINt6hoz+TjW8IwfNSDl8S1rqgXdwm9c0X82LUiGx51rMiGNzuEblfRW0Uv
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
mxwyqao7fbZt/l4RpsAPfmtwf7tXxcoZXjdcmRcyt6qeWRKyuKoeWmobvpwX
cm5VfXyBxzraN6cqDs31PFi5IGR+Vb1KvkVVsW2+6+3quNlV9daVIVdUxY+r
bMOjq23Dm4tDLqqqZx4NeaSq+/eYbVhzieft77kXVtV7zH24KoZd6D30cM3L
q2IkazzfZ4TvsqoYdqnzHmQfNnf/cdfu6riFVbFymdcNO24Iub4qxtwUcmNV
rLo2ZHlVrGH8uqruy50hd1TFtes8D27d7HhYeHtV7yXcvMVjWccxdqTrUBs2
3B1yV1W99WDIyqp69CHbsGRFyP1V8ZJ1XVMVN6/xfmDSfSH3VsUm9D1Vcese
16g4B/P6+byp0cVnw52ou/4DVd3jB1w77zWyf34Td/d502PfhHxd1X39LuTb
qvjxTMjTVfXVyyEvVdU/r9iGNU+FPFlVb73qsWPte6IqBj3teTDsuZBnq2IP
+V6simHPut4Ax/Ht4dZ7Ie9WxY73bcOSD2zDmjdCXq/qnZ8VMrOq9x5NH8Kk
Nz1vpOe+VhW/Pgr5sCoOveY9nOaa71TFR9b4QlU8w/d2Vfx6y3lPsQ/7HJ8f
ZzrUcc9XxdAPvW748WXIF17jDyHfe+0/2oY1n4esqqqHf/IYXPss5NOqGPSF
5031N/zKe/7e33KKfdSb4LhPquqnv0L+rKov/7YNS/6xDWt+CflfVb+tZnuN
cPNjnx1M+tXzzvXcn6vi6yeeN8c+9rDQNf+o6u3kbLgTC+z7vSp+/ea88+3D
3rF3nG/ItN7i5r9eK6z8zzb8WKsW73NNvbVh6A1q6rmNarJhzZqhm9fU/y1r
GoNr+NaoiUHkYB4MWyf02jX1KvnWr4lh+KgHC4lrVhObGF+vJo5sGXqLmvix
Veg2NfFjk9Ab18QRdOuQSSGfh6yqiVv4WtXEHeLIRR+3Db11TczatKZc/L6n
zuY1cQu9WU38QjMP5pGPPcN91rhuTe8Bmn3CCHKzVvixY+gdamJxx9C71tSf
nWqyYVK70NvX1Lu71TQGp/BtVxODyME8mNg+9E41vSvk26UmbuGjHvwjbtua
+m+f0HvXxIx9a7Jh0H412TCmc+g9amLQ/jWNwc1tajov+NKlpnnwiLm718RX
6jAPbuFjD/QuNfeqiQvdasrLncW3Z03c6lpTXu4xPmwYc2DoA2rqpWNCH13T
fR1Qkw0veoTuXhNXeoY+uKae6RP68Jr4wvhBNfXTETWNwTJ81IBVh9QUD2N6
hz6sJlb2qmmMXiUfY7CKOtSGB0fWlBdeFELna+JHsSYbdqRDp2riDToZMhnb
9xUG4UvU1OeV0OWa+IWvqSYOZWrKBeNKNdWAiaz30JrYSf1cTTzL1hQDT/Fh
81uD+7JzTW8AcewTxlRrqg0v+oZu1MSVo0L3C1kdf3186ONq4gvj9Zr6dmBN
Y7AMX60mVvWvKR6+HFvT94OVfE/GYA/5GINV1KE2PBjkvPDgpJARNfFjpG3Y
cULI0Jp4gx5S01vE3eHOrWnf4Jr4yrrYZ3P7qAGHTnQuGHeya/Bm8B046/Vc
f3hNfT7MMevah81vCs61Q02/LdD0Knwc5bxwZVzI2Jp6BmadVVMPTbYNa04P
GVNTH5/tsU3sO60mJo31PLg2PuSMmnqVfBNr4tkZrrex406t6fvPDplVEz/m
2IZH59qGN9NCptZ0v28Iub6mu3hTyI01seYcz2vnuVNq6jHmXlcTw6Z4Dzu7
5syaGMkaJ/i88M2oiWHTnbe9fdj0wc2uvZXjzqyJled53bDj/JCFNTFmccii
mlg1P2ReTaxhfEFNd+SSkItr4toCz4NbSxwPsy4KubAmbi71WDfHMban61Ab
rlwWcmlNfbk85Jqa2HGtbZhydchVNfGSdc2tiZtzvR8Yc2XIFTWxBn15TTy7
3DV6OgfzDvd5U6ONz4Y7cajrL6upz5e59oFe4yX+Nl/WxCP66rWQV2u6r2+E
vF4TO+4Iub0mRtwfcl9NvbTCNmy6LeTWmvrsAY+l7LulJh7d7nmw6q6QO2vq
M/LdWxOr7nS9pOP49rDjiZDHa+LFk7bhx1O2YcdDIQ/W9FafEjK6pjcbTR/C
mIc9r+G5K2tizTMhT9fEsJXewzGu+VhNLGCN99TEMHyP1sS4R5y3v33YI31+
nGnRcXfXxMqnvW7Y8XLIS17jWyFveu1v24ZNL4a8UFMPv+OxofY9XxOPXvK8
Ef6Gr3jPb/pbDrePekMc91xN/fRpyCc19eVntmHJKtuw5v2Q92r6bXWq1whD
n/XZwaQPPG+M575bE2uf87zT7GMPZ7rmxzW9l5wNd2K8fR/VxK8PnfcM+7D5
jUJfXlATY76q6R63qweLQqbUxZFvQ76piSXfh3xXU5/9GvJLTfxi/OuaevE3
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
u0LuTIpB6Du4G6l4PyFzU2IZvtuT4tADrsVM/y/koaQYdLdrneQ+9ybFKvQ9
SbHqHj830PXYcz+v8YakvgE3eJ9J12at8OKJkMeTYsQLIc8nNdsv2oZPj4Ws
SmruX3IsZ9+jSTHrcT8Hs54KeTIpvlPvuaT49KT7ZZ33SFJceCvkzaQ48bZt
WPOObZjxasgrSfHiXcdg6MM+Lxj0mp8b5mdfToq1j/i5ofaxhzHu+UZSjHjP
dUfbtzopfr3uuqPsw4Y3H4S8n9Rdbx7vc52U7n6LlGzY8XHIR0nx49OQT5Ka
n29Cvk6KR8Q/TGq2vnVskn30gEmfOZ95+irky6T4+Lljs1yP2FT3oTcs+c51
YcTvIb8lxYw/bMOXn0J+TIof6B9CusQe5vu+zrPv+6Rm/u+Qv5Ji2PfuAY9+
di1Y9qd7zPB6v0iKX/T/NSmG/eKcRfZh81uE+/JsUoz+wvuEN/+4N+xYM9a1
Rkr8WDv0WiGXxz+vH3q9lHhE/L+k5naDlGJwDt+/STGpWUr5sGbdlN4ffOR9
EoND1CMGp+hDb3iwYUp14cHmoVunxI82KdmwY5PQG6fEG3TLlL5L7/vOwSB8
G6XE2n+9T1iFjx5waNOUasG4tin1WO73wFkz6/RvldKcb5ZSDnOPD5vfDs+E
PJ3Ubwg0swoft0ipLlzZNvQ2Kc0MzNohpRniTmDDmg6ht05pjndKKQan8G2V
EpOowXNwrWPo7VKaVep1Toln+OgHI8lrn9L73yv0ninxo3tKNjzqkZINb3YJ
3TWl+3186ONSuouDUrJhTbeUnoNNPLtzSjPGs8emxDB87IE7R889UmIka9w+
pXPaPfRuKTFs15Tqcnb4sJmDE1LqDVvJ65QSK/dOad2w44DQ+6fEmINCH5gS
q3qG3jcl1hDfL6U7cmjoQ1LiGj6eg1u9UsqHWX1D90mJmwenFONukUcMbtGH
3nDl8NCHpTSXA0IfkxI7BqZkw5SjQvdPiZesa5+UuIlmPzCmX+gjU2IN+oiU
eIamB8yiBs/BJ86bHnzrOBvuBPNN/6NTmnM0vWEfazzU72ZBSjxirk4LOdX3
dWLIhJTYkQh9SkqMyIfOpTRLhZRs2HRy6JNSmrNiSjGYh+/ElHhEDZ6DVanQ
yZTmjHrZlFiFj35wkTzePewYHNKUEi+G2IYfQ23DjkpIOaVv9Zah26X0zUYz
hzCm6ufW8LOllFgzPGRYSgzDxx6au2cjJRawxkxKDMNXT4lxNddtZh92G58f
ZwqvyUunxMphXjfsGBcy1mudHDIppbVPsQ2bxoSMTmmGpzq2sX2jUuLRWD/X
2u9wvPc8ye+ylX30a+m8kSnN0+yQM1Oayzm2Yclc27Dm9JDpKf22au81wtAR
PjuYdIaf29rPTkuJtSP93Fb2sYdO7jkrpe8lZ8Od6GjfzJT4NcN1t7MPm98o
zGXvlBizMKV7/FhI1/hdu3NaHFkcsiglliwNWZLSnJ0Xcm5K/CJ+VkqzeL5j
Xe2jLsxaHrIsJdacE7IyJZ6tcGxv1yO2q/vQu7ufPTslvlzgHrDjqpArU2LS
RSEXpsSSS0IuTokpFzvGvF4bck1K+ybvipS4daHrwqbLQi5NiU9Xu0dvP3t5
Sgy73M8d5Gfpt5fXyH4OdR/yYc117g1vbgq5MSWW3BJyc0pcvjvkrpR4RPyG
lOb2HseOtO/6lJh0q/P5VtwZckdKfLzNseNdj9hR7kNveHCv6zKLj4Y8khI/
VtmGHQ+GPJASb9D3p8Sjx1O6Iyfbd19KTL3e+zzJPnrAoYdcK++8VT7rteN+
rZXWTNP/4ZTu7v+ck7YPG4484d7w5qmQJ1Oaq+9Cvk2JHc+EPJ0SO561DWOe
D3kuJWY97Xxm6bWQV1PizXPOGW7fKynx5eWQl1LizSu24eaLIS+kxLYX3IMZ
fd11YcNq27Djg5D3U+LLmyFvpMSRt0PeSok9bznGbH8S8nFKfHrDtWDPO86B
T+/ahk8fuscQr5f1wb6PHIOh7zlngteCzXePu3N7Skz82DklnzHnDju+CPk8
JXZ8aRvGfB3yVUrMIv5ZShz5KeTHlHjzlXPm2/dDSlz83u9vnn3Ys/0+v0mJ
bd+4Bxz52XXhyi+24cV/If+mxIvfQn5NiTV/hvyREkt+d2y61/hpStz61bVg
0F/OYYb/tg2T1kirxzTn8W5g3JppxZj7f5yz0mvBHuhzZSZhFvedHHjTLK0Z
gB/rhm6RFlfWD71eWrO0aehN0uIL8eZpzdlmacVgG7510uLTBmnlw56NQ7dM
i3MbphWDQdQjBr/oQ2+40iqtuvBiq9Dt0+LH1mnZsKZt6DZpsQS9eVpspT/7
gS/4Wqc1/9uG3iYtnuGjB2zaIq1acK1DWj1gJevdKK37SP8t0zq7dmnlcJb4
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
dCovjmTysmFJLnQ2L54RJ5+5qoZU8mINcXLWtK+c1yyVQhfzmi182LCyEDqf
F8PQ9GBea64LV+q24cXIkBF58aIppJEXa4aEDM6LJYMdY87HhozJi1sN14JB
Q50Dk4bZhkmj3APOsl7WB+NGOwZHhztnQ68F+8Oc7s5hefFrjHNgOWfMucOa
00JOzYsjE2zDkkkhE/PiGfHxIduEnBFyel6smeicDvZNz4s10/z+trYPe0u/
z8l5MWyye8CRGa4LV2bahhcLQxbkxYszQ2blxZo5IbPzYslsx1p5jePy4tYs
14JBc53DDM+zDZPOco/NnMe7gXGLHGPu5ztnJ68Fm98TnOuheTFrsXNgzRLb
8OPskBV5ceWckJV5zRJzclFefCG+PK85u8SxPexblhefznU+7Lkw5IK8OHee
Y/u7HrHu7kNvuHKp68KL60Ouy4sfN9iGNVeGXJEXS9CX53W/nw15Ji++4Lss
rxnA93RePLvMPWDTVa4F1250j55e7/l53Uf6X+uzuybk6rzO8lrbzMNz7r2v
89gn3Lk55Ka8uHN7yG15MeUO23DlrpA782Ib8Vvz4hn6lry4c6dzmIEHQu7P
i2H3hdybF4/utw037wm5Oy+e3e0ezNCDzoc9/wt5KC+OPBnyRF7seTTkkbxY
8ljIqrw4eov3k3H84by49rBr5fws+cz8486HVU+5R3+fB2dd8TshlvRaWF/R
ayGfP5cwb8wx7HneZ81d/yXk57wY9FLIi3kx5ZWQl/OajbdC3syLZ8RfyGtu
3nasyT7qwqBXnQ933ghZnRefXnNsjOsRG+o+9GaO33Fd2PFpyCd5seQz27Dn
g5D382IQ+r28vvlL85rD0+x7Ny+mfBnyRV48e9c9YNCHrgXDPnePUV7v63mx
jP4f58Wtj5wzxT7shT6/n/Li9eveJwz6yr1h0Hch3+bFlB9Cvvdafw/5LS+e
Ef/G+/jDsTPt+zovBv3ofLjzq9/fAvcnttj1iM11H3rDlD9dl7lcO77VaxXE
jmYF2fDj35B/8uII+u+8fm8t87pW2PdXXqz92vtcbh89YNZ/rgWf+F1AjzP8
Hjhr5pv+axbEsjUKymHm8WHDrxYF/baAN+uFXjekF3bIpQVxZ8PQGxTEkY1D
tyxoxtqE3rwgthFfv6D5a1tQDLbhoy4c2qSgfOaqdehWBXFr04JizBz1iMEv
+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
7iXFYOguJeXAVNaCzXePu7NWSUykJznwmzPm3GHH3qF7lMSOfUqyYUzP0PuW
xCzi3UviyMGhe5XEG+Lk8I3Ed1BJXDywpPfH73h82HCT97lfSWxD0wOO9C6p
LlzpU5INL/qH7lcSLw4J3bck1hwW+tCSWIImBlNZ414lcYtnqQWDDi8phxk+
oiQbJh1VUg+4Sx7vBsYdXVKMuT+ypBxYxVqw+T3Bua5ZErO47+TAm4ElzQD8
GBT6+JK4cmLoE0qapXToVEl8IX5cSXOWKSkG2/AdWxKfTiopH/YkQydK4tzJ
JcVgEPWIwS/60BuuZEuqCy/qIbWS+NGwDWuKoQslsQSdL4mt9Gc/8AVfrqT5
HxIyuCSe4aMHbCqVVAuuNbkHrGS9p5R0H+lf9dlVQsq+o1XbzMOckNklMZo8
9gl7hro3HBkZMqIklowOGVXSvZ4QclpJbCI+vCQuTHRsA/uGlcSnMc6HQaeW
9I2ElWMd29z1iLV0H3rDm0muCz9mhswoiTGzbMOOaSFTS+IQekpJ7GB/Z5bE
JnyTS+LuMO+znX30gEPTXauT8+jRwu+Bs97W/c8oiRGnO2cb+7Bh9DjvDR7N
C5lb0t29JeTmkrizMGRBSRxZFHJWSfNxdsiKkjhFfH5JM7fSsS72URcOLXY+
7Fkesqwkli1xbE/XI9bVfegNb85xXfhxacglJTHmMtuw44KQ80viEPq8kv6d
AX8m58/Q+9h3bkksuDLkipIYd657wKELXQsGXe4eu3u9S0viF/0vLolhFznn
APuwj/L53VQSl5d6n3DoKveGO9eFXFsSR24Iub6kGbs95LaSOEX8mpLm7w7H
DrXv6pI4dKPzYc+tfn/93Z/YANcjdoT70Buu3Om68OKhkAdL4sf/bMOae0Pu
KYkl6LtL+l5xX5jPQfbdVRJ/r/Y+j7ePHrDpPteCaw+7R2+/B8464f4PlDTn
9zvnFPuw+fs4fqvNMyMfcS2486htOPJUyJMlseSZkKdLmqWXQ14qiU1PhDxe
0py94ljBvsdK4tOzzme2Xgx5oSRWPufYENcjVnEfejf52edLYsyr7gE/3gt5
tyR2vB7yWknceSNkdUlcWe0YM/9hyAclcYe8d0ri2Wuuywy/FfJmSVx73z3G
+9m3S5r1t/3cGD9Lv4bXyH4mug/58OYj94Ydn4V8WhI/vgj53O//+5DvSuIR
8U9KmvkfHJtq38clMelL58O8b0O+KYmPXzk2x/WIne4+9IYlP7oujPgr5M+S
mPG3bfjya8gvJfED/XNJ7Pg35J+SmILvp5JY+7H3ucA+esCj31zrbOfR44hy
zE7IdWXxgP5/lDTbvztnqX3YMOU/94Y9a0beGmXd+x1Cdy6LNWuHXqssjjQr
y4YlzUOvUxbPiJPPXG0UesOyWEOcHJiCb4OyZmn90OuVNVv4sGHluqFblMUw
ND2Y15Zl1YUrG5dlw4stQrctixebht6kLNa0Cr1ZWSxBE2POtwrdvixu8Sy1
YFDrsnJg0uZl2TCpXVk94CzrZX0wbsuyYnC0TVk5cI21YJ/pu/N1SfyiJzmw
nDPm3GHNtvHP25TFke3KsmFJp9Ady+IZ8Q4hq+Kfdw69U1msIU4OXMHXpSzW
7FjW+4M1+LBhJe9z+7IYhqYHHOlaVl24sktZNrzYO3SPsnixW+hdy2LNHqF3
L4slaGLwlTVuXRbXeLZbWQzas6wcZnivsmyYtE9ZPWAwebwbGLdvWTHmvntZ
ObCKtWDP8rkykzCrZ1k5sGa/smz40Sv0QWVxpXfog8uaJebk8LL4QvzAsubs
yLJisA3fAWXxqU9Z+bDnsNCHlsW5vmXFYBD1iMEv+tAbrvQrqy68OD70cWXx
Y1BZNqw5JvTRZbEEfZTv96iQkWXxBV9/zwC+EWXxDB89YNOAsmrBtRPK6gEr
We8hZd1H+h9b1tkNLCuHs8Q30PMw2r1hNHnsE+6cFPrEsriTDJ0oiympsmy4
kgmdLottxE8pi2fok8viDnFymIFS6GJZDCuU9e8y4RE+bLjJv9vMlsUzND2Y
oXJZ+bCnGlIpiyPDQoaWxZ5GSL0slgwOaSqLo6yF/TRzvFYW12qu1dzPks/M
D3E+rBruHrCe8+CsN/Q7Ibam18L61vNayOfPJczbKrNnjM+au35eyLllMWh8
yLiymHJayKllzca0kKll8Yz42LLmZrpjm9pHXRg0wflwZ0rI5LL4NNGx9q5H
rLX70Js5Pt11Yce8kLllsWS+bdgzK2RmWQxCzyjrm79/WXO4rX1nlMWUs0IW
lsWzM9wDBp3pWjBsgXu083onlcUy+s8pi1uzndPZPuy9fX7nlMXrSd4nDFoc
sqgsBi0PWVYWU84OWeG1XhhyQVk8I760rH1c5Nhu9i0pi0ErnQ93zvf76+H+
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
XXegfbdVxYVbXXeAfdhw5f6Q+6qaqw9DPqhqzj6yDTMeCnmwKt48HPK/qubk
yZAnqmIK8QeqmqGnHDvFPnrAwkecz1w+HvJYVdx81LGi6xFLuQ+9YcHTrgs7
Xgl5uSqWvGobjjwf8lxVLEE/GzJlSPA95KMh4gu+Z6qa29Uhr1fFm2fcAya9
4Frw7jX3yHu9q6riJv1fqupb9KJzhtiHze8L7svVVX0PVnmfMOMN94YZ74S8
XRVv3gt5t6pv3qchn1TFFOJvVTW3nzk21r43q2Lh+87nd/zHfn8T/T6JTXU9
Yqe6D73hweeuCw9+DPmhKn78ZBt2fBPydVW8QX9V1beFu8Odm2nfl1Ux9U3v
c4Z9X1TFoW9dC8b97B4j/R4463nu/31Vc/6dc+bah32Iz/Wqqn67oJlV+PiL
68KVf0L+rmpmmgV3165phtapyYY1f4X8WdUcN68ptsy+P6pi0t9+Dq79F/Jv
VbNKvbVq4tm/7rfUeb/7/W8c8ZY18WOTmmx4tGlNNrxZL/S6NXGUvN+quou7
h2+3mlizfk3PwSaebVHT/LcKvVlNDMPHHjgbem5UEyNZ45o1nRO+DWti2AY1
1eXs8GEzH3uG3qMmtpK3Rk2spA/rhitbhm5X0/vfLvS2Nc15x5ps+LJF6LY1
MaBTTTEYhK9NTRyiBs/BSr6T7Wu6T9Tjewnb8NEPJpK3eU2M2CV015qY0a0m
G+7sWpMNP3YI3bkmdnCWxGBn65rODh7tWNNzsIZnt6+Ju/ThOdiGjz3AAHru
XNO3jrPhTjDf+HaqiWVdaqrLzOPDhvV8//lNwL0/OfRJNd3ZROhTauLHPqH3
rml+Dgp9YE3z1KsmG9b0CN29JgYcXFMMZuHbqyYGUYPn4GPP0PvWxB3qHVAT
w/DRD16Sx7uHEUeGPqImZvSryYY7/Wuy4Uff0H1CXq9HvUZ8oxr6bnN/+X0A
jw6p6TlYw7O9a2LBMaGProlt+NgDzKLn4TXxgDXuX9N3CN9hNbHs0JrqwjZ8
2Mw858eZwhHy9quJa0fVtG74cULoQTWtMRU6WdPMpWuyYc3xoY+raY4zNcVg
Fr5ja2IQNXgOPvIOT6xpz9TjXcIwfPSDl+QNrGkWqyGVmvhRsw2P6rbhTT50
rqbvErMIC+DogJrODtYUanoONvFstiYG04fnYBg+9rCme5Zr+p5xNtyJNewr
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
aV6p938tnXX4VlWzhhUVTEzsQBELDOzCwMBAMFEQbFHZHT8EFRVFQVRAUbET
u7u79bO7u7tbz9znef6Ya5yZNTNr7b3m3i/oOd9aidiGj37wjzzminkmvmai
vW4WetNELOkXevNEvNko9IaJuIPeINFezg05JxGf8K2f6NzkUYv53jL0Fol4
tHGiWm+OVJ9NEjEM3TcRt9Csg1vruw/fAPbYJ9G3Ac05YQe12SvM2D70dom+
ATuH3inRPO+SyIYx24beJtHc7pooBnfw9U/EHWqwDj7uEHpAom8M9XZMxDN8
9IN55G2daIaGhx6WiB+8e2x4tHciG37sHnpwIjZxJ4jByq0SPS9Ys0eidbCG
tbslYip9WAd78HEG7iY990w05/v6rnFf8Q1NxIUhieoy2/iw4cr+ofdLNFcn
hExMNGeTbMOMESEHJuLNwSEHJZqTMqRIxBTiBySaocox+IWPHrDwEOfDrzwk
S8TNkY7N6XrEOrkPvWFB7bqw4/CQwxKx5AjbcGRUSEcilqDbkLN3j32E/Lu7
+IKvSTS3R4UcmYg3jXvApENdC96NdQ84koYkibhJ/zGJvkWjnbOQfdj8vuC+
DEr0PUh8TphxtHvDjPEhxybizfEhxyX65p0cclIiphA/JtHcTnZsKfvGJWLh
BOfzO/5Ev78efp/EVnQ9Yt3dh97wYIrrwoMzQ6Yn4sdZtmHHtJBTE/EGfUqi
bwt3hzvX276piZg6zufsZR894NBprgXjznaPxfweeNZruv8Zieb8dOf0sQ+b
3yw814GJfrugmVX4eI7rwpVLQi5ONDNXhVyZaIautg1rLgq5MNEcX+PYRvZd
kIhJF3sdXLs0ZEaiWaXeFYl4NsP9NnTe+Yne/60htyTix2224dHttuHN9SHX
JeIoeecluouvhbyaiDU3eN22Xnttovm/M+SORAy71mcY5J43J2Ike7zczwvf
TYkYdqPr7mAfNvPxRsjridhK3mWJWHmH9w1XHgi5P9H7fzzksURz/oRt+HJf
yL2JGPCkY3vYd08iDt3vdbCS7+SDie4T9fheDrOPfrs77+5EjHgp5MVEzHjZ
Ntx5xTb8+F/I04nY8apjsPMuPzt49IzXjfDapxJx926vO9A+zpC55wuJvnU8
G+4E8/18yHOJWPas6460DxvW8/3nNwH3/t+QfxLd2ZnS4FQifrwb8k6i+fkk
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
xJ1/XYs5njniM+Vi1h+uNd19/srELfSfmfj1p9dNdT3OPMl7/DbT9+BbnxNG
UJu9wo/Z45+75GLxvKG75prP+XLZMKlz6Nlyze78uWJwCt+suRhEDdbBxDlD
z5Hru0K9eXJxCx/94B95s+Sav8VDL5aLGUvksmHQkrlsGLNQ6AVzMWipXDG4
2SnX84Iv3XKtg0esXSAXX+nDOriFjzMwu/RcNBcXls5VlzuLb5Fc3Fo4V13u
MT5sGNM99DK5Zmnr0Fvluq/9c9nwokfo5XJxpWfo5XPNzKqhe+fiC/Flc83T
arlisAwfPWDVCrnyYUyv0KvkYuWKuWLMKvWIwSr60BserJ6rLrxYP/R6ufix
QS4bdqwVes1cvEH3CTkY2/cVBuFbI9ecbxx6o1yswkcPOLR2rlowbsNcPWAi
+105Fzvpv24unq2TKwee4sPmtwb3Ze5c34CVcp0TxvTN1RtebB56s1xc2SJ0
v1yc2C70trn4QnzTXHO7fa4YLMO3SS5WbZkrH95sk+v9wUreJzG4Qz1isIo+
9IYHA3LVhQe7hd41Fz8G57Jhx46hB+XiDXpgrm8Rd4c7B4Pw7ZCLr+yLc8Iq
fPSAQzvlqgXjds/Vg28G74FnzazTf5dcc75zrhzmHh82vyl4rnPl+m2BZlbh
4x656sKVfULvnWtmYNaIXDN0sG1Ys1fo4bnm+BDH4BS+YbmYRA3WwbX9Qu+b
a1apd2AunuGjH4wkb89c778OqXLxo7ENj1rb8CYNSXLd72khp/ounmYb1mRe
19lrR+aaMdaekothI32Gud2zzMVI9niAnxe+IhfDcted0z5s5uB094at5O2f
i5Ud3jfsODzksFyMGRtyRC5WjQ45NBdriI/JdUfGhxybi2tjvA5uHel8mHVM
yLhc3DzKsaWdR2wR96E3XDk+5LhcczklZHIudky1DVNODJmUi5fsa1Qubo7y
eWDMCSETc7EGPSEXzya4R0/XYF1vP2968K3j2XAnVnb/k3PN+Unu3d17HO93
82wuHjFXd4Xcmeu+3hNydy52nB1yVi5GXBRyYa5Zutg2bDozZHquObvEsTXt
OyMXj87yOlh1bsg5ueaMehfkYtU57tfHebx72HFNyNW5eHGtbfhxnW3YcVnI
pbm+1UNDD8n1zUYzhzDmcq/bzGtn5GLNDSHX52LYDJ9ha/e8KhcL2OP5uRiG
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
XKt1Hj328HvgWVfu/0qpOX/ZOaV92Af4fE+U4tA7IW+XmoNZ487OUokj74e8
V4olH4Z8UGqWvgz5ohSbiL9bas6+cmyMfdSFTx85n9n6POSzUqz82LHxrkfs
CPehN1z52nXhxS8hP5fix6+2Yc33Id+VYgn621J/p3VHod+AJ9j3Tan5/yPk
91I8+8Y9YNMPrgXXfnOPY7zfT0uxjP4/leLZj86ZbB82HOH5darEa/I+KcWe
P90bjvwb8k8plswUa/8rNWdd4p87V2IT8b9Lzf/slWLT7furFJ9mrpQPg2ar
9P5gJf2JMbfUIwaz/nNvuDJHpbrwYoHQ81fix4KVbFgzT+i5K7EEPVelbxT3
hfmEL/jmrMTdv3xOeIaPHrCpa6VacG2hSj2m+T3wrGED/eerNOfzVsph7vFh
89+Q8t9k8N9r8HuC+8t8wp2FI96tEkeWCL14JZYsFXrJSrPE3yv1qMQm4otV
mrOelWIwD9+ilfi0dKV8Zmu50MtWYuUylWIwiHrEYBZ96A1XVqhUF16sHnq1
SvxYo5INa1YJvXIllqBXqnTXdww9qBJf8K1Yaa7wDazEM3z0gE29KtWCa30q
9YAF7Ld7pVmn/6qVnlfvSjk8P3zYzMBOlXrDa/I4J9xZK/SalbizXuh1KzFl
/Uo2XNkw9AaV2EZ8nUo8Q69diTvEyeHebBZ600oM26TS9xIW4sOGm3w/N6rE
MzQ9uHebV8qHMVuE7ldpRgeE3r4SP7YOvVUlvmwTun8ljrIXzgNfiG9ZiWFo
asEp1pLP3G4XettKbNqhUg9Yz/PgWcMt3gkxeMde2B9zz17I57vL3eTew5ud
Kz1rZmB0yKGVuLNb6F0rcWT30IMr8WKv0MMrsY34LpVmbO9Ksf/nXaW6cGiP
SvnM1bDQe1bi1pBKMWaOesTgF33ozezuU6kuHDkk5OBK7BhpG34cEHr/ShxB
71fp+79IpTmEW/j2rcSXLCStxC189IBZB1aqBZ8S94C57HdoJY7S/6BKLBvh
nE72YS/g5zeq0veAPM4Jd3L3hjt1SFWJI21I470eHnJYJbYRLyud4wjH5rKv
qMShDufzLsf4/c3v/sS6uR6xru5Db5gy1nWZy+NDjqvEjgm24ce4kKMrcQR9
VKXfXIt6X4vbd2QlvhY+52L20QNmHeNa8Gmie3Txe+BZd3f/8ZVYdqxzlrEP
G35NqvR38fDmpJATQ05v4v6F/NGIHaeETK00V2eGTK80Z2fZhk1TQiZX4sHZ
jq1s38mVeDTV62DVtJBTK80Z9c6oxKpT3W8l57GnPo6fXokdl4RcXIkRl4bM
qMSe80POq8Qg9Lkh89TxfkKqWizDd04lDs1wLWb68pDLKjHoAtfq6z4XVWIV
+sJKrLrQ69Z1Pc68hvd4WqVvwGk+5+auzV7hxfUh11VixG0ht1aa7dttw6dr
Qq6uNPd3OLa1fVdVYhY1rq3ErBtDbqjEd+rdUolPN7jfVs67shIXHgx5oBIn
HrINax62DTPuDrmrEi8ecQyGXuHnBYPu8brdvPbOSqy90ut2tY8z7Ome91di
xKOuO9S++yrx617XHWIfNrx5POSxSnf965CvKt39b2zDjqdCnqzEj/+FPF1p
fl4KebESj4g/UWm2XnZsf/voAZOecT7z9ELI85X4+KxjmesRG+E+9IYlr7gu
jHg35J1KzHjPNnx5I+T1SvxAvxbSNe5o4/ta2/dqpZn/MOSDSgx71T3g0Zuu
Bcved4/E+32uEr/o/3Ylhr3lnEPtw+Z3B/fl5kqMfs7nhDcfuTfs+Czk00r8
+CLk80q8+D7ku0o8Iv5Jpbn9wbGj7fu4EpO+dD7c+dbv73i/T2KTXI/Yse5D
b3jwo+vCg79C/qzEj79tw45fQ36pxBv0z5W+S9wd7twU+36qxNqPfc7J9tED
Dv3mWjDuH/c4wu+BZ326+/9Rac5/d85p9mEP9HO9qdJvCDSzCh//dV240jne
+Wy1ZgZmzV1rhrgT2LBm1tCz1JrjeWvF4BS+TrWYRA3WwbXZQ3epNavUm6sW
z/DRD0aSN3Ot979Y6EVr8WPxWjY8WqKWDW8WDL1Arfu9Qej1a93FDWvZsGah
WutgE2vnrzVjrF2vFsPmq3UGng09F6nFSPY4Z63nhG/hWgzrVqsuzw4fNnOw
Ua3esJW8OWqxcsla+4Ydy4VethZjlg/doxarlgm9dC3WEO9e6470Cr1KLa7h
Yx3c6lkrH2atHHqlWtxcoVaMu0UeMbhFH3rDlVVD9641l+uEXrsWO9atZcOU
NUP3qcVL9rVULW6iOQ+MWSP06rVYg16tFs/Q9IBZ1GAdfOJ504NvHc+GO8F8
03+tWnOOpjfsY4+9/G5a84i52if03rXu636h963Fjs1Cb1qLEf1Db11rlrap
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
h/wfZXIFfw==
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztmjHut9lSnEdGjiEmu4ljB44Z1sASLBEjXcmJF2A5dOBdsAMCxBrIYQGO
ECEJtvQ5uMmRbmu6v3qefnuS0b90VF1d3adPv7+Z3/3Xv/mrv/4Pv/zyy3/+
b7/88if/79//++//7Pf//O//9Osv//+ff/3z//iPf/pf/tevL/zHX//y6//4
3e//7b//xf/59W//0//8uz/9y39oO9+Fp+LS8JcPVXza52meFP61e2TJi+aD
JS973MuLma+Fp4rT+iQVl6anq16pfpj2rSvflE7anKGdt/t/eX0zrgWv+tPl
Z4rndb6K2/O19BvtnbLot+xRqbxo9Ur5Nu0/Dbfnm9Jv9+3wn9MPVdz+Lnxt
D+86T+Oh7UupvOx9TusHmv8032h5bdVjj7tVfxd+89Olv+s8jcdyL2j98DV+
i/9VnpRvlrps1WPJ1+7bS38VT80Bmk5an3T5fHsU8/vC0oc0nam6WPyn1dfi
W0rn1+LS8nqdr+KWd82+R037P90/X9ujaHPJopM2J2lx7f5vxVN1uX7o9a3q
Z5Wni5/2O4Bl7qX8p/UhbY+izT07Py0uTb/Fh6rOrXl9TY8Ff/lW9bOLx75H
TftguS8p37rymuZJ5WXvk/PHxf+1vcjivyXflD9dOr/GQ9Nv6U+abykf7HvC
ND9t7llwe152/V/L6/K9Peq38HT1CS3u7VGu3/2m9dv9OdxVl6vvDn+mddJ8
qOp5nf8aT4q/q3+69NP2KMv874pLmw92Pal+sPhvr+/hV0cC/vKn6pudJ8Wf
8sfSP/b3l/Z9ZNFPw2n6p/XQ8qXprMY9P13fQa/zVZz2ntJ8oPlMmw9dPF+7
v3b8a/luxS117NJZ5bH4s7XuKR+6/Jn2uUt/lcfCT7tHtHxpPqfyos2frTot
+Vrwqp/n/zd96Mr3xVPFLTq79Kfyos0Tmg8p3+z3/d6vHfrtOg/fgf/4i99v
XTpfPFV8ei5N45b3fes7S9M/7QMt7ladh7vmz9fw822H/y+eKn57VNYHe39O
n6fNN1odaf5bfDjc5T+tvnY9NP20vuqK21WXaXzrHjV93nK/Uj5s9WcrbvGh
S6clX5pvFj1V/pQ/NB9o/dBVx2ncss9Mx6Xhdv20vCx+VnVOn6fle7gLT9U3
FXcrXvXzdb4Lvz2KGXfrO0WbS9P+2P236z/fdtwjO07zJ6WnK26V53W+C789
ihnX8vtAKi/avabltVXn+XD5Hv6duf3i78q3C7fvUV/rty4e2lxNxb28XDoP
/yb+46+be19716r47VHM30lo97GL36LT7k/KB4sei06anq/1rcU3i/6ufKd5
UvxdeqbjTte9y3/avUvFtei8PnH1CW3O03yj6bHjND9TerriWnimcbseS30v
7s/RmeoTGr41r8N390OXzq08tLgpf17nUzhN5+1RN8eMOml9Ys+L5qe9jhY8
le903BR/Ne70efseNV2XaZ1deVneI3u+Fp3Hw+yHVNzDd+A//uK8R9Xzl5dr
j6LpsdTL/i7Q9NjxLj+38tj7kKaTpofWh6/zVZzmPy0ve32nfaPpSd3rVJ/Q
7i9t3p4PO/rkazqrPDR/LPqn49L6oYrT6kvzgbbfbu1/S1wLbvGnqtOSl+Ud
+ZrPtPpWfZ6u77TOLv2W/YFWX5oP03Fp8206blddaPlurZddJ62+W3lodaf1
edWH6frS+FPnLfrtPtD8t7w7Frwr32nfvlYXGt7l/9fquDXfV15V3LJH0fK1
66f9LkHrN9qcSdU31Q9b/bHj0z5fHZn1otWlqud1vorT/Kf5QDtPqxdtj0r5
aakjbY7Z9dDytfu5Vf903Cp/lx57Xq/zVZzmj90HWl9Z4tLqdX3FnKs0PXb+
08N83y0+0Hyefnem6z593uKDpX9o72yqXl16rq++iU/7SatXl54qz+t8Fbf4
bO8TGv7ypwun7UWpe2SZG6m5ZKnjtA8pnZZ7SsOn87X4WdVJ8+11vorT6vI1
vKsuVZ7X+SpuuXdd+ab0W+ZtyreuuLT7Ne0bra9S+dp92Oq/5Z5ef7rqvvXd
uT1qd/9M+0ar13TdLfpTPtD8tODVfLv8Sfn8ilvFU36m/KfVi9b/Fj9p94XW
53Y/u85Px7XMB3vf0vzZiqd87or74pnGbz/Z0Z+peqXySuW7ld++f9L6xN4P
Fh8sc9KCp+o+HXcat/hg7/NUn1h8pvFP66H5M91vqX5O1Z3WP1vx8/n69o/R
P43T3h1aHWl5WeqbOk/rH0v/V/2crtd0/3yNx9JvFv1fmw8W/S/+aXzrHnU8
2d9naOftOm+PctWli5+Wl90fu/+W+lrmVRdO6x9an9j1pOpi9+1r+MufKk7j
t5y/d/lwct0telI4zefpetFwWl1S/UPrw619W63vdD9M89P8p9V9a9yv5VXV
M33+9qgdexSt7pb+p/k/XUeanq56pfDp/ZzWb9PnaXEt95Tmf+o7iNY/0/pT
dbH4bOexzO1U3W9eMX9fmvbB4ufWfeBreJdv0/6/+Ks4bc5P60/lRcNpeU3r
ma779Pmt/ldx2vxJ4bS5l6rX1/DzLfsdV/V/+vzWParLB9qeYNGTqrvle206
L8u8+toetbWv7HsgzWeanq/NpS4/p/VbfLDjW/uH9v04zb91Xln2KPu9s/PQ
5uThP6f/q7jlPk77Y/GB1rdbfUvx2H2zzCv7HpWqe6pP7DwWPJUvLW6XnirP
dFyaHlpcWp+n9NN00vTQ7m8Vt+uf1mmZq1+bn5a5bdFT5Xmdr+K0vGj3vUu/
pd+6fKb11dfOW+J24Xb9XXnR/LG/7xYfUr516bTwTNdluo6WvGjnLf1jn7f2
utv7zaK/K99pnq/d6+k++ZoPtP1nmsfyLkz7Zjmf6meaDxbfaPnS4qb8pOm3
vNeWvCx+bsVfPlRxyx6Vqrsl3/PT1Vf2ObB1ztP8TO3PNH47jyUuDZ/24cXf
FbeLf1oPzc+Ub9P+0Pa9lM+0enX5Y/eTVhdL3e99Ye4zW+Om6vviqeI0flod
U37SfKPp7PKT5hutn7t8pvk5XRd73S3flVffHXFpeXXpqfJX406ft/tJ842m
M+Wn5d2v+pPCLX5a9orpukzz0N7faf6Ly4xb1VPl6cq3S6dlP5zmp82r1PmU
Pxb/abjFT0sfpvyfzrdLv/193xqXti9Vfejiod07i5/TPkz7Rjtv8ef2qB31
SuWV8jnlf1dcy/6Q0rPVhxcPjT+l8/Yo5v1KnU/5OV2XaX9oOK2faX047fO0
P/Z32a6H5oNF50tPl84u/mnfLD7Q5tt0XWj3gsbTVS8LbpkzKT0pn2nzwaKT
pud8+Dlz0nJ/aXPP7gPtvkzXhebndP9YcFp9aXv4tA9demg+f21POD23R91/
v7u5ZH/Xbo/KfgdN66HV1z4HaHrs+ml6aDpfcbtw+/5wPjD7k/Y9nvLH0v9d
OE0nbT7T7pdlDpx+F57y5xV3Gt+6P6R8oL2n9vsyXUfLHK76kMJp+mn7vH0O
TPPb5xUNT+VLizuN0/aTrXvUdF9N82+tIy1f2nyg1TfVD1v7kDZPTv+OfFN6
XnGn8a3fXzQfaOdp9yJVR9r+Q5sPX9Np+R1y6zto943mw1Y9r7hdOM2flM4u
3yw+0O5L13ma/7T+SeFbddL6gXaeNmfsuL1eNN+6cNo+Y/HT0ucpPSnfvuZ/
1YcUTtO/da/u0knDt+Z1+Wbn6rTPFp32/ZNWR1r/0PYoy3kaTrunW+9jygfa
eQu+Na/UO566F9P8tP2tC6fNhy4e+x61VSet/6s4bY+argutb2n8W/Gqb+dz
7xyw1GU6r2keWr3s9zflGy1fy5xJ4V/bo1J9QtNv8bnKY68vra+6cNr70qWf
9o7T6kWr++1RzHeq6jMNp9WlK669ryx6pvOi+WbBq769znfhW9+XLv5p/1P1
stc95RstX/v86cJpfU57Ryz+dNU91Sdb++FrfVXFLe9LV15b34tpH2j3N5Wv
Red0XBpO89/S/xb8a3X/Wr727z7aXpT6Tkn5TJur03Wk9Q/Nf5o/Fnzru3A6
XfPwfn/b/b5b5vbW7+vU72y0utv7x8Lfdd6C0/rTvp9M65z201Ivms7pfC17
FE0/7fw0TvOfVhdaP1jmDO17MIVb3hdLn9j1T+uk8dP0WPberrgpflq/TeOW
/qHd6+n+scwZS/9M47S6VPlpfXL3iIlXfaCdp71TNP0p/1M+b/UnpXPr7wY0
ndM807jl/bXETem0+EnDp+tL87lLz4uny5+Ub3Z/unDL72mWPWHrfJ7uB9q9
SPUDrX8sPlh8tvs5rT/lM+0dpM3VVF+l/J/WQ7vvXXFT+mk+0PS8eFK4/X2x
9NV0/9DuLw1/+Vb1c/o8jafq2zT/8XzzXejSb5+3KT3TdaT1f5fPtP453FWX
lM7puFX+Lj00P6s4bd7Svpdp7wjtfqX0p/K1z5PpeqVwmp8WPbR8p/XT8FS9
aD7TfOjyrSuvlJ6UP1+rF02/5V7TvrNoe7WljlvzosW16Lf4U9VJO7/1XUv5
cHuU6/cQi/6UD6n+t88fmv+HM/Gv1fFr+dK++6o8Xeen9XfF7eKf1kOru2Vu
TOc17fPr/DTPdFx7X9H65Gu43Z/Tz9yjpnm+Nudper42t2l6bo9y9TMNt+if
1lnlt/i2tV40/a/zVfz2qNuj/vA87X6l4lp+7+o6P82T8uf6ardOiz+WPdPu
Q5Xndb6K3x7F3KPs/UnbE742Byz3y/6+WHQezsSvvtk5/+Kp4rdHufaorv65
d4eZ17T+1/kUj6VPaPfxa+/dVvz8Yc69Kn571O1RfwzeFXeaZ9rPaf8t+mk8
tPtyOpnv9eHMPkmd78Jpc3Jaf8q3lJ+0eTitv6tetL2Fpj/lA81/WtzT79rb
t/pMw18+d+GWeTvNk/LNct+34qn62vdGi2+WvqL5Zq/X+cbUT6tLF27P1+4b
zeetPCmf7fuMpb52Hlq/Hf5N/Mdf3+mTV75VnPauTeun+dbls4U/pYdWx67z
Fp2Wfrbr+Rpe9f/qtbufu/S/eKr8KT3T+lNxt34Xp/Ld6iftXm+tLw3vymur
P5fv4X8M/uOv26Om9afiWvrHotNSry49qXxTfk7Xhaaf5lvKf4seS15V/q0+
0+pyexRzHtrj3h7FnA8pPy/u8UzwWO6dPe7W/YE2h7vy3er/1rh2n2n3rsvP
r/Uhrf9p7+a0zsNvX/oteXXhqXvUpcfCb5ljlrjTdbe8X9O+WepCexdSdaT1
+bT/qby29o+lT6bztfszXXfa+2K/j5Z7QdNJOz9d9+m8aDy08xbf7HWhxd16
T7vOd/lA88fyu1aq7rT+tNwLmj+0d2SaJ+Vziod2nvZe0/qf5vN03Cpu98fi
A60fvrZHTftsvxe0vYiW7zRPqi4pHtp5+/z/ms9fq2+qjlX8az7b300av/1e
0PoqVa/pfO11sdSX5s/X5gxNJ22u0vyp5mWpl2VuTOdl8Xnat67zqfqm+qTL
h9T8sdSlykPTf/yufY+2n3Tx0M6n8qX1Ca0P7Xpe/NW4tPMWHlq9uvhp/UzT
ab9Hdn6LzymdNH+m87LU19KfNH9o84d2Lyz50n4XSvHT+orGM91X9jlzOnd8
R6fuES1fGo99j0r5YOlDmp8p/mn/U/Xdiqd8SNXra3VP+WyZJ7S9zpKvhYfm
c5cPqfv1NX8sdaHxW+YDrR8seMqfr9W3qvN1vorfHsXstxRPl5+0PaGrf7pw
iz8WndP+p+preddoeU3Xhea/Ree0nq46VnHa3NuaL+1+pepFm6vTOG3+W+Yb
bc/vimuplx23+DOt0+ID7Z2a5rfkS5vztHtB8zOlpwun9Yldj32e3Jxx9dVW
/Px3vYOWudeVl52f5meXHtoeNa0/dZ7Wb5a60OYALa+tOmlzfqv+1/kunHYf
p/352ntEq8t0n2/do6b7596FHXWZ1kOrl0VnlWfaH0t/TvvfhdP2CprPtD60
+JDqh9Q96srXcp42Vy352udSl57pvLb6ZtdZ5e86P43T8qXVxaKH5ieNJ7V3
0fqENoftfXJ5MfcoWp8fzpwPXTgtX/v9nean+fM6T+Ox5Evrk2mddv+neez1
srzXh7vel9ujmOfvnjL3W1qfpHTS6kWbw3b/U3q+1icW/VvxaX9e/NM47T2y
14vWh5bzVdyif+t7cfvGjv6hzXMaDy1uyp+Un5Z9ifYebe1by3xLna/iNP2W
eUibb7dvMOtuz4vmDy1uSj/tHanitHll6Ydpfpo/qfOX747+n84rpYfWP7Q5
s1UPTafFH9p3VhdOm1dd/UDjsc/blE4aD+27iTb3UnN1ul60fttaX4seSx0t
/lTx26OY7779/lr2mdujfs593zpXt+qf1vO1d5/WD7R5TvOnit8etWPOW+aA
pe5b9dvvO22u0u7ptA+Wd9Y+V2l6aPWd5qniW+cqjYem374/TPu/Vb/lvtPe
hWn/7e8aTc/5wHwHLfqruGWuTp+39I/9HaHxfE2//b5XeWj9b5nz9v1hOi87
TvOZ1idVPDVXaT7T6riVp8vnVH0tfTKdbxdOe99p+lM+0HReXrv9Sfn8ilvF
aXsUzU9L/6R4puv14p/WSYubqmMXTuvD6bwsPtDeZZoPqbym87X4c3sUc25M
+/O1Pkz17dY+oens4qf1P63faP5s1UnDX75V/Zw+T9sz7e9Oip92f6frS9NJ
69vpPknVt+t8isfSh5a5lOJJ1etrel480/Wa1m/3ebouKX6az7Q+ofGncJoP
tH3Vch9p/qd8oPHY95ar7+663B61Y49K6afxT+OW+0j7ncQ+z6f5t8Y9/Tvw
aR+q/DQ9t0d9c4/aeu+mcUu+tD2qy5+Uz7R3zX5/v6bTov+lp6pz+rylLlU/
p/1P8Vveha08tP605Eubb9P+0ObnVj20vOz+0PS/9FR1Tp+383ThtD2K5jPt
vabNh+k+2ZoX7fzW/jw9u+v4ilvVk/Khqn86L1o/TPN0+fy1+tLmgEWPpU8s
/k/7QNNPwy36r46uOZOKS6tvyk9a/2ytL63uKR+m863i9jlj0WmJu/XeHf5z
9ijLHJg+b79f0zxVfLo/u3gs9aX1uaU/7TqneWh1t+jcim/1oZrX63wXj6Ve
qX5IxU3t4dV8p3m2znmLHlq9aPOnGjeVr8VnWr5b/bHr6eqHLh5a39L8p8VN
9Y8lr61zgzZ/LPpp98ju//Why7etOqv8r/NdPLR6bc2L5g+N5/qEOX9ofZ6q
I00PbZ7Q+mcrfv675klXvWg6U3nZ301aP3ytT7b2g6XuKT20frb059fuBa2O
tO+aKk7z36LT3s/TfZKqI00PbW7Q+i01D2+P2tEP9neH5gMNn/a5C6f1yelk
9hVtb6nGtdSL1ic0nFb3rrjXDzv2scOZv4e8+Ku45f6m/J+uI62fu/pnmufe
Lyae8odW9y49031C45/Wc/iO+WDRQ+NP+d8Vl6a/C6e9I5Z6pfrB7luq32g8
tLrT+uFr+dJ8tuu09E/Kz5TOFM/rfBdOe0dS9b37+HN4unBa31p4LHHteNW3
aZ+vjrvrQsvLErcLt7xHW/lpcbf2rX0upfohFZfWtzSdl9fhV9+f/+5UfZ7m
ofXJNL9dD62fafvPdL1SOqfzoulM5WvBaf5U9aT0T8ft4k/xTMedxml+2vvQ
ome6LtN46v5a6mLpc7vOrfot+PnM9LPKMx13Gqf58LX7Ys/rpX8avz1qR/98
LS+LD9W4Fp2HM/GuOr54pnHLPTp+Zj+/znfhN/+Zdbfw0PBUXtW4Fp12vCvf
ad/sOqdxWj9b4lr83LpHTfPQ+seih8azFbf4Y9F5OLMfus5P47R52BV3q06L
D104rT+/1g+H33w4/PrEgr/8nMbvfXHtb7T7++Lpwmn50upI62eLHsv9suR7
fc7UY8Grvr3Od+G0ftjKQ5u303Ff56dxms+0Olrypemh8dP6IRXX4s/WPkl9
R9vjWupL47HjVR9e56fxr70LW++dJV+anyn/v5avBX/5M12vaZz2u1OXn7T7
aMdTPrziVvVUebpw2nym1XFrvjSddj9fcWm+2X2m1bHL/2n8a3vUNP/X5hvt
d6TU/b35vDsurR8s95eWbzXu9Pmv9dsrrh237/+0Ptmab1c/TJ+nfQdt7TeL
D116aDyWvYJ2r2n30X5Pq/5vxWnvJq1PLPPE4meVp+t8F06rI01nygeazxZ/
qnrOB+Z5Wj/TcPv39XQ/0OLScLv/VZ7X+S6cli8Np+mn1cXOQ9P/td+pLPeC
hqf6pEsPre5b9dDqUo3bpbOqx6Kf1lcW/Vv1pHho+mk6p/Oy+EPD7e/X1v6c
1kPLl9aH1bhdOmn3iMbTFfdr98XOQ4tb5U/5YH9PXzw03PKO0O7R6XfN4SrP
63wXbpn/tLlq72cL3pVvime6XnY9lnxfPDR8Wr+lT2hz4PDeelX9r/JY+iSl
czovyxyw6En1iQVP5ZWqezVul86qnhROq9fWvk3p/5rO6Xp1xZ32mcY/XZe7
F0x82jd7P1R5Un6mdFb1pPDp+k7X3XLvLPi0P138L54qf5VnOq593lr6k+an
Xae9D+0+b/1O7NI5nS9tj0rVi9bPdj3TPFX8a3uUBU/5sNXPr+Fb61jNq+t8
FbfM/6350u4FzbfUdwdtbnThlriWfqPxWOKefpcPKZ+rcbvOV3HaXjGNn//M
/Y12H7feC/setbUftuLT/tD8T+n5ms/3jt8eRfDf3v/2fbKrf6b7ZFrPtH77
vbD3/7TPX6ujpX9o+8/WdzyF0+pomWOpfrDfa8veMh3X0p+0d4fGQ4trySul
0+6zPa8u/hdPCqftUfY62vcoS/9M6+zy8/p89+9s0/wW/Hxg+vw631WvVN2r
eXXhlnk1XZdU3Wl7C01PNe60zhQPrc/tPCn/afi0D+cz0+fXeRqPfY+azsvS
b1v7/Pao3XOmq+4WPOWPJe7X5u1WnZb3pYuHti/R8vrave6Km/IzVd9q3JRO
i2+0/qTpv3myY97S9hCaz9P9M62ny//pOk7nZZ8Pdj13X5g6b49y7ScpnYcz
59g0P63PU/l26bHkdXN4x1xN1eV1vgunfUfcHsXsN/u9Ozy7R9H6fzrfLv6v
7VG0+dDFT/PNov/F06WnC6ftUSn99ntHw2k+0Hjs/DQe2lzq4r896uY5AZ+u
++t8Fb89irlHpeLa7wVtjln00Phf57t4tv7+Nu1Pl54u/bQ5/DX+rXOvK26V
v0tP1/npuBYeWj+n8kr1A80HS75deqbjvs5XcRq/ZY/q6hNaH1pwuz+vuFU9
VZ6uuPY9arruqb7ael9o+Pmwe++q4pY505UvrV6WvqLNH7s/L54uPV243Qd7
n1vytbzXlrhb62X5/prmp+mhxaXNPUtcyx5l0d+F2+fD9Q/z3bTnO61nK39X
3C7+Kk8XP00PzYeb88y5R8t3ur5duH0+3P1y3Qtavlvjpvircas8Fn77/ml5
H2n3xe4Dbc6k9Ffx26OYfZKKa5k/NP2WuDT9L54qTuPfun/S+pD2XtDwaR+6
fEv5/4pbxWl+0vTQ8rLfu8OZc8Myr6r6u3huj2L2Z0qn/d7R/LH0j/28pS40
fruew131ffFP46m9Zdofy35484Tpp93/r+m31Jemk9YnND1bfUj5nMprGrfs
USmfaf1Au+/2d8Tiw9fwqj/T57fWkaZ/Wo+F36KTFvfFP41b9o2UD7R+sMw3
mv7DXXPe0p80Hyz6t8bt4k/5s9X/aXzrHmWvu72f7bi9Lpb6VnW+znfx2H1O
+WD37fLa4cMr7jRun1cpPVv7jXYf7XWp8tjrYtGfqi+N3+7/Vj12vOpnl/8v
nmncsrfQeGhxU3XZek/t/nwtr63zZGu9tua1tU9e/FX89ijX/pPqq6339PI6
nID/+IvTD9N6uvi/5htNp6VPbo/K/n/U9j6x6LH7TKvj4bv72Y5b/KnqpOVF
00PDX/5U8a17VKp/aD7T/KHdFwv/VrzqG81nmh7anLn7uKPuNLwrrxdPFbfo
TOn/Wn/a56fdn6/pt8e169/qm0WnpV5f01PFb49i1j2lfzpfu5+0vGh41Yfz
7Zv4dN2n+S3413yu6nmdr+KWPcqyh9Dwaf1V/q11SenZ6ufhNzfI/Bbc4nOK
53W+itv3KEufTPtGqyPtvmzFzwcX3lWvKk9XXAueyne6LrS6p3xO7VG0+96l
n3be7s/XeOz4+cCcw1v7f1r/+ePC7fm+9FfzmvahqpOmn1bHlD+0ulj4LTpp
eCqvrX5+DU/VMRX3a3jV59f5rnp16bG/I6m8qvWl6bTcIxr/13Ra/Dk/D/8t
+I+/rn+mfajyv87TeGj5WuZtNV+aTovPtDmwFe/y7fxn4qm6WPrB4o/FT9pe
Mc1jyZfWh108Fp3T+dJ8+xp+vrnwVL2m41b5u/Rs9dPu8+s8jceS79Z+oN0X
mn6LTos/p5+pZ/o8zTd7vexxLfjLn6pv0zy0fjidzHtKqwvNf5o/NP6v4ecn
8z2l4Xb9qfpWfZvmuXfZtZ9M50W7RzSdp5+pn+bP+Zl9T89/Vz9P17dLP42H
1icWP2n+p3yg+UOrix2398Ph2X3JXvdp/VX+Lj2p+qbytcy36Xzt98Xiv53H
XkcavjWvrb5V477OT+O0uWF5x6fzotWX5j/tvm/1gdYnVxdXvjTcnldKf1fc
Kk/X+WncMj/t/F1137o30uaV3Wf7vTjc1beWuKm87LilH17nqzhNP60f7HW3
z59Un9j1H87s8y49W3loeCovi580f6p6ungs82crnqq7xf+Uzq64dv00PVWe
aR/s9aXxWOLa87L79tJfzavLB7uflrym697FQ/PZzr8VT/l29Tr8D/Eff+3r
h615Wd5TWl268rW/s6m6W3ho95Gmk4bbfevSb/fBjqf8n46byovm2+t8FU/t
UZZ8u/hp/WPZn2k+2/Wn+oSms8o/fZ7WP/Z8aTw0PJUXzc+XnipO24to+ab8
pO3htLpb7vU0/70vzHxpPl+9mPlu1U+bt9M4bW7Q9pyuvKZ5UvWi9QntXl9e
zHtt8a1LD43Hjp8PzH6exi3vY8qHFE+Xb5b6Wu6jfa7S9Fi+X6Z9S+mh8Ry+
+15v3RMs9yvlT4qH5tu9LzveF4ue8/+beuw6v+ZPV9xpnipO02+Zt/Y9qou/
Ky6tf+zzjcYzvfd28dDqm9Jp6YfjYd5rC/7yoYrT9gHLvLX4b/GTNgdoPlvi
fq0PaX7a9XfFpfm/NS+7/peeKk7bQyzz1u4/7Xc2+32k7TNf8+d83v2unW+X
12/RP41vfX+n46b8T9WRhk/nZfetS3+VJ3V+Oq6lT1I+0Pr26u7Kqxr3dT6F
W+7jtM+WPepr98vSb7T3zlL3rry2+kOLa8ctdf9afav5vs5P45Y5P62fVi/a
u0m711+LS+uHaZ6teW3tQ1qfb8W7fKDxWPYoy3ybjkvjT/m59V5b5ljqO4Lm
Q1e+0+ctfUK7L/a8uvRcXrv3qBQ/bY+anv80P+33xT5/aPWaPk/joZ2n9SHt
HbTo/5rO6bhV/tf5Lvz2KObvTik/affFcq9p+i/fHe8FTY+lLna8yzcaD60P
q3jqdxVaXab1T+MWP7fGteix51vlp+nZ+t5N8x++G//xF+d35iqe2gdSftp9
o/m5dW5P89PmkqW+KZ2pfrDoT/mz9X5Z8qLhXXWp4pY95PYopp+W+2LHU3Wn
7WkpH6b9tOPT/pz/59vP9KeKW/aQr+1RtHu0lcdyf+06u85Px6XxTPfDNL9d
J61eFt9oPr/OV3HannZ7VPZdoNXFPh9SeU37QMsr5Q+Nh1ZfS752nTS8y7cq
T9f5Kr51X7o96t6Rn4lP60/5Q6vv8TD7n5bv1eWbeLVer/Ndda/yp/RPx03l
m/LB0v9f46fNmdS9nta/9b3e6pv9PtrvOy2vVL5VPRb9lnxTfqb83zpXp/m/
hnf5aam7Refh5+cmP6txX+enccu7T8vX8t0xnZflnlp8oPlTxWn6aXW06786
/px5TvOhS8+Lp4rT9gdan6R8mD5v7//TucOHF38XTpsnlnql9NPwaR+uXkz/
q7h9vt0elZ3zqbi0vGj67XG7cEvf0nR+LV+aD1/DXz5P90M1boqf5sPtUbvn
gz2vlH5a3C7cki+tD7/W/zT8az688q360HV+Wk8X/+1RO/aiVN0tPBc3u1/R
+iQV19Inqby26qTpf8Wt4rdHZfcf2nexpc9pOi16LPotvr10VvV35WvxzaKf
poeGW/x56ezCb4/6OXMslW/Kh617EQ2n1etr+Mufqm9dPtPqldJj95NWR/v8
efF04bdH7c435QNtPnTFPZ7dc5sWl6azym/xjYZ3+UbrB5qfVTx1X6b1dMWd
zpfmp31OpnSm8rXo2ZqvxedpnTQftvYDzWcaXvXHUq8XT1e+Xbh9j9p6H1P1
ot0XWl1oeMo3Wr3Oh9150fTY9Vf1vM535VXln9Y/HZfmw9f6lpZvV1xavSz6
vxaXpmc6bhf/Vn8Oz/ZPlb/KszWuZZ7Q9FjwlM8pP2n6U/5/rV4W/7v4U/Wy
9wMt7tZ+7sItce312npfLHWx9wPNN0tfWeLS6kjTc7jrfanyd51P4fY9itY/
p/PmP1mPHU/5OR03lZdFj0X/dFx7XW6P6v3/u762b9P4aXFp+mk8h+/oK4v+
VL40n7+mZ7pPXueneabxVL60frPkZbmPp5859+z5fs3nrri0PrHU8fy/Pcq4
R3X1WxfPVtziD03nVj12HlpdaPW14NP5bvWzK68qz/T526N2zENan9Du3dfw
8+38+XK+N/eYPJa6d52n4Vv3KBqPJa7lPm7V0xWX5udWPOXzdNwqf5ceWl5f
q6NlH6DhtHuRinv4jrlh12PJi+ZbSo89Lq2OdpzmZ5eeFM/rfAr/2v5D46H5
bL/XX8Npvp2eHf3w4qH5Oa1n2k87T6qvqjxduKVe0/VN9Y9d59WFiX/NN1q+
VT3T+rv4XzxVnOY/jX8r/vKty88qf0oPzf+vzTEavjUvC37+n58Ef77m23S+
ND+79Lx4qvxVni6cVi9an1jy/ZpvlnpN18VS9y6dlnzteNXn1/kuHlofbu3P
lP5X3KqeKk9X3Ou37PtI88HimyXfw13+0+qb0lON+zrfxUPrQxre5VuK53V+
mmc6Lq2+W3G7/1ffw38L/uMvTv9s1TOd14u/GteSL00PLV9a/3Txb61vl8+W
fO16tvpwPp9vE/l2+TPNU8Vp+XbFtfQVTWcVp/F/rY4WvMvPq7tLpwWv+nn+
75gDL54qTss3pZPWJymfp/tnmv9rdaTpP9zVbzS86sP5xpwb03WZ1knzocpT
zYuWrwWf9jnFT6t7Ki8LvrWOdj9Pvwvv8i3FM33ewpPao2h9SMOrfnb5P11H
Gs/XcJpv03pS+dJ8PpyJ//iLMw+rPF1xLT5b/LTUcTrui78Ln96jUv5cvzHn
ydb5affz/NmB233u0v/iqfJPn6fFtdT39ijmfKbVl6bTjk/7Zq+LXT8Nr/pp
8X86ry4fXjw0/Rad9jlT9Xm6Lql6pfzfqtPuQ5WfpsfuvwWv+vA6T/OzK6+t
fdVVR9p5+3xL8VT7YVrn1j6hxT3chf/4a1+f2POq6n+d7+Kx+EDjsdSRdt5S
X9q9tvBb6mvX/7X7ZX+nLP28Fe/yZ9rnF38qLq1vt+qknbfgr7yqeOo+buWh
9QNtPhzu6gda3BR/NS5N57T+rnxpOi1+puplf6e66kvL166TxnM4089pPbR8
U3m9znfhtPpa9Fv2h5SftPNb407Xl8ZDq4uF53DXu2+PS7sXr/NdeCrfLp20
etHe8VQ/0M5vjTtdXxrP1jn/tXftcFd9LXFvj2LO25QPX9ujaPeL9u501ZGW
l4WHhtP8ofm8NS8LXvVtul7TuCWvr/3usVU/LV+7n1/Tb9e5lcc+Bw5n7rG3
R7m+o2l9larjtJ80PZZ+OPz2KDLP9TnTnyp/l54Uz+v8NG7Zo7r0WH7HSPlG
O2/BaT5Y+Gk8h7v2hMN34z/+uj2KpsfCP+3/zb3d/nTptOR7Pl9ehLinPztv
X+en8a/tUV08tHztPtvj0vCUn5b7QuuflM+WPrTEpel5xaX5szXfrrhdeU3r
odWx67zFZ0t9afPB4sNLTxW35EvDu/yx+Dyts8qf8u0Vd1p/yv9UvpZ+tvCk
6kjrny4eWn0tPtDwlw80n69eO/DpOlb5u/S8eLrwyzf7/tL8t9SX5pudh6af
1re0fSlVXzs/jWerP5a51IVfvq58Lf1veS++5jNtf7i8mH07fd7is30O0OJW
+afr1YVb6mjP16L/fHC9dxa8Ky8az9Xd1T+Hu/Cuur94unDavNqar13/1/ao
aR+2ziVa3MOz/XN133F/LXl1vTu0vKo81Xy7/JnOd2u9UvuSxYet79G0P1vn
+eGuutD6gabHMg9f56fj0vzpwmn7g71eqT1q2p+U//b62vM6nd/EU3Wpxp3W
2cU/nVfXeZr/t0d9s17TPtjnydb60nRa6nX+74hL6ys7Pl13Wp+8eFL8XXos
PtPqZd8np/kvL9e7ZsmrymM/f/jhf4j/+Mvbny/+Lp3TuH2+0epliUub56m4
lry2+nO4C//x1/Wh/Xu/ypM6P83ThdPmf1dc+z5Di7tVJ80HO07Lt6rn9Lv6
pytfC0+XP9M+d/kw7VuXP7S+mo5r6asuH+zzjZbX13B73Wl6LPpTdbfkS9NP
y2s6bgpP1T3VVzTf7HWh1fH4mfPT/l7QdFryOjzbP1W8i//2KNc+kIpr0UOL
a9Fv94d27+z50nS+zr/w/wub6fHK
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Zellen der Stra\[SZ]e\"", TraditionalForm], None}, {
        FormBox["\"Zeit t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[1], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox["\"NaSch: Grafische Darstellung der Stra\[SZ]e mit 100 Autos und \
p=0.15\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 300.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0.`", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.2\"", ShowStringCharacters -> False], 0.2, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.4\"", ShowStringCharacters -> False], 0.4, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.6\"", ShowStringCharacters -> False], 0.6, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.8\"", ShowStringCharacters -> False], 0.8, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.0\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                   "GraphicsLabel"}, StripOnInput -> False]}, {
                 "GraphicsTicks"}, StripOnInput -> False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             
             TemplateBox[<|"color" -> GrayLevel[1]|>, 
              "GrayLevelColorSwatchTemplate"]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"Max", "[", 
               RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.899887002318115*^9, 3.899887675242776*^9, 3.8998881635333033`*^9, 
   3.8998887388997526`*^9, 3.899890458629571*^9, 3.8998908092108264`*^9, {
   3.8998973794014387`*^9, 3.8998973907501783`*^9}, 3.899924227926824*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"97339e00-aa29-4783-82c0-53d8cc8d4747"]
}, Open  ]],

Cell[TextData[StyleBox["Zu sehen sind mehrere Ansammlungen an Autos zu Beginn \
der Simulation. Von hinten auffahrende Autos werden ausgebremst und Autos am \
vorderen Ende der Ansammlung beschleunigen, weshalb sich die Ansammlungen im \
Laufe der Zeit in negativer y-Richtung verlagern - es bilden sich R\
\[UDoubleDot]ckstaus. ",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899567950143671*^9, 3.8995680247073193`*^9}, {
  3.8995680975638075`*^9, 3.8995681301280804`*^9}, {3.899568170297575*^9, 
  3.899568291691476*^9}},ExpressionUUID->"01f2a765-3945-4d79-8ce4-\
6c029ef902a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Dichteplot",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"e004bcce-3c9b-40ec-b809-b72bc6c6cfe3"],

Cell[TextData[StyleBox["Der Dichteplot, so wie der DensityPlot, stellt die \
Stra\[SZ]e \[UDoubleDot]ber die Zeit dar. Hier werden jedoch jeweils eine \
Anzahl von avCells Zellen betrachtet, die Anzahl an Autos darin aufsummiert, \
und dies als Wert ausgegeben.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899568519778651*^9, 
  3.8995686300226135`*^9}},ExpressionUUID->"fd1fb932-e995-454a-8485-\
6601910c91b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Dichteplot", " ", "\[UDoubleDot]ber", " ", "Zeit"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"dichteplot", "[", 
    RowBox[{"Modell_", ",", "nCar_", ",", "p_", ",", "q_", ",", "avCells_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "anzahl", ",", "laengen", ",", 
       "iter", ",", "t", ",", "cell", ",", "nasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Daten", " ", "Eingabe"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"p", "==", "0.15"}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"!", 
             RowBox[{"nCar", "==", "100"}]}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"nCar", "==", "100"}]}], ",", 
           RowBox[{"nasch100", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
         RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
         RowBox[{
          RowBox[{"vdrNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
            "q"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Liste", " ", "Anzahl", " ", "Autos", " ", "innerhalb", " ", 
        "Intervall", " ", "avCells", " ", "und", " ", "das", " ", "pro", " ", 
        "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Anzahl", " ", "der", " ", "Intervalle", " ", "avCells", " ", "in", 
          " ", "nCells"}], "=", "iter"}], ",", " ", 
        RowBox[{
         RowBox[{"Anzahl", " ", "Autos", " ", "innerhalb", " ", "Intervall"}],
          "=", "anzahl"}]}], "*)"}], "\n", 
      RowBox[{"iter", "=", "0"}], ";", 
      RowBox[{"t", "=", "1"}], ";", 
      RowBox[{"anzahl", "=", "0"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"For", "-", 
        RowBox[{
        "Schleife", " ", "f\[UDoubleDot]r", " ", "einzelne", " ", 
         "Intervalle", " ", "mit", " ", "L\[ADoubleDot]nge", " ", 
         "avCells"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cell", "=", 
         RowBox[{"1", "+", "iter"}]}], ",", 
        RowBox[{"cell", "<=", 
         RowBox[{"avCells", "+", "iter"}]}], ",", 
        RowBox[{"cell", "++"}], ",", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Falls", " ", "Auto", " ", "auf", " ", "Zelle"}], ",", " ", 
          RowBox[{"Anzahl", " ", "erh\[ODoubleDot]hen"}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"nasch", "[", 
               RowBox[{"[", "t", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "==", "cell"}], " ", "&"}]}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"anzahl", "=", 
            RowBox[{"anzahl", "+", "1"}]}], ",", 
           RowBox[{"anzahl", "=", "anzahl"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Falls", " ", "letzte", " ", "Zelle", " ", "des", " ", 
            "Intervalls", " ", "betrachtet"}], ",", " ", 
           RowBox[{"Anzahl", " ", "abgespeichert"}], ",", " ", 
           RowBox[{"wieder", " ", "auf", " ", "0"}]}], "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Divisible", "[", 
            RowBox[{"cell", ",", "avCells"}], "]"}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"laengen", ",", "anzahl"}], "]"}], ";", "\n", 
            RowBox[{"anzahl", "=", "0"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Falls", " ", "letzte", " ", "Subliste", " ", "in", " ", 
               "xnasch", " ", "betrachtet"}], ",", " ", 
              RowBox[{
               RowBox[{
               "n\[ADoubleDot]chsten", " ", "Intervall", " ", "betrachten", 
                " ", "ab", " ", "erster", " ", "Subliste", " ", "mit", " ", 
                "t"}], "=", "0"}]}], "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t", "==", "tMax"}], ",", "\n", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"iter", "=", 
                 RowBox[{"iter", "+", "avCells"}]}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"iter", ">", 
                   RowBox[{"nCells", "-", "avCells"}]}], ",", 
                  RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", 
                RowBox[{"t", "=", "1"}], ";"}], ")"}], ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Sonst", ":", " ", 
                RowBox[{
                "n\[ADoubleDot]chste", " ", "Subliste", " ", "betrachten", 
                 " ", "mit", " ", "gleichem", " ", "Intervall"}]}], "*)"}], 
              "\n", 
              RowBox[{
               RowBox[{"t", "=", 
                RowBox[{"t", "+", "1"}]}], ";"}]}], "]"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
             "Betrachten", " ", "erste", " ", "Zelle", " ", "im", " ", 
              "Intervall", " ", "f\[UDoubleDot]r", " ", 
              "n\[ADoubleDot]chsten", " ", "Durchgang"}], "*)"}], "\n", 
            RowBox[{"cell", "=", 
             RowBox[{"1", "+", "iter"}]}], ";"}]}], "\n", "]"}], ";"}]}], 
       "\n", "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Ergebnis", " ", "ist", " ", "Liste", " ", "mit", " ", "Anzahlen", 
          " ", "der", " ", "Autos", " ", "von", " ", "Zelle", " ", "0", " ", 
          "bis", " ", "avCells", " ", "f\[UDoubleDot]r", " ", "t"}], "=", 
         "1"}], ",", "2", ",", "3", ",", "...", ",", " ", 
        RowBox[{
         RowBox[{"dann", " ", "von", " ", "Zelle", " ", "avCells"}], "+", 
         RowBox[{"1", " ", "bis", " ", "2", " ", "avCells", " ", 
          RowBox[{"usw", "."}]}]}]}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Aufteilen", " ", "laengen", " ", "in", " ", "Sublisten", " ", 
        "f\[UDoubleDot]r", " ", "die", " ", "Intervalle"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"laengen", ",", "tMax"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"listdichteplot", "=", 
       RowBox[{"ListDensityPlot", "[", 
        RowBox[{"laengen", ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Intervalle\>\""}], "}"}]}], 
         ",", 
         RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Dichteplot mit Intervalll\[ADoubleDot]nge \>\"", "<>", 
           RowBox[{"ToString", "[", "avCells", "]"}], "<>", "\"\<, p=\>\"", "<>", 
           RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<, und q=\>\"", "<>", 
           RowBox[{"ToString", "[", "q", "]"}]}]}], ",", 
         RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
         RowBox[{"LabelStyle", "->", "White"}], ",", 
         RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}]}], "]"}]}], 
      ";", "\n", 
      RowBox[{"Return", "[", "listdichteplot", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.899569814128667*^9, 3.8995698143757763`*^9}, {
  3.8998878105581565`*^9, 3.8998878291051655`*^9}, {3.8998878694892426`*^9, 
  3.8998879620639925`*^9}, {3.899889272122861*^9, 3.8998892722747355`*^9}, {
  3.8998907123395166`*^9, 3.8998907131431246`*^9}, {3.8998960663403378`*^9, 
  3.8998960804646187`*^9}, {3.899896879015397*^9, 3.8998968799370985`*^9}, {
  3.899896996502166*^9, 3.8998970077710514`*^9}, {3.899897292299657*^9, 
  3.8998973087168207`*^9}, {3.8998981995759296`*^9, 3.8998982487478456`*^9}, {
  3.8999179590761566`*^9, 3.899917973611255*^9}, {3.8999180263771935`*^9, 
  3.8999180274298925`*^9}, {3.8999182082312603`*^9, 3.899918237465418*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a5e40c58-41a7-408c-90c5-758337d6a1b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listdichteplot", "=", 
   RowBox[{"dichteplot", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", "100", ",", "0.15", ",", "0", ",", "10"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", "listdichteplot", "]"}]}], "Code",
 CellChangeTimes->{{3.8995699979420195`*^9, 3.8995700068141136`*^9}, {
  3.8998872845981627`*^9, 3.89988728668149*^9}, {3.899888649023316*^9, 
  3.8998886696714044`*^9}, {3.8998889053484073`*^9, 3.89988890700301*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e7dd2a29-8209-4b7f-a429-1b417eff5d2b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJx13clq3AF05WGRlaE3XnjhhRdqYYwwxmieh8rQ3Ul3Z563gazzCvexsryP
lEcIIToH9IG8ER+Hu/UPqar+9T//5d/+5l//4Ojo6N//x9HRf/3873//8fr+
59HhvT/hz/gL/oq/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+
xE/4Gb/gV3x478FHf8iOj/6IHR/9MTs++hN2fPS/2PHR/2bHR/+HHR/9KTs+
+jN2fPR/2fHR/2PHR/+fHR/9OTs++gt2fPSX7Pjor977gAcvPvpr7vHgxUd/
wz0evPjob7nHgxcf/R33ePDio7/nHg9efPQP3OPBi4/+kXs8ePHRP3GPBy8+
+mdsN/z5CX/GX/BX/A0f4xP8Hf/Ap/gn/oV/4zN8ji/wJb7C1/gG3+I7fI8f
8CN+ws/4Bb/iw3sPbj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx
+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+/HR7xl2w5+f8Rf8FX/D
x/gEf8c/8Cn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+PDeg9uP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7k
Hg9e3H7kHg9e3H7kHg9e3H589Hcpf8+wG/78gr/ib/gYn+Dv+Ac+xT/xL/wb
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcfbz7gwYvb
j9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj49ex/DvUv6eYTf8+RV/w8f4BH/HP/Ap/ol/4d/4DJ/jC3yJr/A1vsG3
+A7f4wf8iJ/wM37Br/jw3oPbj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP148wEPXtx+5B4PXtx+5B4PXtx+
5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+xL7u7esY/l3K
3zPshj+/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/g
V3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+
ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8HL24/
co8HL24/co8HL24/co8HL24/co8HL24/Yt8n5evevo7h36X8PcNu+PMYn+Dv
+Ac+xT/xL/wbn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvb
j9zjwYvbj9zjwYvbj4/eV5t++Dq3r1v4dyh/r7ATxx/8PMHf8Q98in/iX/g3
PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3nzAgxe3
H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nH
gxe3H7Gfw0g/Yt8n5evevo7h36X8PcNu+PM7/oFP8U/8C//GZ/gcX+BLfIWv
8Q2+xXf4Hj/gR/yEn/ELfsWH9x7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hmw948OL2I/d48OL2I/d4
8OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/Zze+mH
76P1fVG+zu3rFv4dyt8r7MT3D37+wKf4J/6Ff+MzfI4v8CW+wtf4Bt/iO3yP
H/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuRezx4cfuRezx4cfuRezx4
cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfsR+znv9MPPXfg+Wt8X
5evcvm7h36H8vcJO/Pjg5yn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7EPhck/fBzen7uwvfR+r4oX+f2
dQv/DuXvFXbi9IOfP/Ev/Buf4XN8gS/xFb7GN/gW3+F7/IAf8RN+xi/4FR/e
e3D7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx9vPuDBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPB
i9uP3OPBi9uP3OPBi9uP3OPBi9uP2OdIpR9+rtvP6fm5C99H6/uifJ3b1y38
O5S/V9iJnx/8/IV/4zN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iw3sPbj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7
PHhx+5F7PHhx+5F7PHhx+xH73MH0w+eA+LluP6fn5y58H63vi/J1bl+38O9Q
/l5hJ3598PM3PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/3nzAgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3
H7nHgxe3H7nHgxe3H7HPqU0/fG6UzwHxc91+Ts/PXfg+Wt8X5evcvm7h36H8
vcJO/P7g5xk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
8eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/Yh9rnn6EX/Cn/EX/BX7ub1jfIJ9n5Sve/s6hn+X8vcMu+HP
c3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVH957cPuRHbcf2XH7kR23H9lx+5Ed
tx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H28+4MGL24/c
48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL
24/Y78FIP3wurc8Z9LlRPgfEz3X7OT0/d+H7aH1flK9z+7qFf4fy9wo7cf7B
zwt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/48N6D24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9ePMBD17cfuQe
D17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fsR+b1L64XPMfS6tzxn0uVE+B8TPdfs5PT934ftofV+Ur3P7uoV/h/L3Cjtx
8cHPS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fh/ce3H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftx5sPePDi9iP3
ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi
9iP2e/bSD7/3wueY+1xanzPoc6N8Doif6/Zzen7uwvfR+r4oX+f2dQv/DuXv
FXbi8oOfV/ga3+BbfIfv8QN+xE/4Gb/gV3x478HtR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H68+YAHL24/
co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8H
L24/Yr+XNf2IP+HP+Av+in3u4DE+wX7O28/t+TkM31fr+6R83dvXMfy7lL9n
2A1/XuMbfIvv8D1+wI/4CT/jF/yKD+89uP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bjzcf8ODF7Ufu8eDF
7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufs
93inH36vnt+T5Pde+Bxzn0vrcwZ9bpTPAfFz3X5Oz89d+D5a3xfl69y+buHf
ofy9wk5cf/DzBt/iO3yPH/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuR
ezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4
cfsRpx9+b7ffw+r36vk9SX7vhc8x97m0PmfQ50b5HBA/1+3n9Pzche+j9X1R
vs7t6xb+HcrfK+zEzQc/b/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH78eYD
Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4
/cg9Hry4/YjTj/w/l374vd1+D6vfq+f3JPm9Fz7H3OfS+pxBnxvlc0D8XLef
0/NzF76P1vdF+Tq3r1v4dyh/r7ATtx/8vMP3+AE/4if8jF/wKz689+D2Iztu
P7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj/efMCDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceD
F7cfuceDF7cfuceDF7cfcfqR/9fSj/gT/oy/4K/Y7006xifY59T63EGfI+Vz
Qfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+vMcP+BE/4Wf8gl/x4b0Htx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcf2XH78eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/cg9Hry4/YjTj/w/ln7En/Bn/AV/xX7P3jE+wT7X3OfU+txB
nyPlc0H8nPcZ9nMYvq/W90n5urevY/h3KX/PsBv+fMCP+Ak/4xf8ig/vPbj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7b
j+y4/ciO2483H/Dgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H
7vHgxe1H7vHgxe1H7vHgxe1HnH7k/630I/6EP+Mv+Cv2e1mP8Qn2ezB8rvkp
9rmDPkfK54KcYT+35+cwfF+t75PydW9fx/DvUv6eYTf8+Yif8DN+wa/48N6D
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9ePMBD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fuQeD17cfuQeD17cfuQeD17cfsTpR/6fSj/iT/gz/oK/Yr/H+xifYL83ye/B
OMU+p9bnDvocqTPs57z93J6fw/B9tb5Pyte9fR3Dv0v5e4bd8OcTfsYv+BUf
3ntw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj9zjwYvbj9zjwYvbj9zjwYvbjzj9yP9L6Uf8CX/GX/BX/A0f4xPs9+z5
vUmn2Oea+5xanzt4hn0uiJ/z9nN7fg7D99X6Pilf9/Z1DP8u5e8ZdsOfz/gF
v+LDew9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/bjzQc8eHH7kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7
kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7Eacf+X8o/Yg/4c/4C/6Kv+FjfIK/
Y79n7xT7PRg+19zn1J7hc+xzQfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+
fMGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7E6Uf+30k/4k/4M/6Cv+Jv+Bif
4O/Y72U9xX5vkt+D4XPNz/A5vsA+F+QK+7k9P4fh+2p9n5Sve/s6hn+X8vcM
u+HPV3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8H
L24/co8HL24/co8HL24/co8HL24/co8HL24/Xg7/CZYs0AQ=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw0nXXcVVXThp/d++xjoqLYGFgoKjY2NhaomCg2KCEq2JRBKCIWdrfY3d3d
3d3d9c313vf3x/xuZs3Min3WXPsBhdN1j+H9hqUdHR3DOnd0ZKH7hCVhjA3q
0FgeNthahO1nLcP2t1Zhw8OasHbYvp6D+iGO12FDra2ww8PmCuvM+h6j/rCw
OR07KGyWsFnDDrbOFjbSOnvYKGunsBFhM4XNHHaA94J/iONzhB1qZY0Dncsa
R3gvc4dNClssbPGw0WFdwuYNOypsHvvTwrqHLRs2Nmy+sPnDxoctELZg2BjX
ETsmbKGwhcPGOZe8I70m8x7reNewCWGLhC0aNtl76RZ2vHWJsBOsS4ZNsS4V
NtF1nOE4z8dcJzq+dNhU6zJhJ1k5z8k+03Jh94TtELZj2Glhy4etEHa6dcWw
6daeYWdYVwo7J2zVsNXCTg3r4fozHV857CzrKmGXh60f1jvsbI9Rf1nYeo5d
ENYrbM2wC61rhV1kXTvsYus6YeeFrR62Rti53gv+JY6vG3aplTWu8PobhF1p
3TDs1rC+Yf3CrvLYRmGn+DlxtmvCNgnbNOy6sM3C+oRd6zH8q123cdj1jm8e
doN1i7AZjjPXjR7bMuwm61Zhd4RtG7Zd2O1h29i/zXvEP7pDd5A7d6dz+4fd
Hba9P9dbwrb22W723Ph3OZe8ZwIIg8IGh93bobuwU9j9YTuH7RL2gHVA2IPW
XcMesu4W9rB1YNgj1t3DHg/bM2yvsMfC9rD/ZNjeHWLSo84l9pTHYMyLHWIK
/HimQ8yCVc9aYdVzVlj1vBUmvWCl/uUO8QtmvOT58J/2Osz7iuMw5lUr/HjN
Cqve6BCn4NPrHsP/ukP9TF++1SFmwaR3OsQjmPem64i91yE+wqS3nUve+x6D
GR9YYdKHVlj1aYf4Aoc+6RCb8D/uEI/wv+oQF9jTZ87lvnzkOcj73GNw6wsr
fPrSSv35HeotevIbnw92thP1LT39XYf4Bbe+t8KtH6xw60crfPrJCp9+7RBn
YdIvHeIU/m8eo/9+di6x3z0Gb/7rEF9gyZ8d4hfc+ssKt/62wq1/rPDpXyv1
SSKWwQ9ejsyH/4fXYd40URzeZImUZ5Mn0gvCykTMglVFojH8b/3MeEZ1In7B
pyYRm3iOVaI6YjMleq6wqpUol7yZE43BrVkSKayaNZHCnjkS8Qg+dUrELPzZ
E3EH/74O9Te9PWeiXFg1W6I5yJsr0Rjc6pxIYdXciRRWvduhe809nifRGIyZ
NxF3YOqCiVgGnxZKpLBn4UQKqxZLtKf7wxZJ9E6CQwskYh/1yyfiAv3aNVEd
eSskGoMN8yfiIzWLJ5oPbi2ViE0waelECm+WSaQwqVuiXNi2XPz6iQ7xaVEz
kf31SDTGPronqoNtSybiIGusmGgv8GndRCygv3smGoNVByb6LPkMV0nEKTi3
WiI2wapVE43hr5SoDratnigOq9ZIpLBqnUR8Yb2VE+Uy75qJ+AWr1ku0F5i0
fiLlM+ydSGHS2okYx1wbJuIRHOqVaB3mWivRfORtkKiOvCUSPT+exUaJ6uDW
xokU9vRJxC+YtHkihUNbJFI4tGUihUP9EnGHHtosEe+o3ypRHM5tnUhh8KaJ
OEhe30Rj1O+SiCnwo38iNsGk7RMpTNohkcKbHRMpTNo2EeNg2zaJ9oK/U6I4
DNs5kbLGgETrwI/dErEJJu2fiBH0+h6JeASH9kyk8GyvRNrhdzKsgTH7JOIU
HNo9Edeo3yTRc+XMeyeqI29gojXJ29d1md/xzAefhiXiCxwamohN+EO8R/yD
fE9hzHDnwv4RiTjFPd7P83G2XROdmzMf4FzyDvYcMGakFSZdl+hz5V4ckohZ
MOxQK3w6zAqTDrfCpNFhXRLxZpTno/4Ix2HVkVb4NCkRa2DDUR6jfmKiPic2
PhF34NbRVrh1jBVuHWuFQ2PD5kvEnjHeC/5xjsOzCVbWmOz14c3xVvrmzER9
Tu+e4DG4cmGiHqbnpibiF9w6OWzZRKw6yWMwaYrrYN4pjsOtU61w9ETHmes0
j8HR060w7JxEDIJJZyfiFP5Z3iP+OJ+b53Wuc+HT+YnYBDPOSMQ+zjbdc+Of
59w1/Bnw3uCdcYHr1vRz5B0C0y9NxFMYdpkVhl1uhWFXWGHSjETcoT8uScRH
6q90HLZdZYVVtyViDf19tceovzURR4hdn+iewq0brHDrRivcuskKn65NxCPu
9zXeC/7NjsOtW6yscbvXhzd3WLcLezRRz8OMOz0Gwy5OxGvOdk8ifsGt+xKx
CSbd6zH8u1wH8+53HC4+YIVbdzvOXA96jJ5+yArPnkjEKXjzeCJ+4T/mPeJf
lOjOsr8nnQvDnk7EI9j2SCJOcbaHPTf+U84lb/Us3ndpvOfCnk3EL3jzfCKe
wqoXE/ELnr1khVUvW+HQK1a49UYiHsGhFzwH9a86zvv5NSv8+zhRb9Prr3uM
+o8SMYjYO4mYBavetcKq96ww6X0rTHorEbNg3pveC/4HjsOnD62s8bZzWeMT
74X++ylRP8OGzxMxC1Z9lohl+H8n6j168ctE/IJPXydiE/z7wnXEvk3ESlj1
lXPJ+9RrMu93jsOwHxIxC/b87L3ApF/DpiVi1W9WmPS7FSb96DrO8L3nY64/
HIdPf1rh019WzvOPzwQ7l0x1R7lH/MEUzIJhSSqFT2kqhT1ZKoVVVar7Sj/9
l4hx1Oep4jCpSKXwuFOqfqa/y1Rj1M+eijvE2qk4BZ9mSqXwaeZUCodmSaVw
qJWKU3CuTrUX/FlTxWHSbKmUNeZItT7vzzlTKXzqmqqH4cFcqcZg1b9+Tpxt
nlScgkPzpmIQnOuSagy/c6o62DZfqjiMnD+Vwqq5U8WZa4FUY3BrwVQKqxZL
xSN4s2gqHuEvkmqP+N/4DnLnFk+VC5OWSMUgPteFU/GLsy2Uam78bqlyyXsu
ERvgwlKp7gKMWSYVQ+FT91QKt5ZNpfBsuVQKq3qkUji0fCqFWz3NINZZMdWf
m+CvlGoMJq2QKpfYyqnGYMyaqZgCP1ZNxSxYtVoqhVWrp1JYtUYqhUm9Uin1
a6fiF8xYK9V8+KukWod510kVhzHrplL4sV4qhVW9U3EKPq2fagy/f6p+pi83
TMUsmLRxKh7BvA1S1RHbNBUfYdJGqXLJ2yzVGMzok0ph0uapFFZtnYovcGir
VGzC3zIVj/C3S8UF9tQ3VS73ZYtUc5DXL9UY3NomlcKnbVMp9U2q3qInt091
Ptg5KlXf0tM7hf2SiFs7p1K4tUsqhVsDUil82jWVwqfdU3EWJg1MxSn8PVKN
0X+7pcoltmeqMXizXyq+wJK9U/ELbu1jhVv7WuHWICt8GmylfkgqlsGP/T0f
/l6p1mHeoY7Dm2FWns1wK9wakYpZsOoAj+HvkOqZwfiDUvELPo1MxSae44Gu
I3aInyusOti55B3qMbh1mBVWHW6FPaNT8Qg+HZWKWfhHpuIO/tKp+pveHuNc
WHWE5yBvrMfg1jgrrBpvhVVHW+HKMVZ4c6wVpk5MxS94NskKqyZb4dDxVrg1
1fuDPRNS8Y76ExznfTXFCqvOSsUL+vhEj1F/Ziq+EDslFafg06lW+HSaFfac
boVP01LxDs6d5L3gT3ccnp1hZY2zvT58OscKn65M1fPw4FyPwap3/FnyGV6Q
ilNw7qJUbIJVF3oM/zzXwbaLHYdVl1hh1fmOM9elHoNbl1lh1YxUPNok7OpU
3MG/ynvEP9nn5nld41xYdV0qNsGkK1JxkLNd7rnxr3Uuee/6fNzN610Hw25M
xSBYdXMqfsGzW6yw6lYrfLrNCp9ut8Knu1IxFybdmYp3+Hd7jJ67w7nE7g3b
MRWrHknFGthzfypmwaoHrLDqQSusesgKhx62Uv9YKk7BpEc9H/59Xod5b/JZ
OefjzoUrT6ZiFqx6OhWn4NMzVvj0rBXOPWeFTy+lYhDsecpzUP+84/DsBSvc
etFKzcuug09PeC/s4/VUbII3r6XiEf6rqbiGf4M/Qz6/N5wLw17xfOS96THe
D29Z4dnbVu49vw/jz4T4s6T3Ut0R2NMl053gLnyYil/w7CMrrPrYCp8+scKn
L1IxCPZ8kIp31H/qONz6zAq3fk7FGvr7c49R/1MqjhD7JhW/4Na3Vrj1nRVu
fW+FT1+FHZeKW196L/g/OA63frSyxi9eH978aqX/skw9T0//5jEY1s7Uz/Tc
n6n4Bbf+TsUmmPSXx/B/dx3M+8dxuPivFXb+4Thz/ecxeMZ/oEbhWZmJR/Cp
yMQs/DzTHvG/9rl5XlWmXFjVysQpmJRm4iBnSzLNjV9nyiXvfd8FPr8mU91l
fo68T3gfzJqJWTBstkwK22bPpHCrUyaFSZ0z3V3YM0smLlM/R6Y4bJszk8Kq
ReLX96RixlyZxqhfOBN3YMy8me4prJovk8Kq+TMprFogk8KheTKxgPs9d6a9
4C+YKQ7DFsqkrLFopvVhyWKZFFatkIkXcGLxTGNwa+ZMXOZsS2ZiFqxaOhPv
4NNSmcbwu2Wqg3PLZIrDs+6ZFFYtkSnOXMtmGoMZy2VSGLZSJjbBnp6ZmIW/
YqY94s+U6c6yv5Uz5cKnVTOxCZ4tn4llnK1HprnxV8mUS95qmXJh2BqZuAOf
Zi5j7iLOHrZ2JjbBoXUyKRxaN5PCoQ0ycYe7tn6m9zHvq7UycZD6rTL1MD29
XqY68rbONMZ9XzMTK6nZMNN8sGfTTJyCT5tlUjjUJ5PCoY0y5cK5LTIxCIb1
zrQX9rdlpjH2sXmmOvI2ycRE1uibaS+wardMXIAB/TKNwa19MvUb/bddJmbB
pO0z8Qjm9c80hr9Npjo4t0OmOLzcMZPCrV0zsYP1ts2Uy7w7Z2IZ3BqYaS/w
afdMCof2yKRwaEAmTjHXXpkYBHt2yrQOc+2SaT7y9sxUR97GmZ4fz2LvTHWc
c1+fFY7un4lfMGmIFd4MtcKnEZnuKD00PBN3YO1+mXhH/ZGZ+pY+HuY68o7y
GO+uwZmYSM2Bng/ejMrEJph0iBX2HGqFPQc5F7Ydnok7cOsA74X9HeEx9nGY
68gb7fVh0gmZ+hYGTLHS94P8PNjf+Exsgj3HZOIObDvaY/gTMnEQDo3x3HDu
lEz9T48eF9bVeWMdh3/jrKwx0XPAsJMysQbGTM3EJvwTvUf8i/Low7C1w47P
xCnOM811cOhkK/uY5Llh4WQrNad6j3Dl9EzchEnP+XPlXpyRiVkw7EwrfDrL
CnvOtsKq8zNxp1fYdM9H/TmOw6dzrfz561WZuECvn+cx6q/MxCBiF2diFqy6
xAqrLrXCnsussOrCTNyBVRd4L/iXOw4/rrCyxtVen16ZYYUfd2TqW3hwjcfg
1gOZ+o2+vD4Ts2DPjZk4BZNu8Bj+ta6Dczc5DjtvtsLL6xxnrls8BrdutcKq
uzPxCN7clYlH+Hd6j/gX+dw8r3ucC5Puy8QL2HN7Jn5xtts8N/69ziVvZKaf
G+jJ+13HmU/LdF+4K49k4hfcetQKtx6zwqHHrXDr6Uzcoc8ezsRi6p9wHD49
aYXHr2ViBH3/lMeofzUTj4g9n+mewq0XrHDrRSsceskKt57NxCDu9zPeC/7L
jsOSV6ys8brXPzjsDSvP5tNMPQwn3vQYDHsoE/c52zuZ+AWH3svELPj0rsfw
33IdzHvfcTj6gRV2vu04c33oMXj2kRX2fBl2bCbefJ6JU3DrM+8R/8FMd5b9
feVcGPZNJgbBiU8ycYqzfey58b927kQ/AxjM/fjWdXDlOytM+jkTv+DZL1b4
9KsVPv2Z6T7Bnt8zcRMm/ZSJd9QXuXqYnv7NdeSVuca47z9m4jg1f3k+2PNf
Jk7BJ/4HVBQOJbkUDv3tXDiX5WIQDPvDe2F/ea4x9pHmqiOvyrU+fJozVw/D
g7lyKQzYONdnxmfVzsUpODRzLgbBuZlyjeHPmouJMKnONTfM2yTXHHwms+Sq
I6+VKw4Lm1zKGrPlmgOezZOLO/Bm7lycwu+ca4/4/2biO89rjlzM4jxdctXB
pHlzKUyaPdfccLFTLv0f53LtkXv0j58r886fizWwZ+Fc/IJnXXMprFokl8Kh
RXMp3Foi192ltxbKxTvqF8sVh0+L51LYvGAudpPXLdcY9SvkYhB9v0wuZsGq
7rkUVi2bS2HScrkUJi2Vi1kwb8lce8HvkSsOn5bPpayxYq514M1Kud6psGrd
XD1PT6+ai1PwabVcCodWz6VwiPc8DII9vXKxDy6ukot31C+Q67ly5jVy1ZG3
cq41yVszVx1z8XMD88Gt3rl4BJ/Wz8Us/PVy7RF/vlyfOZ/fBrlyYdVGuTjF
/V4n13ycrWeuc3PmDXPlksd7mN+L8PuBzXLdETh6bK47wV3YMuyLTDzbKpfC
qq1zKRzaNhdrvg/rl4tfcGjzXLyDf7vl4gs86JurjryBucbo+z651qdmu1zz
/RC2Yy5+wa2dcinc2jmXwqH+uXJhz4Bc/IIZ2+TaC/vbNdcY+9glVx15u+da
n/4YlquH6d3hVjgxKleP0Vt75+IX3No3F4Ng1T4ewx+ci1Pwco9cc//rZwSP
+Zl3kOvI2zNXHEbulUtZYz/PAV8PzMUpeDMiF6fwD/Ae8XfIxWue19BczOI8
B7kOnh1shUn7e27YOcRKzTG5ept7sH2u58q8h/gZwKQjcjELhh1phW1HWWHV
uFysoSfG5GIW9/fwXFym/oRcTKGPR7uOvCkeo9cPy8V0asZ7PrhynO8prJpg
hVUTrTDpaOdynsm52ASHxnov7O94j7GPSa4j70Svv3TY2bn6HE6cY4UTh/p5
sL+TczELVp2ai0dw6BSP4Z+ei30waarnhn8/+F7w7jzNdeSd5DhcnGZljeme
g/4+PxdrYNJ5uZiFf673iD/Snzn3+KxcPOI8F7gOJl1ohXNneG54eaaVGv58
nf82yH8LvDgXv+DNaUXsOWyFsCtysQw+XWmFPVdZYdW1ud5PsGdGrncz79XL
c7GP+jtzsYD+vtp15N3lMe7mZbn4SM11ng+W3JyLWbDqFivsudUKq653Lqy6
PRcv4Nk13gv7u8Nj7OM215F3Uy4+ssbd3gv992QuRsCDezwGw17I1WP05f25
+AWHHszFLPj0gMfw73UdzHvIcTj6sBV2PpGLF6x3n3OZ99FcXIM9T3kvsOpp
K+x5xgqrHs/FIOZ6Lhd3YMMjXoe5HvN85D3rOvJuDNvCz+J513HOF31WmPpq
LmbBsNesMOl1K0x6Oxdf6Kc3c91XuPtKLsZR/1mu/qen33AdeZ97DG69nIvd
1Lzj+eDHB7k4BZ8+tMKbj6zw6V3nwqdPcjEChr3lvbC/Tz3GPj52HXlfeH3e
n7/m6lV48JsVBrzk58H+vsnFKXjzXS42waFvPYb/Qy4+wsIvPTfM+ydXf9KX
37uOvK8ch4VfW1njR88Bz/7MxRc49EcuTuH/7j3iX5Krp/n56JdcDOI8f7kO
9vxtZR8/eW549rOVmn+9R3jDXzSDobBzjUKfK/ciLcQpuJUVUniWF1L4VBRS
+NQqtL9Lw5JC81FfForz5zFVIYVPcxbiAr1eFxqjfo5CDCI2s5kFq2YppLBq
1kIKe2YrpLCqXYg7sKoptBf82QvF4UenQsoanePXN+TqlbkLKfxYrFDfwoN5
Co3Bre6F+o2+nK8Qs2DPAoU4BZPmLzSG36VQHZxbsFAcdi5USOHlvIXizLVw
oTG41bWQwqolCvEI3nQrxCP8xQvtEX+mQufmeS1ZKBcmLV2IF7Bn0UL84myL
FJobf6lCueS9n+tnCHpymUJ1nPk/3xfuCu8T+AW3eK+gcGvFQgqHehZSuLVq
Ie7QZz0KsZj6lQrF4dPKhRQer1+IEfT9KoXGqF+vEI+I9Sp0T+HWmoUUbq1V
SOHQ2oUUbq1eiEHc79UK7QV/nUJxWLJuIWWN3oXWfy9sg0LKs+lbqIfhxIaF
xmDYcoW4z9k2KcQvOLRZIWbBp00LjeFvVKgO5vUpFIejmxdS2LlxoThzbVFo
DJ5tWUhhz7aFOAVvtinEKfx+hfaIv2yhO8v+tiuUC8O2L8QgOLF1IU5xtq0K
zY3fv1Duj34Wh/t+7FCoDq7sWEhh0q6F+AXPdiuk8GlgIYVPexW6T7Bnj0Lc
hEkDCvGO+uGFepie3r1QHXkHeIz7vkshjlOzd6H5YM/gQpyCT/tZ4dD+Vji0
j3Ph3NBCDIJhexbaC/sb5jH2McR15I3w+vBpTKEehgdjrTDgxkKfGZ/VyEKc
gkOHFGIQnBvlMfzDw+YqxKQDPTfMu8lz8Jkc6jrYeZDjsPBgK2sc4Tng2dGF
uANvxhfiFP447xF/UCG+87xGF2IW5znGdTDpWCtMOtJzw8WjrP/jnPfIPdrX
z5V5JxRiDew5vhC/4NkJVlg1xQqHTrTCrZML3V16a3Ih3lE/1XH4dJIVNk8q
xG7ypnmM+nMKMYi+P70Qs2DVdCusOsMKk860wqRTCzEL5p3iveCf5Th8OtvK
Gud6HXhzfqF3Kqy6ulDP09MXFeIUfLrYCocuscIh/jskDII9lxViH1y8sBDv
qJ/o58qZL3UdeRd4TfIudx1zXen54Na1hXgEn64pxCz8Gd4j/nH+zPn8rnMu
rLqhEKe431d5Ps52ns/Nma93Lnm8h/mZhd8P3FLojsDR7wvdCe7C7YX4Bc/u
sMKqO61w6N5CrNkp7O5C/IJDtxXiHfVPFOILPLjLdeQ96TH6/lavT819nm/n
sIcK8QtuPWyFW49Y4dD9zoU9jxXiF8y4x3thf497jH086jrynvL69MfrhXqY
3n3DCic+KNRj9NZzhfgFt14oxCBY9bzH8F8qxCl4+bTnHuQzwWN+5n3RdeQ9
4ziMfNbKGi97Dvj6diFOwZu3CnEK/03vEf/BQrzmeb1WiFmc592wwwrx7D0r
THrFc8POV63UfFeot7kHD/i5Mu+HfgYw6dNCzIJhn1lh2+dWWPV1IdbQE18W
Yhb395NCXKb+t0JMoY+/cB15v3uMXv+4ENOp+cbzwZUfCt1TWPWjFVb9ZIVJ
3zqX8/xSiE1w6Cvvhf396jH28bPryPvD6/P79bJUn8OJqpTCiY/8PNjfP4WY
Bav+K8QjOPSvx/CTUuyDSX96bvjH/eVe8O7kH5egjry/HIeLf1tZIy01B/3d
lGINTGqVYhZ+XWqP+O/7M+ceF6V4xHnapepg0kylFM5lpeaGl3kppaZfO3o7
7NawWUrxC97MVoqnsKpTKX7BszlKKayas5TCoblKKdzqUupdBYdmLzUH9Z1L
xXlvz11KefcuVooR9P08pcaoX7QUj4gtUIpfcGvBUgq3FiqlcGjhUgq35ivF
ILg1b6m94HctFYcli5RS1pi/VC5rLF5qL/RKz1I9DCeWLMUvuLVEqf7E71Wq
3+jRpUuxDCZ1L8UvWLVUqTpiy5ViKLxcplQued1Krcm8PUrF4dkKpbgDV1Yq
tRf4tHIphVurlFI4tGophVsrlqrjDMuXmo+5VisVh0mrl1L4sUYp5TxrljoT
HB1U6g5xd9YpxSm4tW4phWfrx6/fKcSn3qUUPm1cijX01tqlWEz9BqXi3OUN
Syls7leKC/T6RqXGqO9bikHE+pRiFqzavJTCqi1KKezZspTCqk1LcQdWbVJq
L/hblYrDj61LKWtsU2p92LltKeVdunupvoUN25Uag1trlXpOnG2HUsyCPTuV
4hRM2rHUGH7/UnVwbudScdi5SymFl9uXijPXgFJjMGzXUgpv9irFJhizZyk2
4e9Rao/4y5a6g9y5vUvlwq19S3GHz3VgKTZxtt1KzY2/j3PJO7SK/g+bM2yw
7wLs2b8UT+HoECusGmqFYcOssG24FVYdYIVVB5Vi0KxhB5b6f8XwD/YYTBrh
XGIjPQZjjizFFPhxSClmwapDrbDqMCusOtwKk46wUj+6FL9gxlGeD3+U12He
MY7DmLFW+DHOCquOLsUp+DTeY/inl+pn+vLYUsyCSRNK8QjmHeM6YpNK8REm
Hedc8iZ7DGYcb4VJJ1hh1Uml+AKHppZiE/6JpXiEf1opLrCnac7lvkzxHOSd
7DG4dYoVPp1qpX6zUr1FT073+WDnraX6lp4+sxS/4NZZVrh1thVunWOFT+da
4dMFpTgLk84vxSn8Cz1G/53nXGIXeQzeXFWKL7DkklL8gluXha1XiluXW+HW
FVb4dKWV+hmlWAY/rvZ8+Bd7Hea9xnF4c62VZ3OdFW7dUIpZsOp6j+Gf4WfG
M7qpFL/g0y2l2MRzvNF1xG7zc4VVNzuXvNs9BrfusMKqO62w595SPIJP95Ri
Fv7dpbiDv1+p/qa373MurLrLc5B3v8fg1gNWWPWgFVY9ZIUrD1vhzSNWmPp4
KX7BsyessOpJKxx6ygq3nvP+YM9jpXhH/dOO8756xgqr3izFC/r4WY9R/0Yp
vhB7qRSn4NPLVvj0ihX2vGqFTy+U4h2ce957wX/NcXj2upU13vL68OltK3z6
olTPw4N3PAarFqj0WfIZvl+KU3Duw1JsglUfeAz/XdfBto8ch1UfW2HVe44z
1yceg1ufWmHV16V4NDHsq1Lcwf/Se8R/0efmeX3jXFj1XSk2waTPS3GQs33m
ufG/dS55C1Y6H3fze9fBsB9LMQhW/VyKX/DsFyus+tUKn36zwqffrfDpr1LM
hUl/luId/t8eo+f+cC6xfzwGq/JKrIE9/5ViFqziH4JDYVVSSWFVWknhUFZJ
qS8rcQomFZXmw//X6zDvTz4r56wq5cKVJn59aSlWzVSJU/Bp5koKn2appHBu
1koKn3hXwyDY0640B/WzVYrDs9krKdzqVEmp4R1PHXyqK+0Fds5TiU3wZu5K
PMLvXIlr+D/4M+Tz61IpF4bNVWk+8uatNMb7Yb5KCs/mr6S3+07xPuT9t1Cl
OwJ7dqx0J7gLi1TiFzxbtJLCqsUqKXxavJLCp6UqMQj2dK3EO+q7VYrDrSUq
KdxaqRJr6O8lK41R37MSR4gtW4lfcGu5Sgq3elRSuLV8JYVPy8SvHy3FraUr
7QV/hUpxuLViJWWNlSutD29WqaT0X+9KPU9Pr1ppDIb1qdTP9NwalfgFt9as
xCaY1KvSGP5qlepg3lqV4nBx7UoKO1evFGeudSqNwbN1Kyk826gSj+DThpWY
hb9BpT3id690bp7XxpVyYdWmlTgFk9avxEHOtl6lufE3qZRL3sKV7gKf32aV
6j71c+R9wvtgq0rMgmFbV1LY1reSwq1+lRQm9a90d2HPlpW4TP02leKwbdtK
Cqt2r8QRmLFdpTHqB1biDrGdKt1TWLVzJYVVu1RSWDWgksKhHSqxgPu9faW9
4O9aKQ7DdqukrLFHpfVhyZ6VFFaNqMQLOLFXpTG4tUUlLnO2fSsxC1YNrsQ7
+DTIY/h7V6qDc/s5Ds/2t8KqfRxnriEegxnDwlqVGHZwJTbBnoMqMQv/QO8R
f/NKd5b9jXQufDqkEpvg2QGVWMbZhntu/FHOJe/DOt6HYaPDPrKOCTuiEqfg
1lGVWAafRlth0hgrTBprhUnHVGIQ9+5Iz0H9OMd5V4+38k6bWqm36fWjPUb9
iZUYRGxiJWbBqklWWDXZCpOOt8Kk4yoxC+Yd673gn+A4fJpiZY0JzmWNk7wX
+u+8Sv0MG06pxCxYdXIlluFfVqn36MXTKvELPk2vxCb4d6rriJ1ZiZWw6nTn
kjfNazLvWY7DsHMqMQv2nO+9wKQLrLDqQitMusgKk851HWc42/Mx18WOw6dL
rPDpUivnudxngp0vVbqj3KOrKjELhl1thU8zrLDnGiusuqHSfaWfrqzEOOqv
dRwmXWeFx3dX6mf6+3qPUX9XJe4Qu6USp+DTrVb4dJsVDt1uhUM3VeIUnLvR
e8G/w3GYdKeVNe7x+rw/77XCp6cq9TA8uM9jsOoKPyfO9mAlTsGhhysxCM49
5DH8+10H2x5xHEY+aoVVDzjOXI95DG49boVVz1biEbx5phKP8J/2HvHPqHQH
//d+di5MejFsqD/XJyvxi7M94bnxn3curDq80s8lcOHlSncBxrxaiaHw6TUr
3HrdCs/esMKqN61w6C0r3Ho37DCv806lP0PBf89jMOlt5xJ732Mw5rNKTIEf
H1ZiFqz6yAqrPrbCqk+sMOlTK/VfVOIXzPjc8+F/4HWY90vHYcxXVvjxtRVW
fVuJU/DpG4/hJ7X6mb78vhKzYNKPlXgE875zHbGfK/ERJv3gXPJ+8RjM+NUK
k36zwqq/KvEFDv1ZiU34f1TiET7/ODNcYE9/O5f78rvnIO8fj8Gtf63w6T8r
9TdX6i16Mq11Pti5cK2+pafzWvyCW0UthVtlLYVbVS2FT3UthU/tWpyFSU0t
TuHPVGuM/mvVyiU2c60xeDNnLb7Akllr8QtuzVZL4dbstRRudaql8GmOWkp9
51osgx9z1ZoPf5Za6zDv3LXi8GaeWsqz6VJL4dZ8tZgFq+atNYaf1XpmPKMF
avELPi1Ui008x/lr1RHrWuu5wqoFa+WSt0itMbi1aC2FVYvVUtizZC0ewacl
ajELv1st7uC/Uqm/6e2lauXCqsVrzUHe0rXG4NYytRRWda+lsGrZWgpXlqul
8KZHLYWpK9biFzzrWUth1Uq1FA6tEr9+oRK31qi1P9izQi3eUb9qrTjvq9Vq
KazasBYv6OPVa41Rv0EtvhBbuxan4NM6tRQ+rVtLYc96tRQ+rVmLd3CuV629
4K9fKw7PetdS1tio1vrwaeNaCp+2rdXz8GCTWmOwakKtz5LPsE8tTsG5LWqx
CVZtXmsMf9NadbBty1pxWLVVLYVVm9WKM9fWtcbgVt9aCqu2r8Wjn8L61+IO
/na19oi/Vq1z87x2qJULq3aqxSaYtE0tDnK2frXmxt+xVi55E30+7ubOtepg
2IBaDIJVu9XiFzwbWEth1e61FD7tUUvh0561FD7tU4u5MGnvWrzD39dj9Nxe
tXKJDfIYrBpeizWwZ79azIJV+1th1RArrBpqhUPDrNSPqMUpmHSA58Mf7HWY
d9daZ+WcBzoXrhxci1mwalQtTsGnQ6zw6VArnDvMCp/4uR4GwZ6RnoP6wx2H
Z0dY4daRVmpGuw4+HeS9sI/xtdgEb8bV4hH+2Fpcw9+l1mfI53e0c2HYGM9H
3jEe4/1wrBWeHWfl3vPu589W+Jljku8I7Hm41p3gLpxQi1/wbIoVVp1ohU9T
rfDplFoMgj3H1+Id9Sc5DremWeHW+bVYQ3+f7DHqz6vFEWLTa/ELbp1hhVtn
ha1ci1tnW+HTaWHL1+LWqd4L/jmOw61zraxxgdeHNxda6b9ra/U8PX2Rx2DY
rbX6mZ67tBa/4NbltdgEky7zGP7FroN5VzgOF6+0ws5LHGeuqzwGz662wrMb
avEIPl1fi1n413mP+Kf73DyvG50Lq26uxSmYdE0tDnK2GZ4b/ybnkje51l3g
87vFdX39HHmf8D64sxazYNhdVth2txVu3WOFSQ/Uuruw545aXKb+Xsdh231W
WPV0LY7AjPs9Rv1TtbhD7JFa9xRWPWqFVY9ZYdXjVjj0UC0WcL8f9F7wn3Ac
hj1pZY1nvD4sedYKq96qxQs48ZzH4NbttbjM2V6sxSxY9XIt3sGnlzyG/7zr
4NwrjsOzV62w6gXHmes1j8GM160w7N1abII979RiFv7b3iP+bbXuLPt7z7nw
6YNabIJnb9ZiGWd7w3Pjv+9c8vi7MvydP/6u4Me1uAOfHm/iOYftFfZZLZbB
p8+tMOkLK0z60gqTvq3FIO7dp7XYR/1XjvOu/trKO+2PWr1Nr3/jMep/r8Ug
Yj/WYhas+skKq362wqRfrDDp+1rMgnnfeS/4vzoOn36zssYPzmWNP70X+q/V
Uj/Dhn/DzqzFqr9rsQyGzd5S79GLfFEL/IJPaUtsgn//uY5Y3hIrYVXSUi55
f3lN5i1aisOwqiVmwZ6mpb3ApHZLCqtmaklh0swtKUyqW6rjDGVL8zHXLC3F
4dOsLSl8mq0l5TydWjoT7FyrpTvKPZqrJWbBsM4tKXyauyWFPfO0pLBq/pbu
K/00Z0uMo75LS3GYNG9LCo+XaKmf6e/5WhqjvltL3CG2cEucgk9dW1L4tEhL
CocWbUnh0IItcQrOLdDSXvAXaykOkxZvSVljyZbW5/25VEsKn1ZpqYfhwdIt
jcGqOVp6Tpxt2ZY4BYd6tMQgOLdcS2P4y7RUB9uWbykOI1doSWFV95bizLVi
S2Nwq2dLCqtWb4lH8Ga1lniEv2pLe8TPWrqD/3s/t5QLk9ZsiUF8riu3xC/O
tlJLc+P3aimXvC2CBZ+H/0XY2i3dBRizbksMhU/rtaRwa/2WFJ71bklh1QYt
KRzasCWFW5u09OeqcGjjlv68FX/TlsY+CduopVxim7U0BmP6tsQU+LF5S8yC
VVu0pLBqy5YUVm3VksKkrVtS6rdpiV8wo19L8+H3aWkd5t22pTiM2a4lhR/9
W1JYtUNLnIJP27c0hj+kpX6mL3dqiVkwaZeWeATzdmypjtiuLfERJu3cUi55
u7U0BjMGtqQwaY/49T+1WLVPS3yBQ3u3xCb8vVriEf7+LXGBPe3rXO7Lni3N
Qd4gj8GtwVb4tJ+V+oVa6i16cqjPBzuPb6lv6enhLfELbh1ghVsjrHDrQCt8
OsgKn0a1xFmYNLIlTuEf4jH672DnEjvUY/BmTEt8gSWHt8QvuHWEFW4daYVb
R1nh02gr9eNaYhn8GOv58A/zOsw73nF4c7SVZ3OMFW4d1xKzYNWxHsMf5mfG
M5rYEr/g0+SW2MRznOA6Yif4ucKqSc4lb4rH4NaJVlg11Qp7TmmJR/Dp5JaY
hT+tJe7gr9NSf9PbpzoXVp3kOcg7zWNw63QrrJpuhVVnWOHKmVZ4c5YVpp7b
Er/g2XlWWHW+FQ5dYIVbl3h/sOeclnhH/YWO8766yAqrrmuJF/TxxR6j/tqW
+ELsipY4BZ+utMKnq6yw52orfLqsJd7BuUu9F/wZjsOza6yscb3Xh083WOHT
vS31PDy40WOw6kd/lnyGt7TEKTh3W0tsglW3egz/JtfBttsdh1V3WGHVzY4z
150eg1t3WWHVAy3xaEDY/S1xB/8+7xH/cp+b5/Wgc2HVwy2xCSbd0xIHOdvd
nhv/IeeS95PPx918NGz3lhj2eEsMglVPtsQvePaUFVY9bYVPz1jh07NW+PRC
S8yFSc+3xDv8Fz1Gzz3nXGIveQxWvdkSa2DPKy0xC1a9aoVVr1lh1etWOPSG
lfq3W+IUTHrL8+G/7HWY9wmflXO+41y48l5LzIJVH7TEKfj0oRU+fWSFcx9b
4RPvahgEe973HNR/4jg8+9QKtz6zUvOF6+DTu94L+/imJTbBm69b4hH+Vy1x
Df8xf4Z8ft86F4Z96fnI+85jvB++t8KzH6zce+4U70Pefz+3dEdgT49Gd4K7
8FtL/IJnv1th1R9W+PSnFT792xKDYM+vLfGO+r8ch1t/W+FWqxFr6O9/PEZ9
3YgjxNJG/IJbWSOFW3kjhVtFI4VPfJHj2S1x6z/vBb9sFIdbVSNljabR+vCm
3Ujpv3ka9Tw9PVOjMRi2cKN+pudmbcQvuDV7IzbBpNkajeHP3KgO5nVqFIeL
czRS2DlLozhzzdloDJ7N1Ujh2XyNeASf5m3ELPwujfaInzQ6N89r/ka5sGrB
RpyCSXM34iBn69xobvwFGuWS94vvAp/fQo3q7vJz5H3C+2CxRsyCYYs3UtjW
rZHCrSUaKUzq3ujuwp5FG3GZ+iUbxWHb0vHrR1pi1aqNOAIzlmk0Rv0qjbhD
bPlG9xRWrdBIYdWKjRRW9WykcGi5Rizgfi/baC/4KzWKw7CVGylrrNZofViy
eiOFVRs14gWcWKPRGNxapBGXOdtajZgFq9ZpxDv4tHajMfxejerg3LqN4vBs
vUYKq9ZsFGeu9RuNwYzejRSGbdqITbBnk0bMwt+40R7xuza6s+xvs0a58Gnz
RmyCZxs2Yhln26DR3Ph9GuWSx//Tzd814e+Z8PsD/jyDP4PYuhGn4Fa/RiyD
T9s0Upi0bSOFSds1Upi0YyMGce/6NpqD+v6N4ryrt2+kvNP4cxN6m17fodEY
9fyZCgwiNqARs2DVro0UVu3WSGHSwEYKk3ZuxCyYt1OjveDv3igOn/ZopKyx
S6Nc1ti70V7ov4Ma9TNsGNSIWbBq30Yswz+iUe/Ri/s14hd8GtKITfBvsOuI
DWvESli1v3PJ28drMu9wx2HYiEbMgj0Hey8waaQVVo2ywqRDrDDpQNdxhgM8
H3Md6jh8OswKnw63cp4jfSbYeUWjO8o9GtOIWTBsrBU+jbPCnvFWWHVco/tK
P41uxDjqj3YcJh1jhccnN+pn+vtYj1E/rRF3iE1uxCn4dLwVPp1ghUMnhi3V
iEMTG3EKzk3wXvCnOg6TTrKyxilen/fnqVb4dGGjHoYHp3kMVh3l58TZzmjE
KTh0ViMGwbkzPYZ/uutg29mOw8hzrLBquuPMda7H4NZ5Vlh1SSMewZuLG/EI
/yLvEX9oozvInbvUuTDp8kYM4nO9oBG/ONv5nhv/MueSt1Wjn0vgwpWN7gKM
uboRQ+HTDCvcusYKz661wqrrrHDoeivcuilsS69zY6M/Q8G/2WMw6QbnErvF
YzDm7kZMgR+3NWIWrLrdCqvusMKqO60w6S4r9fc24hfMuMfz4d/qdZj3Psdh
zP1W+PGAFVY91IhT8OlBj+G/2qif6ctHGjELJj3WiEcw72HXEXuiER9h0qPO
Je9Jj8GMp6ww6WkrrHq+EV/g0HON2IT/bCMe4b/SiAvs6QXncl+e8Rzkvegx
uPWSFT69bKV+UqPeoidf8/lg56+N+paefqMRv+DWm1a49ZYVbr1thU/vWOHT
+404C5Pea8Qp/A88Rv+961xiH3oM3nzRiC+w5ONG/IJbn1jh1qdWuPWZFT59
bqX+q0Ysgx9fej78j7wO837tOLz5xsqz+dYKt75vxCxY9Z3H8F/3M+MZ/dSI
X/Dpl0Zs4jn+GDbFsd/8XGHVz84l73ePwa0/rLDqTyvs+bcRj+DTP42Yhf93
I+7gX9Wov+nt/5wLq/7yHOTxxeiMwa2kLYVVaVsKq7K2FK7kbSm8KdpSmFq3
xS941mpLYVXTlsKhdlsKt2Zta3+wp2qLd9TP1Fac99XMbSmsmrctXtDHs7Q1
Rn2XtvhCbI62OAWf5mxL4dNcbSns6dyWwqfZ2+IdnJutrb3gz91WHJ7N05ay
xnxtrQ+f5m9L4dNSbfU8PFigrTFYNaCtz5LPcOG2OAXnFmmLTbCqa1tj+Au2
VQfbFm0rDqsWa0th1UJtxZlr8bbG4Fa3thRWdW+LR/x3rWXa4g7+0m3tEb9T
W+fmeS3bVi6s6tEWm2DSkm1xkLMt0dbc+Mu1lUverm2dj7u5fFt1MGzFthgE
q1Zqi1/wbOW2FFat0pbCp1XbUvi0WlsKn3q1xVyYtEZbvMNfs60xem71tnKJ
rdXWGKzaoC3WwJ512mIWrFq3LYVV67WlsGr9thQO9W5Lqd+oLU7BpA3bmg9/
7bbWYd6ebZ2Vc27cVi5c2bQtZsGqPm1xCj5t3pbCpy3aUji3ZVsKn/h75TAI
9mzW1hzUb9VWHJ5t3ZbCrb5tKTXbtFUHnzZpay/sY4e22ARvtm+LR/j949c/
NPJXaOsz5PPbsa1cGLZtW/PBv53aGuP9sHNbCs92aUu597z7+bMVfubYra07
AnvObOtOcBf2aItf8GzPthRW7dWWwqe921L4NLgtBsGe3dviHfX7OA639rXC
rYPbYg39Pchj1B/UFkeIDW2LX3BrmBVuDbfCrQOs8Gn/sLItbu3nveCPcBxu
HWhljZFeH96MstJ/R7fV8/T0IR6DYce31c/03OFt8QtuHdkWm2DSER7DP9R1
MO8ox+HiaCvsPMxx5hrjMXg21grPjmuLR/Dp2LaYhX+M94g/xOfmeU1wLqya
1BanYNL4tjjI2cZ5bvyJziVvYFt3gc9vsuu6+TnyPuF9MLUtZsGwk6ywbZoV
bp1shUmnt3V3Yc+JbXGZ+lMch22nWmHVhW1xBGac5jHqL2iLO8TOauuewqqz
rbDqHCusOtcKh85oiwXc7+neC/55jsOw862scZHXhyUXW2HV9W3xAk5c4jG4
NaUtLnO2y9tiFqy6si3ewacrPIZ/qevg3FWOw7OrrbDqMseZa4bHYMY1Vhh2
U1tsgj03tsUs/Bu8R/wT2rqz7O9m58In/l0M2ATPrmuLZZztWs+Nf4tzybvN
uTDsdivs4avp9uH7q/VPaHXsFzZYfxW/Y3/7/O96Q+y3+W7psOH6z38dw8KG
6p/G/V/doLDOYUd06Lvpa8epnzvsSMcy5+4bNlPYCM87W9jIsIPDZg8bZb9T
2CH2Zw470DVzhh0Wdqj+eOJ/+2JPc3l9YnM4Tv2snvugsHnCjvKeuoUdHzY5
rEvYaMeWDTs5bFrY/GHjwsaGLRh2dNj4sAWsxOYNG+P6hcKOcd7CYcfaX9zr
TAqbz/NRs0jYhLDjwpYIO8F7WjJsiv2lwk60v5jnmBi2TNhJYVPDunoO1lvU
ceZd2nHqZ/Ez4Dl29/moXy7sFJ95xbDpYaeH9Qw7w/5KYWfaXy3s3LBzwlYJ
OzvsrLAVXHdaWO+wK8IuD1vZceo3CLvSseWde2rY6mHned61wi4KuzBs7bCL
7a8Tdon9NcLOd816YZeFXRq2qvfFntb3+sTWdZz6DcOu8j76dej7rvne623C
brffw/viuWwadm3YNWF9wq4Puy5sMyuxLcJuDLshbKOwq73GjmH3ht0Ttrnj
1G8cNsN5m3hu/C3DbvJc/cPuCrszbDvrHWHbWtnrYH8nKt9/2tfn4Hu9tw+7
2/U7eH38rTr03d+ssbVz8XcKu8973SXsgbD7/XnyvfZ8v/yuYQ+FPRi2W9jD
9geGPWJ/97BH7cOYp8KeDBvgOubdI+wx5+0Z9rh9evvVsFc6xCbqnugQIxh7
uUNsei7s2Q6x6Xn7sOYF+7DnRfvw5pmwpzvEnae9J3jxkvOGe258euM174Ne
ed3+2LBPwj7uEEvecIw++ybs6w6x5u2wtzrEoHfD3ukQh95xDK696XpY9Z7z
4OP79kd5DvLg1AeOwaYP7cOXz8M+6xCH0E87xKNPvdfBfk6cHwZ94Ro48VXY
lx1iEGf6qEP8+shrHOs4NWt2qBcv6BBTvnb9zh26I9wbOMX38vH9fHDqR/tw
5yf7cOhn+/TV72G/dYh31H3XIR794jz49Kt9+jyLO54m4tRvjsELxpJEnPq7
Q/cVTv1jH+78ax8O/Wcf9nCv/+hQr//hPcEOXpLkwRLmxoc3eaJ98CyKRD69
2yl09kTPqUwUm+wzfdsh7rRirE7EozbfkZuISSgxGFclqodbMyXKg5UzJ/Jh
H3OQB79mSRSDNbMm8uHLXKFzJuITOkciTqHsdZL3xd2FSZ0T1cCFeULnTsQj
zjRbIk6hrAGbiFPTy/eCZwNHuiSqhyvzJvLh1kKhCybi0cKJfHjUNZHPPVo8
dLFEDFo0dJFEnKNugUS9u0Lo8ol4Rpx67veKiWIwkdz5E7GmW6J54dHSoUsl
4s4yiXy40z2RD5+WSFQDe3qELpfofrMv9gQ7WJ8YbCK+bKI+65loH/TuuqHr
JOr59RL5fDZ8lz3fcw93Vg1dJRF7Vg9dLRGDUGIwqFfoGokYt1KiNfgMDvZc
cJE49bBv5UR5sI+58eHXmonmgi8bhPZOxB10/UR8QtkrHOc5LZmIQZxj7UQM
2jBR/Qfx640S+XBwrURrwDVy1/K9Gem98p5gPp4vjNkkdONE3No8tE8iNm2R
yIc7Wyby4dBWiXzu7Dah/RJxjrrNEvFo60R58KlvIh8OEt800V2njhh9PiB0
l0Rs2j60fyI27ZDIh0E7JvJh0E6JfFjFd5Fum6i/UfYEj3ZOlAefmBsfruya
aD3YNDB0t0Q9PCTR96fDoz1D90jEnb0S+XBn70Q+rOF9PygR8/YN2ycR16jb
PRHLOSvPN3GcejhInLUzz0E9nNrP88Kh4WHDEvEIHZqIN0O9V94NfG589rDp
ANfAIO71iET82t/zwlfOyvlncpwa/h1A/t0s/v0sGDPKd4XP/oaw6xNx67Cw
QxOx6XD7cOcI+zBmTNjoRNw5KuzIRJyj7pBE/T850ffdz+049fT58Y51ci77
mC9srOeFU8eEHZ2IU8fahzvH2Yc141wDIyaGTUjEvtHe02Jen9gijlNPP5zg
fdCrZ4Wdmah3z7ZPL10UdmEiTp0UNjURe04JOzkRg9Bpifh0WtipiXpuitfg
Z8P5/Mx6OE49vX6i85b23Pjw9HTPBV/OCzs3EZ/QcxJx6hzvdUE/p/GJGMQ5
zkjEp/NdD4MusA8rp3uNns7F7+PP/7pELB/v5wtXLvazgFWXJ/p+eRh2hX3Y
dKV9euCasBmJ7uvVYVclYhx1fD89fXt72G2JWHaV6+npOxxb17mXJOqtaz0v
bLox0X2FTTfZh0E329/M56AG7twadkuiHprhPfXz+sS2dpx6GHOn90F/P5bo
u9fhwuP21/G+eC6w6d6wexJx5/6w+xLx6D7HYNCDYQ8k4t1dXoPf83CPuR+7
OE49HLzbeTt4bnz6+SHPBWOeCnsyEWvQJxIx6wnvlXfDhf7sd/c5+C55GPS0
62HSM/ZhxsNeY6Bz8fmZsr+fDXx5LtHvf/7/e7j5Xlt49HLYS4lY84p92POq
fVjzZtgbid6jr4e9loh51L2YqJ8/SfQdKwc6Tj138VPHhjr3hUTseMvzwqb3
wt5NxJr37cOeD+zDm7ddAyf4PpcPE70v3/Cexnh9Ykc5Tv1hnvudRP3xmfdE
//8a9kuiXvzcMXrrn7C/E3Hnq7AvE/Hom7CvEzHpa8dg3Beuh1vfOg9Wfmcf
Tvwc9lMiDn7pGljzQ9j3iZj0m/cEa363D3v+sH+i5/gxEQv+CvszERO/93pT
HGfe0xyn/lA/A57jdJ+Petjzr88Mq9K4F0kqBmWpfBiUp/Lpnzq0SnVPy9Ai
Fduo60jVw3OEdkp1j4lTT3/PmSoGB8n9L1FftlLNC49mDp0pFV9mSeXDm1lT
+TCmSVUDG2YPnS0V79gXe4I7rE8MdhCnHl7OlWof9Cjfd833XtPzi6byeZf8
5+cCX7rE2DypuDNf6Lyp2IMSg30LhM6finGdU61BHy4VumQqbhGnHvbNnSoP
9jE3PvxaMNVccKVb6OKp+IIulopPKHvlZ4fnE/U2rOEcC6dizRKp6uEC6+PD
r4VSrQGnyMWHGUun2ius7B66jO/BPqm+vx4+LRe6bCpu9Ujlw6PlU/nwaIVU
PvtaOXSlVFyjjnnh1oqp8uBRz1Q+vb1u6DqpzkMdMRjB2Nqp2LR66Gqp2LRG
Kh/W9Erlw541U/nwZtXQVVJxB2VP8GKtVHnwg7nx6Y31Uu2DXlk/lU+/bhW6
ZSqW9E4Vo8+2D+2fijUbhW6YikF879TGqTiEEoNrG6Sqh1WbpsqDj5ul8uEd
c5AHp/qkisGmzVP58KVfaN9UHEK3TsUjlL3CZp4T54dB26SqgRPbhW6bikGc
aYtU/EJZA44Qp4afFejFdiqmcFbqeS9xR7g3cIr3ys6pODUglQ93dk3lw6Hd
Uvn01Z6he6TiHXU7peLRwFR58Gn3VD59PixsaCpOUUes9tiQVJza1/cVTg2y
D3cG24dD+9nv8L3eK1Wvo+wJduzvvMpz48Ob4d4Hz+IA+/TuUWFHpnpOIxzj
vcKZdkzFnYPDDkrFo1FhI1MxaaRjMO5A18OtQ5wHKw+1P4vnIA9+HeYYrDnc
PnwZGzYmFZ/Q0ak4Ndp75R2yQ6q7C5PGuQYuHB02PhWPONMRqTh1hNdYwHFq
+Nmw7WcDR45xPVw51j7cmhw2KRWPjrcPj06wzz06KWxqKgadGDYlFeeom5iq
d88OOysVz6a4nvt9jmOLOndCKtZM87zw6LSwU1Nx53T7cGe6ffh0smtgz5lh
Z6S631O9p5W9PrGejlNPn53rfdC7V4Vdmarnr7bPZ8P3zvMd93DnwrALUrHn
4rCLUjHoIsdg0KVhl6Ri3Hleg8/gPc+1juPUw77zndfLc+PDr8s8F3y5Nuya
VNxBZ6Ti0wzvtYef0ympGMQ5rkjFoOtcD4Outw8HL/cavZ2Lz31533tdzvPx
fGHMjWE3pOLWrWG3pGLTbfbhzu324dAd9umle8PuScU56m5OxaM7nQef7rK/
leM3pbrrdztGnz8e9lgqNj2Y6mdi2PSQfRj0sH0Y9Ih9WMXPzvel6u/7vCd4
9Kjz9vDc+HDlCa8Hm54KezJVD/NdpnynKTx6NuyZVNx5zj7ced4+rHk57KVU
zHsx7IVUXKPu6VQsv8nPd4jj1O/rOGsP8xzUw6lXPC8cejPsjVQ8Ql9PxZvX
vdfN/bnx2cOmt1wDg7jXb6fi16ued2+flfMf4jg1/PnIC/7ZBcZ8kOqu8Nnz
HffzZuLWx2EfpWLTJ/bhzqf2YcyXYV+k4s7nYZ+l4hx1H6bq/1/Cfk7Frc9c
T5//6thRzmUfx4V95Xnh1Hdh36bi1Pf24c4P9mHN166BET+F/ZiKfV94T1O9
PrEpjlNPP/zmfdCreZw7y9S7RSafXpoptJ2JU3+F/ZmKPf+E/Z2KQX87Bp/+
C/s3Vc/97jW6+mw8szMdp55e/8N5p3lufHjKf4hmLvhSx6+rTHxCy0ycQtnr
JD+nb1IxiHOkmfjUylQPg5pMPqxMMq0B18jFp6f5/LtkYvk3fr5wZeZMzwJW
8d3yfIc4DOuUyYdNc2Ty6YG5Qztnuq9zhc6ZiXHU8R3k9O2ioYtkYhlx6unp
xTLFYDe5s2TqrXkyzQub5s90X2HTApl8GLRgJh/2cA5q4M7CoQtl6iH2xZ5g
Get3zcQs4tTDmMUz7YP+XjF0hUxc6JnJh83si+cCm5YKXTITd5YJXToTj1Bi
MGjZ0O6ZeNct0xqL+B5zP+AWcerh4BKZ8uAgc+PTz8tlmgvGrBK6cibWoCtl
YhbKXnk3cH/57OEQ51g+E4NWzVQPk1bL5MOMHpnWgFnk4vM9J3y3AH8eCrNW
z1QDb/h+6DUy8Wid0LUzsWbdTD7sWS+TD2s2DN0g03u0d+j6mZhH3VqZ+nnr
0K0ysY049dzFvplicJHcNTOxY6NM88KmzUI3zcSaPpl82LN5Jh/ebJypBk5s
GbpFpvcl+2JPMIj1icER4tTDQebeJFN/9Mu0J/p/YOhumXpxm0wxniPfe39y
Ju70D90uE492CN0+E5NQYjBu20z1cGvHTHmwcqdMPpxgnV0zcZD5qIE1u4Tu
nIlJu2faE6zZI5MPe/bM5MMa5hiQiQV7h+2ViYnMwXqwiTjzwiPi1MN4ngHP
EXbs43pYsq99+LR/2H6ZuDXEPjwaah8eDbNPLx0YNiIT16gb7Ls73Hnc5QPs
544PysSmEY7BiCPDjsjEplFhIzOx6RD7sOZQ+7DnMPvw5uCwgzL190HeE7w4
3HmdPTc+fDnK6/3v3Rk2OlOv8h3NfIc3PBofNi4TX462D2+OsQ9rJoVNzMSk
CWHHZeIadWMzcX2Qn29Xx4/NxMGxXntRz0E9fJnseeHQ1LATM/EI5fujl7Sy
V/r81Ez3FQad5BpYw/2dlolHx3veLj4r5+/uODUw4zTPBW9Ot8/nyXfL8x3z
sOmMsOmZWHWmfRh2ln3YdLZ9+HJ+2HmZ+Dvd88Ksc5wHj861DwuuCrsyE6vO
c2wDj12RiTcXh12UiVOX2IdTl9qHO5fZhzUXhl2QiXkXeE/w6XLn9fbc+PDl
au+DPplhn169I+z2TD10jWP02ANh92fi1PVh12Viz41hN2Ri0A2OwaFrXQ+n
bnIe3LrZ/maegzy4eYtjMOtW+7Dn7rC7MjEIvTMTV+70Xtfyc+L88Oge18CI
+8LuzcQsznRbJvbd5jV2dJwa3v/0Ij22s89KPffpu7BvMzGLf7vp4UzMetQ+
zHrMPgx63D798HTYU5m4SN1DmVj1hPNg05P26efXwl7NxKmnHBvhsVcycer5
TPcVTr1gH069aB8evWQfDnGvn8nUo894T3DqZecd4Lnx4crr3gfP4g379Pqn
YZ/4Ob3p2K4+04OZOPVO2NuZGPRe2LuZ2PSuYzDuLdfDqvedB6c+sH+I5yCP
Hv7QMXr6I/vw5cuwLzJx6vOwzzLx6zPvdYD3xd2FSV+5Bg59E/Z1Jj5xpo8z
cepjrzHBcWom+fOnBsZ8n+lO8B3zfEcz39kMt34K+zETm362D3d+sQ+HfrUP
d/4M+yMT56j7IRPPfnMevPvdPj1dxDp5Ln794Rh9zliWi03/hv2TiU3/2YdB
/A+n+DAoyeXDqr/D/srErL+8J3iU5sqDT8yNT4+VufZBz1W5fPp4ztA5cnGq
zhXjc+K77vnOexjUDm1ycWjm0Jly8QglBtdaueph4Sy58uDUrLl8eMcc5MGs
2XLF4NTsuXxYM3do51xMQufKxSaUvZ7h58T54dE8uWrgzryhXXKxiTN1ysUy
lDXgFHFquCub5DonTJkvVz28WSB0/lysWih0wVwMWziXD6e65vJh0CK5fJi0
aC6fu9stdPFcTEIXy3Wvl8gVg1OMUUMvLpkrBjt6hC7nf3OOf3tuqVycWiaX
D6e65/Lh0bK5fHhEHT68WCF0+VxMQpkXnjEf68FizseZYcyKuWrg1EqhPXOx
aZXQlXOxadVcPgxaLZcPg1bP5b/uHlszF+OoYy5YtUauPLjYK5cPs8jFh01r
56r/33s9155g0Pq5vl8VxqB83yqsQfnOeN4PfG58lnCrd64amEWceWHWBrli
MGvDXD6c4r5v6Dy+qx1GwJVNc90VPvtjwo7OxarNQ/vkYtmWoVvk4tRWuXwY
tHUuH+5sG7pNLsZRt1kuVvXNlQen+uXy6efdQnfNxTDqiMEPxgbk4tQOodvn
4tSOuXw4tVMuHx7tnMuHU/1Dt8vFQpQ9waldcuXBJubGhysDc+2Dfts9l08P
DwsbmqsX98gVo8dGhY3Mxam9w/bKxaB9w/bJxaZ9HINxe+aqh1WDnAcXB9uH
fcxBHvzazzH4tb99ODQi7IBcPEKH5+LNcO8VTvOcOD9sOtA1MOjgsINy8Ysz
DcnFwSFeYxbHqeGdw+fGnZjNZ6X+BL8Hvjer+A7xw3Ix7Aj7cOpI+zDoKPvc
2XFhY3MxjrpDc7FqtPNg0xj7MOKEsONz3fWxjnXz2ORcbDo2132FTcfZh00T
7MOdifZhAPd6fC4WjPee4NMk5y3uufFhxxTvA5acaB8unB12Vi5OTXVsDp/p
kFxsOjlsWi4enRp2Si5uneIYXDvJ9XDrNOfBptPtd/cc5MGI6Y7BjDPsw5rz
ws7NxSb0nFzMOsd77eR9cXfh0fmugUn8jHBBLoZxpjNzsexMr9HLcWr4c1J+
X7G6eXNJLo7wvdp8Ly3ffQt3rgi7PBd3rrQPd66yz926NuyaXO+nGWFX52IZ
dZfl6t07w+7Ixa2rXc/9vsux9ZzLd1NzZ6/zvPDo5rCbcnHnFvtw51b78Ol6
18Ce28Nuy8XBa7ynbb0+sX6OU7+l574xV8/d7T3R80+GPZGLU/c4Rp+9EPZ8
LgbdH3ZfLg49GPZALh494Bhcu9f1sPAh58Gph+3v5XUez8W++1wDpx4NeyQX
h57ynuDO0/bhzjP29/Qcj+VizXNhz+bi4CNebw/HmXew49Rv4WdwQy6OPO96
GPOizwyDXg17JRdfXrMPb163z918O+ytXLx5M+yNXJyj7uVc/fpZ2Ke5ePSG
6+npzx0b7tyXcvXiO54XBn0Q9n4u1nxoH9Z8ZB8mvesaePNJ2Me5euYt72mc
1yc2xnHqYdAX3gf9yvcy873d9Plv9od5XzwXWPNN2Ne5ePNd2Le5uPOtY3Dn
h7Dvc3HtS69BT/4T9ncuFn7venj3lfMmeG58mPWj54Ipf4b9kYs16O+5mPS7
98p/O+H37fx+/SSf4+dc3PnL9dO9Pj7s+8lrTHUuPvz413uFQfyltP/8efLd
8nzHPKxKQ5NCPMoK+bAmL+TDnqKQD29aoXUhtlHHvDCsLJTHzzRVIZ/enjN0
jkKcoo4YjGCsUyE2zRw6UyE2zVLIhzWzFvJhz2yFfHjTDm0KcQdlT/Bi9kJ5
8IO58emNzqFzFeqVuQv59OtioYsWYsk8hWL0WffQZQqxZr7QeQsxaIHQ+Qtx
CCUG17oUqodVCxbKg48LFfLhHXOQB6cWLhSDTV0L+fBlidBuhTiELl6IRyh7
hc08J84Pg5YsVAMnlg5dqhCDONMihfiFsgYcIU4NPx/Qi+/lYgpnpZ73z3++
N3CK90qPQpxaoZAPd1Ys5MOhnoV8+mrV0FUK8Y665QrxaKVCefBp5UI+fb5+
6HqFOEUdMXjB2LqFONWr0H2FU2sW8uHOWoV8OLR2IR/2cK9XK9TrKHuCHesU
yoMlzI0Pb3oX2gfPYoNCPr3bN3TrQs9pw0IxeM+Zli3EnU1CNy7Eo81CNy3E
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
JrE+MZhFnHwYs3tSHfQ3965z/zpcONgaNlMX+wKb9gwbkMSdvcIGJvFooGMw
aJ+wvZN41z9pDX7nedLnYyrHyYeDeySNm8xzo+nnfT0XjDks7NAk1uAPSWLW
Ia6VzwbOL++++TkOSGLQ4c6HSUdYw8f9w/ZLYtYB1nynnGT+whfuhOb3H+7M
5k5b7ruFR8eHHZfEmhOsYc+J1rDm5LDBSZ+jg8JOSmIeeccm9TN/d8LfoXRx
nHzO4nmOzeaxxySxY4jnhU2nh52WxJozrGHPmdbw5hTnwImzw85K+rwc7Jq6
en1iizpO/oKe+9Sk/hjqmuj/K8IuT+rF8x2jt64LuzaJO8PCLkzi0UVhw5OY
NNwxGHeB8+HWxR4HK0dYd/c6lyVx8ELnwJqRvKskJl3pmmDNVdawZ5T1Kp7j
0iQWXBN2dRITL/F6KzvOvGs6Tv4C3gP2cW0/H/mw53o/M6y6KezGJAaNsYZB
N1vTP7eFjU06p7eG3ZLENvJuSOrh+8PuSzrHtzif/n7AsXU9dnRSX97ueeHR
nWHjk/hylzW8udsaxoxzDmy4N+yeJN6NdU1beX1i/Rwn/3+fl66DHuXO62eT
ev55656ui32BL4+GPZLEncfDHktiz2OOwb4nw55IYtxDXoM+fC3s1SRuPeF8
2Pewx+3gudHw6ynPBVdeCnsxiS/4F5L49IJr5bvD0Um9vYef45kk1rzs/P28
/itJ/Hraa/T3WDTMeN21wso3w97w++Tueu6wh09vh72VxK13rOHRf6zh0bvW
1PVh2AdJXHvL88Kt9zwOHr1vTW9/HfaVn+cDx072z75MYtN/wz5JYtOn1rDm
M2vY87k1vPk47KMk7nzkmuDFFx432HOj6Y1vXAe98q01/fpX2J9JLPnOMfps
Mv6nyFms+THshyQG/Rz2UxKHfnIMrn3vfFj1i8fBx1+tz/AcjINTvzkGm363
hi//hP2dxCH8hCQeTXCtx3mfeH4YNNE5cGJS2L9JDOKZ/kji1x9eY4Tj5PBd
gV68I4kpPCv5fC5xRjg3cIrPlSmzONXJ0nAnZWk4lLM0fTV1+JbFO/KmyOJR
yRoHn2qWps9nCz9rFqfIIwYv+NksWZyaPuu8wqkZsjTcmTFLw6GZsjTs4VxP
k9XreGqCHTNnjYMlzI2GN7Nn1cFezJGl6d1Fwi+ctU9zZsXgPc80eRZ35g7f
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
4DeoYhaeWvls4Pzy7uEQz7FuFYM2rMqHSfweg4YZPavWgFmMRZ9gZvD7AXzh
Tmh+/+HO7LV83y082iL05lWs6VelYc+WVRrWbBt+m6rP0a3Db1XFPPI2q+rn
/uF3r2Ib8S19FveoisFFxm5axY7tquaFTTuF37GKNTtXadizS5WGN9tX5cCJ
3cLvWvV5SV3UBINYnxgcIU4+HGTuHar6Y4Brov8PDTukqhf3dIzeOibs6Cru
7B22VxWP9g3bp4pJ+zgG4wY6H27t53Gwcn/rab3OwVUc3Ms5sObAsAOqmHSY
a4I1h1vDniOsp/EcB1Wx4KiwI6uYeIDXm9px5p3JcfJhPHvAPs7i5yMf9hzr
Z4ZVJ3J2qhh0kjUMGmRN/5wSNqTqnJ4cNriKbeQdX9XD54cNrTrHg51Pf1/g
2Bwee1xVX57qeeHRmWFnVPHlLGt4dE7Y2VWMOc05sOG8sHOreDfENS3p9Ykt
7jj58PJC10GPcuf1lVU9P8p6dtfFvsCXi8MuquLOJWEjqtgzwjHYd2nYyCrG
DfMa9OHosOuruDXS+bBvuMd189xo+HWZ54Ir14ZdU8UX/NVVfLratfLdoW9V
b6/m57iiijXXOb+H10fDr8u9xqoei4YZN7hWWHlT2I1+n9xdzx328OnmsDFV
3LrFGh7dag2PxlpT1x1h46q4Nsbzwq3bPA4e3W5Nbz8U9qCfZ5xj2/pnD1Sx
6e6wu6rYdI81rLnXGvbcZw1v7gwbX8Wd8a4JXtzvcdt4bjS98bDroFcesaZf
Xwx7oYoljzpGn70Z9kYVa54Ie7yKQU+FPVnFoScdg2uPOR9WPe1x8PEZ6509
B+Pg1LOOwabnrOHLK2EvV3EI/1IVj15yrZt7n3h+GPSqc+DE62GvVTGIZ3q+
il/Pe439HSeH7wr04ulVTHnD+XwucUY4N3CKz5V3qjj1rjXcec8aDr1vTV99
HPZRFe/Ie7uKRx94HHz60Jo+/zbsmypOfeTYKf7Z11Wc+qzqvMKpz63hzhfW
cOhLa9jDuf6kqtc/cU2w4yuPG+K50fDmO9fBXnxvTe/+E/a39+kHxw7xM71V
xZ1fwn6u4tFvYb9WMelXx2Dcj86HW797HKz8w/psz/FTFb/+dAzW/GUNXyaF
/VvFJ/zEKk5NdK0Huy7OLkziwnZy4MLk3PfexCOeaUIVpyZ4DdhEnJyFvBfs
DRyZoikfrkzZpOFWCZ+beFSbNDxqTZpzNF34aZsYNE34qZs4R15q6t05w8/R
xDPi5HO+52qKwUTGdppYM33TvPBo5vAzNXFnliYNd2Zt0vBphqYc2DN7+Nma
zjd1URPsYH1isIk4+fRZl6Y66N2u4Rdr6vnFmzTvZsfwOzRxZ77w8zaxZ4Hw
8zcxCE8MBi0UfsEmxs3dtAbvYKemueAicfJh3zxN42Afc6Ph18JNc8GXpcIv
2cQd/BJNfMJTKxxnn2ZsYhDPsWgTg5ZuyodByzRpOLhI0xpwjbFozsvOTbXy
OcF87C+MWS78sk3cWjH8Ck1sWqlJw52VmzQcWqVJc2ZXD79aE+fIW76JR92b
xsGnVZs0HCTeremsk0eMPl8//HpNbFq76TsxbFqnScOgHk0aBvVs0rCK785r
NPU3nprg0bpN4+ATc6PhSq+m9WBT7/AbNPXwVuG3bOLRRuE3bOLOxk0a7mzS
pGHN5uE3a2LepuH7NnGNvD5NLOdZ2V+4RZx8OEicteEXc5APp7ZomhcObRt+
myYe4bdu4g2eWvls4L3x7mHTdk05MIhzvX0Tv/o1zfu/7w1Nzw+/iJPD34/w
edzXjNml6azw7i8JG9HErd3D79bEpv5NGu7s0aRhzF5hA5u4s2fYgCbOkbdr
U/8fGnZIE7cGOJ8+P8wxmMhY6pgqbG/PC6f2D9uviVMHWMOdA61hzT7OgREH
hx3UxL6Brmlar09sasfJpx8Odx306uCwQU29e7I1vXRm2BlNnDo67Kgm9hwb
dkwTg45xDD4dH3ZcU88d4TX4bjiV92x2x8mn14/0uJk9NxqenuC54MupYac0
8Qk/pIlTQ1xr9j7t28QgnuOkJj6d5nwYdLo1rDzRa3TxWPQKfv8XN7F8X+8v
XDnLewGrzgs7t4lhQ61h0/nW9MDwsGFN5/XCsAuaGEfeOU19exV708SyC5xP
T49yrKvHnt3UWxd5Xtg0sum8wqZLrWHQZdbL+znIgTtXhF3e1EPDXNNqXp9Y
d8fJhzFXuw76e2zYrU1cuM16MdfFvsCm68Oua+LODWGjm3g02jEYdFPYjU28
u8Zr8DsP55jzsZ7j5MPBaz1uHc+Npp/HeC4Yc0fYuCbW4G9vYtbtrpXPhjP8
7vv4OW5pYtB458OkO61hxs1eo7fHomHK3WF3hf0/jb+oow==
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztncGrVlUUxT+UIAt6Rk2MJlL0F5SQA09BEDRoUBkYFBQEjybFm+kssoej
DImaBgWRWYKFhEFZUESTIKiUKBQeRCa9aBLkwAIdBR91Pvb61m/de9/kweZy
7r3nnrPX3muvfb6dTz370NNbZrPZh9fPZlv/+X/4811vrx672La9se/sno2v
27W7H/v2yEtH2jz745e2HDj/4IX226+n777tgU/aH7dc883Knc+VXa8eZ579
08PPnNncttluWP3lupM3nmlHX93xw/ZDr7dz99918c+Dm23rie8/ak+ca0dX
bt+89atj8uvV9nnPU/Veanvv81Stk3nrsNf+yLsv7lt9a+Oq/Xh778n1L266
92DZ+K59pH6eqvl0XU+7L+291Puian7m2V/5ePvaT5d/bLOrf1fu+7JtPajx
0YWnV2b393b5+O61N9/faHvve+35m9c/wNlp8+/CRxreqfE65XqXP1c/T+9z
VvltNV6o30u9f1PijfTvro4f1HlcOu7Ps1e9V+84rvydxvOo44QUO80Pq/0h
LT5xxSGu76K2u/a72i+57Op8s4rHXhSXP1t99OTK/p/bd18+fGnHC6f+0141
zv8dXx0nVOF47/UuXHPlO+k8Q8o40/pZLF9LwQs1vqTXZ6u+r7oOS6sjq+sa
Kfb0uvnEbw/DXjU/LtzpvW+K3kM9z+rv5YqLXO9V9d1pOi61foDGq7t47yoc
d+m+1Pju4qsn3rI2D03JZ135CM1f9dqr8h3XukrX6VXhqctexben8PA0nXaK
veq9XPmXi0dNyS9c85Dev+OKl9L7jFx19t56Ny2eT6kXuOLhlLpzir49pT7u
yhdo8bb6Oae683J0v2pei4YLtPp+te6uSl+3vnPtrwN7LrR37jh0auWe0+V2
la6PFmeOTcerjh9o/Q4uPpB2Pc2ujn/UdU8X356el9HiFjfP4Iofesen8P80
PoFW76bFLel+wJUvu3gA9X2r/aHKv9HiARefr9ZN0eqGrnqEaz+66oO0/H2o
vLpLDzBPN5hyHkjvd3fhi/r8kGWdT1KV7wwt36f5yZQ6OK3e4YrrXHoA9fqk
8fkuPKX169HOE0uZT1cfBy1Om2dP12e6/CoNv1y6VvX8u+IHFw8wtvh5bPet
8udqPQCtTqHOp2j6Xlr9xcV/Vs2zi/em6ShouJ/Oh7jizBRdLo2vSNHhp/AG
KX0KLl3EUHWJtLhl6jtYzrqlrSt1/YXWZ+HySzQdWtX1tHOEaDqflHHU+52m
Z1bnlS7dRQpvqcZx17pNj0tT9IHqfbeo/uff9io8pfn/dLyjzRut74Dm/9V+
uBr3l93HROMfaHUuV12sipceKv+QUk9MWc9qXKPpyly6BRq/Slu3rrqVa55d
dXxa359rfdLynRSeLYX3SPef6Tib0m/o+j1W9e+0VvULuPoLxuZXXbqFKp6B
5g9dul8aL0rTLajrZbS+floe5NpHLj4hZX5S3otmd/VjunSVtPPK1PVKWjyZ
ou911R1c9amh1rPS8Zq2313nBtPWQ8rz03TdtPqdWs+wqD6h97x3yrmvNN24
+r6uvHtZ52rS9TPpOhaXLtdVL3CNk5LX0OJGFz/s0mGq9QCL+meXfdnnJ6fU
nV31Dtf36v2O6vFd50WkxBtjwxdav38KH+XibWg6aprdhfuu+IdWl0nRh6fg
guu+ap6QxvfS6gI03cJQx1HHLSk6H1pcoc53aPVWl85hbPYUvfHY7qvm1dPn
jcZL0PJr2jy74gfXuUbqcWh96Cn5sqv/lMb30uoRKfGJKz9N+Z2aqvHT4xna
8/fu6/R95PL/KTiSogui8ZYu/0/jsVP4WFo+SNNNpccn6X5DHS+p8TElT1fr
glzn9tD6ntTrU80D0Orv6jhW7QdS5plWBx+qPSXvdsWxNByn1cddut80Pb+q
D8tV10iv+7twnHb9pOvIstP47cle2y+Q1v9O0bG7+pVc8YAr7nLxIbQ6OK2u
4fpdJBrfNbY6yKRnY34v2nkpY8uXXfk47ffgqp6f1qffixc0v03jt2n+Of2+
k92772j7gqYTW9Y5eFXn41HwnXbeCO0ckhSdHk0XRNNTpeNFyji0/ZKyHlzx
cMr8q3kGVz7rOh9MzWNP+U4WjtD8fG/cou47U8+z671oeETjeVz29D5ltY5L
Xadw1SOq6gLT76EMG6+rcFPt/2l4TVsPNByk8bouXKM9v7pen9JnR9OHp5wD
37uuaM/p4vlpOELTU6W/lzr+dOHaUPtJ1f6cdj4qDZdT8NEVb6TgoMsf0vht
Gl67dEeuOCGdf66aB1r+q8Yp2u+Y0HTLtP7clN89ocVLaj6HhkcpehXa/KTg
lOt9e/fF3yNDosY=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Intervalle\"", TraditionalForm], None}, {
        FormBox["\"Zeit t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[1], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox["\"NaSch: Dichteplot mit Intervalll\[ADoubleDot]nge 10, p=0.15, \
und q=0\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 30.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                   "GraphicsLabel"}, StripOnInput -> False]}, {
                 "GraphicsTicks"}, StripOnInput -> False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxF1Qsw1OsbB3AplFKiUpJySaeUCp0i+ZYiSnskpCSXk46kkiQ6cg+5VkRK
tI6DaLHum0tESSqS0AXLrr3Kz6VoSZ3+89+x78wz885n3nne53nmnXlVnM9Z
uswUExOb8StcfsX/9gnVsp7dP7sgJlwjihKtC3SvQ7ZJfcSb3Q07jbphP0kv
/Gi1O7XjXBxiOrZ5LmjuEXoolnlQtOy8YyHhqSE4ZEdHBC3DrWJOLHRkfo76
XInBbp9Nequa6cLzCSDlWNASQ6MR5K/vO2DUixFCR0tpdjJc96b7F0dF4XHo
Hlp5aa8wTypCmKO7W29G4kckSRC6rg/XayMPUa6ScS/IeM5Q8jUY3LDVO5ja
J8yfgXLlpNcy5AhcTnL2XSHHgEbUZJx5eCZaKzjxmtnhKL/nTuNeZQjvfYAB
W/0jZvlhGPvHW1AiYKDKyv0lPyIXUmNRyn+VXoVuTqBe8BmmsJ48qMZ3MUKr
QnGhINKX1MvEurizocbGBTDYtPFBen0IqKUJNEXrfmGdVNi8Cjxb0xQMojJV
wHrej6+jmaqLnxXivFurTndrEDbUZesVGbCE9RcjSkpdMPk+EO6Nhb4BBSzU
2vbUME1KsM+M76fzJAA5zZW0/epsYV+lCAyJlTrXcgWcd88ECrfZiK5ScChu
KENx1eabOd1/Q+NTix5zLkfYLw2c8TYl1oAvTvR98C0I4OCwqsVUiOkjKGv7
ZKlMXkI6h0nzG+UI51ABK/fl2vZzvEEfHBSY/sWFWnjE3UONlYjIrK68reAF
5a/f9BZ/5ArnU41qutPettWesJ8Uv9xL4mGQX6Ontu8x/v+uPJDQ973AMoCH
9fIGMa+Ga+Aq7hB4stMLLxvH2HX5PDgVJF25ZvgE3dxyrSo/X8ykDilvofOQ
eGD0jHFUHQ69keuSV/GH/m2edaYsH4080vEZnfVwPFZqXOIchPMBzGiFXXz8
CM8hVak/g5IFI4VeHILsk911Eef50FktCd/zDWjfLftlrlQYeg50TgjIfLg+
cdq4pfo5bmzdsX/rkQgobGndfLqVjxSHqpXD0i9grumW7pwbCZLSS9dP4gNo
/b5UlnK4CVIrkwQxU9G4OvNZ2gGdAUje8RI7lfEST+TqLWh/xKGS97i9+s8B
6G9tGVIffgWDkG+HRlquY/QNTWZTwgDOtmn20nc0Q3Eq9qfUxA1o0or2kOt/
5S+vcyUZt2Dce3XuCrV4ON+n/C33dQDu4cOOD/ktaBuqsNExT0ByeFZhyOrP
kLRZeUT65hsUulmKm128hZazZO4X688gqx846LqtFdeZHMrx1ERI2dxddTLs
M/RHL5s9626F+/GAI14NScCOW4c7Sj/jXW32LvWrb2HauVgicug2vNXjYk3Z
n+FxvV0vWLMNGpYPC9KW3QFl7rWnNIVBSDvM0qa/acOsl0bHSozugjkS/H2d
6SAyNmivM/R5B7rxe6mm0ylQ+uCnk+IzCHx3UE1Rbkf143NF9IR7sKz1dpN5
MIjOFzGKE/XtuKMn6TBWlYrIbA+y//tBXEiukLM93QGfohTpeew01Ma5dRJz
CMx35UqXLuxETuKyj7IR9zHXaVFEgzwB6xlE0+91nRjRYy9QCiHDWrt6a9oK
Ail3vkSXeb2HflfxnjX+6bg/05XtvYYAU2fiwDaNDwgODPbV9v0HvLaFSaTN
BDRf/ZxP6/iAF2oWeTu8MqCbWWGisZ2A50mJFr1rHyHXsIJheu5f+F9yGZva
Q4D2U/rGI/1POOrGV7Byy8Rz0wWZ70gExJJlLbcPfEK6DM3cwSUL8oo0a4ot
ARPtJfKV97rAKggLcnPMhj3fWeKqM4GYpuVtBn90Q8vKqvSi3QNkVc4rOeZO
oO2Eyq0qsR54j6vwA21yMBxTekLXm8DyHxo2hoU9qL5DrIw+mIvtDo6L5gUS
oO5PjOrZTIekYZVVkvlDhG2Srmdc+zWfpcsG0iLpIPVGXkvfS0HLjOILFfEE
vjHvmjsy6EgMta2mGOVB8a29Wvy9X3OjKlNWGfSie43GaPmOfJzIkHrrlkVg
pz9ZpjehF/H9AnlnpQLkXaQGG1EJMPapnyV/7sXWMsc8dnIBBCZ22ooVBMIV
sl47mfThY0SD6RkFKnYvlegbriewjrl2o2paHwKOajFGEqiI4ebdaHxN4HXB
w7i+8T6orr91xUeuEB2PbHeROwl4XNk4lG7BwNOpSYUfcYVQiRYf9ukjsGhf
ocWfDxg41excGCJTBHf7h/ctBgiUL9lCVRNnQobcaD4nqgilWjYWv40ROMYo
W8g8ygTVcxM7dnax8P8bws98fc+MIias9yQFLQoTebbeV1uXASb8Fz59Xi5W
Mu2WdfnQWN2PrO6RBfZ/i3zS3E2Dbd+PltxVh2eMiTyjXV0mO7EfEz6k1H89
Sqed5Ngz6trcDzUTv34zvsjHuckf1s5mwVw+Z/2gS9m0379gVcvbycJFeseF
m3SRm03Nz871ZSGVIlHxu135tI+ENca6F7Lw7LKO+Md3Ir8rG3pxA58FYq+T
WYAFbdr33DE8NqjGxtLFcdfVmkQ+qCYwyj/Gxq6+yo4G40fTnkQpWutxiw23
fJ6ye43Id249K7v5NRvxfktPym6vmHZezW/jw5IcVJqZUIpLRB6/j9FVCA5Y
S7y+2G6qnHaDtnv1F3w4mM8kb5/KETnL3jZXl8rBNmpzMHl11bTHseVufuVy
4OQ/1Wh8X+Tbzr/yKVXlInK/5kKeYvW0906EO1yy46Jw6RHb2Fsijww1MtmW
wMWH/rA0bdnH0647f2q94CUXs4qKWe2RIu9KKpN/JMHDkp3DiVXiNdMepuI5
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             
             TemplateBox[<|"color" -> GrayLevel[1]|>, 
              "GrayLevelColorSwatchTemplate"]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"Max", "[", 
               RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8998870037668962`*^9, 3.8998876761470165`*^9, 3.899888164626534*^9, 
   3.8998887415509033`*^9, 3.899890462026965*^9, 3.899890815536274*^9, {
   3.899897352024807*^9, 3.8998973632894597`*^9}, 3.8998974035921664`*^9, {
   3.899917987881106*^9, 3.8999180086049876`*^9}, 3.8999180392339716`*^9, 
   3.8999182229875565`*^9, 3.8999242296852894`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"9e95cbf9-a45d-4a9a-a8ca-3d45ab0c4679"]
}, Open  ]],

Cell[TextData[StyleBox["Das Dichteplot stellt die Stra\[SZ]e \[UDoubleDot]ber \
die Zeit dar. Auf der y-Achse sind die Zellen der Stra\[SZ]e mit besetzten \
Zellen als helle Punkte und leere als dunkelblaue Punkte. Die Entwicklung \
\[UDoubleDot]ber die Zeit ist in positiver x-Richtung aufgetragen. Es l\
\[ADoubleDot]sst sich beobachten, dass eine Ansammlung von Autos bei t=0 in \
der Grafik in positiver x-Richtung nach unten wandert, indem Autos aus den \
vorderen Zellen der Ansammlung losfahren und die hinteren sich stauen bzw \
neue Autos auf den Stau auffahren.\nDas Modul dichteplot2D erstellt nach dem \
gleichen Schema wie oben einen Dichteplot pro Spur f\[UDoubleDot]r die \
Simulation einer zweispurigen Stra\[SZ]e anhand des Moduls twolanesNaSch. Es \
wird weiter unten f\[UDoubleDot]r die Auswertung dieses Moduls verwendet.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899376924567463*^9, 3.8993769444201417`*^9}, {
  3.899919671630472*^9, 3.8999197409557304`*^9}, {3.8999198488675966`*^9, 
  3.899919871628131*^9}},ExpressionUUID->"7752114c-3962-4473-8c88-\
ad703be852ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Dichteplot", " ", "\[UDoubleDot]ber", " ", "Zeit", " ", "der", " ", 
    "zwei", " ", "Spuren", " ", "getrennt"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"dichteplot2D", "[", 
    RowBox[{"nCar_", ",", "p_", ",", "avCells_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "anzahl", ",", "laengen", ",", 
       "iter", ",", "t", ",", "k", ",", "cell", ",", "nasch"}], "}"}], ",", 
     "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "150"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Liste", " ", "Plots"}], "*)"}], "\n", 
      RowBox[{"listdichteplot", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Daten", " ", "Eingabe"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"twolanesNaSch", "[", 
        RowBox[{"nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"nasch", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Liste", " ", "Anzahl", " ", "Autos", " ", "innerhalb", " ", 
        "Intervall", " ", "avCells", " ", "und", " ", "das", " ", "pro", " ", 
        "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Index", " ", "f"}], "+", 
        RowBox[{
        "r", " ", "separates", " ", "Betrachten", " ", "der", " ", 
         "Spuren"}]}], "*)"}], "\n", 
      RowBox[{"k", "=", "1"}], ";", "\n", 
      RowBox[{"Do", "[", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Anzahl", " ", "der", " ", "Intervalle", " ", "avCells", " ", "in", 
           " ", "nCells"}], "=", "iter"}], ",", " ", 
         RowBox[{
          RowBox[{
          "Anzahl", " ", "Autos", " ", "innerhalb", " ", "Intervall"}], "=", 
          "anzahl"}]}], "*)"}], "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"iter", "=", "0"}], ";", 
         RowBox[{"t", "=", "1"}], ";", 
         RowBox[{"anzahl", "=", "0"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"For", "-", 
           RowBox[{
           "Schleife", " ", "f\[UDoubleDot]r", " ", "einzelne", " ", 
            "Intervalle", " ", "mit", " ", "L\[ADoubleDot]nge", " ", 
            "avCells"}]}], "*)"}], "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"cell", "=", 
            RowBox[{"1", "+", "iter"}]}], ",", 
           RowBox[{"cell", "<=", 
            RowBox[{"avCells", "+", "iter"}]}], ",", 
           RowBox[{"cell", "++"}], ",", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Falls", " ", "Auto", " ", "auf", " ", "Zelle"}], ",", 
             " ", 
             RowBox[{"Anzahl", " ", "erh\[ODoubleDot]hen"}]}], "*)"}], "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"nasch", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", ",", "t"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "==", "cell"}], " ", "&"}]}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"anzahl", "=", 
               RowBox[{"anzahl", "+", "1"}]}], ",", 
              RowBox[{"anzahl", "=", "anzahl"}]}], "]"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Falls", " ", "letzte", " ", "Zelle", " ", "des", " ", 
               "Intervalls", " ", "betrachtet"}], ",", " ", 
              RowBox[{"Anzahl", " ", "abgespeichert"}], ",", " ", 
              RowBox[{"wieder", " ", "auf", " ", "0"}]}], "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Divisible", "[", 
               RowBox[{"cell", ",", "avCells"}], "]"}], ",", "\n", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"laengen", ",", "anzahl"}], "]"}], ";", "\n", 
               RowBox[{"anzahl", "=", "0"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "Falls", " ", "letzte", " ", "Subliste", " ", "in", " ", 
                  "xnasch", " ", "betrachtet"}], ",", " ", 
                 RowBox[{
                  RowBox[{
                  "n\[ADoubleDot]chsten", " ", "Intervall", " ", "betrachten",
                    " ", "ab", " ", "erster", " ", "Subliste", " ", "mit", 
                   " ", "t"}], "=", "0"}]}], "*)"}], "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"t", "==", "tMax"}], ",", "\n", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"iter", "=", 
                    RowBox[{"iter", "+", "avCells"}]}], ";", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"iter", ">", 
                    RowBox[{"nCells", "-", "avCells"}]}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", 
                   RowBox[{"t", "=", "1"}], ";"}], ")"}], ",", "\n", 
                 RowBox[{"(*", 
                  RowBox[{"Sonst", ":", " ", 
                   RowBox[{
                   "n\[ADoubleDot]chste", " ", "Subliste", " ", "betrachten", 
                    " ", "mit", " ", "gleichem", " ", "Intervall"}]}], "*)"}],
                  "\n", 
                 RowBox[{
                  RowBox[{"t", "=", 
                   RowBox[{"t", "+", "1"}]}], ";"}]}], "]"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                "Betrachten", " ", "erste", " ", "Zelle", " ", "im", " ", 
                 "Intervall", " ", "f\[UDoubleDot]r", " ", 
                 "n\[ADoubleDot]chsten", " ", "Durchgang"}], "*)"}], "\n", 
               RowBox[{"cell", "=", 
                RowBox[{"1", "+", "iter"}]}], ";"}]}], "\n", "]"}], ";"}]}], 
          "\n", "]"}], ";", "\n", 
         RowBox[{"k", "=", "2"}], ";"}], ",", "2"}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Ergebnis", " ", "ist", " ", "Liste", " ", "mit", " ", "Anzahlen", 
          " ", "der", " ", "Autos", " ", "von", " ", "Zelle", " ", "0", " ", 
          "bis", " ", "avCells", " ", "f\[UDoubleDot]r", " ", "t"}], "=", 
         "1"}], ",", "2", ",", "3", ",", "...", ",", " ", 
        RowBox[{
         RowBox[{"dann", " ", "von", " ", "Zelle", " ", "avCells"}], "+", 
         RowBox[{"1", " ", "bis", " ", "2", " ", "avCells", " ", 
          RowBox[{"usw", "."}]}]}]}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Aufteilen", " ", "laengen", " ", "in", " ", "abwechselnde", " ", 
        "Sublisten", " ", "der", " ", "Spuren", " ", "f\[UDoubleDot]r", " ", 
        "die", " ", "Intervalle"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"laengen", ",", "tMax"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"listdichteplot", ",", 
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"laengen", ",", 
            RowBox[{"nCells", "/", "avCells"}]}], "]"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Intervalle\>\""}], "}"}]}], 
          ",", 
          RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<twolanesNaSch Spur 1: Dichteplot mit \
Intervalll\[ADoubleDot]nge \>\"", "<>", 
            RowBox[{"ToString", "[", "avCells", "]"}], "<>", 
            "\"\<\\n und p=\>\"", "<>", 
            RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
          RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
          RowBox[{"LabelStyle", "->", "White"}], ",", 
          RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}]}], "]"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"listdichteplot", ",", 
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"laengen", ",", 
            RowBox[{"nCells", "/", "avCells"}]}], "]"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Intervalle\>\""}], "}"}]}], 
          ",", 
          RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<twolanesNaSch Spur 2: Dichteplot mit \
Intervalll\[ADoubleDot]nge \>\"", "<>", 
            RowBox[{"ToString", "[", "avCells", "]"}], "<>", 
            "\"\<\\n und p=\>\"", "<>", 
            RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
          RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
          RowBox[{"LabelStyle", "->", "White"}], ",", 
          RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}]}], "]"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"Return", "[", "listdichteplot", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfeVVA18D31tHZpFVAiD62psrWSD6hfWpUhB9YvqW
KhDNIuxZB6L9pDjbQPQ5FiUwnfTFtBdEp82dPgFEMzzhmwmiFazfzALRd+7u
XACii7cnLwLRZmX/VoDoRRY2G0B0QGrvVhB9Rj5pJ4jeFPrzGNg+kd7jIHqB
78dfIDpvcgVTI5BmeikjBKJV1nuJgegl+1arguiugPmaIDqmMtUHRHu/d/EH
0R/KLSNBtN/q18kg+oaZeD6IdspQ6AXRG8JOzQHRIpvy54HoHwEy20C00Onl
YLr52fy7ILpO/yiYnlL3RKgFSEdEvgTTAFgilTg=
  "],ExpressionUUID->"15a04ccb-9817-4d90-b556-0154fcf6b2d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Histogramme",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"e5f36a8b-8b9a-4faf-8be1-e5f9ffdb8c9f"],

Cell[TextData[StyleBox["In diesem Modul werden Histogramme der \
Geschwindigkeit und des Abstand f\[UDoubleDot]r die Autoanzahlen in carlist, \
die Zeitpunkte in tlist und die Tr\[ODoubleDot]delwahrscheinlichkeit p und f\
\[UDoubleDot]r das VDR-Modell die zus\[ADoubleDot]tzliche \
Tr\[ODoubleDot]delwahrscheinlichkeit q erstellt. Falls Histogramme f\
\[UDoubleDot]r die oben berechneten Autoanzahlen erstellt werden sollen, wird \
auf diese Daten in der Liste histonasch zugegriffen. \n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8995687665500584`*^9, 3.899568804950272*^9}, {
  3.899568849127343*^9, 
  3.8995689503751855`*^9}},ExpressionUUID->"eabf6e1e-9efb-4db8-a5fe-\
7103953589b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Daten", " ", "NaSch"}], "-", 
      RowBox[{"Modell", " ", "f\[UDoubleDot]r", " ", "nCar"}]}], "=", "60"}], 
    ",", "100", ",", "200"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"histonasch", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NaSch", "[", 
       RowBox[{"60", ",", "300", ",", "100", ",", "5", ",", "0.15"}], "]"}], 
      ",", "nasch100", ",", 
      RowBox[{"NaSch", "[", 
       RowBox[{"200", ",", "300", ",", "100", ",", "5", ",", "0.15"}], 
       "]"}]}], "}"}]}], ";"}]}]], "Code",
 CellChangeTimes->{3.899568737389908*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"ae4289fd-3737-485a-ac1a-684d677e1de5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Falls", " ", "Modell", " ", "NaSch"}], ",", " ", 
    RowBox[{"q", "=", "0"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"vdhisto", "[", 
    RowBox[{"Modell_", ",", "carlist_", ",", "tlist_", ",", "p_", ",", "q_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"tlist", " ", "sind", " ", "Zeitpunkte"}], ",", " ", 
      RowBox[{
       RowBox[{
       "f\[UDoubleDot]r", " ", "die", " ", "Histogramme", " ", "zu", " ", 
        "bestimmen", " ", "sind"}], ";", " ", 
       RowBox[{
       "auch", " ", "einzelnen", " ", "Zeitpunkt", " ", "als", " ", "Liste", 
        " ", "eingeben"}]}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "nCar", ",", "tMax", ",", "vMax", ",", "anzahlt", ",", 
       "anzahlcars", ",", "zeit", ",", "viAutos", ",", "diAutos", ",", "i", 
       ",", "vhisto", ",", "dhisto", ",", "histoplot", ",", "nasch"}], "}"}], 
     ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Listen", " ", "der", " ", "Plots"}], "*)"}], "\n", 
      RowBox[{"histoplot", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"anzahlt", "=", 
       RowBox[{"Length", "[", "tlist", "]"}]}], ";", "\n", 
      RowBox[{"anzahlcars", "=", 
       RowBox[{"Length", "[", "carlist", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "F\[UDoubleDot]r", " ", "betrachtete", " ", "Anzahlen", " ", "Autos"}],
        "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "anzahlcars"}], ",", 
        RowBox[{"k", "++"}], ",", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Anzahl", " ", "Autos"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"nCar", "=", 
          RowBox[{"carlist", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder",
            " ", "vdr"}], "*)"}], "\n", 
         RowBox[{"nasch", "=", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"p", "==", "0.15"}], ",", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", 
                   "nCar"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"NaSch", "[", 
                  RowBox[{
                  "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}],
                   "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "60"}], ",", 
                RowBox[{"histonasch", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "100"}], ",", 
                RowBox[{"histonasch", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "200"}], ",", 
                RowBox[{"histonasch", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", 
              RowBox[{"!", 
               RowBox[{"p", "==", "0.15"}]}], ",", 
              RowBox[{"NaSch", "[", 
               RowBox[{
               "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
            RowBox[{"vdrNaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
              "q"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<=", "anzahlt"}], ",", 
           RowBox[{"j", "++"}], ",", "\n", 
           RowBox[{"(*", 
            RowBox[{"Betrachtete", " ", "Zeit"}], "*)"}], "\n", 
           RowBox[{
            RowBox[{"zeit", "=", 
             RowBox[{"tlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{
               "Listen", " ", "Autos", " ", "mit", " ", "Geschwindigkeiten", 
                " ", "v"}], "=", "0"}], ",", "1", ",", "2", ",", "3", ",", 
              "4", ",", "5"}], "*)"}], "\n", 
            RowBox[{"Clear", "[", "viAutos", "]"}], ";", "\n", 
            RowBox[{"viAutos", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "zeit", ",", "n"}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
            "\n", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"Listen", " ", "Abst\[ADoubleDot]nde", " ", "d"}], "=",
                "0"}], ",", "1", ",", "...", ",", "nCar"}], "*)"}], "\n", 
            RowBox[{"Clear", "[", "diAutos", "]"}], ";", "\n", 
            RowBox[{"diAutos", "=", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "zeit", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "zeit"}], "]"}], "]"}], "]"}]}], 
                  "}"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"UnsameQ", "[", 
                 RowBox[{"#", ",", " ", 
                  RowBox[{"{", "}"}]}], "]"}], " ", "&"}]}], "]"}]}], ";", 
            " ", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "L\[ODoubleDot]schen", " ", "der", " ", 
               "Abst\[ADoubleDot]nde"}], ",", " ", 
              RowBox[{"die", " ", "nicht", " ", "vorkommen"}]}], "*)"}], "\n",
             "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"histoplot", ",", 
              RowBox[{"Histogram", "[", 
               RowBox[{"viAutos", ",", 
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"AxesLabel", "->", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"v", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
                RowBox[{"PlotRange", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "5.5"}], "}"}], ",", 
                   "Automatic"}], "}"}]}], ",", 
                RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                RowBox[{"PlotLabel", "->", 
                 RowBox[{
                  RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
                  "\"\<: Histogramm von v mit \>\"", "<>", 
                  RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                  "\"\< Autos,\\n t=\>\"", "<>", 
                  RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                  "\"\<, p=\>\"", "<>", 
                  RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
                RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], ";", 
            "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"histoplot", ",", 
              RowBox[{"Histogram", "[", 
               RowBox[{"diAutos", ",", 
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"AxesLabel", "->", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"d", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
                RowBox[{"PlotRange", "->", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                RowBox[{"PlotLabel", "->", 
                 RowBox[{
                  RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
                  "\"\<: Histogramm von d mit \>\"", "<>", 
                  RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                  "\"\< Autos,\\n t=\>\"", "<>", 
                  RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                  "\"\<, p=\>\"", "<>", 
                  RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
                RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], 
            ";"}]}], "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Histogramm", " ", "z\[ADoubleDot]hlt"}], ",", " ", 
            RowBox[{
            "wie", " ", "oft", " ", "eine", " ", "Zahl", " ", "in", " ", 
             "einer", " ", "Liste", " ", "und", " ", "den", " ", "Sublisten", 
             " ", "darin", " ", "vorkommt"}]}], "*)"}], "\n", "]"}], ";"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"Return", "[", "histoplot", "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995688394956374`*^9, {3.899569852164028*^9, 3.899569871997429*^9}, {
   3.8998989196149435`*^9, 3.899898938529084*^9}, {3.89991001540347*^9, 
   3.899910062546559*^9}, {3.8999105780589514`*^9, 3.899910666345428*^9}, {
   3.8999106974937315`*^9, 3.899910740086793*^9}, {3.899910784261219*^9, 
   3.899911005092961*^9}, {3.8999110911138*^9, 3.899911134202111*^9}, {
   3.899911392153963*^9, 3.8999114907058625`*^9}, {3.8999122467313576`*^9, 
   3.8999122531063695`*^9}, {3.8999155736672935`*^9, 3.899915575127058*^9}, {
   3.8999158244349833`*^9, 3.899915831493349*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"23c5c7e7-aa96-4062-8106-6ea28332da4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"histoplot", "=", 
   RowBox[{"vdhisto", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100"}], "}"}], ",", "0.15", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"histoplot", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"histoplot", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
       RowBox[{"histoplot", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{"histoplot", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8995689737053113`*^9, 3.8995689840896273`*^9}, {
  3.8998873022170143`*^9, 3.899887302374037*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3d2b2861-c274-48a0-acb3-ba568f511d5f"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684816`, 
                  98.60419607176112}, {-64.62585752747427, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.937111, 0.3196685555555555, 0.02599205555555556], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176112, 
                  133.36077662283742`}, {-97.92101710307175, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283743`, 
                  168.11735717391372`}, {-64.62585752747425, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 15}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391373`, 
                  202.87393772499001`}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 15]& ,
              TagBoxNote->"15"],
             StyleBox["15", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[15, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7828637777777778, 0.10864444444444443`, 
                0.0052745333333333345`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499003`, 
                  237.6305182760663}, {-81.273437315273, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 15}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760663, 
                  272.3870988271426}, {-139.5399665725686, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 15]& ,
              TagBoxNote->"15"],
             StyleBox["15", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[15, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  77.75024774111532}, {-62.704982936574375`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111533, 
                  91.65287996154586}, {-81.91372884557292, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.20287996154585, 
                  105.55551218197638`}, {-81.91372884557292, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197637`, 
                  119.4581444024069}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240688`, 
                  133.3607766228374}, {-81.91372884557292, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9799753333333333, 0.4663636666666666, 0.04824903333333333], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  147.2634088432679}, {-91.51810180007222, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326792`, 
                  161.16604106369846`}, {-43.49623702757584, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.71604106369844`, 
                  175.06867328412898`}, {-43.49623702757584, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{174.61867328412896`, 
                  188.9713055045595}, {-43.49623702757584, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{188.52130550455948`, 
                  202.87393772499001`}, {-24.28749111857727, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5865376666666666, 0.04074166666666666, 0.0118677], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{12.5, 0.}, {13.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{244.13183438628153`, 
                  258.4844666067121}, {-33.89186407307656, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{258.03446660671204`, 
                  272.38709882714255`}, {-24.287491118577293`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9017319230769231, 0.2589166923076923, 0.019211699999999998`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  
                  98.60419607176104}, {-84.04803394657279, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9472193076923077, 0.3370262307692308, 0.027929300000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.36077662283742`}, {-90.98452552482225, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  168.11735717391366`}, {-49.36557605532537, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391364`, 
                  202.87393772499001`}, {-70.17505079007383, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606625`}, {-70.17505079007383, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760662, 
                  272.3870988271426}, {-139.5399665725686, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.6815686, 0.08952772], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  77.7502477411152}, {-116.83872140738848`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111521, 
                  91.65287996154586}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.20287996154585, 
                  105.55551218197627`}, {-48.734985911848135`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197625`, 
                  119.4581444024069}, {-60.0856084944382, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240688`, 
                  133.36077662283728`}, {-105.48809882479843`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228373, 
                  147.2634088432679}, {-105.48809882479843`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326792`, 
                  161.16604106369834`}, {-48.734985911848135`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.71604106369833`, 
                  175.06867328412895`}, {-105.48809882479843`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  216.77656994542042`}, {-60.0856084944382, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{216.3265699454204, 
                  230.67920216585105`}, {-26.033740746668038`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{258.03446660671204`, 
                  272.38709882714244`}, {-26.03374074666806, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -119.58957682310464},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  77.75024774111537}, {-62.70498293657436, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111538, 
                  91.65287996154592}, {-81.91372884557292, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.2028799615459, 
                  105.55551218197644`}, {-81.91372884557292, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197642`, 
                  119.45814440240696`}, {-139.53996657256855`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240694`, 
                  133.36077662283745`}, {-81.91372884557292, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9799753333333333, 0.4663636666666666, 0.04824903333333333], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  147.26340884326797`}, {-91.51810180007219, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326798`, 
                  161.16604106369851`}, {-43.49623702757581, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.7160410636985, 
                  175.06867328412903`}, {-43.49623702757581, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{174.61867328412902`, 
                  188.97130550455955`}, {-43.49623702757581, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{188.52130550455954`, 
                  202.87393772499007`}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5865376666666666, 0.04074166666666666, 0.0118677], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{12.5, 0.}, {13.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{244.13183438628158`, 
                  258.48446660671215`}, {-33.89186407307656, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{258.0344666067121, 
                  272.3870988271426}, {-24.28749111857728, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9017319230769231, 0.2589166923076923, 0.019211699999999998`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-84.04803394657276, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9472193076923077, 0.3370262307692308, 0.027929300000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283748`}, {-90.98452552482225, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-49.36557605532537, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-70.17505079007381, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-70.17505079007381, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.3870988271426}, {-139.53996657256857`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.6815686, 0.08952772], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  77.75024774111543}, {-116.83872140738848`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111544, 
                  91.65287996154586}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.20287996154585, 
                  105.5555121819765}, {-48.73498591184815, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197648`, 
                  119.4581444024069}, {-60.085608494438205`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240688`, 
                  133.3607766228375}, {-105.48809882479843`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  147.2634088432679}, {-105.48809882479843`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326792`, 
                  161.16604106369857`}, {-48.73498591184815, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.71604106369855`, 
                  175.06867328412895`}, {-105.48809882479843`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  216.77656994542065`}, {-60.085608494438205`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{216.32656994542063`, 
                  230.67920216585105`}, {-26.033740746668038`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{258.03446660671204`, 
                  272.38709882714267`}, {-26.03374074666806, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 30}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  98.60419607176104}, {-139.5399665725686, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 30]& ,
              TagBoxNote->"30"],
             StyleBox["30", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[30, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.65385692, 0.082042264], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.3607766228373}, {-114.56859689087048`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.98678372, 0.52775588, 0.059102468000000005`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 21}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228373, 
                  168.11735717391377`}, {-102.08291205002142`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 21]& ,
              TagBoxNote->"21"],
             StyleBox["21", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[21, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.86352252, 0.19330468, 0.011888916000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499001`}, {-68.78775247442393, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.58182584, 0.039112, 0.012025936000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606625`}, {-43.8163827927258, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760662, 
                  272.3870988271425}, {-35.492592898826445`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 100 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -358.76873046931394},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9017319230769231, 0.2589166923076923, 0.019211699999999998`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  98.60419607176115}, {-84.04803394657276, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9472193076923077, 0.3370262307692308, 0.027929300000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283748`}, {-90.98452552482222, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-49.36557605532537, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499001`}, {-70.1750507900738, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499003`, 
                  237.6305182760663}, {-70.1750507900738, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760663, 
                  272.38709882714267`}, {-139.53996657256857`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.6815686, 0.08952772], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  77.75024774111537}, {-116.83872140738848`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111538, 
                  91.65287996154592}, {-139.53996657256855`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.2028799615459, 
                  105.55551218197644`}, {-48.734985911848106`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197642`, 
                  119.45814440240696`}, {-60.08560849443817, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240694`, 
                  133.36077662283745`}, {-105.48809882479843`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  147.26340884326797`}, {-105.48809882479843`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326798`, 
                  161.16604106369851`}, {-48.734985911848106`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9939926, 0.5927594, 0.07059434], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.7160410636985, 
                  175.068673284129}, {-105.48809882479843`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 4}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{202.4239377249901, 
                  216.77656994542053`}, {-60.08560849443817, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{216.32656994542052`, 
                  230.67920216585117`}, {-26.033740746668038`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{258.03446660671216`, 
                  272.38709882714255`}, {-26.03374074666806, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 30}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  98.60419607176104}, {-139.53996657256857`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 30]& ,
              TagBoxNote->"30"],
             StyleBox["30", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[30, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.65385692, 0.082042264], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.36077662283742`}, {-114.56859689087047`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.98678372, 0.52775588, 0.059102468000000005`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 21}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  168.11735717391366`}, {-102.08291205002142`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 21]& ,
              TagBoxNote->"21"],
             StyleBox["21", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[21, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.86352252, 0.19330468, 0.011888916000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391364`, 
                  202.87393772499001`}, {-68.78775247442393, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.58182584, 0.039112, 0.012025936000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606625`}, {-43.81638279272577, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760662, 
                  272.3870988271426}, {-35.492592898826445`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 100 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 26}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  82.8057503667263}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 26]& ,
              TagBoxNote->"26"],
             StyleBox["26", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[26, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.76470364, 0.11198408800000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{82.35575036672631, 
                  101.76388521276806`}, {-129.93559361806925`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.6815686, 0.08952772], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 21}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{101.31388521276804`, 
                  120.72202005880956`}, {-115.52903418632035`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 21]& ,
              TagBoxNote->"21"],
             StyleBox["21", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[21, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.86352252, 0.19330468, 0.011888916000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{120.27202005880955`, 
                  139.6801549048513}, {-57.902796459324726`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.86352252, 0.19330468, 0.011888916000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{139.23015490485128`, 
                  158.6382897508928}, {-57.902796459324726`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.69490968, 0.078224, 0.008228272], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{158.18828975089278`, 
                  177.59642459693453`}, {-38.69405055032613, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.52528392, 0.019556, 0.013924768], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{177.1464245969345, 
                  196.55455944297603`}, {-24.28749111857727, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.609], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{196.104559442976, 
                  215.51269428901776`}, {-19.485304641327595`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{215.06269428901774`, 
                  234.47082913505926`}, {-19.485304641327595`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{234.02082913505924`, 
                  253.428963981101}, {-19.485304641327595`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{252.97896398110095`, 
                  272.3870988271425}, {-19.485304641327616`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.72, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 100 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 10.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -597.9478841155233},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.899887005282089*^9, 3.8998876789070454`*^9, 
  3.8998881673391314`*^9, 3.8998887444800196`*^9, 3.899890472346527*^9, 
  3.899890820772911*^9, 3.899924232566784*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"14ac0e08-89f9-4540-bc1b-3d16e3b511bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "histoplot", "]"}], ";"}]], "Code",
 CellChangeTimes->{3.8995690010086737`*^9, 3.899569345820819*^9, 
  3.8995694773735733`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"55fa524d-842a-45cb-86c7-a06bf0db0fbe"],

Cell[TextData[StyleBox["Aus den Histogrammen der Abst\[ADoubleDot]nde l\
\[ADoubleDot]sst sich beobachte, dass je gr\[ODoubleDot]\[SZ]er der Abstand \
zwischen den Autos ist, desto weniger Autos sind mit diesem Abstand vorhanden \
aufgrund der festen Anzahl der Zellen. Dieser Effekt wird umso \
st\[ADoubleDot]rker, je h\[ODoubleDot]her die Anzahl der Autos ist. Bei 60 \
Autos haben hingegen ein Drittel der Autos einen Abstand, der gr\[ODoubleDot]\
\[SZ]er als die Maximalgeschwindigkeit 5 ist.\nDie Histogramme der \
Geschwindigkeiten zeigen, dass mit steigender Autoanzahl der Anteil der \
Autos, die die Geschwindigkeit 1 oder 0 besitzen, stark ansteigt.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8995690211008515`*^9, 
  3.899569279667104*^9}},ExpressionUUID->"b34803e0-89b9-4ed8-a613-\
7d0d4a62345e"],

Cell[TextData[StyleBox["In diesem Modul werden Histogramme f\[UDoubleDot]r \
die zweispurige Simulation erstellt. Es wird f\[UDoubleDot]r das Betrachten \
des Moduls twolanesNaSch weiter unten verwendet.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8999116067496195`*^9, 3.8999116571690817`*^9}, {
  3.899915904836564*^9, 
  3.89991595004805*^9}},ExpressionUUID->"c9da176a-3619-45eb-b38a-\
0c50956619f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Histogramme", " ", "f\[UDoubleDot]r", " ", "beide", " ", "Spuren", " ", 
    "getrennt"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"vdhisto2D", "[", 
    RowBox[{"carlist_", ",", "tlist_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"tlist", " ", "sind", " ", "Zeitpunkte"}], ",", " ", 
      RowBox[{
       RowBox[{
       "f\[UDoubleDot]r", " ", "die", " ", "Histogramme", " ", "zu", " ", 
        "bestimmen", " ", "sind"}], ";", " ", 
       RowBox[{
       "auch", " ", "einzelnen", " ", "Zeitpunkt", " ", "als", " ", "Liste", 
        " ", "eingeben"}]}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "nCar", ",", "tMax", ",", "vMax", ",", "anzahlt", ",", 
       "anzahlcars", ",", "zeit", ",", "viAutos", ",", "diAutos", ",", "i", 
       ",", "l", ",", "vhisto", ",", "dhisto", ",", "histoplot", ",", 
       "nasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "150"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Listen", " ", "der", " ", "Plots"}], "*)"}], "\n", 
      RowBox[{"histoplot", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"anzahlt", "=", 
       RowBox[{"Length", "[", "tlist", "]"}]}], ";", "\n", 
      RowBox[{"anzahlcars", "=", 
       RowBox[{"Length", "[", "carlist", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "F\[UDoubleDot]r", " ", "betrachtete", " ", "Anzahlen", " ", "Autos"}],
        "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "anzahlcars"}], ",", 
        RowBox[{"k", "++"}], ",", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Anzahl", " ", "Autos"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"nCar", "=", 
          RowBox[{"carlist", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder",
            " ", "vdr"}], "*)"}], "\n", 
         RowBox[{"nasch", "=", 
          RowBox[{"twolanesNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
           "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Nur", " ", "Geschwindigkeiten", " ", "und", " ", 
           "Abst\[ADoubleDot]nde", " ", "aus", " ", "Ausgabe", " ", 
           "ausw\[ADoubleDot]hlen"}], "*)"}], "\n", 
         RowBox[{"nasch", "=", 
          RowBox[{"Delete", "[", 
           RowBox[{"nasch", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "7", "}"}], ",", 
              RowBox[{"{", "8", "}"}], ",", 
              RowBox[{"{", "9", "}"}], ",", 
              RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Schleife", " ", "f\[UDoubleDot]r", " ", "zwei", " ", "Spuren"}], 
          "*)"}], "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"l", "=", "0"}], ",", 
           RowBox[{"l", "<=", "1"}], ",", 
           RowBox[{"l", "++"}], ",", "\n", 
           RowBox[{"(*", 
            RowBox[{
            "Schleife", " ", "f\[UDoubleDot]r", " ", "verschiedene", " ", 
             "Zeitpunkte"}], "*)"}], "\n", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "<=", "anzahlt"}], ",", 
              RowBox[{"j", "++"}], ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Betrachtete", " ", "Zeit"}], "*)"}], "\n", 
              RowBox[{
               RowBox[{"zeit", "=", 
                RowBox[{"tlist", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Histogramm", " ", "erstellen"}], ",", " ", 
                 RowBox[{"falls", " ", "Spur", " ", "nicht", " ", "leer"}]}], 
                "*)"}], "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nasch", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "+", "l"}], ",", "zeit"}], "]"}], "]"}], "==", 
                  RowBox[{"{", "0.5", "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<Spur \>\"", ",", 
                    RowBox[{"l", "+", "1"}], ",", 
                    "\"\< ist leer f\[UDoubleDot]r t=\>\"", ",", 
                    RowBox[{
                    RowBox[{"tlist", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "\"\<.\>\""}]}], "]"}], 
                  ";"}], ",", "\n", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Anzahl", " ", "Autos", " ", "auf", " ", "Spur", " ", "bei",
                    " ", "Zeit", " ", "t"}], "*)"}], "\n", 
                 RowBox[{
                  RowBox[{"nCar", "=", 
                   RowBox[{"Length", "[", 
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "+", "l"}], ",", "zeit"}], "]"}], "]"}], 
                    "]"}]}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Listen", " ", "Autos", " ", "mit", " ", 
                    "Geschwindigkeiten", " ", "v"}], "=", "0"}], ",", "1", 
                    ",", "2", ",", "3", ",", "4", ",", "5"}], "*)"}], "\n", 
                  RowBox[{"Clear", "[", "viAutos", "]"}], ";", "\n", 
                  RowBox[{"viAutos", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "+", "l"}], ",", "zeit", ",", "n"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
                  "\n", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Listen", " ", "Abst\[ADoubleDot]nde", " ", "d"}],
                     "=", "0"}], ",", "1", ",", "...", ",", "nCar"}], "*)"}], 
                  "\n", 
                  RowBox[{"Clear", "[", "diAutos", "]"}], ";", "\n", 
                  RowBox[{"diAutos", "=", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"3", "+", "l"}], ",", "zeit", ",", "n"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"3", "+", "l"}], ",", "zeit"}], "]"}], "]"}], 
                    "]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"UnsameQ", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"{", "}"}]}], "]"}], " ", "&"}]}], "]"}]}], ";", 
                  " ", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "L\[ODoubleDot]schen", " ", "der", " ", 
                    "Abst\[ADoubleDot]nde"}], ",", " ", 
                    RowBox[{"die", " ", "nicht", " ", "vorkommen"}]}], "*)"}],
                   "\n", "\n", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"histoplot", ",", 
                    RowBox[{"Histogram", "[", 
                    RowBox[{"viAutos", ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"v", ",", 
                    RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"v", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], 
                    ",", 
                    RowBox[{"PlotRange", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "5.5"}], "}"}], ",", 
                    "Automatic"}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"\"\<twolanesNaSch: Histogramm von v mit \>\"", "<>", 
                    RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                    "\"\< Autos,\\n t=\>\"", "<>", 
                    RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                    "\"\<, p=\>\"", "<>", 
                    RowBox[{"ToString", "[", "p", "]"}], "<>", 
                    "\"\< und Spur \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"l", "+", "1"}], "]"}]}]}], ",", 
                    RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], 
                  ";", "\n", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"histoplot", ",", 
                    RowBox[{"Histogram", "[", 
                    RowBox[{"diAutos", ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"d", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], 
                    ",", 
                    RowBox[{"PlotRange", "->", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"\"\<twolanesNaSch: Histogramm von d mit \>\"", "<>", 
                    RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                    "\"\< Autos,\\n t=\>\"", "<>", 
                    RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                    "\"\<, p=\>\"", "<>", 
                    RowBox[{"ToString", "[", "p", "]"}], "<>", 
                    "\"\< und Spur \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"l", "+", "1"}], "]"}]}]}], ",", 
                    RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], 
                  ";"}]}], "\n", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Histogramm", " ", "z\[ADoubleDot]hlt"}], ",", " ", 
                  RowBox[{
                  "wie", " ", "oft", " ", "eine", " ", "Zahl", " ", "in", " ",
                    "einer", " ", "Liste", " ", "und", " ", "den", " ", 
                   "Sublisten", " ", "darin", " ", "vorkommt"}]}], "*)"}], 
                "\n", "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}], 
      ";", "\n", 
      RowBox[{"Return", "[", "histoplot", "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8999116907123213`*^9, 3.899911711817655*^9}, {
  3.8999117446182256`*^9, 3.89991215788585*^9}, {3.899912213944965*^9, 
  3.8999122305965815`*^9}, {3.8999125118785815`*^9, 3.899912537447246*^9}, {
  3.899912594091264*^9, 3.8999128226358767`*^9}, {3.8999134532486696`*^9, 
  3.899913480984167*^9}, {3.8999145082157087`*^9, 3.8999145101503468`*^9}, {
  3.8999146806202693`*^9, 3.8999147253716087`*^9}, {3.89991502866759*^9, 
  3.8999150535305896`*^9}, {3.8999155504806213`*^9, 3.8999155652265124`*^9}, {
  3.8999157937684536`*^9, 3.8999158061347723`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"9f9e371d-94c3-4c9b-89d1-eb7a74f5a5e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Meanvarfluss",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"913f1fca-27e4-474f-8a8f-c011b5503bfb"],

Cell[TextData[StyleBox["Hier werden: die mittlere Geschwindigkeit der Autos, \
die Varianz des Abstands zwischen jedem Auto und der Verkehrsfluss f\
\[UDoubleDot]r jede Runde berechnet.\nDer Verkehrsfluss ist die Anzahl an \
Autos, die durch die letzte Zelle fahren. Pro Zeitschritt kann es mit einer \
Spur also entweder 0 oder 1 sein.\nAnschlie\[SZ]end werden Geschwindigkeit \
und Varianz korreliert. Der Fluss wird auch dargestellt.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899569363363302*^9, 
  3.8995694364052324`*^9}},ExpressionUUID->"f06690dd-af44-410c-94bf-\
91b1ec8df352"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Berechnung", " ", "mittlere", " ", "v", " ", "\[UDoubleDot]ber", " ", 
     "t"}], ",", " ", 
    RowBox[{
    "Varianz", " ", "des", " ", "mittleren", " ", "Abstands", " ", "und", " ",
      "des", " ", "Verkehrsflusses", " ", "\[UDoubleDot]ber", " ", "t"}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Falls", " ", "Modell", " ", "NaSch"}], ",", " ", 
    RowBox[{"q", "=", "0"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Meanvarfluss", "[", 
    RowBox[{"Modell_", ",", "nCar_", ",", "p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
     "betrachtete", " ", "Zelle", " ", "f\[UDoubleDot]r", " ", "den", " ", 
      "Fluss", " ", "ist", " ", "die", " ", "letzte", " ", "Zelle", " ", 
      "der", " ", "Stra\[SZ]e"}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "vMittel", ",", "dVar", ",", 
       "nasch", ",", "savefluss", ",", "savexAutos", ",", "m", ",", 
       "meanvarflussplot", ",", "meanvarkorrplot"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"InCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Liste", " ", "f\[UDoubleDot]r", " ", "Fluss", " ", "pro", " ", 
        "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"savefluss", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"dVar", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"vMittel", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder", 
        " ", "vdr"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"p", "==", "0.15"}], ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", "nCar"}],
                "]"}]}], ",", 
             RowBox[{
              RowBox[{"NaSch", "[", 
               RowBox[{
               "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"nCar", "==", "60"}], ",", 
             RowBox[{"histonasch", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"nCar", "==", "100"}], ",", 
             RowBox[{"histonasch", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"nCar", "==", "200"}], ",", 
             RowBox[{"histonasch", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{"!", 
            RowBox[{"p", "==", "0.15"}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
         RowBox[{
          RowBox[{"vdrNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
            "q"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Erstes", " ", "Auto"}], ",", " ", 
        RowBox[{
        "das", " ", "die", " ", "letzte", " ", "Zelle", " ", "passiert"}], 
        ",", " ", 
        RowBox[{
        "ist", " ", "das", " ", "mit", " ", "h\[ODoubleDot]chster", " ", 
         "Position"}]}], "*)"}], "\n", 
      RowBox[{"m", "=", "nCar"}], ";", "\n", "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "1"}], ",", 
        RowBox[{"t", "<=", "tMax"}], ",", 
        RowBox[{"t", "++"}], ",", "\n", 
        RowBox[{"(*", 
         RowBox[{"Verkehrsfluss", " ", "durch", " ", "letzte", " ", "Zelle"}],
          "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{"\[CapitalUDoubleDot]berpr\[UDoubleDot]ft", ",", " ", 
          RowBox[{
          "ob", " ", "Auto", " ", "mit", " ", "h\[ODoubleDot]chster", " ", 
           "Position", " ", "\[UDoubleDot]ber", " ", "Stra\[SZ]enende", " ", 
           "hinaus", " ", "auf", " ", "den", " ", "Anfang", " ", 
           "zur\[UDoubleDot]ck", " ", "gefahren", " ", "ist", " ", "\n", 
           RowBox[{"ja", ":", " ", 
            RowBox[{
             RowBox[{
             "n\[ADoubleDot]chst", " ", "niedrigeres", " ", "Auto", " ", 
              "wird", " ", "betrachtet"}], " ", "+", " ", 
             RowBox[{"fluss", " ", "1", " ", "hinzuf\[UDoubleDot]gen"}]}]}]}],
           ",", " ", "\n", 
          RowBox[{"nein", ":", " ", 
           RowBox[{
            RowBox[{"Auto", " ", "wird", " ", "weiter", " ", "betrachtet"}], 
            " ", "+", " ", 
            RowBox[{
            "fluss", " ", "0", " ", "hinzuf\[UDoubleDot]gen", "\n", "Index", 
             " ", "m", " ", "geht", " ", "Autos", " ", "vom", " ", "letzten", 
             " ", "Element", " ", "bis", " ", "zum", " ", "ersten", " ", 
             "durch"}]}]}], ",", " ", 
          RowBox[{
          "danach", " ", "wieder", " ", "Start", " ", "bei", " ", 
           "letztem"}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "<", "tMax"}], ",", "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"m", "==", "0"}], ",", 
              RowBox[{"m", "=", "nCar"}], ",", 
              RowBox[{"m", "=", "m"}]}], "]"}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nasch", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", 
                  RowBox[{"t", "+", "1"}], ",", "m"}], "]"}], "]"}], "<", 
               RowBox[{"nasch", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "t", ",", "m"}], "]"}], "]"}]}], ",", "\n", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"savefluss", ",", "1"}], "]"}], ";", "\n", 
               RowBox[{"m", "=", 
                RowBox[{"m", "-", "1"}]}], ";"}], ",", "\n", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"savefluss", ",", "0"}], "]"}], ";"}]}], "\n", "]"}], 
            ";"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"mittlere", " ", "Geschwindigkeit"}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vMittel", ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"nasch", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "t"}], "]"}], "]"}], "]"}], ",", "6"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Varianz", " ", "dAutos"}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dVar", ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Variance", "[", 
              RowBox[{"nasch", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "t"}], "]"}], "]"}], "]"}], ",", "6"}], 
            "]"}]}], "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"meanvarflussplot", "=", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<PlotGrid\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"{", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"vMittel", ",", 
              RowBox[{"ImageSize", "->", "Automatic"}], ",", 
              RowBox[{"ColorFunction", "->", "\"\<SunsetColors\>\""}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"\"\<mittlere Geschwindigkeit \>\"", 
                  RowBox[{"OverBar", "[", "v", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "->", "White"}]}], "]"}], "}"}], ",", 
           "\n", 
           RowBox[{"{", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"dVar", ",", 
              RowBox[{"ImageSize", "->", "Automatic"}], ",", 
              RowBox[{"ColorFunction", "->", "\"\<SunsetColors\>\""}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", "\"\<Varianz des Abstands d\>\""}], 
                "}"}]}], ",", 
              RowBox[{"LabelStyle", "->", "White"}]}], "]"}], "}"}], ",", 
           "\n", 
           RowBox[{"{", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"savefluss", ",", 
              RowBox[{"ImageSize", "->", "Automatic"}], ",", 
              RowBox[{"ColorFunction", "->", "\"\<SunsetColors\>\""}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", "\"\<Fluss pro Zeitschritt\>\""}], 
                "}"}]}], ",", 
              RowBox[{"LabelStyle", "->", "White"}]}], "]"}], "}"}]}], "\n", 
          "}"}], ",", "\n", 
         RowBox[{"ImageSize", "->", "Large"}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Zeit t\>\"", ",", "None"}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "->", "White"}]}], "\n", "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Korrelation", " ", "mittlere", " ", "Geschwindigkeit", " ", "und", 
        " ", "Varianz", " ", "des", " ", "Abstands"}], "*)"}], "\n", 
      RowBox[{"meanvarkorrplot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{"dVar", ",", "vMittel"}], "}"}], "]"}], ",", 
         RowBox[{"ImageSize", "->", "Large"}], ",", 
         RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Varianz des Abstands d\>\"", ",", 
            RowBox[{"\"\<mittlere Geschwindigkeit \>\"", " ", 
             RowBox[{"OverBar", "[", "v", "]"}]}]}], "}"}]}], ",", "\n", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Korrelation Varianz von d und mittlere v\>\""}]}], ",", 
         RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"meanvarflussplot", ",", "meanvarkorrplot"}], "}"}], 
       "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995693081660175`*^9, {3.899569881915573*^9, 3.8995699061585865`*^9}, {
   3.8998889320591745`*^9, 3.89988893926921*^9}, {3.8998961124843907`*^9, 
   3.8998961131416087`*^9}, {3.8998989872461324`*^9, 
   3.8998990056490135`*^9}, {3.899910170996438*^9, 3.899910183583789*^9}, {
   3.899910223266879*^9, 3.8999105098435783`*^9}, 3.8999105460612483`*^9, {
   3.8999246656386456`*^9, 
   3.899924667202299*^9}},ExpressionUUID->"e52da848-53d4-4183-8c61-\
af7f47c94bf1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanvarfluss", "=", 
   RowBox[{"Meanvarfluss", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", "100", ",", "0.15", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"meanvarfluss", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"meanvarfluss", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{
  3.899569325164426*^9, {3.8998873170612793`*^9, 3.8998873305080867`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"16f2bf36-0d23-4d3a-8a8b-c564ac482e43"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{
      TagBox[InsetBox[
        GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztVTtPFFEUvrEiVBZbWBhUQsxqiAFReei6H8/dRR4zs08SKhJLI7bY3Mba
WlutDSXlBCsTqamppaBwwUdInLl7jsn5Ev7B3GQy+ebcc853vnvunDs7r5OX
15xz37Infw/WWbVxslf6UrusygfUA/4teAin8cHIux99wdcJlxC2n5wLvkH+
NwnfRmX4+NNu5Y/gUQQ4/FfwGM7L2+8P+78E38Xn3dxDcRlZsizgheD7yDZn
Hpp/nPg8QJLTjdV/gvJPEn6IN+GD8p0iPo9w9D1fih8jC55lUD5PEMo5VjyN
jx/ypfFmKN4s8Z0jfZ9S/Ge4l7uX1b9C+Z4jmLcVV8kOq58H3ubp9zTevN3v
5ynfguXrF/C1HwoS+6LFflHq/Sn2JYR0JfVfEn3Uf5nsy6THiu0Hv0L8axb7
Gm4FAVX/OgZvtdclvtobtl99g/pv1faTX6V+eEH+hN0a5V+T/tPzX0cIf6D1
r1s93Ibtd79B9k2rt9+U+6XnH1l9EBHfyMZLIzrfWPQUjJj4xLZf05jua2L1
BGGfWH3SxOrhmhajafXzTVt/2qT+aVmMFundsvqkLTr/NunXtufv2/Z+p2R3
HVsfOlYv37H3LaX9rmv1Rtfed9/FVFiqP+13PdKvZ/vD9yh/j/4/W//1uNjv
v0qjS5ofZ9VBviHhXcyTYp4U86SYJ8U8GfgX8+SqefIP34ncyg==
           "], 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.009166666666666668], AbsoluteThickness[1.6], 
            PointBox[{102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
             113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
             126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
             139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
             152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
             165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
             178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
             191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201},
             VertexColors->Automatic]},
           VertexColors->CompressedData["
1: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
EcafQtxj/NlInkNxpvqFyp+ql9LlL6FTJEo=
            "]], {{}, {}}},
         AspectRatio->Full,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0., 1.2811111111111142`},
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{
            FormBox[
             TagBox[
              RowBox[{"\"mittlere Geschwindigkeit \"", " ", 
                OverscriptBox["v", "_"]}], HoldForm], TraditionalForm], 
            None}, {None, None}},
         FrameTicks->
          FrontEndValueCache[{{ResourceFunction["PlotGrid"]["CustomTicks"][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
             "CustomTicksNoLabels"][
              SlotSequence[1]]& }, {ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 170.79959514170122`, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 170.79959514170122`, 
               "CustomTicksNoLabels"]][
              SlotSequence[1]]& }}, {{{{1.3, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.3\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.3`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.4, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.4\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.4`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.5, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.5\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.5`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.6, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.6\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.6`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.7, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.7\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.7`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.8, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.8\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.8`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.26, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.28, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.32, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.34, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.36, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.38, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.42, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.44, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.46, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.48, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.52, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.54, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.56, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.58, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.62, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.64, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.66, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.68, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.72, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.74, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.76, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.78, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.82, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.84, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.86, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}}, {{1.3, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.4, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.6, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.7, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.8, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.26, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.28, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.32, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.34, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.36, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.38, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.42, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.44, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.46, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.48, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.52, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.54, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.56, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.58, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.62, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.64, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.66, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.68, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.72, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.74, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.76, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.78, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.82, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.84, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.86, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}}}}, {{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"20\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"40\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"80\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}}}],
         FrameTicksStyle->{{None, None}, {
            Directive[FontSize -> 0, FontOpacity -> 0, None], None}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{35.0732416510582, 4.}, {3.9999999999999716`, 4.}},
         LabelStyle->GrayLevel[1],
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{-2.0833333333333335`, 102.08333333333333`}, {
          1.2506172839506204`, 1.860493827160494}},
         PlotRangeClipping->True,
         PlotRangePadding->None,
         Ticks->{Automatic, Automatic}], 
        Offset[{0, 0.}, {0, 0.6666666666666666}], Scaled[{0, 0}], 
        Offset[{39.0732416510582, 7.999999999999972}, \
{1., 0.33333333333333337}]],
       Annotation[#, {
        "PlotGridItem", {1, 1}, {0, 0}, {0, 0.6666666666666666}, {0, 0.}, {1.,
          0.33333333333333337`}, {0., 0.}}]& ], 
      TagBox[InsetBox[
        GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztVf1LFFEUHTTTwtLM0kQoQ6QyJNM2zdLj97fuzn5WSCFKEIUEUgRRE0Ug
RRRhGGFIIPSLFIIUUjhFUUEEQhQShBFEEIUQhRRB896e+8PMT/0Bu+wynL33
vnfvOefNK+gdMPuTDMN44fzUM/5ZqBl7ezf7zs/V4B+4VVA6cKglnTgNF54+
HC0ozSDOxI37ZYWfv0k8G09S159aeJxKnItyFR1aRpyPLt9c37XOpcQb8PFc
RvXifDLxRhzc7P8aXb6EuBAq2zcnuAjTX25fLJlOI96ElMN/287uk362YOhk
VX3vh5XEW5H147jT8griEuQ/P+Z8pd9tnvlKPf1u9+SX4fKnCucr65dDLz+6
ingH6wX7PPzsRE7P4GxjjvRTgUslaiJZrxIPdLrU78Kf4aSp0+OZxFXQ9Pkk
vhvf09XEWcR78KtYMSLxak99DRbnFeGCgTQtF/mzAMXe6ysSr+WT2KqFpntG
9qvjPGsYr4OGPdmM12P/jKksxXg93il7FTPfaKCeuYw3oFo3SGw00h/0o9WI
TJ0gfDXh0agSUPprglLz1XuZvxmVWjCJN3v0aUG8PYm3eOZvxQlteOZbrR5+
29x6WW24ruiG6NuOiQPa0Iy3e/zYwXll/w4Pv53081rGO+m3dYx38Sn8deHq
iDKc8NsNZ+83v4e5ntUNLc+g9O/H0cmXRTePMA4/dHhW9PTjmTruAzlxbPvJ
r+wfoB+JEUCyGn+C+VbArbcdIB8ynwm9/ST7gYl+ddz7RG8TeZow+sc23X4z
gnyfkB8EyV8e64PQco5I/0HU6gaIjRDanWxzTOpDcJp1BBa+Qm4/2SF3v0YY
Z8bVSNQPYZzP0IqyPox7avwUrmeH3fMZEfd8iNAfwn/EracdYZ2cjyj75byI
8v2Zz/oo/Up97KiHv5i7H8TgDOdMKOc1xvcT+bFjXF/O91445nIcL+sl7o/E
/ZG4PxL3R+L+iNcn7o//vT/+AdLGFqU=
           "], 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.009166666666666668], AbsoluteThickness[1.6], 
            PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
             112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
             125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
             138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
             151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
             164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
             177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
             190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200},
             VertexColors->Automatic]},
           VertexColors->CompressedData["
1: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

            "]], {{}, {}}},
         AspectRatio->Full,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0., 0},
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{
            FormBox[
             TagBox["\"Varianz des Abstands d\"", HoldForm], TraditionalForm],
             None}, {None, None}},
         FrameTicks->FrontEndValueCache[{{ResourceFunction["PlotGrid"][
              "HideOuterLabels"[{1, 1}, {388.3281572999747, 240.}, {
                DirectedInfinity[-1], 10}, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
             "CustomTicksNoLabels"][
              SlotSequence[1]]& }, {ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 13.819344380403455`, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 13.819344380403455`, 
               "CustomTicksNoLabels"]][
              SlotSequence[1]]& }}, {{{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {2., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {4., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"4\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {6., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"6\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {0.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {1., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {1.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {2.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {3., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {3.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {4.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {5.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {6.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {7., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              2., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              4., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              6., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              2.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              3., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              3.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              4.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              5.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              6.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              7., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}}}}, {{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"20\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"40\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"80\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}}}],
         FrameTicksStyle->{{None, None}, {
            Directive[FontSize -> 0, FontOpacity -> 0, None], 
            Directive[FontSize -> 0, FontOpacity -> 0, None]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{26.73339819908142, 4.}, {3.9999999999999716`, 
          3.999999999999986}},
         LabelStyle->GrayLevel[1],
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{-2.0833333333333335`, 
          102.08333333333333`}, {-0.1507548604322798, 7.38698816118171}},
         PlotRangeClipping->True,
         PlotRangePadding->None,
         Ticks->{Automatic, Automatic}], 
        Offset[{0, 0.}, {0, 0.3333333333333333}], Scaled[{0, 0}], 
        Offset[{30.73339819908142, 7.999999999999957}, \
{1., 0.3333333333333333}]],
       Annotation[#, {
        "PlotGridItem", {2, 1}, {0, 0}, {0, 0.3333333333333333}, {0, 0.}, {1.,
          0.3333333333333333}, {0., 0.}}]& ], 
      TagBox[InsetBox[
        GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1TlKA1AUheGDlaWFhYVFFBERkahxHvI0c8xkEhNrwdot3KW9yvW4hChy
i/svQV5Aws93jynfzvvn9GNN0tfP3+/33+e7Hr+VYq8nhc8GfBO+Bd+GV+C7
6D3c78MP0Ie4P4Ifw6vwE/Qp7s/gNfQ57i/Ql+gr7K/hN+hb3N/B7+EP6Dru
U2xD6xGO1hPc23+vAW/Am/AmvAVvwduxrR3v1YF34F14F97D76PVx74Pf4aj
NcD/H8CH8CF8BB/Bx/AxfBI7TXCPzrjXC/Zo8/Y9XFPs0ebte7Rm2M+iGzzD
NccebfN4n+F6xR5t3r6Ha4H9It4bPKO1jPdpGd3QGfd6w97b9/CMLu8FurwX
0ct7Eb28F3Ff3ou4/7/vxQq3Jw+Z
           "], 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            PointBox[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
             111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
             124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 
             137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 
             150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 
             163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 
             176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
             189, 190, 191, 192, 193, 194, 195, 196, 197, 198},
             VertexColors->Automatic]},
           VertexColors->CompressedData["
1:eJxTTMoPSmViYGA4BsTMDDDwwZ40GhcYKPWDzZyBspdUc0gF1DJ/qPiXWmCk
5SNqqScVDNdwGGz5hVTzae3+wVYukap+sIXPcDWHVPOpZc5wLR8Gm38HW7oi
1V5amzNQ/qUWGGn5iFrqSQXDNRwGW34ZbPX4YCuXSFU/2MJnuJpDqvnEAwDC
SHPM
            "]], {{}, {}}},
         AspectRatio->Full,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0., 0},
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{
            FormBox[
             TagBox["\"Fluss pro Zeitschritt\"", HoldForm], TraditionalForm], 
            None}, {None, None}},
         FrameTicks->FrontEndValueCache[{{ResourceFunction["PlotGrid"][
              "HideOuterLabels"[{1, 1}, {388.3281572999747, 240.}, {
                DirectedInfinity[-1], 10}, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
             "CustomTicksNoLabels"][
              SlotSequence[1]]& }, {ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 95.90625, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 95.90625, "CustomTicksNoLabels"]][
              SlotSequence[1]]& }}, {{{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.0\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.2, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.2\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.2`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.4, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.4\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.4`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.6, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.6\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.6`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.8, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.8\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.8`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {1., 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.0\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.05, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.1, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.15, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.25, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.3, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.35, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.45, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.55, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.65, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.7, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.75, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.85, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.9, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.95, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {1.05, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.2, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.4, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.6, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.8, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.05, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.1, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.15, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.25, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.3, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.35, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.45, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.55, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.65, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.7, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.75, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.85, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.9, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.95, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.05, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}}}}, {{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"20\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"40\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"80\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}}}],
         FrameTicksStyle->{{None, None}, {None, 
            Directive[FontSize -> 0, FontOpacity -> 0, None]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{35.073241651058204`, 5.741234753028152}, {15.171875, 
          4.000000000000028}},
         LabelStyle->GrayLevel[1],
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{-2.0625, 101.0625}, {-0.021505376344086027`, 
          1.053763440860215}},
         PlotRangeClipping->True,
         PlotRangePadding->None,
         Ticks->{Automatic, Automatic}], Offset[{0, 0}, {0, 0}], 
        Scaled[{0, 0}], 
        Offset[{40.814476404086356, 19.17187500000003}, \
{1., 0.3333333333333333}]],
       Annotation[#, {
        "PlotGridItem", {3, 1}, {0, 0}, {0, 0}, {0, 0}, {1., 
         0.3333333333333333}, {0., 0.}}]& ]},
     AspectRatio->Full,
     ImagePadding->{{34.073241651058204`, 4.741234753028152}, {14.171875, 3.}},
     PlotRange->{{0, 1}, {0, 1}}], Offset[{-34.073241651058204, -14.171875}, 
    Scaled[{0, 0}]], ImageScaled[{0, 0}], Offset[{38.814476404086356, 17.171875},
     Scaled[{1, 1}]]], {{}, InsetBox[
     PaneBox["\<\"Zeit t\"\>",
      BaseStyle->{"GraphicsLabel", "GraphicsFrame", None}], Offset[{0., -19.171875},
      Scaled[{0.5, 0.}]], 
     ImageScaled[{0.5, 1.}]]}, {{}, {}, {}}, {{{}, {}, {}, {}}, {{}, {}, {}, \
{}}, {{}, {}, {}, {}}}},
  AspectRatio->1.8541019662496847`,
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     If[$VersionNumber == 12.3, 
      "Not supported in Mathematica 12.3 due to Front-End crash", If[
        Or[True, 
         Not[
          ListQ[
          FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData]]\
], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData = {
          MousePosition["GraphicsImageScaled"], 
          MousePosition["GraphicsAbsolute"]}]; 
      With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$ = 
         FirstCase[{{{1, 1}, {0, 0}, {0, 0.6666666666666666}, {0, 0.}, {1., 
             0.33333333333333337`}, {0., 0.}}, {{2, 1}, {0, 0}, {
             0, 0.3333333333333333}, {0, 0.}, {1., 0.3333333333333333}, {0., 
             0.}}, {{3, 1}, {0, 0}, {0, 0}, {0, 0}, {1., 
             0.3333333333333333}, {0., 0.}}}, {
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
              Blank[]], 
             Blank[], 
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`posOff, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`sizeOff, 
              Blank[]]} :> 
           With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor = \
# Part[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData, 2],
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
posOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
sizeOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData]}, 
             
             Condition[{
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize}, 
              Apply[And, 
               Thread[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
                 FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize]\
]]], {0, 0}]}, 
        With[{
         FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$ = 
          First[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$\
]}, 
         If[
          And[
           FreeQ[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 0],
            Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
             1.2506172839506204`, 
             1.860493827160494}}}, {{{-2.0833333333333335`, 
             102.08333333333333`}, {-0.1507548604322798, 
             7.38698816118171}}}, {{{-2.0625, 
             101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$] =!= 
           Null], 
          (Column[{
            Row[{"Plot: ", #}], #2}]& )[
          FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 
           (If[# =!= None, #, Nothing& ]& )[
            Extract[{{{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]][
            MapThread[Rescale, {
              Part[
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
               2], 
              Transpose[
               Part[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
                Span[3, All]]], 
              
              Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
               1.2506172839506204`, 
               1.860493827160494}}}, {{{-2.0833333333333335`, 
               102.08333333333333`}, {-0.1507548604322798, 
               7.38698816118171}}}, {{{-2.0625, 
               101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]}]]], 
          "Not inside a plot"]]]]& ), 
    "CopiedValueFunction" -> (
     If[$VersionNumber == 12.3, 
      "Not supported in Mathematica 12.3 due to Front-End crash", If[
        Or[False, 
         Not[
          ListQ[
          FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData]]\
], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData = {
          MousePosition["GraphicsImageScaled"], 
          MousePosition["GraphicsAbsolute"]}]; 
      With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$ = 
         FirstCase[{{{1, 1}, {0, 0}, {0, 0.6666666666666666}, {0, 0.}, {1., 
             0.33333333333333337`}, {0., 0.}}, {{2, 1}, {0, 0}, {
             0, 0.3333333333333333}, {0, 0.}, {1., 0.3333333333333333}, {0., 
             0.}}, {{3, 1}, {0, 0}, {0, 0}, {0, 0}, {1., 
             0.3333333333333333}, {0., 0.}}}, {
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
              Blank[]], 
             Blank[], 
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`posOff, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`sizeOff, 
              Blank[]]} :> 
           With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor = \
# Part[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData, 2],
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
posOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
sizeOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData]}, 
             
             Condition[{
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize}, 
              Apply[And, 
               Thread[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
                 FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize]\
]]], {0, 0}]}, 
        With[{
         FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$ = 
          First[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$\
]}, 
         If[
          And[
           FreeQ[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 0],
            Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
             1.2506172839506204`, 
             1.860493827160494}}}, {{{-2.0833333333333335`, 
             102.08333333333333`}, {-0.1507548604322798, 
             7.38698816118171}}}, {{{-2.0625, 
             101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$] =!= 
           Null], {FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 
           (If[# =!= None, #, Nothing& ]& )[
            Extract[{{{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]][
            MapThread[Rescale, {
              Part[
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
               2], 
              Transpose[
               Part[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
                Span[3, All]]], 
              
              Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
               1.2506172839506204`, 
               1.860493827160494}}}, {{{-2.0833333333333335`, 
               102.08333333333333`}, {-0.1507548604322798, 
               7.38698816118171}}}, {{{-2.0625, 
               101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]}]]}, 
          Missing["OutsidePlot"]]]]]& )},
  Epilog->{},
  ImagePadding->Automatic,
  ImageSize->Large,
  LabelStyle->GrayLevel[1],
  Method->{},
  PlotRange->Automatic,
  PlotRangePadding->None,
  Prolog->{}]], "Output",
 CellChangeTimes->{3.89988700543023*^9, 3.89988768828115*^9, 
  3.8998881733470764`*^9, 3.899888747944192*^9, 3.89989050276495*^9, 
  3.899890827766015*^9, 3.899924237773157*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b2901120-703a-4b58-beb5-592183b9ff0d"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztVftLVEEUXnykyb7u9e4TSRYiFEESYzFKZyIiK4rcX4JSDFGCKFSQIosi
eoAUPZANLTakB/SLFUK0SCFZEYIFQiQShBJEYEVQe/euIjRz5p5zwZ/6A/ay
y3J2zpzzfd/55k6sozvRVeByuabEV/6OfHpiPMqU810L/cbjnSvsbqyu+0iz
mzdDnGOX37xIxep8/EdLet2lxQwbfl6//ttPN8WTJZVnfr8q4ZC+YLJNcnVg
Le3fF5/rHNy7huKFC74ma76QN5bN3u9pXGKHq/cvHigr4hCWLTOZHZ8r4mZV
6/XJjMXGv9+7Ujteyh/0yB0WKz66svv8QR8XzUTBLBs4tWV7xxcvF8lih8n0
PycEZA/hqXjXKz5unpBwWyzih/0RL8aY3wt/5Ni1rw3i4yU8UD6l8ffT8rHs
/RoXxUWHLOkDdGazLNTWN7Mj5OG3h+WTY1drJSOnXhrSNcK7nCx4dvahn/QF
+eJO/V9uyVjn1XJ7lcXMGqmIRv1wPyy3Zpk1LwX303opjMvRT6r34Yafn5bt
+y3mgsfJB7knnH6KT4DwQthm8NcZIMQOTSSkpSielfaqCdh8/9rzDHNoZ5is
CQCGbX0ytj/Kad0PCV7S42VKDtBPfpDTnP6sEf7NMDCHD86nEgTMMQXPzxVP
i/ir+jl2EgyvkV9RX+yH80I/3ZJycw/5YbQdDE370Y8YK75Of9RX+c+0/Rzk
UD5t2n6LkB5qX5j8fnNIGi5A66L3x6WkTnrDePo0+3xl2fGxqQ13jumkDyzP
BAjfW3ncu0NUT+kboXkqP0ZsPTOsUNIfDREenDf6Vemhk9+g/ZijZ5c87p3l
FEdBMIP0Qb+hHup94uij9IuSfjDOoRDx3wYAQuSfPSI7MRKkWIAVA9ap3mo/
rcZ7TrBtr3b8ddEHE6X5P5X0i3U638gP11fzU/5w9MJ54nnDeWO+whslvdX7
s4LOu/JrhNfDkyX9MB/xIF9BTjA0yB/q/RSk/qq+QfiEuYTjA6THxnRysGGr
l+4PvE9Uv1Kev0/y90n+PsnfJ/n7JH+f/M998g8oVcgH
    "], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     PointBox[{102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
      114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
      142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
      156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 
      170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
      184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 
      198, 199, 200, 201},
      VertexColors->Automatic]},
    VertexColors->CompressedData["
1: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
EcafQtxj/NlInkNxpvqFyp+ql9LlL6FTJEo=
     "]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.3905723905723963`, 1.2811111111111142`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       RowBox[{"\"mittlere Geschwindigkeit \"", " ", 
         OverscriptBox["v", "_"]}], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Varianz des Abstands d\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->GrayLevel[1],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"NaSch: Korrelation Varianz von d und mittlere v\"", TraditionalForm],
  PlotRange->{{2.3905723905723963`, 7.01010101010101}, {1.2811111111111142`, 
   1.8300000000000003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89988700543023*^9, 3.89988768828115*^9, 
  3.8998881733470764`*^9, 3.899888747944192*^9, 3.89989050276495*^9, 
  3.899890827766015*^9, 3.899924238847327*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5293c82f-ec55-4f0d-bd14-70813f74b293"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "meanvarfluss", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8995693386843224`*^9, 3.8995693410118384`*^9}, 
   3.8995694727573533`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"67dc683d-91d4-4dca-b956-b9af4ab66b20"],

Cell[TextData[StyleBox["Die Grafiken von Mittlere Geschwindigkeit, Varianz \
des Abstands und Der Fluss pro Zeitschritt sind \[UDoubleDot]ber die Zeit \
dargestellt. Die Zeigen dass die mittlere Geschwindigkeit und die Varianz des \
abstand haben gr\[ODoubleDot]\[SZ]ere Sprunge. Die Geschwindigkeit variiert \
zwischen 1 und 2 das bedeutet, dass wann die niedriger werden sich Staus \
bilden.\nDie Spr\[UDoubleDot]nge von Varianz sind schon h\[ODoubleDot]her als \
die von der Geschwindigkeit, von 2 bis ungef\[ADoubleDot]hr 10. Die meisten \
punkte befinden sich um die Varianz herum die in der Mitte zwischen der \
niedrigste und die h\[ODoubleDot]chste Varianz liegt.\nDie Grafik der Fluss \
zeigt, wie das nur 1 oder 0 sein kann weil nur eine spur simuliert wird. Da \
ein Auto nur bis zu einer Zelle vor dem n\[ADoubleDot]chsten fahren kann (R2: \
Abbremsen, falls v gr\[ODoubleDot]\[SZ]er als d), kann eine Zelle in einer \
Runde nur von einem Auto durchquert werden.\nAus der Korrelation der \
Geschwindigkeit und der Varianz des Abstands ist zu sehen, wie die mittlere \
Geschwindigkeit linear abnimmt mit der Zunahme von der Varianz des Abstands.\n\
",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",Expre\
ssionUUID->"9a12740d-e703-404e-b25c-aece55b23138"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fundamentalplot",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"431ebe87-5ae3-4e3f-80ff-\
d9a73d6b2de5"],

Cell[TextData[StyleBox["Unter dem Fundamentalplot versteht man die \
Korrelation zwischen dem Verkehrsfluss und der Dichte \[UDoubleDot]ber die \
gesamte Stra\[SZ]e. In diesem Teil wird ein Modul daf\[UDoubleDot]r \
hergestellt und anschlie\[SZ]end das dargestellt.\nDanach wird es f\
\[UDoubleDot]r unterschiedliche Tr\[ODoubleDot]delwahrscheinlichkeiten p \
geschrieben und geplottet.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899570247486517*^9, 
  3.899570287528245*^9}},ExpressionUUID->"28c43677-f09d-40f1-9ccb-\
06263446373d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Daten", " ", "f\[UDoubleDot]r", " ", "Fundamentalplots", " ", "aus", " ", 
    "histonasch"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"fundnasch60", "=", 
     RowBox[{"histonasch", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fundnasch100", "=", 
     RowBox[{"histonasch", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fundnasch200", "=", 
     RowBox[{"histonasch", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{3.899569465133962*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"9f9f0c00-035f-495d-8220-11ba5455f2af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Fundamentalplot", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eingabe", ":", " ", 
     RowBox[{"Falls", " ", "Modell", " ", "NaSch", " ", "q"}]}], "=", "0"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"FundamentalD", "[", 
    RowBox[{"Modell_", ",", "p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
     "Fluss", " ", "wird", " ", "f\[UDoubleDot]r", " ", "Dichten", " ", "0", 
      " ", "bis", " ", "1", " ", "berechnet"}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "nCar", ",", "tMax", ",", "vMax", ",", "anzahlp", ",", 
       "density", ",", "addfluss", ",", "addfluss1", ",", "addfluss2", ",", 
       "m", ",", "m1", ",", "m2", ",", "fluss", ",", "funddata", ",", 
       "fundplot", ",", "nasch", ",", "nasch1", ",", "nasch2", ",", "\n", 
       "tnasch", ",", "tnasch1", ",", "tnasch2", ",", "nexttnasch1", ",", 
       "nexttnasch2", ",", "nexttnasch", ",", "mlist1", ",", "mlist2", ",", 
       "mdiff1", ",", "mdiff2", ",", "range", ",", "nichts", ",", "indexfl1", 
       ",", "indexfl2", ",", "nextindexfl1", ",", "nextindexfl2", ",", 
       "Zellen", ",", "\n", "max1", ",", "max2", ",", "wechselvon1", ",", 
       "wechselzu1", ",", "wechselvon2", ",", "wechselzu2", ",", "index1", 
       ",", "nextindex1", ",", "index2", ",", "nextindex2", ",", "vornasch1", 
       ",", "vornasch2", ",", "vormax1", ",", "vormax2", ",", "posvormax1", 
       ",", "posvormax2"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", 
        RowBox[{"nCells", "=", "300"}], ",", 
        RowBox[{"nCells", "=", "150"}]}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "F\[UDoubleDot]r", " ", "geringere", " ", "Laufzeit", " ", "auf", " ", 
        "zwei", " ", "Spuren", " ", "insgesamt", " ", "300", " ", "Zellen"}], 
       "*)"}], "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Erstes", " ", "Element", " ", "in", " ", "Subliste", " ", "ist", " ",
          "Dichte"}], ",", " ", 
        RowBox[{"zweites", " ", "Fluss"}]}], "*)"}], "\n", 
      RowBox[{"funddata", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Anzahl", " ", "Zellen", " ", "f\[UDoubleDot]r", " ", "Modell"}], 
       "*)"}], "\n", 
      RowBox[{"Zellen", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", "nCells", 
         ",", 
         RowBox[{"Modell", "==", "\"\<twolanesNaSch\>\""}], ",", 
         RowBox[{"2", " ", "nCells"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Schleife", " ", "f\[UDoubleDot]r", " ", "ansteigende", " ", 
        RowBox[{"Dichte", "/", "Anzahlen"}], " ", "an", " ", "Autos"}], 
       "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"nCar", "=", "1"}], ",", 
        RowBox[{"nCar", "<", "Zellen"}], ",", 
        RowBox[{"nCar", "++"}], ",", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Berechnen", " ", "NaSch"}], "-", "Modell"}], ",", " ", 
          RowBox[{"VDR", "-", 
           RowBox[{
           "Modell", " ", "oder", " ", "Abrufen", " ", "berechnete", " ", 
            "Daten", " ", "aus", " ", "histonasch"}]}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"nasch", "=", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"p", "==", "0.15"}], ",", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", 
                   "nCar"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"NaSch", "[", 
                  RowBox[{
                  "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}],
                   "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "60"}], ",", "fundnasch60", ",", 
                RowBox[{"nCar", "==", "100"}], ",", "fundnasch100", ",", 
                RowBox[{"nCar", "==", "200"}], ",", "fundnasch200"}], "]"}], 
              ",", "\n", 
              RowBox[{"!", 
               RowBox[{"p", "==", "0.15"}]}], ",", 
              RowBox[{
               RowBox[{"NaSch", "[", 
                RowBox[{
                "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
            RowBox[{
             RowBox[{"vdrNaSch", "[", 
              RowBox[{
              "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
               "q"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Modell", "==", "\"\<twolanesNaSch\>\""}], ",", 
            RowBox[{"twolanesNaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Falls", " ", "twolanesNaSch"}], ",", " ", 
           RowBox[{
           "extrahieren", " ", "xAutos", " ", "und", " ", "mlisten"}]}], 
          "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Modell", "==", "\"\<twolanesNaSch\>\""}], ",", 
           RowBox[{
            RowBox[{"nasch1", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"nasch2", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ";", 
            RowBox[{"wechselvon1", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], ";", 
            RowBox[{"wechselzu1", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], ";", 
            RowBox[{"wechselvon2", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}], ";", 
            RowBox[{"wechselzu2", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], ";", 
            RowBox[{"Clear", "[", "nasch", "]"}], ";"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Index", " ", "zum", " ", 
            "\[CapitalUDoubleDot]berpr\[UDoubleDot]fen", " ", "der", " ", 
            "Positionen"}], ",", " ", 
           RowBox[{
            RowBox[{
            "startet", " ", "von", " ", "der", " ", 
             "\[UDoubleDot]berpr\[UDoubleDot]ften", " ", "Zelle", " ", 
             "nCells"}], ";", " ", 
            RowBox[{
            "Fluss", " ", "als", " ", "Durchfluss", " ", "von", " ", 
             "Position", " ", "nCells", " ", "zu", " ", "1"}]}]}], "*)"}], 
         "\n", 
         RowBox[{"m", "=", "nCar"}], ";", "\n", 
         RowBox[{"addfluss", "=", "0"}], ";", "\n", 
         RowBox[{"addfluss1", "=", "0"}], ";", "\n", 
         RowBox[{"addfluss2", "=", "0"}], ";", "\n", 
         RowBox[{"m1", "=", "0"}], ";", "\n", 
         RowBox[{"m2", "=", "0"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Schleife", " ", "\[UDoubleDot]ber", " ", "Zeit", " ", 
           "f\[UDoubleDot]r", " ", "Berechnung", " ", "des", " ", "Flusses"}],
           "*)"}], "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "1"}], ",", 
           RowBox[{"t", "<", "tMax"}], ",", 
           RowBox[{"t", "++"}], ",", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Vergleich", " ", "mit", " ", "Zeitschritt", " ", "danach"}], 
             ",", " ", 
             RowBox[{
              RowBox[{"also", " ", "bis", " ", "tMax"}], "-", "1"}]}], "*)"}],
            "\n", "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Eine", " ", "Spur"}], "*)"}], "\n", 
              RowBox[{"(", 
               RowBox[{"(*", 
                RowBox[{
                "Abspeichern", " ", "zu", " ", "betrachtende", " ", 
                 "Listen"}], "*)"}], "\n", 
               RowBox[{
                RowBox[{"tnasch", "=", 
                 RowBox[{"nasch", "[", 
                  RowBox[{"[", "t", "]"}], "]"}]}], ";", "\n", 
                RowBox[{"nexttnasch", "=", 
                 RowBox[{"nasch", "[", 
                  RowBox[{"[", 
                   RowBox[{"t", "+", "1"}], "]"}], "]"}]}], ";", "\n", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"m", "==", "0"}], ",", 
                  RowBox[{"m", "=", "nCar"}], ",", 
                  RowBox[{"m", "=", "m"}]}], "]"}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"nexttnasch", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "<", 
                   RowBox[{"tnasch", "[", 
                    RowBox[{"[", "m", "]"}], "]"}]}], ",", "\n", 
                  RowBox[{
                   RowBox[{"addfluss", "=", 
                    RowBox[{"addfluss", "+", "1"}]}], ";", "\n", 
                   RowBox[{"m", "=", 
                    RowBox[{"m", "-", "1"}]}], ";"}]}], "]"}], ";"}], ")"}], 
              ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Zwei", " ", "Spuren"}], "*)"}], "\n", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"t", ">", "1"}], ",", "\n", 
                 RowBox[{
                  RowBox[{"vornasch1", "=", 
                   RowBox[{"nasch1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"vornasch2", "=", 
                   RowBox[{"nasch2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"tnasch1", "=", 
                   RowBox[{"nasch1", "[", 
                    RowBox[{"[", "t", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"nexttnasch1", "=", 
                   RowBox[{"nasch1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "+", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"tnasch2", "=", 
                   RowBox[{"nasch2", "[", 
                    RowBox[{"[", "t", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"nexttnasch2", "=", 
                   RowBox[{"nasch2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "+", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "Falls", " ", "eine", " ", "der", " ", "beiden", " ", 
                    "Listen", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "0.5", " ", "in", " ", "zwei", " ", "Spuren", " ", 
                    "angeh\[ADoubleDot]ngt"}], ",", " ", 
                    RowBox[{"falls", " ", "Spur", " ", "leer"}]}], "*)"}], 
                  "\n", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tnasch1", "==", 
                    RowBox[{"{", "0.5", "}"}]}], "||", 
                    RowBox[{"nexttnasch1", "==", 
                    RowBox[{"{", "0.5", "}"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"addfluss1", "=", "addfluss1"}], ";"}], ",", "\n", 
                    RowBox[{"tnasch1", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"vormax1", ":", " ", 
                    RowBox[{
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], "-", 
                    "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"falls", " ", "zuvor", " ", "leer", " ", "0"}], 
                    ";", " ", 
                    RowBox[{"posvormax1", ":", " ", 
                    RowBox[{
                    RowBox[{"Maximum", " ", "von", " ", "t"}], "-", "1"}]}]}],
                     ",", " ", 
                    RowBox[{
                    RowBox[{
                    "falls", " ", "zuvor", " ", "leer", " ", "nCells"}], "+", 
                    "1"}], ",", " ", 
                    RowBox[{
                    "sodass", " ", "jeder", " ", "Wechsel", " ", "Index", " ",
                     "erh\[ODoubleDot]ht"}]}], "*)"}], "\n", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"vornasch1", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"vormax1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"vornasch1", ",", 
                    RowBox[{"Max", "[", "vornasch1", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    RowBox[{"posvormax1", "=", 
                    RowBox[{"vornasch1", "[", 
                    RowBox[{"[", "vormax1", "]"}], "]"}]}], ";"}], ")"}], ",", 
                    RowBox[{"vornasch1", "==", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"posvormax1", "=", 
                    RowBox[{"nCells", "+", "1"}]}], ";", 
                    RowBox[{"vormax1", "=", "0"}], ";"}], ")"}]}], "]"}], ";",
                     "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Index", " ", "Maximum", " ", "von", " ", "t"}], 
                    "-", 
                    RowBox[{
                    "1", " ", "mit", " ", "Wechseln", " ", "aus", " ", 
                    "Schritt", " ", "von", " ", "t"}], "-", 
                    RowBox[{"1", " ", "bis", " ", "t"}]}], "*)"}], "\n", 
                    RowBox[{"index1", "=", 
                    RowBox[{"vormax1", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax1"}], "&"}]}], "]"}], "]"}], 
                    "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax1"}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], 
                    "*)"}], "\n", 
                    RowBox[{"max1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"tnasch1", ",", 
                    RowBox[{"Max", "[", "tnasch1", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "Maximum", " ", "von", " ", "t", " ", "mit",
                     " ", "Wechseln", " ", "aus", " ", "Schritt", " ", "von", 
                    " ", "t", " ", "bis", " ", "t"}], "+", "1"}], "*)"}], 
                    "\n", 
                    RowBox[{"nextindex1", "=", 
                    RowBox[{"max1", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu1", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch1", "[", 
                    RowBox[{"[", "max1", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon1", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch1", "[", 
                    RowBox[{"[", "max1", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Indizes", " ", "anpassen", " ", "falls", " ", "Fluss", 
                    " ", "durch", " ", "letzte", " ", "Zelle"}], ",", " ", 
                    RowBox[{
                    "zyklisch", " ", "durch", " ", "Anzahl", " ", "Autos", 
                    " ", "auf", " ", "Spur"}]}], "*)"}], "\n", 
                    RowBox[{"indexfl1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index1", "-", "m1"}], ">", "0"}], ",", 
                    RowBox[{"index1", "-", "m1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index1", "-", "m1"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index1", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m1", ",", 
                    RowBox[{"Length", "[", "tnasch1", "]"}]}], "]"}], "+", 
                    "index1"}], ",", 
                    RowBox[{"Length", "[", "tnasch1", "]"}]}], "]"}], ",", 
                    "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index1", "-", "m1"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index1", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "index1"}], "+", "m1"}], ",", 
                    RowBox[{"Length", "[", "tnasch1", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", "\n", 
                    RowBox[{"nextindexfl1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex1", "-", "m1"}], ">", "0"}], ",", 
                    RowBox[{"nextindex1", "-", "m1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex1", "-", "m1"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex1", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m1", ",", 
                    RowBox[{"Length", "[", "nexttnasch1", "]"}]}], "]"}], "+",
                     "nextindex1"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch1", "]"}]}], "]"}], ",",
                     "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex1", "-", "m1"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex1", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "nextindex1"}], "+", "m1"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch1", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", "\n", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nexttnasch1", "[", 
                    RowBox[{"[", "nextindexfl1", "]"}], "]"}], "<", 
                    RowBox[{"tnasch1", "[", 
                    RowBox[{"[", "indexfl1", "]"}], "]"}]}], ",", "\n", 
                    RowBox[{
                    RowBox[{"addfluss1", "=", 
                    RowBox[{"addfluss1", "+", "1"}]}], ";", "\n", 
                    RowBox[{"m1", "=", 
                    RowBox[{"m1", "+", "1"}]}], ";"}]}], "\n", "]"}], ";"}]}],
                    "\n", "]"}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "Falls", " ", "eine", " ", "der", " ", "beiden", " ", 
                    "Listen", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "0.5", " ", "in", " ", "zwei", " ", "Spuren", " ", 
                    "angeh\[ADoubleDot]ngt"}], ",", " ", 
                    RowBox[{"falls", " ", "Spur", " ", "leer"}]}], "*)"}], 
                  "\n", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tnasch2", "==", 
                    RowBox[{"{", "0.5", "}"}]}], "||", 
                    RowBox[{"nexttnasch2", "==", 
                    RowBox[{"{", "0.5", "}"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"addfluss2", "=", "addfluss2"}], ";"}], ",", "\n", 
                    RowBox[{"tnasch2", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"vormax1", ":", " ", 
                    RowBox[{
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], "-", 
                    "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"falls", " ", "zuvor", " ", "leer", " ", "0"}], 
                    ";", " ", 
                    RowBox[{"posvormax1", ":", " ", 
                    RowBox[{
                    RowBox[{"Maximum", " ", "von", " ", "t"}], "-", "1"}]}]}],
                     ",", " ", 
                    RowBox[{
                    RowBox[{
                    "falls", " ", "zuvor", " ", "leer", " ", "nCells"}], "+", 
                    "1"}], ",", " ", 
                    RowBox[{
                    "sodass", " ", "jeder", " ", "Wechsel", " ", "Index", " ",
                     "erh\[ODoubleDot]ht"}]}], "*)"}], "\n", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"vornasch2", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"vormax2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"vornasch2", ",", 
                    RowBox[{"Max", "[", "vornasch2", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    RowBox[{"posvormax2", "=", 
                    RowBox[{"vornasch2", "[", 
                    RowBox[{"[", "vormax2", "]"}], "]"}]}], ";"}], ")"}], ",", 
                    RowBox[{"vornasch2", "==", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"posvormax2", "=", 
                    RowBox[{"nCells", "+", "1"}]}], ";", 
                    RowBox[{"vormax2", "=", "0"}], ";"}], ")"}]}], "]"}], ";",
                     "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Index", " ", "Maximum", " ", "von", " ", "t"}], 
                    "-", 
                    RowBox[{
                    "1", " ", "mit", " ", "Wechseln", " ", "aus", " ", 
                    "Schritt", " ", "von", " ", "t"}], "-", 
                    RowBox[{"1", " ", "bis", " ", "t"}]}], "*)"}], "\n", 
                    RowBox[{"index2", "=", 
                    RowBox[{"vormax2", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax2"}], "&"}]}], "]"}], "]"}], 
                    "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax2"}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], " ", 
                    "*)"}], "\n", 
                    RowBox[{"max2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"tnasch2", ",", 
                    RowBox[{"Max", "[", "tnasch2", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "Maximum", " ", "von", " ", "t", " ", "mit",
                     " ", "Wechseln", " ", "aus", " ", "Schritt", " ", "von", 
                    " ", "t", " ", "bis", " ", "t"}], "+", "1"}], "*)"}], 
                    "\n", 
                    RowBox[{"nextindex2", "=", 
                    RowBox[{"max2", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu2", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch2", "[", 
                    RowBox[{"[", "max2", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon2", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch2", "[", 
                    RowBox[{"[", "max2", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Indizes", " ", "anpassen", " ", "falls", " ", "Fluss", 
                    " ", "durch", " ", "letzte", " ", "Zelle"}], ",", " ", 
                    RowBox[{
                    "zyklisch", " ", "durch", " ", "Anzahl", " ", "Autos", 
                    " ", "auf", " ", "Spur"}]}], "*)"}], "\n", 
                    RowBox[{"indexfl2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index2", "-", "m2"}], ">", "0"}], ",", 
                    RowBox[{"index2", "-", "m2"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index2", "-", "m2"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index2", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m2", ",", 
                    RowBox[{"Length", "[", "tnasch2", "]"}]}], "]"}], "+", 
                    "index2"}], ",", 
                    RowBox[{"Length", "[", "tnasch2", "]"}]}], "]"}], ",", 
                    "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index2", "-", "m2"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index2", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "index2"}], "+", "m2"}], ",", 
                    RowBox[{"Length", "[", "tnasch2", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", 
                    RowBox[{"nextindexfl2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex2", "-", "m2"}], ">", "0"}], ",", 
                    RowBox[{"nextindex2", "-", "m2"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex2", "-", "m2"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex2", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m2", ",", 
                    RowBox[{"Length", "[", "nexttnasch2", "]"}]}], "]"}], "+",
                     "nextindex2"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch2", "]"}]}], "]"}], ",",
                     "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex2", "-", "m2"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex2", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "nextindex2"}], "+", "m2"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch2", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", "\n", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nexttnasch2", "[", 
                    RowBox[{"[", "nextindexfl2", "]"}], "]"}], "<", 
                    RowBox[{"tnasch2", "[", 
                    RowBox[{"[", "indexfl2", "]"}], "]"}]}], ",", "\n", 
                    RowBox[{
                    RowBox[{"addfluss2", "=", 
                    RowBox[{"addfluss2", "+", "1"}]}], ";", "\n", 
                    RowBox[{"m2", "=", 
                    RowBox[{"m2", "+", "1"}]}], ";"}]}], "\n", "]"}], ";"}]}],
                    "]"}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], 
            ";"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"Clear", "[", 
          RowBox[{
          "nasch", ",", "nasch1", ",", "nasch2", ",", "tnasch", ",", 
           "nexttnasch", ",", "tnasch1", ",", "tnasch2", ",", "nexttnasch1", 
           ",", "nexttnasch2"}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"Dichte", " ", "und", " ", "Verkehrsfluss"}], "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"funddata", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nCar", "/", "Zellen"}], ",", "addfluss"}], "}"}]}], 
             "]"}], ";"}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"funddata", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nCar", "/", "Zellen"}], ",", 
                RowBox[{"addfluss1", "+", "addfluss2"}]}], "}"}]}], "]"}], 
            ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"funddata", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Gesamtfluss", " ", "durch", " ", "Zeit", " ", "teilen"}], 
       "*)"}], "\n", 
      RowBox[{"funddata", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"funddata", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"funddata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}], "/", "tMax"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "funddata", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"PlotRange", " ", "f\[UDoubleDot]r", " ", "fundplot"}], "*)"}],
       "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", 
        RowBox[{"range", "=", "0.9"}], ",", 
        RowBox[{"range", "=", "1.5"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Fundamentalplot", " ", "mit", " ", "density", " ", "und", " ", 
        "addfluss"}], "*)"}], "\n", 
      RowBox[{"fundplot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"funddata", ",", 
         RowBox[{"ImageSize", "->", "Medium"}], ",", 
         RowBox[{"PlotRange", "->", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "range"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Dichte \[Rho]\>\"", ",", 
            "\"\<Zeitliches Mittel des Flusses\>\""}], "}"}]}], ",", "\n", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"RandomInteger", "[", "255", "]"}], ",", 
            RowBox[{"RandomInteger", "[", "255", "]"}], ",", "0"}], "]"}]}], 
         ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Fundamentalplot mit p=\>\"", "<>", 
           RowBox[{"ToString", "[", "p", "]"}]}]}], ",", "\n", 
         RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], ";", " ", "\n", 
      "\n", 
      RowBox[{"Return", "[", "fundplot", "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8995695063052354`*^9, 3.899569525205841*^9}, {
   3.8995699175539665`*^9, 3.8995699296681376`*^9}, {3.899899237293138*^9, 
   3.899899250841441*^9}, {3.8998995164675903`*^9, 3.8998995280537086`*^9}, {
   3.89989974498818*^9, 3.89989979712537*^9}, {3.8998999435001626`*^9, 
   3.8998999497126837`*^9}, {3.899900212405254*^9, 3.899900220688544*^9}, {
   3.8999038843638983`*^9, 3.899903887116536*^9}, {3.8999042748613787`*^9, 
   3.8999042960879498`*^9}, {3.899906492158068*^9, 3.8999065053977814`*^9}, {
   3.8999065523304653`*^9, 3.899906557637895*^9}, {3.89990659659137*^9, 
   3.899906600936808*^9}, {3.8999066503529058`*^9, 3.899906663208034*^9}, {
   3.899906703036118*^9, 3.8999067254352665`*^9}, {3.8999074266834555`*^9, 
   3.899907512756282*^9}, {3.8999076341314454`*^9, 3.899907638097982*^9}, {
   3.8999076796585484`*^9, 3.899907759937767*^9}, {3.899907804642826*^9, 
   3.8999078114748955`*^9}, {3.899907946183217*^9, 3.8999079516345234`*^9}, {
   3.89992007756532*^9, 3.8999200808687496`*^9}, 3.8999246947641497`*^9, {
   3.8999247252197495`*^9, 3.899924805125222*^9}, {3.899924907598276*^9, 
   3.899925037744503*^9}, {3.899925074784424*^9, 
   3.8999250759123154`*^9}},ExpressionUUID->"a5b60d5a-5222-4cce-94d6-\
a55faf45c974"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fundplot", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.1", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.15", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.2", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.25", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.3", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.5", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.75", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"fundplot", ",", 
     RowBox[{"FundamentalD", "[", 
      RowBox[{"\"\<NaSch\>\"", ",", "1", ",", "0"}], "]"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"fundplot", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "9", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"m", "+", "2"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8995695429472656`*^9, 3.8995695469690742`*^9}, {
  3.8998873619177823`*^9, 3.8998873793171015`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"1ab7f740-9d76-4563-b25f-b4771fd68594"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {193.5, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.1\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {580.5, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.15\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {967.5, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.2\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {193.5, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.25\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {580.5, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.3\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {967.5, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.5\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {193.5, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.75\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {580.5, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=1\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {967.5, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8998870062270575`*^9, 3.8998880119385614`*^9, 
  3.8998884621419916`*^9, 3.899889050358941*^9, 3.8999245026384077`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"6e0ede3b-ce62-44f0-a200-898e7aa7345a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fundplot", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fundnasch60", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fundnasch100", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fundnasch200", "]"}], ";"}]}], "Code",
 CellChangeTimes->{3.899569567056322*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"51aa0a0c-0d53-462f-9044-f6caf6c78fb1"],

Cell[TextData[{
 StyleBox["Aus den Fundamentalplots l\[ADoubleDot]sst sich erkennen, dass je \
h\[ODoubleDot]her die Tr\[ODoubleDot]delwarscheinligkeit ist desto h\
\[ODoubleDot]her ist die Streuung des Flusses und desto geringere ist der \
Fluss.\nDie Diagramme zeigen wie die H\[ODoubleDot]he der Peaks beim p=0.1 am \
h\[ODoubleDot]chsten ist, und zwar fast bis 0.7 und dass beim p= 1 viel \
geringer wird, also bis ungef\[ADoubleDot]hr 0,012 hoch werden. \nMit eine \
unterschied von \[CapitalDelta]p=0.05 unterscheid sich den peak von 0.5 und \
mit \[CapitalDelta]p=0.1 wird das unterschied auch beim ungef\[ADoubleDot]hr \
0.1\nMan kann beobachten, dass bis dichte, ungef\[ADoubleDot]hr, 0.125 wird \
der Fluss linear erh\[ODoubleDot]hen, weil keine Staus noch gibt's und nach \
diese dichte werden mehrere Staus sich entwickeln und wird damit der Fluss \
linear abfallen. Der Fluss wird 0 ungef\[ADoubleDot]hr bei dichte=1.\nEine \
Ausnahme bildet sich f\[UDoubleDot]r p=1 wo der Fluss fast sofort abf\
\[ADoubleDot]llt, also ab eine dichte nah an 0.\n",
  FontColor->RGBColor[
   0.9568627450980393, 0.6470588235294118, 0.06666666666666667]],
 "\n"
}], "Text",
 CellChangeTimes->{{3.8995705289619255`*^9, 
  3.8995705400771027`*^9}},ExpressionUUID->"a701f714-de62-4c3c-a86b-\
81330ddfdfbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["VDR",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"550726d6-f6e8-4b8b-9f6f-15bcb1c1f336"],

Cell[TextData[StyleBox["In diesem Modul wird das NaSch-Modell in mit der \
Velocity Dependent Randomization umgeschrieben. Dies bewirkt, dass die Tr\
\[ODoubleDot]delwahrscheinlichkeit abh\[ADoubleDot]ngig von der \
Geschwindigkeit variiert. Sie wird f\[UDoubleDot]r stehende Autos um q h\
\[ODoubleDot]her als sonst f\[UDoubleDot]r fahrende. Dies soll ein Tr\
\[ODoubleDot]deln beim Anfahren simulieren. ",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899569946867188*^9, 3.899569947188489*^9}, {
  3.8995700340922203`*^9, 
  3.899570162607607*^9}},ExpressionUUID->"b0d6d391-94d1-47a9-8c74-\
499ffbd0b667"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Fundamentalplots", " ", "des", " ", "Velocity"}], "-", 
    "Dependent", "-", 
    RowBox[{"Randomization", " ", "Modells"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"vdrNaSch", "[", 
    RowBox[{
    "nCar_", ",", "nCells_", ",", "tMax_", ",", "vMax_", ",", "p_", ",", 
     "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
     "q", " ", "ist", " ", "zus\[ADoubleDot]tzliche", " ", 
      "Wahrscheinlichkeit", " ", "zum", " ", "Tr\[ODoubleDot]deln", " ", 
      "beim", " ", "Anfahren"}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos", ",", "vAutos", ",", "dAutos", ",", "xvdr", ",", "vvdr", ",", 
       "dvdr", ",", "minAuto", ",", "maxAuto"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Erzeugen", " ", "Listen", " ", "f\[UDoubleDot]r", " ", "x"}], 
       ",", " ", 
       RowBox[{
       "v", " ", "und", " ", "d", " ", "f\[UDoubleDot]r", " ", "jeden", " ", 
        "Zeitschritt"}]}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"xvdr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"vvdr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"dvdr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Autos", " ", "haben", " ", "Position", " ", "x", " ", "und", " ", 
        "Geschwindigkeit", " ", "v", " ", "zum", " ", "vorderen", " ", 
        "Auto"}], "*)"}], "\n", 
      RowBox[{"xAutos", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", "nCells", "]"}], ",", "nCar"}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"vAutos", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", "nCar"}], "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "Anfangsaufstellung"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xvdr", ",", "xAutos"}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vvdr", ",", "vAutos"}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Verkehrsregeln", " ", "aus", " ", "NaSch"}], "-", 
        RowBox[{"Modell", " ", "implementieren"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", "tMax"}], ",", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Anfangszustand", " ", "ist", " ", "i"}], "=", "0"}], ",", 
          " ", 
          RowBox[{"insgesamt", " ", "tMax", " ", "Schritte"}]}], "*)"}], "\n",
         "\n", 
        RowBox[{"(*", 
         RowBox[{"Oft", " ", "verwendete", " ", "Variablen"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"minAuto", "=", 
          RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto", "=", 
          RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Freie", " ", "Zellen", " ", "d", " ", "vor", " ", "dem", " ", 
           "Auto", " ", "bis", " ", "zum", " ", "vorderen"}], "*)"}], "\n", 
         RowBox[{"dAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
              RowBox[{"nCells", "-", 
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dAutos", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
             RowBox[{
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
             RowBox[{"nCells", "-", 
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", 
              "1"}]}], "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R1", ":", " ", "Beschleunigen"}], ",", " ", 
           RowBox[{
           "falls", " ", "vMax", " ", "noch", " ", "nicht", " ", 
            "erreicht"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R2", ":", " ", "Abbremsen"}], ",", " ", 
           RowBox[{
           "falls", " ", "v", " ", "gr\[ODoubleDot]\[SZ]er", " ", "als", " ", 
            "Abstand", " ", "d"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"dAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"vAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", " ", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{"R3", ":", " ", 
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "mit", " ", "Wahrscheinlichkeit", " ", 
            "p"}]}], "*)"}], 
         RowBox[{"(*", 
          RowBox[{"Randomization", ",", " ", 
           RowBox[{"q", "=", 
            RowBox[{"p0", "-", "p"}]}], ",", " ", 
           RowBox[{
            RowBox[{"p", "+", 
             RowBox[{
             "q", " ", "wahrscheinlichkeit", " ", "dass", " ", "sie", " ", 
              "tr\[ODoubleDot]deln", " ", "falls", " ", "die", " ", "vorher", 
              " ", "v"}]}], "=", 
            RowBox[{"0", " ", "hatten"}]}], ",", " ", 
           RowBox[{"p", "=", 
            RowBox[{
             RowBox[{"wahrsch", ".", " ", "v"}], ">", "0"}]}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "==", "0"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", 
                 RowBox[{"p", "+", "q"}]}], ",", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
                RowBox[{
                 RowBox[{"vAutos", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"vAutos", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "-", "1"}]}], ",", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Wenn", " ", "Auto", " ", "steht", " ", "ist", " ", "p", " ", "um", 
           " ", "q", " ", "erh\[ODoubleDot]ht"}], "*)"}], "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"R4", ":", " ", 
           RowBox[{"Fahren", " ", "um", " ", "vAutos", " ", "Zellen"}]}], 
          "*)"}], "\n", 
         RowBox[{"xAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Abspeichern", " ", "in", " ", "ausgegebene", " ", "Variablen"}], 
          "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xvdr", ",", "xAutos"}], "]"}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vvdr", ",", "vAutos"}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Letzter", " ", "Durchlauf", " ", "der", " ", "Schleife", " ", 
            "speichert", " ", "vorletzten", " ", "Abstand", " ", "ab"}], ",", 
           " ", 
           RowBox[{
           "deshalb", " ", "au\[SZ]erhalb", " ", "Schleife", " ", "letztes", 
            " ", "Element", " ", "abspeichern"}]}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dvdr", ",", "dAutos"}], "]"}], ";"}]}], "\n", "]"}], ";", 
      "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Erneute", " ", "Berechnung", " ", "f\[UDoubleDot]r", " ", 
        "Endposition"}], "*)"}], "\n", 
      RowBox[{"minAuto", "=", 
       RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
      RowBox[{"maxAuto", "=", 
       RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Berechnen", " ", "Abst\[ADoubleDot]nde", " ", "im", " ", "letzten", 
        " ", "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"dAutos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", 
              RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
           RowBox[{"nCells", "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dAutos", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"nCells", "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
         "]"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "in", " ", "dvdr"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dvdr", ",", "dAutos"}], "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"xvdr", ",", "vvdr", ",", "dvdr"}], "}"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995695911552515`*^9, {3.899896560776352*^9, 3.8998966815259285`*^9}, 
   3.899896798367898*^9, 3.8999000032860374`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"a2d3b72e-b94a-4d30-b74d-64de6106ab33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plots", " ", "zum", " ", "Untersuchen", " ", "des", " ", "VDR"}],
     "-", "Modells"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"vdrplots", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"vdhisto", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"60", ",", "100"}], "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.15", ",", "0.2"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"vdhisto", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"60", ",", "100"}], "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.15", ",", "0.4"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"dichteplot", "[", 
       RowBox[{
       "\"\<vdrNaSch\>\"", ",", "100", ",", "0.15", ",", "0.2", ",", "10"}], 
       "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"dichteplot", "[", 
       RowBox[{
       "\"\<vdrNaSch\>\"", ",", "100", ",", "0.15", ",", "0.4", ",", "10"}], 
       "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", "0.15", ",", "0.2"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", "0.3", ",", "0.2"}], "]"}]}], "]"}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995696009221945`*^9, {3.89988870722795*^9, 3.899888716473089*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"79664507-1a56-43e4-892e-d2ce0d5bd172"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vdrplots", "=", 
   RowBox[{"Flatten", "[", "vdrplots", "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"vdrplots", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"m", "+", "3"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"vdrplots", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "9", ",", "11", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"m", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{3.8995696130179033`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"d83d6a56-0933-4cad-a803-84898e4902c5"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9017319230769231, 0.2589166923076923, 0.019211699999999998`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684845`, 
                  98.60419607176115}, {-86.96866197951991, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176115, 
                  133.36077662283748`}, {-73.82583583125775, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-54.11159660886449, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499007`}, {-54.11159660886449, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7949453846153847, 0.11282307692307693`, 
                0.0048687999999999995`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499008`, 
                  237.63051827606637`}, {-73.82583583125775, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 19}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606635`, 
                  272.3870988271427}, {-139.5399665725686, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 19]& ,
              TagBoxNote->"19"],
             StyleBox["19", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[19, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9899876666666667, 0.5566463333333334, 0.06420996666666667], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  75.43314237104354}, {-102.0829120500214, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{74.98314237104356, 
                  87.01866922140238}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9766378888888889, 0.43626944444444443`, 0.04292872222222222], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{86.56866922140236, 
                  98.60419607176112}, {-89.59722720917233, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9899876666666667, 0.5566463333333334, 0.06420996666666667], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.1541960717611, 
                  110.18972292211987`}, {-102.0829120500214, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9766378888888889, 0.43626944444444443`, 0.04292872222222222], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{109.73972292211985`, 
                  121.77524977247867`}, {-89.59722720917233, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9766378888888889, 0.43626944444444443`, 0.04292872222222222], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{121.32524977247866`, 
                  133.3607766228374}, {-89.59722720917233, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.6661732222222222, 0.08536913333333333], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  
                  144.94630347319614`}, {-114.56859689087045`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[
           0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{144.49630347319615`, 
                  156.53183032355494`}, {-64.62585752747421, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{156.08183032355495`, 
                  168.11735717391372`}, {-27.168803004927042`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.6673571739137, 
                  179.70288402427252`}, {-27.168803004927042`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6258028888888889, 0.054322222222222216`, 
                0.010549066666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{179.2528840242725, 
                  191.28841087463127`}, {-39.6544878457761, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{12.5, 0.}, {13.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{214.00946457534874`, 
                  226.0449914257075}, {-27.168803004927042`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           Opacity[0.5], EdgeForm[{Opacity[0.5599999999999999], Thickness[
           Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{16.5, 0.}, {17.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{260.3515719767838, 
                  272.38709882714255`}, {-27.168803004927064`, \
-14.233118164077963`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.86, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 17.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7598842173913044, 0.1106822695652174], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 28}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-131.2161766786692, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 28]& ,
              TagBoxNote->"28"],
             StyleBox["28", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[28, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 30}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-139.5399665725686, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 30]& ,
              TagBoxNote->"30"],
             StyleBox["30", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[30, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9725749130434783, 0.399633, 0.03645182173913043], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 19}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  168.11735717391377`}, {-93.75912215612205, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 19]& ,
              TagBoxNote->"19"],
             StyleBox["19", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[19, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5916592173913043, 0.04251304347826087, 
                0.011695704347826087`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-52.14017268662518, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-43.8163827927258, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.3870988271427}, {-43.81638279272582, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7668353076923077, 0.11255989230769231`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 25}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  82.8057503667263}, {-130.2913111349026, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 25]& ,
              TagBoxNote->"25"],
             StyleBox["25", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[25, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 27}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{82.35575036672631, 
                  101.76388521276806`}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 27]& ,
              TagBoxNote->"27"],
             StyleBox["27", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[27, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9838262307692308, 0.5010877692307693, 0.05438785384615385], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 17}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{101.31388521276804`, 
                  120.72202005880956`}, {-93.29668938423873, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9472193076923077, 0.3370262307692308, 0.027929300000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{120.27202005880955`, 
                  139.68015490485126`}, {-74.7993785089068, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6862109230769231, 0.07521538461538461, 0.008520400000000001], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{139.23015490485128`, 
                  158.6382897508928}, {-37.80475675824291, \
-14.23311816407799}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7405781538461539, 0.09401923076923077, 0.0066946], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{158.18828975089278`, 
                  177.59642459693453`}, {-42.4290844770759, \
-14.23311816407799}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5231092307692308, 0.018803846153846154`, 0.0139978], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{177.1464245969345, 
                  196.55455944297603`}, {-23.931773601743963`, \
-14.23311816407799}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.609], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6318436923076923, 0.056411538461538464`, 0.0103462], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{196.104559442976, 
                  215.51269428901776`}, {-33.18042903940993, \
-14.23311816407799}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{252.97896398110095`, 
                  272.3870988271425}, {-19.307445882910997`, \
-14.233118164077968`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.72, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 10.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -118.66252583997979},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 14}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  98.60419607176115}, {-102.08291205002143`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 14]& ,
              TagBoxNote->"14"],
             StyleBox["14", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[14, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283748`}, {-39.654487845776124`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-64.62585752747425, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6454355, 0.0611125, 0.00988975], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499007`}, {-52.14017268662517, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499005`, 
                  237.63051827606637`}, {-64.62585752747425, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 20}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.38709882714267`}, {-139.53996657256863`, \
-14.233118164077979`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 20]& ,
              TagBoxNote->"20"],
             StyleBox["20", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[20, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 14}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  82.80575036672647}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 14]& ,
              TagBoxNote->"14"],
             StyleBox["14", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[14, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{82.35575036672648, 
                  101.76388521276812`}, {-32.519810793862355`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.920685, 0.29146233333333327`, 0.022844033333333333`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{101.3138852127681, 
                  120.72202005880973`}, {-77.11154236832327, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5865376666666666, 0.04074166666666666, 0.0118677], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{120.27202005880972`, 
                  139.68015490485135`}, {-41.43815710875453, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{139.23015490485133`, 
                  158.63828975089297`}, {-32.519810793862355`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 14}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{158.18828975089295`, 
                  177.59642459693455`}, {-139.53996657256855`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 14]& ,
              TagBoxNote->"14"],
             StyleBox["14", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[14, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 6}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{177.14642459693457`, 
                  196.55455944297623`}, {-68.1931960534311, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.609], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5865376666666666, 0.04074166666666666, 0.0118677], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{196.10455944297624`, 
                  215.51269428901787`}, {-41.43815710875453, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5865376666666666, 0.04074166666666666, 0.0118677], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{215.06269428901786`, 
                  234.4708291350595}, {-41.43815710875453, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{234.02082913505947`, 
                  253.4289639811011}, {-50.35650342364671, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{252.97896398110106`, 
                  272.3870988271427}, {-32.519810793862376`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.72, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 10.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 34}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 34]& ,
              TagBoxNote->"34"],
             StyleBox["34", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[34, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.991418, 0.5695438571428572, 0.0664901], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 25}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-106.48962434679163`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 25]& ,
              TagBoxNote->"25"],
             StyleBox["25", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[25, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9066055714285715, 0.2672855714285714, 0.020145728571428573`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 17}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  168.11735717391377`}, {-77.11154236832327, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-36.71667964792926, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-36.71667964792926, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7716451428571429, 0.10476428571428571`, 
                0.005651285714285715], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.3870988271427}, {-58.75024113178054, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.616], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 28}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  84.70156385133063}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 28]& ,
              TagBoxNote->"28"],
             StyleBox["28", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[28, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7944680370370371, 0.12002402222222223`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 27}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{84.25156385133064, 
                  105.5555121819765}, {-135.08079341512243`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 27]& ,
              TagBoxNote->"27"],
             StyleBox["27", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[27, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.937111, 0.3196685555555555, 0.02599205555555556], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197648`, 
                  126.4094605126221}, {-72.65236921087715, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{125.95946051262209`, 
                  147.26340884326794`}, {-59.27484973853888, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6258028888888889, 0.054322222222222216`, 
                0.010549066666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326792`, 
                  168.11735717391377`}, {-32.51981079386233, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8933083333333334, 0.24445196296296295`, 
                0.017597329629629628`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  188.9713055045596}, {-63.73402289598497, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6781565185185185, 0.07242962962962962, 0.00879088888888889], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{188.5213055045596, 
                  209.82525383520522`}, {-36.97898395130844, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.616], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{209.3752538352052, 
                  230.67920216585105`}, {-19.142291321524063`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{251.08315049649684`, 
                  272.3870988271427}, {-19.142291321524084`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.7, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 9.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -355.98757751993935},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8998881099526567`*^9, 3.8998885344838753`*^9, 
  3.899889128765687*^9, 3.899897510631221*^9, 3.8998981231230636`*^9, 
  3.8999245685312953`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"3314a55c-3464-4bf5-8085-3ff84b36c790"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13clq3AF05WGRlaE3XnjhhRdqYYwwxmieh8rQ3Ul3Z563gazzCvexsryP
lEcIIToH9IG8ER+Hu/UPqar+9T//5d/+5l//4Ojo6N//x9HRf/3873//8fr+
59HhvT/hz/gL/oq/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+
xE/4Gb/gV3x478FHf8iOj/6IHR/9MTs++hN2fPS/2PHR/2bHR/+HHR/9KTs+
+jN2fPR/2fHR/2PHR/+fHR/9OTs++gt2fPSX7Pjor977gAcvPvpr7vHgxUd/
wz0evPjob7nHgxcf/R33ePDio7/nHg9efPQP3OPBi4/+kXs8ePHRP3GPBy8+
+mdsN/z5CX/GX/BX/A0f4xP8Hf/Ap/gn/oV/4zN8ji/wJb7C1/gG3+I7fI8f
8CN+ws/4Bb/iw3sPbj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx
+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+/HR7xl2w5+f8Rf8FX/D
x/gEf8c/8Cn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+PDeg9uP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7k
Hg9e3H7kHg9e3H7kHg9e3H589Hcpf8+wG/78gr/ib/gYn+Dv+Ac+xT/xL/wb
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcfbz7gwYvb
j9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj49ex/DvUv6eYTf8+RV/w8f4BH/HP/Ap/ol/4d/4DJ/jC3yJr/A1vsG3
+A7f4wf8iJ/wM37Br/jw3oPbj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP148wEPXtx+5B4PXtx+5B4PXtx+
5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+xL7u7esY/l3K
3zPshj+/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/g
V3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+
ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8HL24/
co8HL24/co8HL24/co8HL24/co8HL24/Yt8n5evevo7h36X8PcNu+PMYn+Dv
+Ac+xT/xL/wbn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvb
j9zjwYvbj9zjwYvbj4/eV5t++Dq3r1v4dyh/r7ATxx/8PMHf8Q98in/iX/g3
PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3nzAgxe3
H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nH
gxe3H7Gfw0g/Yt8n5evevo7h36X8PcNu+PM7/oFP8U/8C//GZ/gcX+BLfIWv
8Q2+xXf4Hj/gR/yEn/ELfsWH9x7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hmw948OL2I/d48OL2I/d4
8OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/Zze+mH
76P1fVG+zu3rFv4dyt8r7MT3D37+wKf4J/6Ff+MzfI4v8CW+wtf4Bt/iO3yP
H/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuRezx4cfuRezx4cfuRezx4
cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfsR+znv9MPPXfg+Wt8X
5evcvm7h36H8vcJO/Pjg5yn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7EPhck/fBzen7uwvfR+r4oX+f2
dQv/DuXvFXbi9IOfP/Ev/Buf4XN8gS/xFb7GN/gW3+F7/IAf8RN+xi/4FR/e
e3D7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx9vPuDBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPB
i9uP3OPBi9uP3OPBi9uP3OPBi9uP2OdIpR9+rtvP6fm5C99H6/uifJ3b1y38
O5S/V9iJnx/8/IV/4zN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iw3sPbj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7
PHhx+5F7PHhx+5F7PHhx+xH73MH0w+eA+LluP6fn5y58H63vi/J1bl+38O9Q
/l5hJ3598PM3PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/3nzAgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3
H7nHgxe3H7nHgxe3H7HPqU0/fG6UzwHxc91+Ts/PXfg+Wt8X5evcvm7h36H8
vcJO/P7g5xk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
8eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/Yh9rnn6EX/Cn/EX/BX7ub1jfIJ9n5Sve/s6hn+X8vcMu+HP
c3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVH957cPuRHbcf2XH7kR23H9lx+5Ed
tx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H28+4MGL24/c
48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL
24/Y78FIP3wurc8Z9LlRPgfEz3X7OT0/d+H7aH1flK9z+7qFf4fy9wo7cf7B
zwt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/48N6D24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9ePMBD17cfuQe
D17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fsR+b1L64XPMfS6tzxn0uVE+B8TPdfs5PT934ftofV+Ur3P7uoV/h/L3Cjtx
8cHPS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fh/ce3H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftx5sPePDi9iP3
ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi
9iP2e/bSD7/3wueY+1xanzPoc6N8Doif6/Zzen7uwvfR+r4oX+f2dQv/DuXv
FXbi8oOfV/ga3+BbfIfv8QN+xE/4Gb/gV3x478HtR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H68+YAHL24/
co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8H
L24/Yr+XNf2IP+HP+Av+in3u4DE+wX7O28/t+TkM31fr+6R83dvXMfy7lL9n
2A1/XuMbfIvv8D1+wI/4CT/jF/yKD+89uP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bjzcf8ODF7Ufu8eDF
7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufs
93inH36vnt+T5Pde+Bxzn0vrcwZ9bpTPAfFz3X5Oz89d+D5a3xfl69y+buHf
ofy9wk5cf/DzBt/iO3yPH/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuR
ezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4
cfsRpx9+b7ffw+r36vk9SX7vhc8x97m0PmfQ50b5HBA/1+3n9Pzche+j9X1R
vs7t6xb+HcrfK+zEzQc/b/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH78eYD
Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4
/cg9Hry4/YjTj/w/l374vd1+D6vfq+f3JPm9Fz7H3OfS+pxBnxvlc0D8XLef
0/NzF76P1vdF+Tq3r1v4dyh/r7ATtx/8vMP3+AE/4if8jF/wKz689+D2Iztu
P7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj/efMCDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceD
F7cfuceDF7cfuceDF7cfcfqR/9fSj/gT/oy/4K/Y7006xifY59T63EGfI+Vz
Qfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+vMcP+BE/4Wf8gl/x4b0Htx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcf2XH78eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/cg9Hry4/YjTj/w/ln7En/Bn/AV/xX7P3jE+wT7X3OfU+txB
nyPlc0H8nPcZ9nMYvq/W90n5urevY/h3KX/PsBv+fMCP+Ak/4xf8ig/vPbj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7b
j+y4/ciO2483H/Dgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H
7vHgxe1H7vHgxe1H7vHgxe1HnH7k/630I/6EP+Mv+Cv2e1mP8Qn2ezB8rvkp
9rmDPkfK54KcYT+35+cwfF+t75PydW9fx/DvUv6eYTf8+Yif8DN+wa/48N6D
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9ePMBD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fuQeD17cfuQeD17cfuQeD17cfsTpR/6fSj/iT/gz/oK/Yr/H+xifYL83ye/B
OMU+p9bnDvocqTPs57z93J6fw/B9tb5Pyte9fR3Dv0v5e4bd8OcTfsYv+BUf
3ntw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj9zjwYvbj9zjwYvbj9zjwYvbjzj9yP9L6Uf8CX/GX/BX/A0f4xPs9+z5
vUmn2Oea+5xanzt4hn0uiJ/z9nN7fg7D99X6Pilf9/Z1DP8u5e8ZdsOfz/gF
v+LDew9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/bjzQc8eHH7kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7
kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7Eacf+X8o/Yg/4c/4C/6Kv+FjfIK/
Y79n7xT7PRg+19zn1J7hc+xzQfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+
fMGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7E6Uf+30k/4k/4M/6Cv+Jv+Bif
4O/Y72U9xX5vkt+D4XPNz/A5vsA+F+QK+7k9P4fh+2p9n5Sve/s6hn+X8vcM
u+HPV3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8H
L24/co8HL24/co8HL24/co8HL24/co8HL24/Xg7/CZYs0AQ=
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
Get3zcQs4tTDmMUz7YP+XjF0hUxc6JnJh83si+cCm5YKXTITd5YJXToTj1Bi
MGjZ0O6ZeNct0xqL+B5zP+AWcerh4BKZ8uAgc+PTz8tlmgvGrBK6cibWoCtl
YhbKXnk3cH/57OEQ51g+E4NWzVQPk1bL5MOMHpnWgFnk4vM9J3y3AH8eCrNW
z1QDb/h+6DUy8Wid0LUzsWbdTD7sWS+TD2s2DN0g03u0d+j6mZhH3VqZ+nnr
0K0ysY049dzFvplicJHcNTOxY6NM88KmzUI3zcSaPpl82LN5Jh/ebJypBk5s
GbpFpvcl+2JPMIj1icER4tTDQebeJFN/9Mu0J/p/YOhumXpxm0wxniPfe39y
Ju70D90uE492CN0+E5NQYjBu20z1cGvHTHmwcqdMPpxgnV0zcZD5qIE1u4Tu
nIlJu2faE6zZI5MPe/bM5MMa5hiQiQV7h+2ViYnMwXqwiTjzwiPi1MN4ngHP
EXbs43pYsq99+LR/2H6ZuDXEPjwaah8eDbNPLx0YNiIT16gb7Ls73Hnc5QPs
544PysSmEY7BiCPDjsjEplFhIzOx6RD7sOZQ+7DnMPvw5uCwgzL190HeE7w4
3HmdPTc+fDnK6/3v3Rk2OlOv8h3NfIc3PBofNi4TX462D2+OsQ9rJoVNzMSk
CWHHZeIadWMzcX2Qn29Xx4/NxMGxXntRz0E9fJnseeHQ1LATM/EI5fujl7Sy
V/r81Ez3FQad5BpYw/2dlolHx3veLj4r5+/uODUw4zTPBW9Ot8/nyXfL8x3z
sOmMsOmZWHWmfRh2ln3YdLZ9+HJ+2HmZ+Dvd88Ksc5wHj861DwuuCrsyE6vO
c2wDj12RiTcXh12UiVOX2IdTl9qHO5fZhzUXhl2QiXkXeE/w6XLn9fbc+PDl
au+DPplhn169I+z2TD10jWP02ANh92fi1PVh12Viz41hN2Ri0A2OwaFrXQ+n
bnIe3LrZ/maegzy4eYtjMOtW+7Dn7rC7MjEIvTMTV+70Xtfyc+L88Oge18CI
+8LuzcQsznRbJvbd5jV2dJwa3v/0Ij22s89KPffpu7BvMzGLf7vp4UzMetQ+
zHrMPgx63D798HTYU5m4SN1DmVj1hPNg05P26efXwl7NxKmnHBvhsVcycer5
TPcVTr1gH069aB8evWQfDnGvn8nUo894T3DqZecd4Lnx4crr3gfP4g379Pqn
YZ/4Ob3p2K4+04OZOPVO2NuZGPRe2LuZ2PSuYzDuLdfDqvedB6c+sH+I5yCP
Hv7QMXr6I/vw5cuwLzJx6vOwzzLx6zPvdYD3xd2FSV+5Bg59E/Z1Jj5xpo8z
cepjrzHBcWom+fOnBsZ8n+lO8B3zfEcz39kMt34K+zETm362D3d+sQ+HfrUP
d/4M+yMT56j7IRPPfnMevPvdPj1dxDp5Ln794Rh9zliWi03/hv2TiU3/2YdB
/A+n+DAoyeXDqr/D/srErL+8J3iU5sqDT8yNT4+VufZBz1W5fPp4ztA5cnGq
zhXjc+K77vnOexjUDm1ycWjm0Jly8QglBtdaueph4Sy58uDUrLl8eMcc5MGs
2XLF4NTsuXxYM3do51xMQufKxSaUvZ7h58T54dE8uWrgzryhXXKxiTN1ysUy
lDXgFHFquCub5DonTJkvVz28WSB0/lysWih0wVwMWziXD6e65vJh0CK5fJi0
aC6fu9stdPFcTEIXy3Wvl8gVg1OMUUMvLpkrBjt6hC7nf3OOf3tuqVycWiaX
D6e65/Lh0bK5fHhEHT68WCF0+VxMQpkXnjEf68FizseZYcyKuWrg1EqhPXOx
aZXQlXOxadVcPgxaLZcPg1bP5b/uHlszF+OoYy5YtUauPLjYK5cPs8jFh01r
56r/33s9155g0Pq5vl8VxqB83yqsQfnOeN4PfG58lnCrd64amEWceWHWBrli
MGvDXD6c4r5v6Dy+qx1GwJVNc90VPvtjwo7OxarNQ/vkYtmWoVvk4tRWuXwY
tHUuH+5sG7pNLsZRt1kuVvXNlQen+uXy6efdQnfNxTDqiMEPxgbk4tQOodvn
4tSOuXw4tVMuHx7tnMuHU/1Dt8vFQpQ9waldcuXBJubGhysDc+2Dfts9l08P
DwsbmqsX98gVo8dGhY3Mxam9w/bKxaB9w/bJxaZ9HINxe+aqh1WDnAcXB9uH
fcxBHvzazzH4tb99ODQi7IBcPEKH5+LNcO8VTvOcOD9sOtA1MOjgsINy8Ysz
DcnFwSFeYxbHqeGdw+fGnZjNZ6X+BL8Hvjer+A7xw3Ix7Aj7cOpI+zDoKPvc
2XFhY3MxjrpDc7FqtPNg0xj7MOKEsONz3fWxjnXz2ORcbDo2132FTcfZh00T
7MOdifZhAPd6fC4WjPee4NMk5y3uufFhxxTvA5acaB8unB12Vi5OTXVsDp/p
kFxsOjlsWi4enRp2Si5uneIYXDvJ9XDrNOfBptPtd/cc5MGI6Y7BjDPsw5rz
ws7NxSb0nFzMOsd77eR9cXfh0fmugUn8jHBBLoZxpjNzsexMr9HLcWr4c1J+
X7G6eXNJLo7wvdp8Ly3ffQt3rgi7PBd3rrQPd66yz926NuyaXO+nGWFX52IZ
dZfl6t07w+7Ixa2rXc/9vsux9ZzLd1NzZ6/zvPDo5rCbcnHnFvtw51b78Ol6
18Ce28Nuy8XBa7ynbb0+sX6OU7+l574xV8/d7T3R80+GPZGLU/c4Rp+9EPZ8
LgbdH3ZfLg49GPZALh494Bhcu9f1sPAh58Gph+3v5XUez8W++1wDpx4NeyQX
h57ynuDO0/bhzjP29/Qcj+VizXNhz+bi4CNebw/HmXew49Rv4WdwQy6OPO96
GPOizwyDXg17JRdfXrMPb163z918O+ytXLx5M+yNXJyj7uVc/fpZ2Ke5ePSG
6+npzx0b7tyXcvXiO54XBn0Q9n4u1nxoH9Z8ZB8mvesaePNJ2Me5euYt72mc
1yc2xnHqYdAX3gf9yvcy873d9Plv9od5XzwXWPNN2Ne5ePNd2Le5uPOtY3Dn
h7Dvc3HtS69BT/4T9ncuFn7venj3lfMmeG58mPWj54Ipf4b9kYs16O+5mPS7
98p/O+H37fx+/SSf4+dc3PnL9dO9Pj7s+8lrTHUuPvz413uFQfyltP/8efLd
8nzHPKxKQ5NCPMoK+bAmL+TDnqKQD29aoXUhtlHHvDCsLJTHzzRVIZ/enjN0
jkKcoo4YjGCsUyE2zRw6UyE2zVLIhzWzFvJhz2yFfHjTDm0KcQdlT/Bi9kJ5
8IO58emNzqFzFeqVuQv59OtioYsWYsk8hWL0WffQZQqxZr7QeQsxaIHQ+Qtx
CCUG17oUqodVCxbKg48LFfLhHXOQB6cWLhSDTV0L+fBlidBuhTiELl6IRyh7
hc08J84Pg5YsVAMnlg5dqhCDONMihfiFsgYcIU4NPx/Qi+/lYgpnpZ73z3++
N3CK90qPQpxaoZAPd1Ys5MOhnoV8+mrV0FUK8Y665QrxaKVCefBp5UI+fb5+
6HqFOEUdMXjB2LqFONWr0H2FU2sW8uHOWoV8OLR2IR/2cK9XK9TrKHuCHesU
yoMlzI0Pb3oX2gfPYoNCPr3bN3TrQs9pw0IxeM+Zli3EnU1CNy7Eo81CNy3E
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
JrE+MZhFnHwYs3tSHfQ3965z/zpcONgaNlMX+wKb9gwbkMSdvcIGJvFooGMw
aJ+wvZN41z9pDX7nedLnYyrHyYeDeySNm8xzo+nnfT0XjDks7NAk1uAPSWLW
Ia6VzwbOL++++TkOSGLQ4c6HSUdYw8f9w/ZLYtYB1nynnGT+whfuhOb3H+7M
5k5b7ruFR8eHHZfEmhOsYc+J1rDm5LDBSZ+jg8JOSmIeeccm9TN/d8LfoXRx
nHzO4nmOzeaxxySxY4jnhU2nh52WxJozrGHPmdbw5hTnwImzw85K+rwc7Jq6
en1iizpO/oKe+9Sk/hjqmuj/K8IuT+rF8x2jt64LuzaJO8PCLkzi0UVhw5OY
NNwxGHeB8+HWxR4HK0dYd/c6lyVx8ELnwJqRvKskJl3pmmDNVdawZ5T1Kp7j
0iQWXBN2dRITL/F6KzvOvGs6Tv4C3gP2cW0/H/mw53o/M6y6KezGJAaNsYZB
N1vTP7eFjU06p7eG3ZLENvJuSOrh+8PuSzrHtzif/n7AsXU9dnRSX97ueeHR
nWHjk/hylzW8udsaxoxzDmy4N+yeJN6NdU1beX1i/Rwn/3+fl66DHuXO62eT
ev55656ui32BL4+GPZLEncfDHktiz2OOwb4nw55IYtxDXoM+fC3s1SRuPeF8
2Pewx+3gudHw6ynPBVdeCnsxiS/4F5L49IJr5bvD0Um9vYef45kk1rzs/P28
/itJ/Hraa/T3WDTMeN21wso3w97w++Tueu6wh09vh72VxK13rOHRf6zh0bvW
1PVh2AdJXHvL88Kt9zwOHr1vTW9/HfaVn+cDx072z75MYtN/wz5JYtOn1rDm
M2vY87k1vPk47KMk7nzkmuDFFx432HOj6Y1vXAe98q01/fpX2J9JLPnOMfps
Mv6nyFms+THshyQG/Rz2UxKHfnIMrn3vfFj1i8fBx1+tz/AcjINTvzkGm363
hi//hP2dxCH8hCQeTXCtx3mfeH4YNNE5cGJS2L9JDOKZ/kji1x9eY4Tj5PBd
gV68I4kpPCv5fC5xRjg3cIrPlSmzONXJ0nAnZWk4lLM0fTV1+JbFO/KmyOJR
yRoHn2qWps9nCz9rFqfIIwYv+NksWZyaPuu8wqkZsjTcmTFLw6GZsjTs4VxP
k9XreGqCHTNnjYMlzI2GN7Nn1cFezJGl6d1Fwi+ctU9zZsXgPc80eRZ35g7f
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
4DeoYhaeWvls4Pzy7uEQz7FuFYM2rMqHSfweg4YZPavWgFmMRZ9gZvD7AXzh
Tmh+/+HO7LV83y082iL05lWs6VelYc+WVRrWbBt+m6rP0a3Db1XFPPI2q+rn
/uF3r2Ib8S19FveoisFFxm5axY7tquaFTTuF37GKNTtXadizS5WGN9tX5cCJ
3cLvWvV5SV3UBINYnxgcIU4+HGTuHar6Y4Brov8PDTukqhf3dIzeOibs6Cru
7B22VxWP9g3bp4pJ+zgG4wY6H27t53Gwcn/rab3OwVUc3Ms5sObAsAOqmHSY
a4I1h1vDniOsp/EcB1Wx4KiwI6uYeIDXm9px5p3JcfJhPHvAPs7i5yMf9hzr
Z4ZVJ3J2qhh0kjUMGmRN/5wSNqTqnJ4cNriKbeQdX9XD54cNrTrHg51Pf1/g
2Bwee1xVX57qeeHRmWFnVPHlLGt4dE7Y2VWMOc05sOG8sHOreDfENS3p9Ykt
7jj58PJC10GPcuf1lVU9P8p6dtfFvsCXi8MuquLOJWEjqtgzwjHYd2nYyCrG
DfMa9OHosOuruDXS+bBvuMd189xo+HWZ54Ir14ZdU8UX/NVVfLratfLdoW9V
b6/m57iiijXXOb+H10fDr8u9xqoei4YZN7hWWHlT2I1+n9xdzx328OnmsDFV
3LrFGh7dag2PxlpT1x1h46q4Nsbzwq3bPA4e3W5Nbz8U9qCfZ5xj2/pnD1Sx
6e6wu6rYdI81rLnXGvbcZw1v7gwbX8Wd8a4JXtzvcdt4bjS98bDroFcesaZf
Xwx7oYoljzpGn70Z9kYVa54Ie7yKQU+FPVnFoScdg2uPOR9WPe1x8PEZ6509
B+Pg1LOOwabnrOHLK2EvV3EI/1IVj15yrZt7n3h+GPSqc+DE62GvVTGIZ3q+
il/Pe439HSeH7wr04ulVTHnD+XwucUY4N3CKz5V3qjj1rjXcec8aDr1vTV99
HPZRFe/Ie7uKRx94HHz60Jo+/zbsmypOfeTYKf7Z11Wc+qzqvMKpz63hzhfW
cOhLa9jDuf6kqtc/cU2w4yuPG+K50fDmO9fBXnxvTe/+E/a39+kHxw7xM71V
xZ1fwn6u4tFvYb9WMelXx2Dcj86HW797HKz8w/psz/FTFb/+dAzW/GUNXyaF
/VvFJ/zEKk5NdK0Huy7OLkziwnZy4MLk3PfexCOeaUIVpyZ4DdhEnJyFvBfs
DRyZoikfrkzZpOFWCZ+beFSbNDxqTZpzNF34aZsYNE34qZs4R15q6t05w8/R
xDPi5HO+52qKwUTGdppYM33TvPBo5vAzNXFnliYNd2Zt0vBphqYc2DN7+Nma
zjd1URPsYH1isIk4+fRZl6Y66N2u4Rdr6vnFmzTvZsfwOzRxZ77w8zaxZ4Hw
8zcxCE8MBi0UfsEmxs3dtAbvYKemueAicfJh3zxN42Afc6Ph18JNc8GXpcIv
2cQd/BJNfMJTKxxnn2ZsYhDPsWgTg5ZuyodByzRpOLhI0xpwjbFozsvOTbXy
OcF87C+MWS78sk3cWjH8Ck1sWqlJw52VmzQcWqVJc2ZXD79aE+fIW76JR92b
xsGnVZs0HCTeremsk0eMPl8//HpNbFq76TsxbFqnScOgHk0aBvVs0rCK785r
NPU3nprg0bpN4+ATc6PhSq+m9WBT7/AbNPXwVuG3bOLRRuE3bOLOxk0a7mzS
pGHN5uE3a2LepuH7NnGNvD5NLOdZ2V+4RZx8OEicteEXc5APp7ZomhcObRt+
myYe4bdu4g2eWvls4L3x7mHTdk05MIhzvX0Tv/o1zfu/7w1Nzw+/iJPD34/w
edzXjNml6azw7i8JG9HErd3D79bEpv5NGu7s0aRhzF5hA5u4s2fYgCbOkbdr
U/8fGnZIE7cGOJ8+P8wxmMhY6pgqbG/PC6f2D9uviVMHWMOdA61hzT7OgREH
hx3UxL6Brmlar09sasfJpx8Odx306uCwQU29e7I1vXRm2BlNnDo67Kgm9hwb
dkwTg45xDD4dH3ZcU88d4TX4bjiV92x2x8mn14/0uJk9NxqenuC54MupYac0
8Qk/pIlTQ1xr9j7t28QgnuOkJj6d5nwYdLo1rDzRa3TxWPQKfv8XN7F8X+8v
XDnLewGrzgs7t4lhQ61h0/nW9MDwsGFN5/XCsAuaGEfeOU19exV708SyC5xP
T49yrKvHnt3UWxd5Xtg0sum8wqZLrWHQZdbL+znIgTtXhF3e1EPDXNNqXp9Y
d8fJhzFXuw76e2zYrU1cuM16MdfFvsCm68Oua+LODWGjm3g02jEYdFPYjU28
u8Zr8DsP55jzsZ7j5MPBaz1uHc+Npp/HeC4Yc0fYuCbW4G9vYtbtrpXPhjP8
7vv4OW5pYtB458OkO61hxs1eo7fHomHK3WF3hf0/jb+oow==
                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnTFo1VcUxp9KRRDRoUtUEJfi0GxKO3mlOjlYdBCHdrEU3KIpQpUuFVoC
XQSlg2CXWlBE0KFBfKixS6AUCRI6RCw0WEJiqtJJQqlKq4vwb/nXc973++57
WQKHx/3fd//3nvOd73znvs0HR/Z9vLzT6Vxd3emseP5/1V9D67/Z8aiMn1h1
6ecHd8voT8vuTyx9V0aH3tk29efv5b3FhaFPjk6XPWO79l04e6a1ffrtqYcn
Zx+UA/N3R2aO/VjGPrv95pEjX7X+/MqFA/vfXTNftjycfH/TVLfsOnblh5tn
jqZ/Pvu5LuPQ1i1qf/abve15j9on2fu27T6knfeofd70fqPs2XEhan1ofky1
D5vs589dnjy18v4L+8Wy82/7F2HjnL6xbvSXp/dK58XfH+vfuLN268lGe9R8
svdP232e/V6i1i3bj2Wvf7/hBJU/VPk9l32uylNU51S1b7Pno9q32XFQNf8o
u8ovuZwvF/+vwns0uyqvz87vaHGB9r6y83rVe6f5GVpeT8ONLviT5p9pPAMN
97rgz6hxongt1fyb7E3x4uuZT88uXXpUln3w7ZPVU7+Wpxvmj687fDnMTuOl
VfURVR0w+7ku9U2V/6fFOxqOVdWbaOddhcdo+JNW53LhzVzGrxWPZfPMUfNX
5d212mn1RBovR5unCm+41Jtofsw9rtGemx0fXfZDtn4pqu7pwm+o8sfsearW
OVsXF1Vvcq9b0fQGNN6epqtxn78qj3PBJzR8SOMTaPqT7LifXW+Ksqvmk/0e
af0mKtzonqdn8xK15om0+OhS13DnkWjnQlUfrxUnqHQvKl1NNn7Ixhuq/lAV
T57NT9LyGlU+23ad3d8LLc662N15lWxckZ0/NsXBf07h4zK9+8PPd+/9rcxu
ufXRxMz36fG07Ti0+x+y82h3/R5Nt5aN29uel6Zz99I+PD53fXZyrmzsHloc
Ge6Gf/5Vu4pXUdWL3cdxr+PT9Hg0PxkVL7LxQ5S9LQ7J5s9VcdwFJ9DqyDQ8
0Cuc0BYPtLW3fW6vzy9NL+TOD7jzWjRcGuUPafp5Gn5Q8fwu90LQdHQ0XJ2t
54yO79lx/8vNo0vHty+Ui2+NXVu7YyIMP2Sfaxc87J5H03CFi7915zFceAaV
/6HlOy5xWaXPqXWfq/FDFv/ggv9p56tWHo+Gu2h9kVHfy0XnpsIJ2ToHlV/K
9gM0nKzS8ap0PrXjh9eta6ju68uu99HqjLS4T8MVLs+l6Tpc6k0qXSWNR631
nkla3S0q7rvX9Wi8Qfb91bXGX5UOgaaTpM2HVs+i4RMazqlVj5SNE1zqFzRd
UL/pcGj9cTS/FMWrq3h7mv+k+eFacQ5tnrWOX+v60/ZnlP4qW1ep6s914cFo
z6Xd6+7Cw9D03rS+VFp8oeExl3vMaLpid7yhmme2DiRKt6m6f6ztc2k4IVtX
o+KpaPeo16qjoPlPlZ6T5v8HeKw3+3CAx2LPi0r/SeMxaPxJtp7HhSdRzZ8W
91X+gTa+S5yifa8BHvv3dYjCaTQ8RsMJNP1ndl8S7fdZaHwIjQdQ3evStA61
+geXOEIbh5bn0vCkiz2b/1fxve55Lm0+qnsJatVzuvB1tPuIVPfAqPTJLniG
Fvdp9VMXu6ru78LrDvRp/+/zNBzrXv+iraeKZ3PXJ6vyHdW9Iqo8KLu+r+LB
3P1wv9lV70v1XFpcVulmVTxbv8VZ1b2CbT9Pq7up8t9sfzXA+b1ZHxov6mJ3
+b60/eDil2g8VVQcyY6/2eMM8ENv6h20fISWF7ivT7b/V/EwUd8r6lyo+Fh3
fR2tbqjqx1Tx8C79udn3/KvidXZdgMYz0PC/O8/gns+q8IyqvyDbP6vyPhde
1AVH0XQyUXGNtq9ofa/Z+yQbV9P0Lar4G5UX0+4xcKkvZOeV7rhClb/Q+g1p
dfnsdWuaD003qFofF10cTXdE0/lk9+/T+iVpeEYVx1V8Ds1vuNzjR/t9W5fn
qnQCNHwYdS5cvpcq/6X1o7nETVr/Jo2fp+Gu7DhO01+pfi+Slsep7LXeH+VS
l6fVs1zqDrQ+BZqegYZDsvN32jpk5wUqvfF/2YfH567PTs6Vjd1DiyPD3bDf
oY7SP6t+P92lXkOLFyodmktdzAVf0fgHGh5Q8UI03OjC/6j8PK1fSWWn8QMu
+mdV/KXhHNU6ZOsYs/k0ms5EpWdQxSOXPkcVTqPpAGl9o03jROGNaFzRlk94
Xf5BhStUfVg0uzvPT+MNXNbBBT+4x/1a6+O0Pikaj+qCb2n1wSj/6dLHRNOx
0PSlLnwFLe5kxyna/GvNW1XrT4sLKpxAiyOq3+tU4RZVPKLdt0Crs6juF8oe
h4Yr3HFI1Dxd8CEt7qjirLvuotb7amj+p9/0YDSdv0pvRoubtDz9GdvEyzU=

           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"vdrNaSch: Dichteplot mit Intervalll\[ADoubleDot]nge 10, \
p=0.15, und q=0.2\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 30.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -62.5}, 
                    Offset[{4., 0}, {7.5, -62.5}]}, {{7.5, -12.5}, 
                    Offset[{4., 0}, {7.5, -12.5}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 87.5}, 
                    Offset[{4., 0}, {7.5, 87.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.}, 
                    Offset[{2.5, 0.}, {7.5, -100.}]}, {{7.5, -87.5}, 
                    Offset[{2.5, 0.}, {7.5, -87.5}]}, {{7.5, -75.}, 
                    Offset[{2.5, 0.}, {7.5, -75.}]}, {{7.5, -50.}, 
                    Offset[{2.5, 0.}, {7.5, -50.}]}, {{7.5, -37.5}, 
                    Offset[{2.5, 0.}, {7.5, -37.5}]}, {{7.5, -25.}, 
                    Offset[{2.5, 0.}, {7.5, -25.}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 12.5}, 
                    Offset[{2.5, 0.}, {7.5, 12.5}]}, {{7.5, 25.}, 
                    Offset[{2.5, 0.}, {7.5, 25.}]}, {{7.5, 50.}, 
                    Offset[{2.5, 0.}, {7.5, 50.}]}, {{7.5, 62.5}, 
                    Offset[{2.5, 0.}, {7.5, 62.5}]}, {{7.5, 75.}, 
                    Offset[{2.5, 0.}, {7.5, 75.}]}, {{7.5, 100.}, 
                    Offset[{2.5, 0.}, {7.5, 100.}]}, {{7.5, 112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "9.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {217.06666666666666, -201.6}, {
      Center, Center}, {407., 377.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13clq3AF05WGRlaE3XnjhhRdqYYwwxmieh8rQ3Ul3Z563gazzCvexsryP
lEcIIToH9IG8ER+Hu/UPqar+9T//5d/+5l//4Ojo6N//x9HRf/3873//8fr+
59HhvT/hz/gL/oq/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+
xE/4Gb/gV3x478FHf8iOj/6IHR/9MTs++hN2fPS/2PHR/2bHR/+HHR/9KTs+
+jN2fPR/2fHR/2PHR/+fHR/9OTs++gt2fPSX7Pjor977gAcvPvpr7vHgxUd/
wz0evPjob7nHgxcf/R33ePDio7/nHg9efPQP3OPBi4/+kXs8ePHRP3GPBy8+
+mdsN/z5CX/GX/BX/A0f4xP8Hf/Ap/gn/oV/4zN8ji/wJb7C1/gG3+I7fI8f
8CN+ws/4Bb/iw3sPbj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx
+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+/HR7xl2w5+f8Rf8FX/D
x/gEf8c/8Cn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+PDeg9uP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7k
Hg9e3H7kHg9e3H7kHg9e3H589Hcpf8+wG/78gr/ib/gYn+Dv+Ac+xT/xL/wb
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcfbz7gwYvb
j9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj49ex/DvUv6eYTf8+RV/w8f4BH/HP/Ap/ol/4d/4DJ/jC3yJr/A1vsG3
+A7f4wf8iJ/wM37Br/jw3oPbj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP148wEPXtx+5B4PXtx+5B4PXtx+
5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+xL7u7esY/l3K
3zPshj+/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/g
V3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+
ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8HL24/
co8HL24/co8HL24/co8HL24/co8HL24/Yt8n5evevo7h36X8PcNu+PMYn+Dv
+Ac+xT/xL/wbn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvb
j9zjwYvbj9zjwYvbj4/eV5t++Dq3r1v4dyh/r7ATxx/8PMHf8Q98in/iX/g3
PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3nzAgxe3
H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nH
gxe3H7Gfw0g/Yt8n5evevo7h36X8PcNu+PM7/oFP8U/8C//GZ/gcX+BLfIWv
8Q2+xXf4Hj/gR/yEn/ELfsWH9x7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hmw948OL2I/d48OL2I/d4
8OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/Zze+mH
76P1fVG+zu3rFv4dyt8r7MT3D37+wKf4J/6Ff+MzfI4v8CW+wtf4Bt/iO3yP
H/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuRezx4cfuRezx4cfuRezx4
cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfsR+znv9MPPXfg+Wt8X
5evcvm7h36H8vcJO/Pjg5yn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7EPhck/fBzen7uwvfR+r4oX+f2
dQv/DuXvFXbi9IOfP/Ev/Buf4XN8gS/xFb7GN/gW3+F7/IAf8RN+xi/4FR/e
e3D7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx9vPuDBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPB
i9uP3OPBi9uP3OPBi9uP3OPBi9uP2OdIpR9+rtvP6fm5C99H6/uifJ3b1y38
O5S/V9iJnx/8/IV/4zN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iw3sPbj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7
PHhx+5F7PHhx+5F7PHhx+xH73MH0w+eA+LluP6fn5y58H63vi/J1bl+38O9Q
/l5hJ3598PM3PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/3nzAgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3
H7nHgxe3H7nHgxe3H7HPqU0/fG6UzwHxc91+Ts/PXfg+Wt8X5evcvm7h36H8
vcJO/P7g5xk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
8eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/Yh9rnn6EX/Cn/EX/BX7ub1jfIJ9n5Sve/s6hn+X8vcMu+HP
c3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVH957cPuRHbcf2XH7kR23H9lx+5Ed
tx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H28+4MGL24/c
48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL
24/Y78FIP3wurc8Z9LlRPgfEz3X7OT0/d+H7aH1flK9z+7qFf4fy9wo7cf7B
zwt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/48N6D24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9ePMBD17cfuQe
D17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fsR+b1L64XPMfS6tzxn0uVE+B8TPdfs5PT934ftofV+Ur3P7uoV/h/L3Cjtx
8cHPS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fh/ce3H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftx5sPePDi9iP3
ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi
9iP2e/bSD7/3wueY+1xanzPoc6N8Doif6/Zzen7uwvfR+r4oX+f2dQv/DuXv
FXbi8oOfV/ga3+BbfIfv8QN+xE/4Gb/gV3x478HtR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H68+YAHL24/
co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8H
L24/Yr+XNf2IP+HP+Av+in3u4DE+wX7O28/t+TkM31fr+6R83dvXMfy7lL9n
2A1/XuMbfIvv8D1+wI/4CT/jF/yKD+89uP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bjzcf8ODF7Ufu8eDF
7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufs
93inH36vnt+T5Pde+Bxzn0vrcwZ9bpTPAfFz3X5Oz89d+D5a3xfl69y+buHf
ofy9wk5cf/DzBt/iO3yPH/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuR
ezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4
cfsRpx9+b7ffw+r36vk9SX7vhc8x97m0PmfQ50b5HBA/1+3n9Pzche+j9X1R
vs7t6xb+HcrfK+zEzQc/b/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH78eYD
Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4
/cg9Hry4/YjTj/w/l374vd1+D6vfq+f3JPm9Fz7H3OfS+pxBnxvlc0D8XLef
0/NzF76P1vdF+Tq3r1v4dyh/r7ATtx/8vMP3+AE/4if8jF/wKz689+D2Iztu
P7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj/efMCDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceD
F7cfuceDF7cfuceDF7cfcfqR/9fSj/gT/oy/4K/Y7006xifY59T63EGfI+Vz
Qfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+vMcP+BE/4Wf8gl/x4b0Htx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcf2XH78eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/cg9Hry4/YjTj/w/ln7En/Bn/AV/xX7P3jE+wT7X3OfU+txB
nyPlc0H8nPcZ9nMYvq/W90n5urevY/h3KX/PsBv+fMCP+Ak/4xf8ig/vPbj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7b
j+y4/ciO2483H/Dgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H
7vHgxe1H7vHgxe1H7vHgxe1HnH7k/630I/6EP+Mv+Cv2e1mP8Qn2ezB8rvkp
9rmDPkfK54KcYT+35+cwfF+t75PydW9fx/DvUv6eYTf8+Yif8DN+wa/48N6D
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9ePMBD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fuQeD17cfuQeD17cfuQeD17cfsTpR/6fSj/iT/gz/oK/Yr/H+xifYL83ye/B
OMU+p9bnDvocqTPs57z93J6fw/B9tb5Pyte9fR3Dv0v5e4bd8OcTfsYv+BUf
3ntw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj9zjwYvbj9zjwYvbj9zjwYvbjzj9yP9L6Uf8CX/GX/BX/A0f4xPs9+z5
vUmn2Oea+5xanzt4hn0uiJ/z9nN7fg7D99X6Pilf9/Z1DP8u5e8ZdsOfz/gF
v+LDew9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/bjzQc8eHH7kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7
kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7Eacf+X8o/Yg/4c/4C/6Kv+FjfIK/
Y79n7xT7PRg+19zn1J7hc+xzQfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+
fMGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7E6Uf+30k/4k/4M/6Cv+Jv+Bif
4O/Y72U9xX5vkt+D4XPNz/A5vsA+F+QK+7k9P4fh+2p9n5Sve/s6hn+X8vcM
u+HPV3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8H
L24/co8HL24/co8HL24/co8HL24/co8HL24/Xg7/CZYs0AQ=
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
Get3zcQs4tTDmMUz7YP+XjF0hUxc6JnJh83si+cCm5YKXTITd5YJXToTj1Bi
MGjZ0O6ZeNct0xqL+B5zP+AWcerh4BKZ8uAgc+PTz8tlmgvGrBK6cibWoCtl
YhbKXnk3cH/57OEQ51g+E4NWzVQPk1bL5MOMHpnWgFnk4vM9J3y3AH8eCrNW
z1QDb/h+6DUy8Wid0LUzsWbdTD7sWS+TD2s2DN0g03u0d+j6mZhH3VqZ+nnr
0K0ysY049dzFvplicJHcNTOxY6NM88KmzUI3zcSaPpl82LN5Jh/ebJypBk5s
GbpFpvcl+2JPMIj1icER4tTDQebeJFN/9Mu0J/p/YOhumXpxm0wxniPfe39y
Ju70D90uE492CN0+E5NQYjBu20z1cGvHTHmwcqdMPpxgnV0zcZD5qIE1u4Tu
nIlJu2faE6zZI5MPe/bM5MMa5hiQiQV7h+2ViYnMwXqwiTjzwiPi1MN4ngHP
EXbs43pYsq99+LR/2H6ZuDXEPjwaah8eDbNPLx0YNiIT16gb7Ls73Hnc5QPs
544PysSmEY7BiCPDjsjEplFhIzOx6RD7sOZQ+7DnMPvw5uCwgzL190HeE7w4
3HmdPTc+fDnK6/3v3Rk2OlOv8h3NfIc3PBofNi4TX462D2+OsQ9rJoVNzMSk
CWHHZeIadWMzcX2Qn29Xx4/NxMGxXntRz0E9fJnseeHQ1LATM/EI5fujl7Sy
V/r81Ez3FQad5BpYw/2dlolHx3veLj4r5+/uODUw4zTPBW9Ot8/nyXfL8x3z
sOmMsOmZWHWmfRh2ln3YdLZ9+HJ+2HmZ+Dvd88Ksc5wHj861DwuuCrsyE6vO
c2wDj12RiTcXh12UiVOX2IdTl9qHO5fZhzUXhl2QiXkXeE/w6XLn9fbc+PDl
au+DPplhn169I+z2TD10jWP02ANh92fi1PVh12Viz41hN2Ri0A2OwaFrXQ+n
bnIe3LrZ/maegzy4eYtjMOtW+7Dn7rC7MjEIvTMTV+70Xtfyc+L88Oge18CI
+8LuzcQsznRbJvbd5jV2dJwa3v/0Ij22s89KPffpu7BvMzGLf7vp4UzMetQ+
zHrMPgx63D798HTYU5m4SN1DmVj1hPNg05P26efXwl7NxKmnHBvhsVcycer5
TPcVTr1gH069aB8evWQfDnGvn8nUo894T3DqZecd4Lnx4crr3gfP4g379Pqn
YZ/4Ob3p2K4+04OZOPVO2NuZGPRe2LuZ2PSuYzDuLdfDqvedB6c+sH+I5yCP
Hv7QMXr6I/vw5cuwLzJx6vOwzzLx6zPvdYD3xd2FSV+5Bg59E/Z1Jj5xpo8z
cepjrzHBcWom+fOnBsZ8n+lO8B3zfEcz39kMt34K+zETm362D3d+sQ+HfrUP
d/4M+yMT56j7IRPPfnMevPvdPj1dxDp5Ln794Rh9zliWi03/hv2TiU3/2YdB
/A+n+DAoyeXDqr/D/srErL+8J3iU5sqDT8yNT4+VufZBz1W5fPp4ztA5cnGq
zhXjc+K77vnOexjUDm1ycWjm0Jly8QglBtdaueph4Sy58uDUrLl8eMcc5MGs
2XLF4NTsuXxYM3do51xMQufKxSaUvZ7h58T54dE8uWrgzryhXXKxiTN1ysUy
lDXgFHFquCub5DonTJkvVz28WSB0/lysWih0wVwMWziXD6e65vJh0CK5fJi0
aC6fu9stdPFcTEIXy3Wvl8gVg1OMUUMvLpkrBjt6hC7nf3OOf3tuqVycWiaX
D6e65/Lh0bK5fHhEHT68WCF0+VxMQpkXnjEf68FizseZYcyKuWrg1EqhPXOx
aZXQlXOxadVcPgxaLZcPg1bP5b/uHlszF+OoYy5YtUauPLjYK5cPs8jFh01r
56r/33s9155g0Pq5vl8VxqB83yqsQfnOeN4PfG58lnCrd64amEWceWHWBrli
MGvDXD6c4r5v6Dy+qx1GwJVNc90VPvtjwo7OxarNQ/vkYtmWoVvk4tRWuXwY
tHUuH+5sG7pNLsZRt1kuVvXNlQen+uXy6efdQnfNxTDqiMEPxgbk4tQOodvn
4tSOuXw4tVMuHx7tnMuHU/1Dt8vFQpQ9waldcuXBJubGhysDc+2Dfts9l08P
DwsbmqsX98gVo8dGhY3Mxam9w/bKxaB9w/bJxaZ9HINxe+aqh1WDnAcXB9uH
fcxBHvzazzH4tb99ODQi7IBcPEKH5+LNcO8VTvOcOD9sOtA1MOjgsINy8Ysz
DcnFwSFeYxbHqeGdw+fGnZjNZ6X+BL8Hvjer+A7xw3Ix7Aj7cOpI+zDoKPvc
2XFhY3MxjrpDc7FqtPNg0xj7MOKEsONz3fWxjnXz2ORcbDo2132FTcfZh00T
7MOdifZhAPd6fC4WjPee4NMk5y3uufFhxxTvA5acaB8unB12Vi5OTXVsDp/p
kFxsOjlsWi4enRp2Si5uneIYXDvJ9XDrNOfBptPtd/cc5MGI6Y7BjDPsw5rz
ws7NxSb0nFzMOsd77eR9cXfh0fmugUn8jHBBLoZxpjNzsexMr9HLcWr4c1J+
X7G6eXNJLo7wvdp8Ly3ffQt3rgi7PBd3rrQPd66yz926NuyaXO+nGWFX52IZ
dZfl6t07w+7Ixa2rXc/9vsux9ZzLd1NzZ6/zvPDo5rCbcnHnFvtw51b78Ol6
18Ce28Nuy8XBa7ynbb0+sX6OU7+l574xV8/d7T3R80+GPZGLU/c4Rp+9EPZ8
LgbdH3ZfLg49GPZALh494Bhcu9f1sPAh58Gph+3v5XUez8W++1wDpx4NeyQX
h57ynuDO0/bhzjP29/Qcj+VizXNhz+bi4CNebw/HmXew49Rv4WdwQy6OPO96
GPOizwyDXg17JRdfXrMPb163z918O+ytXLx5M+yNXJyj7uVc/fpZ2Ke5ePSG
6+npzx0b7tyXcvXiO54XBn0Q9n4u1nxoH9Z8ZB8mvesaePNJ2Me5euYt72mc
1yc2xnHqYdAX3gf9yvcy873d9Plv9od5XzwXWPNN2Ne5ePNd2Le5uPOtY3Dn
h7Dvc3HtS69BT/4T9ncuFn7venj3lfMmeG58mPWj54Ipf4b9kYs16O+5mPS7
98p/O+H37fx+/SSf4+dc3PnL9dO9Pj7s+8lrTHUuPvz413uFQfyltP/8efLd
8nzHPKxKQ5NCPMoK+bAmL+TDnqKQD29aoXUhtlHHvDCsLJTHzzRVIZ/enjN0
jkKcoo4YjGCsUyE2zRw6UyE2zVLIhzWzFvJhz2yFfHjTDm0KcQdlT/Bi9kJ5
8IO58emNzqFzFeqVuQv59OtioYsWYsk8hWL0WffQZQqxZr7QeQsxaIHQ+Qtx
CCUG17oUqodVCxbKg48LFfLhHXOQB6cWLhSDTV0L+fBlidBuhTiELl6IRyh7
hc08J84Pg5YsVAMnlg5dqhCDONMihfiFsgYcIU4NPx/Qi+/lYgpnpZ73z3++
N3CK90qPQpxaoZAPd1Ys5MOhnoV8+mrV0FUK8Y665QrxaKVCefBp5UI+fb5+
6HqFOEUdMXjB2LqFONWr0H2FU2sW8uHOWoV8OLR2IR/2cK9XK9TrKHuCHesU
yoMlzI0Pb3oX2gfPYoNCPr3bN3TrQs9pw0IxeM+Zli3EnU1CNy7Eo81CNy3E
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
JrE+MZhFnHwYs3tSHfQ3965z/zpcONgaNlMX+wKb9gwbkMSdvcIGJvFooGMw
aJ+wvZN41z9pDX7nedLnYyrHyYeDeySNm8xzo+nnfT0XjDks7NAk1uAPSWLW
Ia6VzwbOL++++TkOSGLQ4c6HSUdYw8f9w/ZLYtYB1nynnGT+whfuhOb3H+7M
5k5b7ruFR8eHHZfEmhOsYc+J1rDm5LDBSZ+jg8JOSmIeeccm9TN/d8LfoXRx
nHzO4nmOzeaxxySxY4jnhU2nh52WxJozrGHPmdbw5hTnwImzw85K+rwc7Jq6
en1iizpO/oKe+9Sk/hjqmuj/K8IuT+rF8x2jt64LuzaJO8PCLkzi0UVhw5OY
NNwxGHeB8+HWxR4HK0dYd/c6lyVx8ELnwJqRvKskJl3pmmDNVdawZ5T1Kp7j
0iQWXBN2dRITL/F6KzvOvGs6Tv4C3gP2cW0/H/mw53o/M6y6KezGJAaNsYZB
N1vTP7eFjU06p7eG3ZLENvJuSOrh+8PuSzrHtzif/n7AsXU9dnRSX97ueeHR
nWHjk/hylzW8udsaxoxzDmy4N+yeJN6NdU1beX1i/Rwn/3+fl66DHuXO62eT
ev55656ui32BL4+GPZLEncfDHktiz2OOwb4nw55IYtxDXoM+fC3s1SRuPeF8
2Pewx+3gudHw6ynPBVdeCnsxiS/4F5L49IJr5bvD0Um9vYef45kk1rzs/P28
/itJ/Hraa/T3WDTMeN21wso3w97w++Tueu6wh09vh72VxK13rOHRf6zh0bvW
1PVh2AdJXHvL88Kt9zwOHr1vTW9/HfaVn+cDx072z75MYtN/wz5JYtOn1rDm
M2vY87k1vPk47KMk7nzkmuDFFx432HOj6Y1vXAe98q01/fpX2J9JLPnOMfps
Mv6nyFms+THshyQG/Rz2UxKHfnIMrn3vfFj1i8fBx1+tz/AcjINTvzkGm363
hi//hP2dxCH8hCQeTXCtx3mfeH4YNNE5cGJS2L9JDOKZ/kji1x9eY4Tj5PBd
gV68I4kpPCv5fC5xRjg3cIrPlSmzONXJ0nAnZWk4lLM0fTV1+JbFO/KmyOJR
yRoHn2qWps9nCz9rFqfIIwYv+NksWZyaPuu8wqkZsjTcmTFLw6GZsjTs4VxP
k9XreGqCHTNnjYMlzI2GN7Nn1cFezJGl6d1Fwi+ctU9zZsXgPc80eRZ35g7f
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
4DeoYhaeWvls4Pzy7uEQz7FuFYM2rMqHSfweg4YZPavWgFmMRZ9gZvD7AXzh
Tmh+/+HO7LV83y082iL05lWs6VelYc+WVRrWbBt+m6rP0a3Db1XFPPI2q+rn
/uF3r2Ib8S19FveoisFFxm5axY7tquaFTTuF37GKNTtXadizS5WGN9tX5cCJ
3cLvWvV5SV3UBINYnxgcIU4+HGTuHar6Y4Brov8PDTukqhf3dIzeOibs6Cru
7B22VxWP9g3bp4pJ+zgG4wY6H27t53Gwcn/rab3OwVUc3Ms5sObAsAOqmHSY
a4I1h1vDniOsp/EcB1Wx4KiwI6uYeIDXm9px5p3JcfJhPHvAPs7i5yMf9hzr
Z4ZVJ3J2qhh0kjUMGmRN/5wSNqTqnJ4cNriKbeQdX9XD54cNrTrHg51Pf1/g
2Bwee1xVX57qeeHRmWFnVPHlLGt4dE7Y2VWMOc05sOG8sHOreDfENS3p9Ykt
7jj58PJC10GPcuf1lVU9P8p6dtfFvsCXi8MuquLOJWEjqtgzwjHYd2nYyCrG
DfMa9OHosOuruDXS+bBvuMd189xo+HWZ54Ir14ZdU8UX/NVVfLratfLdoW9V
b6/m57iiijXXOb+H10fDr8u9xqoei4YZN7hWWHlT2I1+n9xdzx328OnmsDFV
3LrFGh7dag2PxlpT1x1h46q4Nsbzwq3bPA4e3W5Nbz8U9qCfZ5xj2/pnD1Sx
6e6wu6rYdI81rLnXGvbcZw1v7gwbX8Wd8a4JXtzvcdt4bjS98bDroFcesaZf
Xwx7oYoljzpGn70Z9kYVa54Ie7yKQU+FPVnFoScdg2uPOR9WPe1x8PEZ6509
B+Pg1LOOwabnrOHLK2EvV3EI/1IVj15yrZt7n3h+GPSqc+DE62GvVTGIZ3q+
il/Pe439HSeH7wr04ulVTHnD+XwucUY4N3CKz5V3qjj1rjXcec8aDr1vTV99
HPZRFe/Ie7uKRx94HHz60Jo+/zbsmypOfeTYKf7Z11Wc+qzqvMKpz63hzhfW
cOhLa9jDuf6kqtc/cU2w4yuPG+K50fDmO9fBXnxvTe/+E/a39+kHxw7xM71V
xZ1fwn6u4tFvYb9WMelXx2Dcj86HW797HKz8w/psz/FTFb/+dAzW/GUNXyaF
/VvFJ/zEKk5NdK0Huy7OLkziwnZy4MLk3PfexCOeaUIVpyZ4DdhEnJyFvBfs
DRyZoikfrkzZpOFWCZ+beFSbNDxqTZpzNF34aZsYNE34qZs4R15q6t05w8/R
xDPi5HO+52qKwUTGdppYM33TvPBo5vAzNXFnliYNd2Zt0vBphqYc2DN7+Nma
zjd1URPsYH1isIk4+fRZl6Y66N2u4Rdr6vnFmzTvZsfwOzRxZ77w8zaxZ4Hw
8zcxCE8MBi0UfsEmxs3dtAbvYKemueAicfJh3zxN42Afc6Ph18JNc8GXpcIv
2cQd/BJNfMJTKxxnn2ZsYhDPsWgTg5ZuyodByzRpOLhI0xpwjbFozsvOTbXy
OcF87C+MWS78sk3cWjH8Ck1sWqlJw52VmzQcWqVJc2ZXD79aE+fIW76JR92b
xsGnVZs0HCTeremsk0eMPl8//HpNbFq76TsxbFqnScOgHk0aBvVs0rCK785r
NPU3nprg0bpN4+ATc6PhSq+m9WBT7/AbNPXwVuG3bOLRRuE3bOLOxk0a7mzS
pGHN5uE3a2LepuH7NnGNvD5NLOdZ2V+4RZx8OEicteEXc5APp7ZomhcObRt+
myYe4bdu4g2eWvls4L3x7mHTdk05MIhzvX0Tv/o1zfu/7w1Nzw+/iJPD34/w
edzXjNml6azw7i8JG9HErd3D79bEpv5NGu7s0aRhzF5hA5u4s2fYgCbOkbdr
U/8fGnZIE7cGOJ8+P8wxmMhY6pgqbG/PC6f2D9uviVMHWMOdA61hzT7OgREH
hx3UxL6Brmlar09sasfJpx8Odx306uCwQU29e7I1vXRm2BlNnDo67Kgm9hwb
dkwTg45xDD4dH3ZcU88d4TX4bjiV92x2x8mn14/0uJk9NxqenuC54MupYac0
8Qk/pIlTQ1xr9j7t28QgnuOkJj6d5nwYdLo1rDzRa3TxWPQKfv8XN7F8X+8v
XDnLewGrzgs7t4lhQ61h0/nW9MDwsGFN5/XCsAuaGEfeOU19exV708SyC5xP
T49yrKvHnt3UWxd5Xtg0sum8wqZLrWHQZdbL+znIgTtXhF3e1EPDXNNqXp9Y
d8fJhzFXuw76e2zYrU1cuM16MdfFvsCm68Oua+LODWGjm3g02jEYdFPYjU28
u8Zr8DsP55jzsZ7j5MPBaz1uHc+Npp/HeC4Yc0fYuCbW4G9vYtbtrpXPhjP8
7vv4OW5pYtB458OkO61hxs1eo7fHomHK3WF3hf0/jb+oow==
                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnc9rH1UUxb+0CFbBb6VuKm6C0r9ABbvIVBAKLlz4CyooKAjBjZKd2Ulr
yMpKEbsVFMS2WlApEkGjoIgbQVArolQIiLEYcSO0iypal6F9zT1zPme+003h
McxM3rx37znnnvu+c089++DTOyaTyQc3TiY7//n/3MG7zv91ZLPb+e53H3ZP
nOtOTO/YvO3LU93Rz+5+a+HU+W7X64e+n1//qrt+/2PfHHvpmHz8k6PPnN3c
tdndtPDrDWduPtudeHXvD7tXXmse3+rvUt9/q/HJv//+6C6d3r/4xnvr3SP3
HX/hluX3r3n804VHz0yf/6X79ouHLu49vHrF8eW5xQtL8xvdyX0rq9MDa9d8
n6t9z9b5qfou6vXWev/HL+5Y+vmBje7339buuf3+j7s/b73u6+mdzzVfr75P
ynPV7+mKe655cMXb1vjQen/13+taJ+r15srX6nF1Pmqdnyr8UHV91b52xb3W
+z/89ouHFt5cvzx+unvnyeXP99x7pPn6rcZf+Wj34k+Xfrz8HSaT/+7zcvNz
q96nap5bn6uen6p5mLX7pOAfF9+k8Vkaz22dNxePSF8/Ve/Tl15RpSdc7fU0
vpnOr6vyuzp/teIHGl6irR/1vNH4ryvOu3QV1/Vqnuja12q90aV7UHFCVf2i
9T7brXe4dEXaenbhdrXOSeODLv6oXie0ehPtu6vrLzRd3cWD1PFKncer8/J2
8yatrqGuS9LqJunjI1+ojRs0Xumqz6boDy7fmtrnpvaBuPgLzT9Qzd+r7k/x
Ew7VF0SrR7jq5q46O62+QNNtqt4nxd876k61/CvFf57iz0zBey4+7vIRVV3v
0uFpvgUar0+J5+r4maKb0XCg+n1c/R3p6zBdp6LVp6r0K1ef0aytfxceduVr
Gp6s0huHuq5S8r4aD7v6mNL9yVX3odWPaHm/r/pI3z4Hl07lwi00H0VK3nHl
L1pfRkp9p3Xe1PmX5m+h4TEar3H5V136gNvn0Hd+d9W5htq/kJ5PaXnTFYdn
rU+zKq669GfX9em+6xQfjstvoL7elcdbn1s1Dyn1Vto+deV3Fx+cNbyRHudd
z02v47jWf/p6Vq8ftc7cmn/VOEGd31P2HS1f03ROV13YNW/p6znF95K+nmft
ubR6R3rfB+1cTZr/syqe0/YRLb6lx1WXr0D9nq59l4JzaHrFOO7lNSn1ghRc
4YoDKfqVS5ej6fw03X7W/NspuNRVd1b7SKt8lSl1K1rd0JX3x7zsPdcuZTwF
z7j+rnHci8dS8AAtzqeM0/pnXfiQVh9U6w9D1bWq9CVa3yLN70Sr89L661P4
WlVccvUL0PqC1X4tl+/LxTeHmqdc+9pVT6TxAnU8TD83iebnTKkvq3Uz2jiN
j9N4Pe18P5punOJLGWqcUeff9Lqtqz+Uhh/S8zLtfdLrAurvotYB0s8BpuUX
176g5U0aDq/ypaTEGZp/Jt0PRnvPFP+DK86k7NOh1vdd9x95blZ+ScEJND1h
qDoPzT9Mw720/V41/7T448JdajxQ1Seu9oGn642uODz2nXnHaX4D13oeKj5x
1ZtcOjMtL494rB/do/W5KfVrF0+h8V91fS2FR9PicMp7unApDVek4+qUejcN
N7q+e/q6cr2/y7dZpbek8BSXz9zV90TDY1U6ecr59rT8RYuHtPmn+UBSfDIu
vpbyfV14QI0f3L/Ht9Xv7baOb/d3+qr6PV0+cJcOQNPl1H09atxI46cp3zFl
v6SM0/gIDb8NtR5HxQ/bzftVOIF2ThStzzRFL0rPXy7cQjsnIcUfRcvvNPxA
06lo9dmU/U7VB5bnFi8szW90J/etrE4PrF1xXKU/qHUJl09VzcdpdVJX/Kmq
97WOq3EjzYfsqvfR8pSLL7t8hrS6jzoupfSH9oUfWvFAFX7oG1ek4A2XHj7y
vn72uzs+UH7X28XvXPW1lP2SolfQ9ElXv6cbP6TqFa7zMWjxgcb70nmii3eo
z5Ovwu1DPX9ejetar0/ZRy6/KE0HcJ3P4PYz9O1zUPOjFL7vqmPSeAotjlXp
mS7d0hVnhnp+fsr80+KtGqe5+GDK71DQfo9Svc5d53AOVZ+n5feUOjutjunK
I7T96zo3z8UfXfqP2sfl+i60cbWOrc7L6jiQ4h9Q54uUOi+tXkzrF3D1cdB0
dZde4cItan5H0zfU8ZnWT0fTx1Lq5im8VV3/cvlzaOutSrdxfa+UcfX6oemK
Lp6Sjk9cfH+oOk+KzjDUuEfrY0rBRep6uprnqtd/it+DplPNmn5Oq4O7dDM1
33flWZc+4+J9s8abXP0+NP9/Sl8SbXyo+YKG62j4hFYvVuuQar2oCgf+P17l
n1f19aTUL2g+fBqPVuvVKX8Xjc+q4xVNr3bl2ZQ6ZlVe+xvJTsyg
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"vdrNaSch: Dichteplot mit Intervalll\[ADoubleDot]nge 10, \
p=0.15, und q=0.4\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 30.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxF1Qsw1OsbB3AplFKiUpJySaeUCp0i+ZYiSnskpCSXk46kkiQ6cg+5VkRK
tI6DaLHum0tESSqS0AXLrr3Kz6VoSZ3+89+x78wz885n3nne53nmnXlVnM9Z
uswUExOb8StcfsX/9gnVsp7dP7sgJlwjihKtC3SvQ7ZJfcSb3Q07jbphP0kv
/Gi1O7XjXBxiOrZ5LmjuEXoolnlQtOy8YyHhqSE4ZEdHBC3DrWJOLHRkfo76
XInBbp9Nequa6cLzCSDlWNASQ6MR5K/vO2DUixFCR0tpdjJc96b7F0dF4XHo
Hlp5aa8wTypCmKO7W29G4kckSRC6rg/XayMPUa6ScS/IeM5Q8jUY3LDVO5ja
J8yfgXLlpNcy5AhcTnL2XSHHgEbUZJx5eCZaKzjxmtnhKL/nTuNeZQjvfYAB
W/0jZvlhGPvHW1AiYKDKyv0lPyIXUmNRyn+VXoVuTqBe8BmmsJ48qMZ3MUKr
QnGhINKX1MvEurizocbGBTDYtPFBen0IqKUJNEXrfmGdVNi8Cjxb0xQMojJV
wHrej6+jmaqLnxXivFurTndrEDbUZesVGbCE9RcjSkpdMPk+EO6Nhb4BBSzU
2vbUME1KsM+M76fzJAA5zZW0/epsYV+lCAyJlTrXcgWcd88ECrfZiK5ScChu
KENx1eabOd1/Q+NTix5zLkfYLw2c8TYl1oAvTvR98C0I4OCwqsVUiOkjKGv7
ZKlMXkI6h0nzG+UI51ABK/fl2vZzvEEfHBSY/sWFWnjE3UONlYjIrK68reAF
5a/f9BZ/5ArnU41qutPettWesJ8Uv9xL4mGQX6Ontu8x/v+uPJDQ973AMoCH
9fIGMa+Ga+Aq7hB4stMLLxvH2HX5PDgVJF25ZvgE3dxyrSo/X8ykDilvofOQ
eGD0jHFUHQ69keuSV/GH/m2edaYsH4080vEZnfVwPFZqXOIchPMBzGiFXXz8
CM8hVak/g5IFI4VeHILsk911Eef50FktCd/zDWjfLftlrlQYeg50TgjIfLg+
cdq4pfo5bmzdsX/rkQgobGndfLqVjxSHqpXD0i9grumW7pwbCZLSS9dP4gNo
/b5UlnK4CVIrkwQxU9G4OvNZ2gGdAUje8RI7lfEST+TqLWh/xKGS97i9+s8B
6G9tGVIffgWDkG+HRlquY/QNTWZTwgDOtmn20nc0Q3Eq9qfUxA1o0or2kOt/
5S+vcyUZt2Dce3XuCrV4ON+n/C33dQDu4cOOD/ktaBuqsNExT0ByeFZhyOrP
kLRZeUT65hsUulmKm128hZazZO4X688gqx846LqtFdeZHMrx1ERI2dxddTLs
M/RHL5s9626F+/GAI14NScCOW4c7Sj/jXW32LvWrb2HauVgicug2vNXjYk3Z
n+FxvV0vWLMNGpYPC9KW3QFl7rWnNIVBSDvM0qa/acOsl0bHSozugjkS/H2d
6SAyNmivM/R5B7rxe6mm0ylQ+uCnk+IzCHx3UE1Rbkf143NF9IR7sKz1dpN5
MIjOFzGKE/XtuKMn6TBWlYrIbA+y//tBXEiukLM93QGfohTpeew01Ma5dRJz
CMx35UqXLuxETuKyj7IR9zHXaVFEgzwB6xlE0+91nRjRYy9QCiHDWrt6a9oK
Ail3vkSXeb2HflfxnjX+6bg/05XtvYYAU2fiwDaNDwgODPbV9v0HvLaFSaTN
BDRf/ZxP6/iAF2oWeTu8MqCbWWGisZ2A50mJFr1rHyHXsIJheu5f+F9yGZva
Q4D2U/rGI/1POOrGV7Byy8Rz0wWZ70gExJJlLbcPfEK6DM3cwSUL8oo0a4ot
ARPtJfKV97rAKggLcnPMhj3fWeKqM4GYpuVtBn90Q8vKqvSi3QNkVc4rOeZO
oO2Eyq0qsR54j6vwA21yMBxTekLXm8DyHxo2hoU9qL5DrIw+mIvtDo6L5gUS
oO5PjOrZTIekYZVVkvlDhG2Srmdc+zWfpcsG0iLpIPVGXkvfS0HLjOILFfEE
vjHvmjsy6EgMta2mGOVB8a29Wvy9X3OjKlNWGfSie43GaPmOfJzIkHrrlkVg
pz9ZpjehF/H9AnlnpQLkXaQGG1EJMPapnyV/7sXWMsc8dnIBBCZ22ooVBMIV
sl47mfThY0SD6RkFKnYvlegbriewjrl2o2paHwKOajFGEqiI4ebdaHxN4HXB
w7i+8T6orr91xUeuEB2PbHeROwl4XNk4lG7BwNOpSYUfcYVQiRYf9ukjsGhf
ocWfDxg41excGCJTBHf7h/ctBgiUL9lCVRNnQobcaD4nqgilWjYWv40ROMYo
W8g8ygTVcxM7dnax8P8bws98fc+MIias9yQFLQoTebbeV1uXASb8Fz59Xi5W
Mu2WdfnQWN2PrO6RBfZ/i3zS3E2Dbd+PltxVh2eMiTyjXV0mO7EfEz6k1H89
Sqed5Ngz6trcDzUTv34zvsjHuckf1s5mwVw+Z/2gS9m0379gVcvbycJFeseF
m3SRm03Nz871ZSGVIlHxu135tI+ENca6F7Lw7LKO+Md3Ir8rG3pxA58FYq+T
WYAFbdr33DE8NqjGxtLFcdfVmkQ+qCYwyj/Gxq6+yo4G40fTnkQpWutxiw23
fJ6ye43Id249K7v5NRvxfktPym6vmHZezW/jw5IcVJqZUIpLRB6/j9FVCA5Y
S7y+2G6qnHaDtnv1F3w4mM8kb5/KETnL3jZXl8rBNmpzMHl11bTHseVufuVy
4OQ/1Wh8X+Tbzr/yKVXlInK/5kKeYvW0906EO1yy46Jw6RHb2Fsijww1MtmW
wMWH/rA0bdnH0647f2q94CUXs4qKWe2RIu9KKpN/JMHDkp3DiVXiNdMepuI5
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {651.1999999999999, -201.6}, {
      Center, Center}, {406.99999999999994, 377.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"vdrNaSch: Fundamentalplot mit p=0.15\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {217.06666666666666, -604.8}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], PointBox[{{0., 0.}, {1., 0.}}]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"vdrNaSch: Fundamentalplot mit p=0.3\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {651.1999999999999, -604.8}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8998881099526567`*^9, 3.8998885344838753`*^9, 
  3.899889128765687*^9, 3.899897510631221*^9, 3.8998981231230636`*^9, 
  3.8999245695213504`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4581614b-d1bf-4610-b07f-28f610f9709a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "vdrplots", "]"}], ";"}]], "Code",
 CellChangeTimes->{3.8995696253376417`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"148add25-5d13-4145-a30c-729bbfb6cf95"],

Cell[TextData[StyleBox["Aus den ersten zwei Histogrammen kann gefolgert \
werden, dass aufgrund von der geringeren Anzahl an Autos (60) \
\[UDoubleDot]ber der Anzahl an Zellen (300) die Erh\[ODoubleDot]hung der Tr\
\[ODoubleDot]delwahrscheinlichkeit q nicht h\[ADoubleDot]ufig vorkommt, weil \
der Platz zwischen zwei Autos h\[ADoubleDot]ufig h\[ODoubleDot]her ist als \
dessen Geschwindigkeit. \nDas passiert weniger bei einer h\[ODoubleDot]heren \
Anzahl an Fahrzeugen (z.B. 100 \[UDoubleDot]ber 300), weil die Abst\
\[ADoubleDot]nde geringer sind. Das verursacht eine Erh\[ODoubleDot]hung der \
Tr\[ODoubleDot]delwahrscheinlichkeit um q, weshalb sich bilden Staus bilden. \
Eine sehr geringere Menge an Autos haben einen gr\[ODoubleDot]\[SZ]eren \
Abstand.\nBei 200 Autos ist letzteres nicht mehr erkennbar, die Abst\
\[ADoubleDot]nde sind sehr gering.\nAus den n\[ADoubleDot]chsten \
Histogrammen, mit p erh\[ODoubleDot]ht zu 0.3, l\[ADoubleDot]sst sich \
beobachten, dass aufgrund der h\[ODoubleDot]heren \
Tr\[ODoubleDot]delwahrscheinlichkeit viele Autos eine geringere \
Geschwindigkeit haben im Vergleich zu p=0.15. \nAus dem Dichteplot kann \
beobachtet werden, dass mit einer Wahrscheinlichkeit von p=0.15 die lokale \
Dichte der Autos mehrmals h\[ODoubleDot]her ist, es bilden sich gr\
\[ODoubleDot]\[SZ]ere Staus. Mit einer Wahrscheinlichkeit p=0.3 ist die \
lokale Dichte h\[ADoubleDot]ufig h\[ODoubleDot]her auf der ganzen Stra\[SZ]e, \
aber die Staus werden k\[UDoubleDot]rzer.\nDie Fundamentalplots sehen wie die \
f\[UDoubleDot]r 0.15 und 0.3 aus der Fundamentalplots teil (s. oben) aus. \
Also wird die zus\[ADoubleDot]tzliche q nicht in der Grafik viel auswirken.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8993780689077773`*^9, 
  3.899378078859537*^9}},ExpressionUUID->"d827d26f-5d59-4571-b58b-\
e0bc7ed12fc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Zwei Spuren",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"6d21a7a7-a84f-4357-b230-1f92ad4ae0cc"],

Cell[TextData[StyleBox["Als letztes wird das NaSch-Modell auf zwei Spuren \
angepasst. Hierf\[UDoubleDot]r werden wie gewohnt zuf\[ADoubleDot]llige \
Positionen f\[UDoubleDot]r die angegebene Anzahl an Autos, nur hier auf zwei \
Spuren, generiert. Hierbei ist die Anzahl der Autos pro Spur auch zuf\
\[ADoubleDot]llig. Nach der Abstandsberechnung und Schritt R1 aus dem \
NaSch-Modul, die Erh\[ODoubleDot]hung der Geschwindigkeiten aller Autos, \
falls diese unter vMax liegen, wird f\[UDoubleDot]r den neuen Schritt R2 ein \
zus\[ADoubleDot]tzliches Modul f\[UDoubleDot]r den Spurwechsel aufgerufen. \
Das Wechseln der Spur entspricht hierbei dem Fahren einer Zelle, es wird \
danach also dem Auto die Geschwindigkeit v-1 oder 0 zugeteilt. Es wird von \
der rechten auf die linke Spur gewechselt, wenn folgende Bedingungen erf\
\[UDoubleDot]llt sind: \n- die Geschwindigkeit des Autos ist gr\[ODoubleDot]\
\[SZ]er als sein Abstand zum Vorderauto, \n- links befindet sich kein Auto \
auf der Nachbarzelle, \n- ein von hinten ankommendes Auto f\[ADoubleDot]hrt \
mit einem m\[ODoubleDot]glichen Abbremsen um 1 h\[ODoubleDot]chstens auf die \
Zelle direkt hinter der Nachbarzelle links und\n- das Auto selbst f\
\[ADoubleDot]hrt mit einem m\[ODoubleDot]glichen Abbremsen um 1 \
h\[ODoubleDot]chstens auf die Zelle direkt hinter einem vorausfahrenden Auto \
auf der linken Spur. \nNach diesem Schritt werden alle wechselnden Autos zun\
\[ADoubleDot]chst auf die Nachbarzelle auf der linken Spur positioniert, um \
zu vermeiden, dass w\[ADoubleDot]hrend des Wechselvorganges ebenfalls \
wechselnde Autos \[UDoubleDot]berholt werden. \nVon der linken zur rechten \
Spur wird gewechselt, wenn diese Bedingungen erf\[UDoubleDot]llt sind:\n- die \
Nachbarzelle auf der rechten Spur ist frei,\n- ein von hinten ankommendes \
Auto f\[ADoubleDot]hrt mit einem m\[ODoubleDot]glichen Abbremsen um 1 h\
\[ODoubleDot]chstens auf die Zelle direkt hinter der Nachbarzelle rechts und \
\n- das Auto selbst f\[ADoubleDot]hrt mit einem m\[ODoubleDot]glichen \
Abbremsen um 2 h\[ODoubleDot]chstens direkt hinter ein vorausfahrendes Auto \
auf der rechten Spur.\nDanach erfolgt wieder der Spurwechsel von links nach \
rechts. Dass beim Wechsel nach rechts ein Abbremsen von 2 in Kauf genommen \
wird, statt wie beim Wechsel nach links nur um 1, soll das Rechtsfahrgebot \
ann\[ADoubleDot]hernd in das Modell einbringen. Die zwei unterschiedlichen \
Werte haben n\[ADoubleDot]mlich den Effekt, dass mehr Autos nach rechts \
wechseln als nach links, da die Bedingungen auch f\[UDoubleDot]r ein engeres \
Einordnen rechts offen sind. Aus dem Spurwechsel-Modul werden unter Anderem \
die neuen Listen der Positionen und Geschwindigkeiten ausgegeben, die in den \
n\[ADoubleDot]chsten drei aus dem NaSch-Modell \[UDoubleDot]bernommenen \
Regeln weiter verwendet werden.   \nZun\[ADoubleDot]chst werden die Abst\
\[ADoubleDot]nde aktualisiert, dann in R3 die Geschwindigkeiten \
\[UDoubleDot]ber den Abst\[ADoubleDot]nden zu den Autos davor auf letztere \
herabgesetzt, in R4 mit der Tr\[ODoubleDot]delwahrscheinlichkeit p um 1 \
abgebremst und in R5 die Positionen der Autos aktualisiert.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8999201894710407`*^9, 3.8999202052707653`*^9}, {
  3.899920344688898*^9, 3.8999207191250114`*^9}, {3.8999207539814854`*^9, 
  3.8999208965746613`*^9}, {3.89992093079198*^9, 3.8999210065933785`*^9}, {
  3.8999211476186943`*^9, 3.8999211929159336`*^9}, {3.8999212279164085`*^9, 
  3.8999212367626266`*^9}, {3.899921968564147*^9, 3.8999220654776125`*^9}, {
  3.899922123517081*^9, 3.899922147510148*^9}, {3.8999222161578817`*^9, 
  3.8999227681811666`*^9}},ExpressionUUID->"28d09b69-e064-4a55-844e-\
a8c7626b3dd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Funktion", " ", "f\[UDoubleDot]r", " ", "den", " ", "Spurenwechsel"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"Spurwechsel", "[", 
    RowBox[{
    "nCar_", ",", "nCells_", ",", "savexlist1_", ",", "savexlist2_", ",", 
     "savevlist1_", ",", "savevlist2_", ",", "xlist1_", ",", "xlist2_", ",", 
     "vlist1_", ",", "vlist2_", ",", "dlist1_", ",", "dlist2_", ",", "m1_", 
     ",", "m2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"Lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos1", ",", "xAutos2", ",", "vAutos1", ",", "vAutos2", ",", 
       "dAutos1", ",", "dAutos2", ",", "savexAutos1", ",", "savexAutos2", ",",
        "savevAutos1", ",", "savevAutos2", ",", "savekleinere", ",", "hinter",
        ",", "hinterx1", ",", "hinterx2", ",", "vorx1", ",", "\n", "vorx2", 
       ",", "hinterv1", ",", "hinterv2", ",", "vorv1", ",", "vorv2", ",", 
       "auto", ",", "vauto", ",", "autoindex", ",", "index1", ",", "index2", 
       ",", "nachindex1", ",", "hinterautos", ",", "wechselvon1", ",", 
       "wechselzu1", ",", "wechselvon2", ",", "wechselzu2", ",", "\n", 
       "nachindex2", ",", "hinterstrecke1", ",", "hinterstrecke2", ",", 
       "vorstrecke1", ",", "vorstrecke2", ",", "fahrt1", ",", "fahrt2", ",", 
       "laengesx1", ",", "laengesx2", ",", "laengex1", ",", "laengex2", ",", 
       "k", ",", "h", ",", "newm1", ",", "newm2"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "In", " ", "twolanesNaSch", " ", "falls", " ", "leere", " ", "Liste", 
        " ", "mit", " ", 
        RowBox[{"{", "0.5", "}"}], " ", "gef\[UDoubleDot]llt"}], ",", " ", 
       RowBox[{
       "hierf\[UDoubleDot]r", " ", "wieder", " ", "leer", " ", 
        "ben\[ODoubleDot]tigt"}]}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"xAutos1", "=", "xlist1"}], ";", 
      RowBox[{"xAutos2", "=", "xlist2"}], ";", "\n", 
      RowBox[{"vAutos1", "=", "vlist1"}], ";", 
      RowBox[{"vAutos2", "=", "vlist2"}], ";", "\n", 
      RowBox[{"dAutos1", "=", "dlist1"}], ";", 
      RowBox[{"dAutos2", "=", "dlist2"}], ";", "\n", 
      RowBox[{"savexAutos1", "=", "savexlist1"}], ";", "\n", 
      RowBox[{"savexAutos2", "=", "savexlist2"}], ";", "\n", 
      RowBox[{"savevAutos1", "=", "savevlist1"}], ";", "\n", 
      RowBox[{"savevAutos2", "=", "savevlist2"}], ";", "\n", 
      RowBox[{"laengesx1", "=", 
       RowBox[{"Length", "[", "savexAutos1", "]"}]}], ";", "\n", 
      RowBox[{"laengesx2", "=", 
       RowBox[{"Length", "[", "savexAutos2", "]"}]}], ";", "\n", 
      RowBox[{"newm1", "=", "m1"}], ";", 
      RowBox[{"newm2", "=", "m2"}], ";", "\n", 
      RowBox[{"wechsel1", "=", "0"}], ";", 
      RowBox[{"wechsel2", "=", "0"}], ";", "\n", 
      RowBox[{"wechselzu1", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"wechselvon1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselzu2", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"wechselvon2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Wechsel", " ", "rechte", " ", "Spur", " ", "zu", " ", "linker"}], 
       "*)"}], "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Falls", " ", "Auto", " ", "auf", " ", "rechter", " ", "Spur"}], 
       "*)"}], "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"laengesx1", ">", "0"}], ",", "\n", "  ", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ";", "\n", "  ", 
         RowBox[{"Do", "[", "\n", "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(*", 
             RowBox[{"Betrachtetes", " ", "Auto"}], "*)"}], "\n", "  ", 
            RowBox[{
             RowBox[{"auto", "=", 
              RowBox[{"savexAutos1", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"vauto", "=", 
              RowBox[{"savevAutos1", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex1", "=", 
              RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex2", "=", 
              RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"savevAutos", " ", "nach", " ", "Beschleunigung"}], 
               ",", " ", 
               RowBox[{
               "dAutos", " ", "bleiben", " ", "im", " ", "Wechselvorgang", 
                " ", "zun\[ADoubleDot]chst", " ", 
                "unver\[ADoubleDot]ndert"}]}], "*)"}], "\n", "  ", 
             RowBox[{"(*", 
              RowBox[{"Falls", " ", "v", " ", 
               RowBox[{"kleiner", "/", "gleich"}], " ", "d", " ", "oder", " ",
                "Nachbarzelle", " ", "links", " ", "besetzt", " ", "wird", 
               " ", "n\[ADoubleDot]chstes", " ", "Auto", " ", "auf", " ", 
               "rechter", " ", "Spur", " ", "betrachtet"}], "*)"}], "\n", 
             "  ", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vauto", "<=", 
                 RowBox[{"dAutos1", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "||", 
                RowBox[{"!", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{"savexAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "==", "auto"}], " ", "&"}]}], "]"}], "==", 
                  RowBox[{"{", "}"}]}]}]}], ",", 
               RowBox[{
                RowBox[{"k", "=", 
                 RowBox[{"k", "+", "1"}]}], ";"}], ",", "\n", "  ", 
               RowBox[{"(*", 
                RowBox[{
                "Wenn", " ", "hier", " ", "sind", " ", "beide", " ", "zuvor", 
                 " ", "nicht", " ", "erf\[UDoubleDot]llt"}], "*)"}], "\n", 
               "  ", 
               RowBox[{"laengesx2", ">", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"savekleinere", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"savexAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Falls", " ", "links", " ", "nur", " ", "Auto", " ", 
                   "weiter", " ", "vorne", " ", "oder", " ", "am", " ", 
                   "anderem", " ", "Stra\[SZ]enende"}], "*)"}], "\n", "  ", 
                 RowBox[{"Which", "[", 
                  RowBox[{
                   RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Auto", " ", "von", " ", "hinten", " ", "ist", " ", "am", 
                    " ", "anderen", " ", "Stra\[SZ]enende"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{
                    RowBox[{"index2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos2", ",", 
                    RowBox[{"Max", "[", "savexAutos2", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx2", "=", 
                    RowBox[{"savexAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv2", "=", 
                    RowBox[{"savevAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Strecke", " ", "des", " ", "Autos", " ", "am", " ", 
                    "anderen", " ", "Stra\[SZ]enende", " ", "links", " ", 
                    "mit", " ", "Abbremsen", " ", "um", " ", "1"}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"hinterstrecke2", "=", 
                    RowBox[{
                    "hinterx2", "+", "hinterv2", "-", "1", "-", "nCells"}]}], 
                    ";"}], "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Entweder", " ", "\[UDoubleDot]berquert", " ", "letzte", 
                    " ", "Zelle", " ", "nicht"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"immer", " ", "hinterstrecke"}], "<", 
                    "fahrt1"}]}], ";", " ", 
                    RowBox[{
                    RowBox[{
                    "oder", " ", "\[UDoubleDot]berquert", " ", "letzte", " ", 
                    "Zelle"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"m\[ODoubleDot]glich", " ", "hinterstrecke"}], 
                    "<", "fahrt1"}]}]}], "*)"}], ")"}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Es", " ", "gibt", " ", "Auto", " ", "mit", " ", 
                    "kleinerer", " ", "Position"}], "*)"}], "\n", "  ", 
                   RowBox[{"!", 
                    RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "von", " ", "hinten", " ", "ankommendes", 
                    " ", "Auto"}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{"index2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos2", ",", 
                    RowBox[{"Max", "[", "savekleinere", "]"}]}], "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx2", "=", 
                    RowBox[{"savexAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv2", "=", 
                    RowBox[{"savevAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterstrecke2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"hinterx2", "+", "hinterv2", "-", "1"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"hinterx2", "+", "hinterv2", "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinterx2", "+", "hinterv2", "-", "1"}], ">", 
                    "nCells"}], ",", 
                    RowBox[{
                    "hinterx2", "+", "hinterv2", "-", "1", "-", "nCells"}]}], 
                    "]"}]}], ";"}], ")"}]}], "\n", "  ", "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"(*", 
                  RowBox[{"Index", " ", "vorherfahrendes", " ", "Auto"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"nachindex2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"index2", "<", "laengesx2"}], ",", 
                    RowBox[{"index2", "+", "1"}], ",", 
                    RowBox[{"index2", "==", "laengesx2"}], ",", "1"}], 
                   "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des", 
                   " ", "vorfahrenden", " ", "Autos"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorx2", "=", 
                  RowBox[{"savexAutos2", "[", 
                   RowBox[{"[", "nachindex2", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vorv2", "=", 
                  RowBox[{"savevAutos2", "[", 
                   RowBox[{"[", "nachindex2", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Strecke", " ", "des", " ", "vorfahrenden", " ", "Autos", 
                   " ", "links"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorstrecke2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vorx2", "+", "vorv2"}], "<=", "nCells"}], ",", 
                    RowBox[{"vorx2", "+", "vorv2"}], ",", 
                    RowBox[{
                    RowBox[{"vorx2", "+", "vorv2"}], ">", "nCells"}], ",", 
                    RowBox[{"vorx2", "+", "vorv2", "-", "nCells"}]}], "]"}]}],
                  ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Weiterfahrt", " ", "nach", " ", "Wechsel", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "-", "1"}], ")"}], " ", "nach", " ", "links",
                     " ", "mit", " ", "m\[ODoubleDot]glichem", " ", 
                    "zus\[ADoubleDot]tzlichen", " ", "Abbremsen", " ", "um", 
                    " ", "1"}], " ", "->", " ", 
                   RowBox[{"-", "2"}]}], "*)"}], "\n", "  ", 
                 RowBox[{"fahrt1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"vauto", "<=", "2"}], ",", "auto", ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "2"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"auto", "+", "vauto", "-", "2"}], ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "2"}], ">", "nCells"}],
                     ",", 
                    RowBox[{"auto", "+", "vauto", "-", "2", "-", "nCells"}]}],
                    "]"}]}], ";", "\n", "  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"hinterstrecke2", "<", "fahrt1"}], " ", "&&", " ", 
                    RowBox[{"fahrt1", "<", "vorstrecke2"}]}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "des", " ", "von", " ", "hinten", " ", 
                    "kommenden", " ", "Autos"}], ",", " ", 
                    RowBox[{"falls", " ", "vorhanden"}]}], "*)"}], "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Falls", " ", "links", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "an", " ", "erster", " ", "Stelle", " ", 
                    "einf\[UDoubleDot]gen"}]}], "*)"}], "\n", "  ", 
                   RowBox[{
                    RowBox[{"hinter", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"laengex2", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "Auto", " ", "mit", " ", "kleinerer", " ", 
                    "Position"}], ",", " ", 
                    RowBox[{"an", " ", "Position", " ", "danach"}]}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "]"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "kein", " ", "Auto", " ", "kleiner"}], ",", 
                    " ", 
                    RowBox[{
                    "an", " ", "Stelle", " ", "vor", " ", "kleinstes", " ", 
                    "Auto"}]}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Min", "[", "xAutos2", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                    ";", "\n", "  ", 
                    RowBox[{"xAutos2", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"xAutos2", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"vAutos2", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"vAutos2", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                    " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                    RowBox[{"newm2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"newm2", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm2"}]}], ",", 
                    RowBox[{"newm2", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm2"}], ",", 
                    "newm2"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselzu2", ",", "auto"}], "]"}], ";", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Element", " ", "aus", " ", "xAutos1", " ", "entfernen"}],
                     "*)"}], "\n", "  ", 
                    RowBox[{"autoindex", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", "auto"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"xAutos1", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"xAutos1", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"vAutos1", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"vAutos1", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"newm1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"autoindex", ">", "newm1"}], ",", "newm1", ",", 
                    RowBox[{"newm1", ">", "1"}], ",", 
                    RowBox[{"newm1", "-", "1"}], ",", 
                    RowBox[{"newm1", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}]}], ";", 
                    "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselvon1", ",", "auto"}], "]"}], ";"}]}], 
                  "\n", "  ", "]"}], ";", "\n", "  ", 
                 RowBox[{"k", "=", 
                  RowBox[{"k", "+", "1"}]}], ";"}], ")"}], ",", "\n", "  ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Links", " ", "leer"}], ",", "Wechsel"}], "*)"}], 
               "\n", "  ", 
               RowBox[{"laengesx2", "==", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                 "Index", " ", "zum", " ", "Einf\[UDoubleDot]gen", " ", "in", 
                  " ", "xAutos2"}], "*)"}], "\n", "  ", 
                RowBox[{"(*", 
                 RowBox[{"Gleich", " ", "zu", " ", "oben"}], "*)"}], "\n", 
                "  ", 
                RowBox[{
                 RowBox[{"hinter", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"laengex2", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "]"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Min", "[", "xAutos2", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                 ";", "\n", "  ", 
                 RowBox[{"xAutos2", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"xAutos2", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vAutos2", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"vAutos2", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                   " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                 RowBox[{"Which", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"newm2", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm2"}]}], ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"newm2", "=", 
                    RowBox[{"newm2", "+", "1"}]}], ";", 
                    RowBox[{"wechsel2", "=", 
                    RowBox[{"wechsel2", "+", "1"}]}], ";"}], ")"}], ",", 
                   RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm2"}], ",", 
                   RowBox[{"newm2", "=", "newm2"}]}], "]"}], ";", "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselzu2", ",", "auto"}], "]"}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Element", " ", "aus", " ", "xAutos1", " ", "entfernen"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"autoindex", "=", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", "auto"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"xAutos1", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"xAutos1", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"vAutos1", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"vAutos1", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"newm1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"autoindex", ">", "newm1"}], ",", "newm1", ",", 
                    RowBox[{"newm1", ">", "1"}], ",", 
                    RowBox[{"newm1", "-", "1"}], ",", 
                    RowBox[{"newm1", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselvon1", ",", "auto"}], "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"k", "=", 
                  RowBox[{"k", "+", "1"}]}], ";"}], ")"}]}], "]"}], ";", "\n",
              "  ", 
             RowBox[{"(*", 
              RowBox[{
              "Nicht", " ", "mehr", " ", "gebrauchte", " ", "Variablen", " ", 
               "clearen"}], "*)"}], "\n", "  ", 
             RowBox[{"Clear", "[", 
              RowBox[{
              "auto", ",", "vauto", ",", "savekleinere", ",", "index2", ",", 
               "nachindex2", ",", "hinterx2", ",", "hinterv2", ",", "vorx2", 
               ",", "vorv2", ",", "hinterstrecke2", ",", "vorstrecke2", ",", 
               "fahrt1", ",", "hinter", ",", "autoindex"}], "]"}], ";"}], 
            ")"}], "\n", "  ", ",", "laengesx1"}], "]"}], ";"}]}], "\n", "  ",
        "]"}], ";", "\n", "  ", "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Wechsel", " ", "linke", " ", "Spur", " ", "zu", " ", "rechter"}], 
       "*)"}], "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{"Falls", " ", "Auto", " ", "auf", " ", "linker", " ", "Spur"}],
        "*)"}], "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"laengesx2", ">", "0"}], ",", "\n", "  ", 
        RowBox[{
         RowBox[{"h", "=", "1"}], ";", "\n", "  ", 
         RowBox[{"Do", "[", "\n", "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(*", 
             RowBox[{"Betrachtetes", " ", "Auto"}], "*)"}], "\n", "  ", 
            RowBox[{
             RowBox[{"auto", "=", 
              RowBox[{"savexAutos2", "[", 
               RowBox[{"[", "h", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"vauto", "=", 
              RowBox[{"savevAutos2", "[", 
               RowBox[{"[", "h", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex1", "=", 
              RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex2", "=", 
              RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
             RowBox[{"(*", 
              RowBox[{
              "Falls", " ", "Nachbarzelle", " ", "rechts", " ", "besetzt", 
               " ", "wird", " ", "n\[ADoubleDot]chstes", " ", "Auto", " ", 
               "auf", " ", "linker", " ", "Spur", " ", "betrachtet"}], "*)"}],
              "\n", "  ", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"savexAutos1", ",", 
                   RowBox[{
                    RowBox[{"#", "==", "auto"}], " ", "&"}]}], "]"}], "==", 
                 RowBox[{"{", "}"}]}]}], ",", 
               RowBox[{
                RowBox[{"h", "=", 
                 RowBox[{"h", "+", "1"}]}], ";"}], ",", "\n", "  ", 
               RowBox[{"laengesx1", ">", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"savekleinere", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"savexAutos1", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Falls", " ", "rechts", " ", "nur", " ", "Auto", " ", 
                   "weiter", " ", "vorne", " ", "oder", " ", "am", " ", 
                   "anderem", " ", "Stra\[SZ]enende"}], "*)"}], "\n", "  ", 
                 RowBox[{"Which", "[", 
                  RowBox[{
                   RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Auto", " ", "von", " ", "hinten", " ", "ist", " ", "am", 
                    " ", "anderen", " ", "Stra\[SZ]enende"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{
                    RowBox[{"index1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos1", ",", 
                    RowBox[{"Max", "[", "savexAutos1", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx1", "=", 
                    RowBox[{"savexAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv1", "=", 
                    RowBox[{"savevAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Strecke", " ", "des", " ", "Autos", " ", "am", " ", 
                    "anderen", " ", "Stra\[SZ]enende", " ", "rechts", " ", 
                    "mit", " ", "Abbremsen", " ", "um", " ", "1"}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"hinterstrecke1", "=", 
                    RowBox[{
                    "hinterx1", "+", "hinterv1", "-", "1", "-", "nCells"}]}], 
                    ";"}], "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Entweder", " ", "\[UDoubleDot]berquert", " ", "letzte", 
                    " ", "Zelle", " ", "nicht"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"immer", " ", "hinterstrecke"}], "<", 
                    "fahrt1"}]}], ";", " ", 
                    RowBox[{
                    RowBox[{
                    "oder", " ", "\[UDoubleDot]berquert", " ", "letzte", " ", 
                    "Zelle"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"m\[ODoubleDot]glich", " ", "hinterstrecke"}], 
                    "<", "fahrt1"}]}]}], "*)"}], ")"}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Es", " ", "gibt", " ", "Auto", " ", "mit", " ", 
                    "kleinerer", " ", "Position"}], "*)"}], "\n", "  ", 
                   RowBox[{"!", 
                    RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "von", " ", "hinten", " ", "ankommendes", 
                    " ", "Auto"}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{"index1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos1", ",", 
                    RowBox[{"Max", "[", "savekleinere", "]"}]}], "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx1", "=", 
                    RowBox[{"savexAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv1", "=", 
                    RowBox[{"savevAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", " ", "\n", 
                    "  ", 
                    RowBox[{"hinterstrecke1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"hinterx1", "+", "hinterv1", "-", "1"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"hinterx1", "+", "hinterv1", "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinterx1", "+", "hinterv1", "-", "1"}], ">", 
                    "nCells"}], ",", 
                    RowBox[{
                    "hinterx1", "+", "hinterv1", "-", "1", "-", "nCells"}]}], 
                    "]"}]}], ";"}], ")"}]}], "\n", "  ", "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"(*", 
                  RowBox[{"Index", " ", "vorherfahrendes", " ", "Auto"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"nachindex1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"index1", "<", "laengesx1"}], ",", 
                    RowBox[{"index1", "+", "1"}], ",", 
                    RowBox[{"index1", "==", "laengesx1"}], ",", "1"}], 
                   "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des", 
                   " ", "vorfahrenden", " ", "Autos"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorx1", "=", 
                  RowBox[{"savexAutos1", "[", 
                   RowBox[{"[", "nachindex1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vorv1", "=", 
                  RowBox[{"savevAutos1", "[", 
                   RowBox[{"[", "nachindex1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Strecke", " ", "des", " ", "vorfahrenden", " ", "Autos", 
                   " ", "rechts"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorstrecke1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vorx1", "+", "vorv1"}], "<=", "nCells"}], ",", 
                    RowBox[{"vorx1", "+", "vorv1"}], ",", 
                    RowBox[{
                    RowBox[{"vorx1", "+", "vorv1"}], ">", "nCells"}], ",", 
                    RowBox[{"vorx1", "+", "vorv1", "-", "nCells"}]}], "]"}]}],
                  ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Weiterfahrt", " ", "nach", " ", "Wechsel", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "-", "1"}], ")"}], " ", "nach", " ", 
                    "rechts", " ", "mit", " ", "m\[ODoubleDot]glichem", " ", 
                    "zus\[ADoubleDot]tzlichen", " ", "Abbremsen", " ", "um", 
                    " ", "2"}], " ", "->", " ", 
                   RowBox[{"-", "3"}]}], "*)"}], "\n", "  ", 
                 RowBox[{"fahrt2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"vauto", "<=", "3"}], ",", "auto", ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "3"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"auto", "+", "vauto", "-", "3"}], ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "3"}], ">", "nCells"}],
                     ",", 
                    RowBox[{"auto", "+", "vauto", "-", "3", "-", "nCells"}]}],
                    "]"}]}], ";", "\n", "  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"hinterstrecke1", "<", "fahrt2"}], " ", "&&", " ", 
                    RowBox[{"fahrt2", "<", "vorstrecke1"}]}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "des", " ", "von", " ", "hinten", " ", 
                    "kommenden", " ", "Autos"}], ",", " ", 
                    RowBox[{"falls", " ", "vorhanden"}]}], "*)"}], "\n", "  ", 
                   RowBox[{
                    RowBox[{"hinterautos", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                    "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Falls", " ", "rechts", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "an", " ", "erster", " ", "Stelle", " ", 
                    "einf\[UDoubleDot]gen"}]}], "*)"}], "\n", "  ", 
                    RowBox[{"hinter", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"laengex1", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "Auto", " ", "mit", " ", "kleinerer", " ", 
                    "Position"}], ",", " ", 
                    RowBox[{"an", " ", "Position", " ", "danach"}]}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"!", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Max", "[", "hinterautos", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "kein", " ", "Auto", " ", "kleiner"}], ",", 
                    " ", 
                    RowBox[{
                    "an", " ", "Stelle", " ", "vor", " ", "kleinstes", " ", 
                    "Auto"}]}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Min", "[", "xAutos1", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                    ";", " ", "\n", "  ", 
                    RowBox[{"xAutos1", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"xAutos1", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"vAutos1", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"vAutos1", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                    " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                    RowBox[{"newm1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"newm1", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm1"}]}], ",", 
                    RowBox[{"newm1", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm1"}], ",", 
                    "newm1"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselzu1", ",", "auto"}], "]"}], ";", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Element", " ", "aus", " ", "xAutos2", " ", "entfernen"}],
                     "*)"}], "\n", "  ", 
                    RowBox[{"autoindex", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", "auto"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"xAutos2", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"xAutos2", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"vAutos2", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"vAutos2", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"newm2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"autoindex", ">", "newm2"}], ",", "newm2", ",", 
                    RowBox[{"newm2", ">", "1"}], ",", 
                    RowBox[{"newm2", "-", "1"}], ",", 
                    RowBox[{"newm2", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos2", "]"}]}], "]"}]}], ";", 
                    "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselvon2", ",", "auto"}], "]"}], ";"}]}], 
                  "\n", "  ", "]"}], ";", "\n", "  ", 
                 RowBox[{"h", "=", 
                  RowBox[{"h", "+", "1"}]}], ";"}], ")"}], ",", "\n", "  ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Rechts", " ", "leer"}], ",", "Wechsel"}], "*)"}], 
               "\n", "  ", 
               RowBox[{"laengesx1", "==", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                 "Index", " ", "zum", " ", "Einf\[UDoubleDot]gen", " ", "in", 
                  " ", "xAutos1"}], "*)"}], "\n", "  ", 
                RowBox[{
                 RowBox[{"hinterautos", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"xAutos1", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{"Gleich", " ", "zu", " ", "oben"}], "*)"}], "\n", 
                 "  ", 
                 RowBox[{"hinter", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"laengex1", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"!", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Max", "[", "hinterautos", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Min", "[", "xAutos1", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                 ";", "\n", "  ", 
                 RowBox[{"xAutos1", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"xAutos1", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vAutos1", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"vAutos1", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                   " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                 RowBox[{"newm1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"newm1", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm1"}]}], ",", 
                    RowBox[{"newm1", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm1"}], ",", 
                    "newm1"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselzu1", ",", "auto"}], "]"}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Element", " ", "aus", " ", "xAutos2", " ", "entfernen"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"autoindex", "=", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", "auto"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"xAutos2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"xAutos2", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"vAutos2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"vAutos2", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"newm2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"autoindex", ">", "newm2"}], ",", "newm2", ",", 
                    RowBox[{"newm2", ">", "1"}], ",", 
                    RowBox[{"newm2", "-", "1"}], ",", 
                    RowBox[{"newm2", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos2", "]"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselvon2", ",", "auto"}], "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"h", "=", 
                  RowBox[{"h", "+", "1"}]}], ";"}], ")"}]}], "]"}], ";", "\n",
              "  ", 
             RowBox[{"(*", 
              RowBox[{
              "Nicht", " ", "mehr", " ", "gebrauchte", " ", "Variablen", " ", 
               "clearen"}], "*)"}], "\n", "  ", 
             RowBox[{"Clear", "[", 
              RowBox[{
              "auto", ",", "vauto", ",", "savekleinere", ",", "index1", ",", 
               "nachindex1", ",", "hinterx1", ",", "hinterv1", ",", "vorx1", 
               ",", "vorv1", ",", "hinterstrecke1", ",", "vorstrecke1", ",", 
               "fahrt2", ",", "hinter", ",", "autoindex"}], "]"}], ";"}], 
            ")"}], "\n", "  ", ",", "laengesx2"}], "]"}], ";"}]}], "\n", "  ",
        "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
        "xAutos1", ",", "xAutos2", ",", "vAutos1", ",", "vAutos2", ",", 
         "newm1", ",", "newm2", ",", "wechselvon1", ",", "wechselzu1", ",", 
         "wechselvon2", ",", "wechselzu2"}], "}"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.899569653373231*^9, {3.899921348566013*^9, 3.8999213495372057`*^9}, {
   3.8999214754178605`*^9, 3.8999216353227158`*^9}, {3.899921723626703*^9, 
   3.8999217240523615`*^9}, {3.8999218771194525`*^9, 3.899921905635003*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"10bbf157-5baf-474b-9c28-6c600d10348d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Modell", " ", "zwei", " ", "Fahrspuren"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"twolanesNaSch", "[", 
    RowBox[{"nCar_", ",", "nCells_", ",", "tMax_", ",", "vMax_", ",", "p_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos", ",", "xAutos1", ",", "xAutos2", ",", "vAutos1", ",", 
       "vAutos2", ",", "dAutos1", ",", "dAutos2", ",", "xtwolan1", ",", 
       "xtwolan2", ",", "vtwolan1", ",", "vtwolan2", ",", "dtwolan1", ",", 
       "dtwolan2", ",", "\n", "savex1", ",", "savex2", ",", "savev1", ",", 
       "savev2", ",", "saved1", ",", "saved2", ",", "save", ",", "maxAuto1", 
       ",", "minAuto1", ",", "maxAuto2", ",", "minAuto2", ",", "savekleinere",
        ",", "hinter", ",", "hinterx1", ",", "spurfluss1", ",", "spurfluss2", 
       ",", "\n", "hinterx2", ",", "vorx1", ",", "vorx2", ",", "hinterv1", 
       ",", "hinterv2", ",", "vorv1", ",", "vorv2", ",", "m1", ",", "m2", ",",
        "auto", ",", "vauto", ",", "autoindex", ",", "index1", ",", "index2", 
       ",", "nachindex1", ",", "data", ",", "wechselvon1", ",", "wechselzu1", 
       ",", "wechselvon2", ",", "wechselzu2", ",", "\n", "nachindex2", ",", 
       "hinterstrecke1", ",", "hinterstrecke2", ",", "vorstrecke1", ",", 
       "vorstrecke2", ",", "fahrt1", ",", "fahrt2", ",", "laengesx1", ",", 
       "laengesx2", ",", "laengex1", ",", "laengex2", ",", "a", ",", "k", ",",
        "h", ",", "mlist1", ",", "mlist2"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Listen", " ", "zur", " ", "Ausgabe", " ", "der", " ", "Daten"}], 
      "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"xtwolan1", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"xtwolan2", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"vtwolan1", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"vtwolan2", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"dtwolan1", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"dtwolan2", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{"NaSch", "-", "Modell"}], "*)"}], "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Autos", " ", "haben", " ", "Position", " ", "x", " ", "und", " ", 
         "Geschwindigkeit", " ", "v", " ", "zum", " ", "vorderen", " ", 
         "Auto"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Erstellen", " ", "Liste", " ", "xAutos", " ", "mit", " ", 
         "doppelter", " ", "L\[ADoubleDot]nge", " ", "als", " ", 
         "Stra\[SZ]e"}], "*)"}], "\n", 
       RowBox[{"xAutos", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"RandomSample", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"2", " ", "nCells"}], "]"}], ",", "nCar"}], "]"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Aufteilen", " ", "Liste", " ", "in", " ", "zwei", " ", "Spuren"}], 
         ",", " ", 
         RowBox[{"1", " ", "rechts"}], ",", " ", 
         RowBox[{"2", " ", "links"}]}], "*)"}], "\n", 
       RowBox[{"xAutos1", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"xAutos", ",", 
          RowBox[{
           RowBox[{"#", "<=", "nCells"}], " ", "&"}]}], "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Positionen", " ", "der", " ", "linken", " ", "Spur", " ", "setzen", 
         " ", "in", " ", "Bereich", " ", "von", " ", "0", " ", "bis", " ", 
         "nCells"}], "*)"}], "\n", 
       RowBox[{"xAutos2", "=", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"xAutos1", "!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}], ",", 
            RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}], ",", 
          RowBox[{"xAutos1", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"xAutos", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
      "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Geschwindigkeiten", " ", "f\[UDoubleDot]r", " ", "alle", " ", "Autos",
         " ", "getrennt", " ", "auf", " ", "den", " ", "Spuren"}], "*)"}], 
      ";", "\n", 
      RowBox[{"vAutos1", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", 
         RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"vAutos2", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", 
         RowBox[{"Length", "[", "xAutos2", "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "Ausgangssituation"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xtwolan1", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"xAutos1", "!=", 
           RowBox[{"{", "}"}]}], ",", "xAutos1", ",", 
          RowBox[{"xAutos1", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xtwolan2", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"xAutos2", "!=", 
           RowBox[{"{", "}"}]}], ",", "xAutos2", ",", 
          RowBox[{"xAutos2", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vtwolan1", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"vAutos1", "!=", 
           RowBox[{"{", "}"}]}], ",", "vAutos1", ",", 
          RowBox[{"vAutos1", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vtwolan2", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"vAutos2", "!=", 
           RowBox[{"{", "}"}]}], ",", "vAutos2", ",", 
          RowBox[{"vAutos2", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"savex1", "=", "xAutos1"}], ";", "\n", 
      RowBox[{"savex2", "=", "xAutos2"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Index", " ", "zur", " ", "Betrachtung", " ", "des", " ", "Flusses"}], 
       "*)"}], "\n", 
      RowBox[{"m1", "=", 
       RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", 
      RowBox[{"m2", "=", 
       RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", 
      RowBox[{"mlist1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"mlist2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mlist1", ",", "m1"}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mlist2", ",", "m2"}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Liste", " ", "Positionen", " ", "der", " ", "Wechsel"}], 
       "*)"}], "\n", 
      RowBox[{"wechselvon1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselzu1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselvon2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselzu2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Verkehrsregeln", " ", "aus", " ", "NaSch"}], "-", 
        RowBox[{"Modell", " ", "implementieren"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "2"}], ",", 
        RowBox[{"t", "<=", "tMax"}], ",", 
        RowBox[{"t", "++"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Ausgangssituation", " ", "ist", " ", "t"}], "=", "1"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Oft", " ", "verwendete", " ", "Variablen"}], "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{"Listen", " ", "des", " ", "Zeitschritts", " ", "davor"}], 
         "*)"}], "\n", 
        RowBox[{
         RowBox[{"laengex1", "=", 
          RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", 
         RowBox[{"laengex2", "=", 
          RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", 
         RowBox[{"laengesx1", "=", 
          RowBox[{"Length", "[", "savex1", "]"}]}], ";", "\n", 
         RowBox[{"laengesx2", "=", 
          RowBox[{"Length", "[", "savex2", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto1", "=", 
          RowBox[{"Max", "[", "xAutos1", "]"}]}], ";", "\n", 
         RowBox[{"minAuto1", "=", 
          RowBox[{"Min", "[", "xAutos1", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto2", "=", 
          RowBox[{"Max", "[", "xAutos2", "]"}]}], ";", "\n", 
         RowBox[{"minAuto2", "=", 
          RowBox[{"Min", "[", "xAutos2", "]"}]}], ";", "\n", "\n", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Freie", " ", "Zellen", " ", "d", " ", "vor", " ", "dem", " ", 
           "Auto", " ", "bis", " ", "zum", " ", "vorderen"}], "*)"}], "\n", 
         "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos1", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto1"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto1", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex1", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "<", "maxAuto1"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "+", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"dAutos1", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
         "   ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos2", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto2"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto2", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             " ", "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos2", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "<", "maxAuto2"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "+", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"dAutos2", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
         "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Abspeichern", " ", "Abst\[ADoubleDot]nde"}], "*)"}], "\n", 
         "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dtwolan1", ",", "dAutos1"}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dtwolan2", ",", "dAutos2"}], "]"}], ";", "\n", "  ", "\n", 
         "  ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R1", ":", " ", "Beschleunigen"}], ",", " ", 
           RowBox[{
           "falls", " ", "vMax", " ", "noch", " ", "nicht", " ", 
            "erreicht"}]}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}], ",", 
           "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"vtwolan1", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "\n", "  ", "]"}], 
         ";", "\n", "  ", 
         RowBox[{"savev1", "=", "vAutos1"}], ";", "\n", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}], ",", 
           "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"vtwolan2", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "\n", "  ", "]"}], 
         ";", "\n", "  ", 
         RowBox[{"savev2", "=", "vAutos2"}], ";", "\n", "\n", "  ", 
         RowBox[{"data", "=", 
          RowBox[{"Spurwechsel", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "savex1", ",", "savex2", ",", "savev1",
             ",", "savev2", ",", "xAutos1", ",", "xAutos2", ",", "vAutos1", 
            ",", "vAutos2", ",", "dAutos1", ",", "dAutos2", ",", "m1", ",", 
            "m2"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"xAutos1", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"xAutos2", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"vAutos1", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", 
         RowBox[{"vAutos2", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"m1", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], ";", 
         RowBox[{"m2", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"mlist1", ",", "m1"}], "]"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"mlist2", ",", "m2"}], "]"}], ";", "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon1", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon1", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "8", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu1", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "8", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu1", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "9", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon2", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "9", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon2", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu2", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu2", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Clear", "[", "data", "]"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Berechnungen", " ", "f\[UDoubleDot]r", " ", "neue", " ", 
           "xAutos"}], "*)"}], "\n", "  ", 
         RowBox[{"laengex1", "=", 
          RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
         RowBox[{"laengex2", "=", 
          RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
         RowBox[{"maxAuto1", "=", 
          RowBox[{"Max", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
         RowBox[{"minAuto1", "=", 
          RowBox[{"Min", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
         RowBox[{"maxAuto2", "=", 
          RowBox[{"Max", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
         RowBox[{"minAuto2", "=", 
          RowBox[{"Min", "[", "xAutos2", "]"}]}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Nach", " ", "Spurwechsel", " ", "freie", " ", "Zellen", " ", "d", 
           " ", "vor", " ", "dem", " ", "Auto", " ", "bis", " ", "zum", " ", 
           "vorderen"}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Clear", "[", "dAutos1", "]"}], ";", "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos1", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto1"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto1", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex1", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "<", "maxAuto1"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "+", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", "0.5", "}"}]}], ";"}]}], "]"}], ";", "\n", "   ", 
         "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Clear", "[", "dAutos2", "]"}], ";", "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos2", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto2"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto2", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             " ", "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos2", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "<", "maxAuto2"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "+", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", "0.5", "}"}]}], ";"}]}], "\n", "  ", "]"}], ";", 
         "\n", "   ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R3", ":", " ", "Abbremsen"}], ",", " ", 
           RowBox[{
           "falls", " ", "v", " ", "gr\[ODoubleDot]\[SZ]er", " ", "als", " ", 
            "Abstand", " ", "d"}]}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"dAutos1", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], ",", 
                 RowBox[{"vAutos1", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"dAutos2", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], ",", 
                 RowBox[{"vAutos2", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"R4", ":", " ", 
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "mit", " ", "Wahrscheinlichkeit", " ", 
            "p"}]}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
                 RowBox[{
                  RowBox[{"vAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", "0"}], 
                   "]"}]}], ",", 
                 RowBox[{"vAutos1", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}]}], 
          " ", "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
                 RowBox[{
                  RowBox[{"vAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", "0"}], 
                   "]"}]}], ",", 
                 RowBox[{"vAutos2", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"R5", ":", " ", 
           RowBox[{"Fahren", " ", "um", " ", "vAutos", " ", "Zellen"}]}], 
          "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"xAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", " ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"xAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Abspeichern", " ", "xAutos", " ", "f\[UDoubleDot]r", " ", 
           "n\[ADoubleDot]chsten", " ", "Zeitschritt"}], "*)"}], "\n", "  ", 
         RowBox[{"savex1", "=", "xAutos1"}], ";", "\n", "  ", 
         RowBox[{"savex2", "=", "xAutos2"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Abspeichern", " ", "Daten", " ", "in", " ", "Listen", " ", "zur", 
           " ", "Ausgabe"}], "*)"}], "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xtwolan1", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"xAutos1", "!=", 
              RowBox[{"{", "}"}]}], ",", "xAutos1", ",", 
             RowBox[{"xAutos1", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xtwolan2", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"xAutos2", "!=", 
              RowBox[{"{", "}"}]}], ",", "xAutos2", ",", 
             RowBox[{"xAutos2", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vtwolan1", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"vAutos1", "!=", 
              RowBox[{"{", "}"}]}], ",", "vAutos1", ",", 
             RowBox[{"vAutos1", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vtwolan2", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"vAutos2", "!=", 
              RowBox[{"{", "}"}]}], ",", "vAutos2", ",", 
             RowBox[{"vAutos2", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";"}]}], "\n", "  ",
        "\n", "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Abspeichern", " ", "Abst\[ADoubleDot]nde", " ", "nach", " ", 
        "Spurwechsel", " ", "in", " ", "letztem", " ", "Schritt"}], "*)"}], 
      "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dtwolan1", ",", "dAutos1"}], "]"}], ";", "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dtwolan2", ",", "dAutos2"}], "]"}], ";", "\n", " ", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
        "xtwolan1", ",", "xtwolan2", ",", "vtwolan1", ",", "vtwolan2", ",", 
         "dtwolan1", ",", "dtwolan2", ",", "wechselvon1", ",", "wechselzu1", 
         ",", "wechselvon2", ",", "wechselzu2"}], "}"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995696756933565`*^9, {3.899924189436119*^9, 3.8999241972400265`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"7b20d250-10c3-4989-a0ac-38835f16d57e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Erwartete", " ", "Laufzeit", " ", "pro", " ", "Fundamentalplot", " ", 
     "sind", " ", "6"}], "-", 
    RowBox[{"7", " ", "Minuten"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"twolanesplots", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Histogramme", " ", "und", " ", "Dichteplots", " ", "f\[UDoubleDot]r", 
     " ", "die", " ", "Spuren", " ", "getrennt"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"vdhisto2D", "[", 
       RowBox[{
        RowBox[{"{", "100", "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.15"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"vdhisto2D", "[", 
       RowBox[{
        RowBox[{"{", "100", "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.3"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"dichteplot2D", "[", 
       RowBox[{"100", ",", "0.15", ",", "10"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"dichteplot2D", "[", 
       RowBox[{"100", ",", "0.3", ",", "10"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<twolanesNaSch\>\"", ",", "0.15", ",", "0"}], "]"}]}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<twolanesNaSch\>\"", ",", "0.3", ",", "0"}], "]"}]}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "twolanesplots", "]"}], "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "m", ",", 
         RowBox[{"m", "+", "3"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}], "\n", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "twolanesplots", "]"}], "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "9", ",", "13", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "m", ",", 
         RowBox[{"m", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995696859553638`*^9, {3.8998983071500607`*^9, 3.8998983114650745`*^9}, {
   3.8999089217193613`*^9, 3.8999090395838685`*^9}, {3.899909246454648*^9, 
   3.899909263368252*^9}, {3.8999092965487604`*^9, 3.899909296787594*^9}, {
   3.8999093612011075`*^9, 3.899909432265727*^9}, {3.8999094951111755`*^9, 
   3.8999095032470913`*^9}, {3.899909739024233*^9, 3.899909765783492*^9}, {
   3.899915971250391*^9, 3.89991602802697*^9}, {3.8999160583060055`*^9, 
   3.899916073501024*^9}, {3.8999198949977694`*^9, 3.8999199166234875`*^9}, {
   3.8999199753938684`*^9, 3.8999199887913017`*^9}, {3.899920054701664*^9, 
   3.8999200614483294`*^9}, {3.8999230638022118`*^9, 
   3.8999230815701275`*^9}, {3.899925908612608*^9, 
   3.899925923297467*^9}},ExpressionUUID->"6db0d547-fc6f-4cea-a2b3-\
c9cce6a6dbe3"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.651], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 28}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684845`, 
                  98.60419607176115}, {-139.5399665725686, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 28]& ,
              TagBoxNote->"28"],
             StyleBox["28", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[28, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 28}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176115, 
                  133.36077662283742`}, {-139.5399665725686, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 28]& ,
              TagBoxNote->"28"],
             StyleBox["28", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[28, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8432481428571429, 0.15849014285714286`, 
                0.008003357142857142], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283743`, 
                  168.11735717391372`}, {-50.356503423646735`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6201935714285715, 0.052382142857142856`, 
                0.010737442857142857`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391373`, 
                  202.87393772499001`}, {-28.060637636416267`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5192258571428572, 0.017460714285714284`, 
                0.014128214285714286`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499003`, 
                  237.6305182760663}, {-19.142291321524084`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 68 Autos,\\n t=100, p=0.15 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.637], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7623943333333334, 0.11136030000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 23}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{63.39761552068486, 
                  93.63897027875024}, {-129.55141869988933`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 23]& ,
              TagBoxNote->"23"],
             StyleBox["23", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[23, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 25}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{93.18897027875025, 
                  123.4303250368157}, {-139.53996657256855`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 25]& ,
              TagBoxNote->"25"],
             StyleBox["25", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[25, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.896046, 0.24915299999999999`, 0.018122], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681569`, 
                  153.22167979488106`}, {-64.62585752747421, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7632311666666667, 0.10185416666666668`, 
                0.005933849999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{152.77167979488107`, 
                  183.01303455294652`}, {-44.64876178211572, \
-14.233118164077982`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5276398333333333, 0.02037083333333333, 
                0.013845650000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{182.5630345529465, 
                  212.8043893110119}, {-24.67166603675723, \
-14.233118164077982`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{212.3543893110119, 
                  242.59574406907728`}, {-19.67739210041761, \
-14.233118164077982`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{242.14574406907724`, 
                  272.3870988271428}, {-19.67739210041763, \
-14.233118164077961`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.64, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 68 Autos,\\n t=100, p=0.15 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 6.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.651], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  98.60419607176104}, {-139.53996657256857`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.36077662283742`}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9754242727272727, 0.4253260909090909, 0.04099406363636364], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  168.11735717391366`}, {-82.7868536596183, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8355684545454546, 0.14530281818181817`, 
                0.006531554545454546], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391364`, 
                  202.87393772499001`}, {-48.73498591184815, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5972463636363636, 0.044445454545454545`, 
                0.011508072727272728`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606637`}, {-26.033740746668038`, \
-14.233118164077982`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 32 Autos,\\n t=100, p=0.15 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  73.77806710670652}, {-139.5399665725686, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.6661732222222222, 0.08536913333333333], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{73.32806710670653, 
                  83.70851869272849}, {-114.56859689087048`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.937111, 0.3196685555555555, 0.02599205555555556], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{83.25851869272847, 
                  93.63897027875021}, {-77.1115423683233, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{103.11942186477191`, 
                  113.49987345079387`}, {-27.16880300492705, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{113.04987345079385`, 
                  123.43032503681559`}, {-27.16880300492705, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681557`, 
                  133.3607766228373}, {-27.16880300492705, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6258028888888889, 0.054322222222222216`, 
                0.010549066666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{142.84122820885923`, 
                  153.22167979488097`}, {-39.65448784577611, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{162.7021313809029, 
                  173.08258296692463`}, {-27.16880300492705, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{11.5, 0.}, {12.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{182.56303455294633`, 
                  192.9434861389683}, {-27.16880300492705, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  212.80438931101173`}, {-27.16880300492705, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{32.5, 0.}, {33.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{391.1025178594042, 
                  401.4829694454259}, {-27.16880300492707, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.9199999999999999, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 32 Autos,\\n t=100, p=0.15 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 20.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -118.66252583997979},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 26}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068489, 
                  98.60419607176118}, {-139.5399665725685, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 26]& ,
              TagBoxNote->"26"],
             StyleBox["26", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[26, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7668353076923077, 0.11255989230769231`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176119, 
                  133.36077662283748`}, {-129.93559361806925`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6862109230769231, 0.07521538461538461, 0.008520400000000001], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-33.89186407307651, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6862109230769231, 0.07521538461538461, 0.008520400000000001], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499007`}, {-33.89186407307651, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 58 Autos,\\n t=100, p=0.3 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.616], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 19}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  84.70156385133063}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 19]& ,
              TagBoxNote->"19"],
             StyleBox["19", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[19, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 19}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{84.25156385133064, 
                  105.55551218197638`}, {-139.53996657256855`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 19]& ,
              TagBoxNote->"19"],
             StyleBox["19", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[19, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197637`, 
                  126.40946051262222`}, {-60.68300968299557, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.838555, 0.15043122222222222`, 0.007103922222222222], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{125.9594605126222, 
                  147.26340884326794`}, {-54.11159660886447, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326792`, 
                  168.11735717391377`}, {-21.254531238209047`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6258028888888889, 0.054322222222222216`, 
                0.010549066666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  188.9713055045595}, {-34.39735738647122, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{188.52130550455948`, 
                  209.82525383520533`}, {-21.254531238209047`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.616], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{209.3752538352053, 
                  230.67920216585105`}, {-21.254531238209047`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{251.08315049649684`, 
                  272.3870988271426}, {-21.25453123820907, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.7, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 58 Autos,\\n t=100, p=0.3 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 9.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 13}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-139.5399665725685, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9930683846153846, 0.5844256153846153, 0.06912102307692308], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-101.12247475457143`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  168.11735717391377`}, {-139.5399665725685, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9745840769230769, 0.41774992307692305`, 
                0.039654684615384614`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-81.91372884557289, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 42 Autos,\\n t=100, p=0.3 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.595], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  79.88911423656631}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.646929, 0.0801709], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{79.43911423656633, 
                  95.93061295244763}, {-111.79400025957065`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.646929, 0.0801709], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{95.48061295244761, 
                  111.97211166832892`}, {-111.79400025957065`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.646929, 0.0801709], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{111.5221116683289, 
                  128.0136103842104}, {-111.79400025957065`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{127.56361038421042`, 
                  144.0551091000917}, {-84.04803394657274, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.896046, 0.24915299999999999`, 0.018122], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{143.6051091000917, 
                  160.096607815973}, {-70.1750507900738, -14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{159.646607815973, 
                  176.13810653185453`}, {-28.55610132057692, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.595], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{191.7296052477358, 
                  208.2211039636171}, {-28.55610132057692, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{11.5, 0.}, {12.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{255.89560011126116`, 
                  272.3870988271427}, {-28.556101320576943`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.76, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 42 Autos,\\n t=100, p=0.3 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 12.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -355.98757751993935},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.899921086554542*^9, 3.899925399708996*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"e87a57af-b22e-4d6f-ad0f-9ee3dea6fc81"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzdnb1rVEEUxZdIwFgYRRvFJij+BSqYIqMgCBYWfkEEBQVhsVHSmU6MwcpI
EG0FBTF+gUqKCBoFRWwEQY34QYSAGIMrNoIpomCqwLA5u7+T+17SBIZh3sx9
M/eec+6dfR1HT+w51lKpVD62VipL/v0/NN3S+2X3ZPrxfXTr+l2P06+1ra/b
N51MTwaOj9Xaaml59duy4ZVjaejSmg8rzl1JA8+23KjemkptV7vfd028Sks7
D74ZPD+Ybc+Nv+/22e7q9YnZ9rvpzpH+56u298njU89V7XDx0YqezzOfUmX2
73//C9n+ufFz7eq6qPWq/XN2oOZJzV8dhxo/al1Fa8/tE/d7KZo9c3ZQ293n
erGeUyoelcVvqPGFWi81jvu5lD3d9qfw2PjOzVO/+2ppyb13D9Ph8TTUvqG2
7uUteZ65cXLzVPtTdlPbVT9A4Vh1vardqPeiPte936j9T/WPstt/dPAzzdzt
7Ll2fyLt33H59Or+B9j4uf65/U/xIOo8qvwlCh8WDb+p7ep5pPijOy5Q86H2
c+58UeeRwlHqPKPwqhtfufGS2j8XL3Lj5PrXa39aPTDcfuprevti7/SaMyNy
fFTjLGU3qj1nB9VuuXYVD6jvl7Ib9X7dOFYdv2g4k3ovVDvlJ1X/U8/vzfd8
UX6P8pO5cXJ2zo3v5vWq3Sh+R+EoCi+5n+vGb27eTfFQtx9T21U+HsXf3e3q
fNz6J6WbqefdzQtUv+rGw2r8rRe/ml2X2z5R9nS3q/7KrTNQPILiHe5xqHZ3
XHOfL3deIIoHUTphVB0Xde7cup+av6B0DDffV+NmLv66eRxlz6g8KYVjVZwf
VSdA1Q9E5Ueo/eOuA3HnQxdrnQzlNyj/EBVnKT3Hjbfd7zcKb1P8qF6c7e/o
+dPbNZlubjw30r5tNEz/p/Rb1T7UPN35ROq5at7cHd/dOC1KJ3T7K6r+LUo/
ofBGlD5M6Qy0X1Lz+HP7594LFXco/6DGC6q/2k7Nn1pXo+udixOoeO3Wk6n5
qPnWxcoTi8ZPizafstxPcfOUKH7kvqdA6WaqjkrF06i46c77uPVk1f5u/EPx
biqPTNXnFK1O2J0Xjrrfp8Yvdz2bu+6LyudS98so3kr1p84FhZPd+82t56h5
4Zwfy91jyvGyeuPPV+/N+c9G7yM0mxeuN8/58lN1/Ch/ReGNqHsN7nsWFG53
4ygKd0Xl8am6cTVeuHkZxWfduJGqn6f0Vap+3p2/UNupe/G0/2/2vo86fr3+
c+NslN5C1Yer+RGq7o7SpaPus7jriqPuU0fdi6HieFRem9LBisb71Pw1lYdy
349z17FH6fZUXFD1w6h7xxSuoPiOGjfd66XeSxTvU+3mvg/o5stuv0ThzEbP
9ULjybLwfTcOcfPHqHsH7nNE4fAovxGFk6PqItS8gzsf7dYDo+r83XnwKF3R
nc9tFOc0i8Op80vpfm7+6z4vUfd93PGdugdBrVflidR7bzT/qPK++erPUXxE
tbM7b0jpjep7j9Lz3eNTOoy6/912UOfv9j+UvqE+1z1/Smcr2vui8GfuuVSe
3a17uHlQ0fyze59EtZfl9+KoessoXqna010nrOpsbt4RZQdqPioviMr7qOui
+Cylk7t1uRw+Ud+7u797P5QlD1U0/YTSaSkcruJtCi+584xR+4rKexYt7xNV
pxQ1jpsXU+danU/uvKvtbp2QWpe7XsWt87u/Z+fOz0bFC0o3iLoPUrR6g6j4
S+VZ3HVcqp9x17u668cavX/RbB3XQsXHha4vjVovzYub/f35KH9C6UVlqXsp
Cw6n9Mmo76G7v1MfNU7Rvp8e9btVUfuq7O1R3+d16/zu3x8r2nPd+SbquW47
uL8HXZbf/Yvaz2X3q9T83efoL+lfboY=
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 1: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.15\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxF1Qsw1OsbB3AplFKiUpJySaeUCp0i+ZYiSnskpCSXk46kkiQ6cg+5VkRK
tI6DaLHum0tESSqS0AXLrr3Kz6VoSZ3+89+x78wz885n3nne53nmnXlVnM9Z
uswUExOb8StcfsX/9gnVsp7dP7sgJlwjihKtC3SvQ7ZJfcSb3Q07jbphP0kv
/Gi1O7XjXBxiOrZ5LmjuEXoolnlQtOy8YyHhqSE4ZEdHBC3DrWJOLHRkfo76
XInBbp9Nequa6cLzCSDlWNASQ6MR5K/vO2DUixFCR0tpdjJc96b7F0dF4XHo
Hlp5aa8wTypCmKO7W29G4kckSRC6rg/XayMPUa6ScS/IeM5Q8jUY3LDVO5ja
J8yfgXLlpNcy5AhcTnL2XSHHgEbUZJx5eCZaKzjxmtnhKL/nTuNeZQjvfYAB
W/0jZvlhGPvHW1AiYKDKyv0lPyIXUmNRyn+VXoVuTqBe8BmmsJ48qMZ3MUKr
QnGhINKX1MvEurizocbGBTDYtPFBen0IqKUJNEXrfmGdVNi8Cjxb0xQMojJV
wHrej6+jmaqLnxXivFurTndrEDbUZesVGbCE9RcjSkpdMPk+EO6Nhb4BBSzU
2vbUME1KsM+M76fzJAA5zZW0/epsYV+lCAyJlTrXcgWcd88ECrfZiK5ScChu
KENx1eabOd1/Q+NTix5zLkfYLw2c8TYl1oAvTvR98C0I4OCwqsVUiOkjKGv7
ZKlMXkI6h0nzG+UI51ABK/fl2vZzvEEfHBSY/sWFWnjE3UONlYjIrK68reAF
5a/f9BZ/5ArnU41qutPettWesJ8Uv9xL4mGQX6Ontu8x/v+uPJDQ973AMoCH
9fIGMa+Ga+Aq7hB4stMLLxvH2HX5PDgVJF25ZvgE3dxyrSo/X8ykDilvofOQ
eGD0jHFUHQ69keuSV/GH/m2edaYsH4080vEZnfVwPFZqXOIchPMBzGiFXXz8
CM8hVak/g5IFI4VeHILsk911Eef50FktCd/zDWjfLftlrlQYeg50TgjIfLg+
cdq4pfo5bmzdsX/rkQgobGndfLqVjxSHqpXD0i9grumW7pwbCZLSS9dP4gNo
/b5UlnK4CVIrkwQxU9G4OvNZ2gGdAUje8RI7lfEST+TqLWh/xKGS97i9+s8B
6G9tGVIffgWDkG+HRlquY/QNTWZTwgDOtmn20nc0Q3Eq9qfUxA1o0or2kOt/
5S+vcyUZt2Dce3XuCrV4ON+n/C33dQDu4cOOD/ktaBuqsNExT0ByeFZhyOrP
kLRZeUT65hsUulmKm128hZazZO4X688gqx846LqtFdeZHMrx1ERI2dxddTLs
M/RHL5s9626F+/GAI14NScCOW4c7Sj/jXW32LvWrb2HauVgicug2vNXjYk3Z
n+FxvV0vWLMNGpYPC9KW3QFl7rWnNIVBSDvM0qa/acOsl0bHSozugjkS/H2d
6SAyNmivM/R5B7rxe6mm0ylQ+uCnk+IzCHx3UE1Rbkf143NF9IR7sKz1dpN5
MIjOFzGKE/XtuKMn6TBWlYrIbA+y//tBXEiukLM93QGfohTpeew01Ma5dRJz
CMx35UqXLuxETuKyj7IR9zHXaVFEgzwB6xlE0+91nRjRYy9QCiHDWrt6a9oK
Ail3vkSXeb2HflfxnjX+6bg/05XtvYYAU2fiwDaNDwgODPbV9v0HvLaFSaTN
BDRf/ZxP6/iAF2oWeTu8MqCbWWGisZ2A50mJFr1rHyHXsIJheu5f+F9yGZva
Q4D2U/rGI/1POOrGV7Byy8Rz0wWZ70gExJJlLbcPfEK6DM3cwSUL8oo0a4ot
ARPtJfKV97rAKggLcnPMhj3fWeKqM4GYpuVtBn90Q8vKqvSi3QNkVc4rOeZO
oO2Eyq0qsR54j6vwA21yMBxTekLXm8DyHxo2hoU9qL5DrIw+mIvtDo6L5gUS
oO5PjOrZTIekYZVVkvlDhG2Srmdc+zWfpcsG0iLpIPVGXkvfS0HLjOILFfEE
vjHvmjsy6EgMta2mGOVB8a29Wvy9X3OjKlNWGfSie43GaPmOfJzIkHrrlkVg
pz9ZpjehF/H9AnlnpQLkXaQGG1EJMPapnyV/7sXWMsc8dnIBBCZ22ooVBMIV
sl47mfThY0SD6RkFKnYvlegbriewjrl2o2paHwKOajFGEqiI4ebdaHxN4HXB
w7i+8T6orr91xUeuEB2PbHeROwl4XNk4lG7BwNOpSYUfcYVQiRYf9ukjsGhf
ocWfDxg41excGCJTBHf7h/ctBgiUL9lCVRNnQobcaD4nqgilWjYWv40ROMYo
W8g8ygTVcxM7dnax8P8bws98fc+MIias9yQFLQoTebbeV1uXASb8Fz59Xi5W
Mu2WdfnQWN2PrO6RBfZ/i3zS3E2Dbd+PltxVh2eMiTyjXV0mO7EfEz6k1H89
Sqed5Ngz6trcDzUTv34zvsjHuckf1s5mwVw+Z/2gS9m0379gVcvbycJFeseF
m3SRm03Nz871ZSGVIlHxu135tI+ENca6F7Lw7LKO+Md3Ir8rG3pxA58FYq+T
WYAFbdr33DE8NqjGxtLFcdfVmkQ+qCYwyj/Gxq6+yo4G40fTnkQpWutxiw23
fJ6ye43Id249K7v5NRvxfktPym6vmHZezW/jw5IcVJqZUIpLRB6/j9FVCA5Y
S7y+2G6qnHaDtnv1F3w4mM8kb5/KETnL3jZXl8rBNmpzMHl11bTHseVufuVy
4OQ/1Wh8X+Tbzr/yKVXlInK/5kKeYvW0906EO1yy46Jw6RHb2Fsijww1MtmW
wMWH/rA0bdnH0647f2q94CUXs4qKWe2RIu9KKpN/JMHDkp3DiVXiNdMepuI5
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {217.06666666666666, -211.2}, {
      Center, Center}, {407., 396.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzlnc2Lz1EUxn+RMhZmxGZkM5G/AMViLqWUhYW3oihKTTY0O7MTplkhia2i
ZAwKWVDeimSjlLe8NGpKxmRko1gM5WWhTjNPfZ7O/TKbqdvt3nPvPfe8POe5
31/Xzj3rd01rtVqvZrRa03/83/ZtWt/bdaPl44fbyxeuvVU+z5/xuH3J3rLx
wqEtPWdHfrVfKhd39N+fu+pgifpH7UfuLTvXMzRW2k5vedE98qjMXLH1ybHD
x8J2dXxKnmi9x2929L6ZeF1av/5+jnO03Dmy+/l423iZ3fN+1rU5z8vgic6X
HQOnwv6qnOo4qvxRuzqOKj81b1Z7JKdb/qbsT1Pa/9X9zNLPrHOh1useJ+t8
KflV/5UlD9WfkieKE6j4JxpfnffnKj+Vuz2br7Xve1eePtjwrfPA9T/tE5dW
9J65MlI2rT65f17/VTmuU9c7vGbp2JeD42X65Wc3yvbhMti+aHzBwyFM36j2
rDhWlUddFzVvdI9UPVHnjfSfOkf1fkXtqp5T61LPJRpflYfK16j8yJ03qfvg
jouoeal9o863NtyAss/qeVHjZ/kLdd7IfqrtlN3O8iNUOyVPNE60b1GcGbWr
ca97Xeq5U+cVxe1UHB6tV10XFc9QeZ87/1LthhpfqeeijhPJGfVX7686vrpe
1T677QmlJ5PZgb/3WfWb1H2h4n/Kfqp2hsoT1f5qXEftJ3W/KH9RW1xE4RWq
Hrr7u/MmNw5D5WuUP3XnF5ScalxN+U3VH1H5hTvOd+cd2fnFVOOKrLyD2ucs
HMldJ6LkpHAe6rxUe950XIWqE2XhqFl6q/K4KPtGyePWE2pdqv9V4xwKd6Xq
Yu46Wta5u/kV7vpIU9rddcOm8LXcvA63Prv9MhVfUfaK4gm78xq3v3PjGxR/
RvWn7vqmG9d14yoUT8mN07rld9/HLN4CFRdReH5WPkjZNwp3pewGFYer/aN5
I5wtWm9U9886F3ee2BR8htIf1U9RuLRar3fbk6bE7e58jVqXO4+r7T0Ltf/u
eZuCP1B4jupfqPiNkkedN7Kr7njDXQepjYep8lXcfICs+rU77nLjM27enTu/
oOwwhRfVhv9T8Y/bv7jzRNVeUefo5nVT99rN76L4sb/9e39X79e+7tFyfvHA
9faVt0N9jvqr+uC28yo+HMU57vx0svapvmt28+GzcOws/XHbbTc/qinvwd3v
rCkcuLZ3Ye48143/qzwiN6+bqjNG5zuZ/50qT9XNt6HiMeo+RvtDvcOi+Nuq
/G79z/qOgRuXc+Nsbv9L4TNU/cL9PRAqfnbX/bN4PtR+ZvE93PGbm9eh7r+a
r7nfL1P76caFqPtI8RAoe+XGV7PeHbjHz+IR1Wbn3fwxNz5J5fvuujkVZ7rr
EW4+A+Uv3PfI/R2DrLqem5eVdS5unI3qT+Et7vqU+52Re173+0SqHu32mxRO
qNb13N8ToM5Rfe9D4eHu72FS9a8s/q0bt6HwLopv4OaDuet0lP6o9V8Kv8rC
893xmDt+oM6LsieT+bu/8TGKn5ClD02pr1H8TypfpuIr9/eEKT9C4VdZvBeK
5+Pez9rqek1570PlTW69ysLlKPvm1gf3Oyw131T9MoW/ufN6VW8pP0Xl6e7v
P7jfC6txJqWH7jgwCw+vrb/73ZMb93bnF+56otuPu/WfwhNU/qGaj6v80qz3
ie52dT/deAWtP1N9x6Gu1427uvMyd30ni6eqypP1/QH3vmXhKpR9yLoXWfc9
izel1neoeIzK693fZ8v6Pjxlt2ury1B2w83Tdr8rzMoXKDyqtvcj7nuUlae7
cebafs/9f2uv7bxqk+dfbXfvZ1PsQ2161ZR9q+3+uvP6LJ5hbXajKe3ueno0
73eqmEIp
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 2: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.15\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {651.1999999999999, -211.2}, {
      Center, Center}, {406.99999999999994, 396.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzVnbtrVUEQxi+GgLEwijYRm6D4F6hgCldBECwsfEEEBQXhYqOkM50Yg5WR
INoKCuIzoJIigkZBERtB8IUPIgREDUZsBFNEIbG5sNx8534/5hwbYVnm7s7O
znwz851N9+Fju44sqtVqH9prtbZ//z8aOvp2umM6La1/XTK6/G26fqHr/bIz
l9LQk43X6jenUsfl3nebJ1+kxT37Xw2fHU4T2zdM/R6YTm133txPByfS9c61
06uf38zOz8l3jbvWo86nf1eVc2BmUf/nnd/Sj+/jm9bseJh+rWp/2bn+uE2O
63dd68mN77l1urd+dXJ+fCTdPjT4dMXWAdt8dVzdb2496nx1v+p4bl8u+a5x
9Vxc5+u6Fy77dMnPzT//YFnfp9mPqTb/b27+ucrYgyrHtV9Vjssvlc1PuvRJ
60cdV/FDFD7Jzc/pJzd/7vR+ptmRnr4rdyfT3m0XT64cvCfjChovucbV9dDj
tP277IfGky49lA030vhZxZk0/onSf9Q9isKxZcMJKh6g8ZgLp+Xk0DiExvk0
js3Jj4qzKh5Q729uvyquU9eTw28qzlTxbRTuctUbo+qWufuVO0d1vor/Vf3Q
duJajwv3uvyDC1e48kpVD6qfcfUpcnJc68nJUfWmynH9brN9Pa7vG+088SW9
frZ7puvUGH4fXX0o1Q7V33X5GdXf0n0uOm6q+nf5B5d/o/VD14XU+a6+IV3/
yY3n/FhUv1vdL42XaByVu+/quOt31XjnwocuPKn6T3Wc3q8a72g7j7J/Vzyi
cWDR9SwUNzbzA41yivqThd7rojh8oeuk46y6flVOFE5T/QZdJ4nKH2lcQY+7
4pFL/y6/V7b6mGpX7nOh8LbLn/8fH+zu+9O/+Vu6se7MWOeWcTzuqOt34dUo
O3fdU5c/pHEmjcfo/gjNT3D5JVVOFO+C9rdlO98oO6Traa46tgv/u/C5Kt/l
x5r9bmNcVvG5C/eq8ov2Ixr364pfavx11T9dPNLcudP33VXncfkNlx2q9qDi
YboOTNflXPNd/p/mIbj4hK54odpb2fr1RfPBVu2/mZzG+FJUTqt+gK5ju/Wp
1hlarXuUjXfnwg+uOrPLn9A8Jdd+y8aLiMqj6T6Cyw7p+07X8Wi+Ll03oPkA
dH3AldfQ98u1HvU7SppvQ/Ofaf9WNj4YzXeivzOl/aHLv9F5XxRfVO3vR8Wj
qPciaH9O27l6jjRf1OXfXPHO9c4AjX/ouKzqx1XXovvgrvzaVc9R89Zm+dRC
6yeu/m8Uj5Gua7n0QPcX6LjjyrNc8ch1X+h6gqpPte+mxpGo/iadR9B8ADpP
cZ1vs369Or8sfCr6+6Co9bjs0xVHXN/FuHgOLr+k2jO9nii+liteF8WlFG+K
zpejeOl037Bs9SX6HF28KbpeTePPqvOcXf4tSg8u/bjqeHQdlX6vj353lLZP
mj9QdTtx4WS6vxmVX0TFO1c/l67PuOKv6xxd/Oqq99Ho8Sh/HtVHdsWdsuX1
UXVsut5L74v+DsKlB1eft+p8AJd90nkEzV9ynVeUv43Ka1Q59N99UO2NzhNp
3kLU/aJxglo/d9V7i/blW+UP0zxwuu/v4kuoelP7L3T/juazufRWtn63Ky+u
Sl4Zxed08RLpvJiOy7Q90PzPKNxL8zzpdwNoHg793XrZ3kmg37Wm7zVdp43q
h0Z9h+iyh6L4v1WeM/0OgMsPRPXL6Dw9qs9Or5+OR65+NJ1vuu6RK4+O4p26
+iCqn6HxjCteuPSm2o9qD1H9r9y+io5T7+1E4Q01z1LtR9Wnqp+q80XpOqeL
DxlVZ6DH6Xwk6t2S6Pp5q+88u3ER9c5e2XhNND6pyvqrzseO4kFF1U/o7w6i
/HxV/FhUXKPPy5WnuPSmntdfkJhrkA==
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 1: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.3\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxF1Qsw1OsbB3AplFKiUpJySaeUCp0i+ZYiSnskpCSXk46kkiQ6cg+5VkRK
tI6DaLHum0tESSqS0AXLrr3Kz6VoSZ3+89+x78wz885n3nne53nmnXlVnM9Z
uswUExOb8StcfsX/9gnVsp7dP7sgJlwjihKtC3SvQ7ZJfcSb3Q07jbphP0kv
/Gi1O7XjXBxiOrZ5LmjuEXoolnlQtOy8YyHhqSE4ZEdHBC3DrWJOLHRkfo76
XInBbp9Nequa6cLzCSDlWNASQ6MR5K/vO2DUixFCR0tpdjJc96b7F0dF4XHo
Hlp5aa8wTypCmKO7W29G4kckSRC6rg/XayMPUa6ScS/IeM5Q8jUY3LDVO5ja
J8yfgXLlpNcy5AhcTnL2XSHHgEbUZJx5eCZaKzjxmtnhKL/nTuNeZQjvfYAB
W/0jZvlhGPvHW1AiYKDKyv0lPyIXUmNRyn+VXoVuTqBe8BmmsJ48qMZ3MUKr
QnGhINKX1MvEurizocbGBTDYtPFBen0IqKUJNEXrfmGdVNi8Cjxb0xQMojJV
wHrej6+jmaqLnxXivFurTndrEDbUZesVGbCE9RcjSkpdMPk+EO6Nhb4BBSzU
2vbUME1KsM+M76fzJAA5zZW0/epsYV+lCAyJlTrXcgWcd88ECrfZiK5ScChu
KENx1eabOd1/Q+NTix5zLkfYLw2c8TYl1oAvTvR98C0I4OCwqsVUiOkjKGv7
ZKlMXkI6h0nzG+UI51ABK/fl2vZzvEEfHBSY/sWFWnjE3UONlYjIrK68reAF
5a/f9BZ/5ArnU41qutPettWesJ8Uv9xL4mGQX6Ontu8x/v+uPJDQ973AMoCH
9fIGMa+Ga+Aq7hB4stMLLxvH2HX5PDgVJF25ZvgE3dxyrSo/X8ykDilvofOQ
eGD0jHFUHQ69keuSV/GH/m2edaYsH4080vEZnfVwPFZqXOIchPMBzGiFXXz8
CM8hVak/g5IFI4VeHILsk911Eef50FktCd/zDWjfLftlrlQYeg50TgjIfLg+
cdq4pfo5bmzdsX/rkQgobGndfLqVjxSHqpXD0i9grumW7pwbCZLSS9dP4gNo
/b5UlnK4CVIrkwQxU9G4OvNZ2gGdAUje8RI7lfEST+TqLWh/xKGS97i9+s8B
6G9tGVIffgWDkG+HRlquY/QNTWZTwgDOtmn20nc0Q3Eq9qfUxA1o0or2kOt/
5S+vcyUZt2Dce3XuCrV4ON+n/C33dQDu4cOOD/ktaBuqsNExT0ByeFZhyOrP
kLRZeUT65hsUulmKm128hZazZO4X688gqx846LqtFdeZHMrx1ERI2dxddTLs
M/RHL5s9626F+/GAI14NScCOW4c7Sj/jXW32LvWrb2HauVgicug2vNXjYk3Z
n+FxvV0vWLMNGpYPC9KW3QFl7rWnNIVBSDvM0qa/acOsl0bHSozugjkS/H2d
6SAyNmivM/R5B7rxe6mm0ylQ+uCnk+IzCHx3UE1Rbkf143NF9IR7sKz1dpN5
MIjOFzGKE/XtuKMn6TBWlYrIbA+y//tBXEiukLM93QGfohTpeew01Ma5dRJz
CMx35UqXLuxETuKyj7IR9zHXaVFEgzwB6xlE0+91nRjRYy9QCiHDWrt6a9oK
Ail3vkSXeb2HflfxnjX+6bg/05XtvYYAU2fiwDaNDwgODPbV9v0HvLaFSaTN
BDRf/ZxP6/iAF2oWeTu8MqCbWWGisZ2A50mJFr1rHyHXsIJheu5f+F9yGZva
Q4D2U/rGI/1POOrGV7Byy8Rz0wWZ70gExJJlLbcPfEK6DM3cwSUL8oo0a4ot
ARPtJfKV97rAKggLcnPMhj3fWeKqM4GYpuVtBn90Q8vKqvSi3QNkVc4rOeZO
oO2Eyq0qsR54j6vwA21yMBxTekLXm8DyHxo2hoU9qL5DrIw+mIvtDo6L5gUS
oO5PjOrZTIekYZVVkvlDhG2Srmdc+zWfpcsG0iLpIPVGXkvfS0HLjOILFfEE
vjHvmjsy6EgMta2mGOVB8a29Wvy9X3OjKlNWGfSie43GaPmOfJzIkHrrlkVg
pz9ZpjehF/H9AnlnpQLkXaQGG1EJMPapnyV/7sXWMsc8dnIBBCZ22ooVBMIV
sl47mfThY0SD6RkFKnYvlegbriewjrl2o2paHwKOajFGEqiI4ebdaHxN4HXB
w7i+8T6orr91xUeuEB2PbHeROwl4XNk4lG7BwNOpSYUfcYVQiRYf9ukjsGhf
ocWfDxg41excGCJTBHf7h/ctBgiUL9lCVRNnQobcaD4nqgilWjYWv40ROMYo
W8g8ygTVcxM7dnax8P8bws98fc+MIias9yQFLQoTebbeV1uXASb8Fz59Xi5W
Mu2WdfnQWN2PrO6RBfZ/i3zS3E2Dbd+PltxVh2eMiTyjXV0mO7EfEz6k1H89
Sqed5Ngz6trcDzUTv34zvsjHuckf1s5mwVw+Z/2gS9m0379gVcvbycJFeseF
m3SRm03Nz871ZSGVIlHxu135tI+ENca6F7Lw7LKO+Md3Ir8rG3pxA58FYq+T
WYAFbdr33DE8NqjGxtLFcdfVmkQ+qCYwyj/Gxq6+yo4G40fTnkQpWutxiw23
fJ6ye43Id249K7v5NRvxfktPym6vmHZezW/jw5IcVJqZUIpLRB6/j9FVCA5Y
S7y+2G6qnHaDtnv1F3w4mM8kb5/KETnL3jZXl8rBNmpzMHl11bTHseVufuVy
4OQ/1Wh8X+Tbzr/yKVXlInK/5kKeYvW0906EO1yy46Jw6RHb2Fsijww1MtmW
wMWH/rA0bdnH0647f2q94CUXs4qKWe2RIu9KKpN/JMHDkp3DiVXiNdMepuI5
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {217.06666666666666, -633.5999999999999}, {
      Center, Center}, {407., 395.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnT9IllEUxj8KZ4VsMCIQwlYhk4byRgQVNIQ0BRH0B3GQyMGhwSLCsqmh
JJyiIgOjsAYpLCIqaLUp0iAsAqM/tFVDBdV4qAeeX+f9NBfhcnnf+9577jnP
eZ5z79e671D3wSW1Wm2moVZb+uP/ys3nRjfu/FC6T+9+PtIwWz6t3rJrw/BY
idrb26aOtw+8LvvHt99a/3KiLJ+Y2nP5xPHyfvjw3bc33pXRzouf9/Y9LSMd
k+taHp+X26P3Rv23Dh49Ofd1vvSOrbnes/1h6Rwa7G06cMw2nuj5UXs0fnWc
0Tyr8x/1P3uvqf/Ft9lS+/X3aUXDdGPHGbl/9F10f3V+onb1+fR4onWM5kdd
d3X+aftR+9Pvpe1KHQ+9Xqo90+voWi/Xe/+3/5v2qq2jy95c8cWFT9T4Mn1l
ftWzmQ+lr2dV17WBufLgwo5LTx7dlL/LhYtc8+BqV/EqHa9d+ESdZxc+ceHh
LPzmsiva/7jyqarh8MWGS+v9vQsVP9T7OKvWXi/+luaR1Pe6cEgW7qJ5PBpn
0jhftRNX/6qtb9Z6uXCvKz9y5Smu+YnyR9XPRONX81OXHuFqj8ZP6yZRu7pe
6vfSccqVv7j0L1o/yvIbLjzmwjPq+F1xjY479PjpcdJ6Mb3fXXGB1rtdcT/y
/1WLd+o4o/4/vc7H0jz1qmty2ZvSvq15bcvV23i+QNcJ0H6Jxp90vk/nHer6
uvadul8i+//dPtTa/+VI13wZbzt1p3HT/fA56r52PYfG5+r4s+wkq46Ixp+u
Oplo3ly6p/q9Kl5S50G1kyz+TfV7tJ+neWPXvnPlyypectnVn+LO38Yj1/jV
uBCN0/Ve9fku3syF57PyKVecdfkTWu92+XO6v8vfuvheVz5SNX9O76+sPMvF
g7l4A5e9ufImF//p4kNcPExk5xEeoPM11zxE3xvlI1F/Ot65+Bx1PKoe7eLP
XXgjK090+Uk6r6d5vCx9hOa7VDxA6+MuvZjWO2h+ks77XPkXzT+r3xXFcZUf
cM2/K7+O+qvr67IHFXdlxUEX763av4p7s/gKuq7GxcPT+oKLV1F1BBdvk6Xb
uvpn2Ql9PkW1N5dfUvPfrDoZl99w1Sdn8XKu97q+13VugtazsnhFup4kq67G
Zbeu+zqyzmNm8Rt0/UnVcHiW/WedF3ad86LPidD408Xn0PmI2l/lGeh6V1q3
cvlJld+g9SMXb6D2d9kJXbdM6wJ0nKLzO5c90+cxaXyr+knXeR/XOUEav9H6
FB1P6XZVr1ftjebNaH+VhatpHY3Op9RxZuFhWseM9gWtF9P1HvR5UlcdBV2X
mFWvTtd/uuzNZZ+0P3fdI0HzCTRupONj1fBP1fava31dcVC1c/q7XPwzfR+j
ut+zztu6xl+1e+po3EjvU5pXz9KXXTxb1r0WtF5G4+SsuOPKK2k9Iku3ytK5
qlaHpvL8tJ9x+Teaz6TPZbvqP2n+iuZz6H3kWi9XfHHt06rlEXS9DY176efQ
+Rpdj0T/forrva79qM4nzefQeT1dt+/imWkeyXWukOZdXe+l874sXTjLfmhe
IutcSdXqium4QPuxelkXuv4za35ovoW+11fFV/T9b3T+6LIT+ncrsvY1jT+z
9E2aH8jimem6XBfflcUn0zwVzRvTz8/6ncesOhBaJ1Xttl74JRffnlV/QuuV
WefRXPNA40lXParrfhJX/uLyk3Qdb9Z9Vup5BJoPV3FRlk5H85C0P1ef48LP
Wfr+YmvPmn9XneRia6f1OzoOZu1r2i8tVDvJsiv693CrNp/1bj80rqPnP6tu
WV2X72EBXbc=
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 2: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.3\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -48.21428571428571}, 
                    Offset[{4., 0}, {7.5, -48.21428571428571}]}, {{7.5, 
                    16.07142857142857}, 
                    Offset[{4., 0}, {7.5, 16.07142857142857}]}, {{7.5, 
                    80.35714285714285}, 
                    Offset[{4., 0}, {7.5, 80.35714285714285}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -96.42857142857142}, 
                    Offset[{2.5, 0.}, {7.5, -96.42857142857142}]}, {{
                    7.5, -80.35714285714285}, 
                    Offset[{2.5, 0.}, {7.5, -80.35714285714285}]}, {{
                    7.5, -64.28571428571428}, 
                    Offset[{2.5, 0.}, {7.5, -64.28571428571428}]}, {{
                    7.5, -32.14285714285714}, 
                    Offset[{2.5, 0.}, {7.5, -32.14285714285714}]}, {{
                    7.5, -16.07142857142857}, 
                    Offset[{2.5, 0.}, {7.5, -16.07142857142857}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 32.14285714285714}, 
                    Offset[{2.5, 0.}, {7.5, 32.14285714285714}]}, {{7.5, 
                    48.21428571428571}, 
                    Offset[{2.5, 0.}, {7.5, 48.21428571428571}]}, {{7.5, 
                    64.28571428571428}, 
                    Offset[{2.5, 0.}, {7.5, 64.28571428571428}]}, {{7.5, 
                    96.42857142857142}, 
                    Offset[{2.5, 0.}, {7.5, 96.42857142857142}]}, {{7.5, 
                    112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -48.21428571428571}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 16.07142857142857}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 80.35714285714285}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "7.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {651.1999999999999, -633.5999999999999}, {
      Center, Center}, {406.99999999999994, 395.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.899921086554542*^9, 3.899925401251293*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"008bcbb0-7cc5-4643-a631-6195759a0086"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"3715b4c1-62cb-43b7-92b5-adbd4b992975"],

Cell["", "Text",
 CellChangeTimes->{
  3.899569698257235*^9},ExpressionUUID->"42f2e738-a743-4d1c-ba19-\
24a7809964e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["",
 FontFamily->"Squealer"]], "Title",
 CellChangeTimes->{
  3.8995697024730453`*^9},ExpressionUUID->"4fe85d5e-172d-4333-bc06-\
175f53c60bf9"],

Cell["\<\
 
\
\>", "Text",
 CellChangeTimes->{
  3.8995697009859076`*^9},ExpressionUUID->"24027b9b-7c0c-4e94-ad27-\
c4bd3186a83d"]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{1020, Automatic}, {Automatic, -6}},
TaggingRules-><|
 "CodeFormatter" -> <|"ToolbarState" -> False|>, "TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"02e24b49-43df-458c-b402-aeb0f3c1a1fe"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 284, 6, 99, "Title",ExpressionUUID->"b0c631c6-253a-40ad-871d-8f14e949cd72"],
Cell[867, 30, 338, 7, 53, "Subtitle",ExpressionUUID->"4acba6f2-68cd-4841-a131-cf9b56d1d227"],
Cell[1208, 39, 279, 8, 78, "Text",ExpressionUUID->"69a009d7-45d8-4a71-b7ab-5fab650906e7"],
Cell[1490, 49, 1463, 21, 260, "Text",ExpressionUUID->"f8d88ff7-3677-4f4d-83d4-a185409464c0"],
Cell[CellGroupData[{
Cell[2978, 74, 131, 1, 70, "Chapter",ExpressionUUID->"53a949ba-2ac9-42b2-b355-6ffed80ebbcd"],
Cell[3112, 77, 1561, 22, 169, "Text",ExpressionUUID->"4a7a6bbe-853c-4efd-8367-c439f93b66db"],
Cell[4676, 101, 17145, 410, 1193, "Code",ExpressionUUID->"e3426614-f7d5-42a5-9a25-baf88eb424d2"],
Cell[21824, 513, 321, 7, 45, "Code",ExpressionUUID->"90a6f162-a31c-489c-8ac1-50e57a6eccab"],
Cell[22148, 522, 663, 11, 56, "Text",ExpressionUUID->"a477ff40-7d59-4ef6-868d-9299dadb2a90"],
Cell[22814, 535, 5504, 133, 429, "Code",ExpressionUUID->"c58cf939-98c7-4afb-a201-1563e4c89ee2"],
Cell[CellGroupData[{
Cell[28343, 672, 437, 9, 62, "Code",ExpressionUUID->"8f730bb1-ce7e-41a0-9ceb-a0ab97259352"],
Cell[28783, 683, 516564, 8551, 318, "Output",ExpressionUUID->"97339e00-aa29-4783-82c0-53d8cc8d4747"]
}, Open  ]],
Cell[545362, 9237, 654, 10, 56, "Text",ExpressionUUID->"01f2a765-3945-4d79-8ce4-6c029ef902a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546053, 9252, 129, 1, 70, "Chapter",ExpressionUUID->"e004bcce-3c9b-40ec-b809-b72bc6c6cfe3"],
Cell[546185, 9255, 487, 8, 33, "Text",ExpressionUUID->"fd1fb932-e995-454a-8485-6601910c91b5"],
Cell[546675, 9265, 9495, 216, 762, "Code",ExpressionUUID->"a5e40c58-41a7-408c-90c5-758337d6a1b3"],
Cell[CellGroupData[{
Cell[556195, 9485, 547, 10, 61, "Code",ExpressionUUID->"e7dd2a29-8209-4b7f-a429-1b417eff5d2b"],
Cell[556745, 9497, 74984, 1305, 356, "Output",ExpressionUUID->"9e95cbf9-a45d-4a9a-a8ca-3d45ab0c4679"]
}, Open  ]],
Cell[631744, 10805, 1166, 16, 124, "Text",ExpressionUUID->"7752114c-3962-4473-8c88-ad703be852ee"],
Cell[632913, 10823, 10194, 235, 906, "Code",ExpressionUUID->"15a04ccb-9817-4d90-b556-0154fcf6b2d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643144, 11063, 130, 1, 70, "Chapter",ExpressionUUID->"e5f36a8b-8b9a-4faf-8be1-e5f9ffdb8c9f"],
Cell[643277, 11066, 764, 12, 78, "Text",ExpressionUUID->"eabf6e1e-9efb-4db8-a5fe-7103953589b9"],
Cell[644044, 11080, 723, 20, 61, "Code",ExpressionUUID->"ae4289fd-3737-485a-ac1a-684d677e1de5"],
Cell[644770, 11102, 11561, 258, 778, "Code",ExpressionUUID->"23c5c7e7-aa96-4062-8106-6ea28332da4c"],
Cell[CellGroupData[{
Cell[656356, 11364, 1170, 32, 62, "Code",ExpressionUUID->"3d2b2861-c274-48a0-acb3-ba568f511d5f"],
Cell[657529, 11398, 133249, 3306, 622, "Output",ExpressionUUID->"14ac0e08-89f9-4540-bc1b-3d16e3b511bc"]
}, Open  ]],
Cell[790793, 14707, 255, 5, 45, "Code",ExpressionUUID->"55fa524d-842a-45cb-86c7-a06bf0db0fbe"],
Cell[791051, 14714, 888, 13, 101, "Text",ExpressionUUID->"b34803e0-89b9-4ed8-a613-7d0d4a62345e"],
Cell[791942, 14729, 479, 8, 33, "Text",ExpressionUUID->"c9da176a-3619-45eb-b38a-0c50956619f7"],
Cell[792424, 14739, 13522, 295, 906, "Code",ExpressionUUID->"9f9e371d-94c3-4c9b-89d1-eb7a74f5a5e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805983, 15039, 131, 1, 70, "Chapter",ExpressionUUID->"913f1fca-27e4-474f-8a8f-c011b5503bfb"],
Cell[806117, 15042, 664, 10, 101, "Text",ExpressionUUID->"f06690dd-af44-410c-94bf-91b1ec8df352"],
Cell[806784, 15054, 11907, 278, 961, "Code",ExpressionUUID->"e52da848-53d4-4183-8c61-af7f47c94bf1"],
Cell[CellGroupData[{
Cell[818716, 15336, 566, 14, 77, "Code",ExpressionUUID->"16f2bf36-0d23-4d3a-8a8b-c564ac482e43"],
Cell[819285, 15352, 74142, 1549, 663, "Output",ExpressionUUID->"b2901120-703a-4b58-beb5-592183b9ff0d"],
Cell[893430, 16903, 7806, 168, 360, "Output",ExpressionUUID->"5293c82f-ec55-4f0d-bd14-70813f74b293"]
}, Open  ]],
Cell[901251, 17074, 263, 5, 45, "Code",ExpressionUUID->"67dc683d-91d4-4dca-b956-b9af4ab66b20"],
Cell[901517, 17081, 1315, 18, 192, "Text",ExpressionUUID->"9a12740d-e703-404e-b25c-aece55b23138"]
}, Open  ]],
Cell[CellGroupData[{
Cell[902869, 17104, 136, 2, 70, "Chapter",ExpressionUUID->"431ebe87-5ae3-4e3f-80ff-d9a73d6b2de5"],
Cell[903008, 17108, 612, 10, 78, "Text",ExpressionUUID->"28c43677-f09d-40f1-9ccb-06263446373d"],
Cell[903623, 17120, 786, 23, 93, "Code",ExpressionUUID->"9f9f0c00-035f-495d-8220-11ba5455f2af"],
Cell[904412, 17145, 37930, 832, 2169, "Code",ExpressionUUID->"a5b60d5a-5222-4cce-94d6-a55faf45c974"],
Cell[CellGroupData[{
Cell[942367, 17981, 2425, 73, 220, "Code",ExpressionUUID->"1ab7f740-9d76-4563-b25f-b4771fd68594"],
Cell[944795, 18056, 38149, 914, 832, "Output",ExpressionUUID->"6e0ede3b-ce62-44f0-a200-898e7aa7345a"]
}, Open  ]],
Cell[982959, 18973, 417, 10, 93, "Code",ExpressionUUID->"51aa0a0c-0d53-462f-9044-f6caf6c78fb1"],
Cell[983379, 18985, 1298, 21, 192, "Text",ExpressionUUID->"a701f714-de62-4c3c-a86b-81330ddfdfbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[984714, 19011, 122, 1, 70, "Chapter",ExpressionUUID->"550726d6-f6e8-4b8b-9f6f-15bcb1c1f336"],
Cell[984839, 19014, 680, 11, 56, "Text",ExpressionUUID->"b0d6d391-94d1-47a9-8c74-499ffbd0b667"],
Cell[985522, 19027, 13404, 333, 1046, "Code",ExpressionUUID->"a2d3b72e-b94a-4d30-b74d-64de6106ab33"],
Cell[998929, 19362, 1955, 56, 156, "Code",ExpressionUUID->"79664507-1a56-43e4-892e-d2ce0d5bd172"],
Cell[CellGroupData[{
Cell[1000909, 19422, 1051, 29, 78, "Code",ExpressionUUID->"d83d6a56-0933-4cad-a803-84898e4902c5"],
Cell[1001963, 19453, 86101, 2132, 413, "Output",ExpressionUUID->"3314a55c-3464-4bf5-8085-3ff84b36c790"],
Cell[1088067, 21587, 159522, 2817, 1121, "Output",ExpressionUUID->"4581614b-d1bf-4610-b07f-28f610f9709a"]
}, Open  ]],
Cell[1247604, 24407, 205, 4, 45, "Code",ExpressionUUID->"148add25-5d13-4145-a30c-729bbfb6cf95"],
Cell[1247812, 24413, 1908, 27, 215, "Text",ExpressionUUID->"d827d26f-5d59-4571-b58b-e0bc7ed12fc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1249757, 24445, 130, 1, 70, "Chapter",ExpressionUUID->"6d21a7a7-a84f-4357-b230-1f92ad4ae0cc"],
Cell[1249890, 24448, 3795, 51, 487, "Text",ExpressionUUID->"28d09b69-e064-4a55-844e-a8c7626b3dd0"],
Cell[1253688, 24501, 49822, 1024, 3366, "Code",ExpressionUUID->"10bbf157-5baf-474b-9c28-6c600d10348d"],
Cell[1303513, 25527, 38834, 914, 3182, "Code",ExpressionUUID->"7b20d250-10c3-4989-a0ac-38835f16d57e"],
Cell[CellGroupData[{
Cell[1342372, 26445, 3583, 90, 220, "Code",ExpressionUUID->"6db0d547-fc6f-4cea-a2b3-c9cce6a6dbe3"],
Cell[1345958, 26537, 72539, 1796, 413, "Output",ExpressionUUID->"e87a57af-b22e-4d6f-ad0f-9ee3dea6fc81"],
Cell[1418500, 28335, 206521, 3670, 1302, "Output",ExpressionUUID->"008bcbb0-7cc5-4643-a631-6195759a0086"]
}, Open  ]],
Cell[1625036, 32008, 81, 0, 25, "Input",ExpressionUUID->"3715b4c1-62cb-43b7-92b5-adbd4b992975"],
Cell[1625120, 32010, 118, 3, 33, "Text",ExpressionUUID->"42f2e738-a743-4d1c-ba19-24a7809964e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1625287, 32019, 166, 4, 99, "Title",ExpressionUUID->"4fe85d5e-172d-4333-bc06-175f53c60bf9"],
Cell[1625456, 32025, 130, 6, 56, "Text",ExpressionUUID->"24027b9b-7c0c-4e94-ad27-c4bd3186a83d"]
}, Open  ]]
}
]
*)

