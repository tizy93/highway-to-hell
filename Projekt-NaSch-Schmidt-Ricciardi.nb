(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1841527,      35650]
NotebookOptionsPosition[   1833305,      35528]
NotebookOutlinePosition[   1833840,      35547]
CellTagsIndexPosition[   1833797,      35544]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.8999919484388504`*^9},ExpressionUUID->"9731222f-3dd8-494d-8414-\
f4eac09c0146"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The Highway to Hell",
 FontFamily->"Squealer Embossed",
 FontColor->RGBColor[
  0.9921568627450981, 0.10588235294117647`, 0.058823529411764705`]]], "Title",
 CellChangeTimes->{
  3.8993788469208927`*^9, {3.900005521429792*^9, 
   3.9000055240416956`*^9}},ExpressionUUID->"b0c631c6-253a-40ad-871d-\
8f14e949cd72"],

Cell[TextData[StyleBox["Ringstra\[SZ]e mit Hindernissen",
 FontFamily->"Squealer",
 FontColor->RGBColor[
  0.9137254901960784, 0.403921568627451, 0.18823529411764706`]]], "Subtitle",
 CellChangeTimes->{
  3.899378854608756*^9, {3.8995681771154146`*^9, 
   3.8995681817636647`*^9}},ExpressionUUID->"383bd981-cf0e-4047-95a9-\
77d5c697cc92"],

Cell[TextData[StyleBox["\nF\[UDoubleDot]r eine bessere Lesbarkeit unseres \
Projekts wird ein Download des ben\[ODoubleDot]tigten Fonts \[UDoubleDot]ber \
den Link https://www.dafontfree.co/downloads/ac-dc/ empfohlen. Hierf\
\[UDoubleDot]r muss die ZIP-Datei ausgef\[UDoubleDot]hrt und die Dateien \
\[OpenCurlyDoubleQuote]squealer embossed.ttf\[CloseCurlyDoubleQuote] und \
\[OpenCurlyDoubleQuote]squealer.ttf\[CloseCurlyDoubleQuote] installiert \
werden.\n\nDie H\[ADoubleDot]lfte der Deutschen verbringen jedes Jahr im \
Durchschnitt 40 Stunden im Stau. \nOft bilden sich diese Staus aus dem \
Nichts. Das Nagel-Schreckenberg-Modell simuliert und analysiert den Verkehr \
unfallfrei und liefert u.A. eine Erkl\[ADoubleDot]rung f\[UDoubleDot]r dieses \
Ph\[ADoubleDot]nomen. \n\nDas NaSch-Modell teilt die Stra\[SZ]e in einzelne \
Abschnitte, die entweder von einem Auto besetzt oder leer sind. Diese Zellen \
haben eine L\[ADoubleDot]nge von 7,5m. Auch die Zeitschritte in Sekunden, oft \
\"Runden\" genannt, und Geschwindigkeiten sind diskret, mit Geschwindigkeiten \
von \[UDoubleDot]blicherweise 0 bis 5. Hierbei entspricht v=0 einem stehenden \
Auto, v=1 einem Auto, das eine Zelle pro Zeitschritt, also 7,5m/s bzw. \
27km/h, f\[ADoubleDot]hrt. Somit ist die Maximalgeschwindigkeit v=5 \
umgerechnet 135km/h. ",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899378118776492*^9, 3.8993781203892965`*^9}, {
   3.8995657313297653`*^9, 3.899565765526065*^9}, {3.8995660880509744`*^9, 
   3.8995660944497905`*^9}, {3.8995663018915167`*^9, 
   3.8995663314292765`*^9}, {3.899969918587706*^9, 3.899969919926714*^9}, {
   3.8999700185225267`*^9, 3.899970045632619*^9}, {3.899970080980242*^9, 
   3.899970137951788*^9}, 
   3.90000555057899*^9},ExpressionUUID->"f8d88ff7-3677-4f4d-83d4-\
a185409464c0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.899969725345736*^9, 
  3.8999699130893517`*^9},ExpressionUUID->"72ba0917-1b06-4623-9533-\
a04bb890ba10"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["NaSch-Modell",
 FontFamily->"Squealer"]], "Chapter",
 CellChangeTimes->{{3.899970150939827*^9, 
  3.8999701520096316`*^9}},ExpressionUUID->"53a949ba-2ac9-42b2-b355-\
6ffed80ebbcd"],

Cell[TextData[StyleBox["Das Hauptmodul berechnet die Positionen, \
Geschwindigkeiten und Abst\[ADoubleDot]nde der Autos pro diskretem \
Zeitschritt, die als Runden bezeichnet werden. \nDie Autos werden \
randomisiert auf der Stra\[SZ]e erzeugt (t=0) mit zuf\[ADoubleDot]llig \
zugeteilten Geschwindigkeiten. Die Berechnungen finden in einer For-Schleife \
statt, die die Runden von i=1 bis i=tMax-1 iteriert.\nDie erste Regel R1 ist \
die Beschleunigung von jedem Auto um 1. Falls der Abstand von dem n\
\[ADoubleDot]chsten Auto kleiner als die neue Geschwindigkeit ist, wird in \
Regel R2 abgebremst. In Regel R3 wird der Verkehr randomisiert - ein Auto \
kann mit einer Tr\[ODoubleDot]delwahrscheinlichkeit p zus\[ADoubleDot]tzlich \
um 1 abbremsen, falls es nicht schon steht. Die Regel R4 aktualisiert die \
Positionen der Autos.\nDie betrachtete Stra\[SZ]e ist eine Ringstra\[SZ]e. \n\
Das Modul wird f\[UDoubleDot]r alle Plots und Betrachtungen verwendet, die \
das Nagel-Schreckenberg-Modell auf einer Spur und ohne VDR verwenden. \n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899566547537721*^9, 3.8995665713630548`*^9}, {
  3.899566779850686*^9, 3.899566826181328*^9}, {3.8995669558691783`*^9, 
  3.899566960116607*^9}, {3.8995670329007077`*^9, 3.8995670335257735`*^9}, {
  3.899567073061736*^9, 3.899567225232133*^9}, {3.8995673152344694`*^9, 
  3.899567341600696*^9}, {3.899567377858119*^9, 
  3.89956763171824*^9}},ExpressionUUID->"4a7a6bbe-853c-4efd-8367-\
c439f93b66db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Modul", " ", "Nagel"}], "-", 
    RowBox[{"Schreckenberg", " ", "Modell"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"NaSch", "[", 
    RowBox[{"nCar_", ",", "nCells_", ",", "tMax_", ",", "vMax_", ",", "p_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Eingabe", " ", "Anzahl", " ", "der", " ", "Autos", " ", "nCar"}], ",", 
      " ", 
      RowBox[{"Anzahl", " ", "der", " ", "Zellen", " ", "nCells"}], ",", " ", 
      RowBox[{"Simulationsdauer", " ", "tMax"}], ",", " ", "\n", 
      RowBox[{
      "Maximalgeschwindigkeit", " ", "vMax", " ", "und", " ", 
       "Tr\[ODoubleDot]delwahrscheinlichkeit", " ", "p", " ", "mit", " ", 
       "Funktionsaufruf"}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos", ",", "vAutos", ",", "dAutos", ",", "minAuto", ",", "maxAuto", 
       ",", "xnasch", ",", "vnasch", ",", "dnasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Listen", " ", "f\[UDoubleDot]r", " ", "x"}], ",", " ", 
       RowBox[{
       "v", " ", "und", " ", "d", " ", "f\[UDoubleDot]r", " ", "Berechnungen",
         " ", "au\[SZ]erhalb", " ", "des", " ", "Moduls"}]}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"xnasch", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"vnasch", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"dnasch", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Autos", " ", "haben", " ", "Position", " ", "x", " ", "und", " ", 
        "Geschwindigkeit", " ", "v", " ", "zum", " ", "vorderen", " ", 
        "Auto"}], "*)"}], "\n", 
      RowBox[{"xAutos", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", "nCells", "]"}], ",", "nCar"}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xnasch", ",", "xAutos"}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"erzeugt", " ", "zuf\[ADoubleDot]llige", " ", 
        RowBox[{"(", "Random", ")"}], " ", "Liste", " ", "xAutos", " ", 
        "ohne", " ", "Wiederholungen", " ", 
        RowBox[{"(", "Sample", ")"}], " ", "in", " ", "aufsteigender", " ", 
        "Reihenfolge", " ", 
        RowBox[{"(", "Sort", ")"}]}], "*)"}], "\n", 
      RowBox[{"vAutos", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", "nCar"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vnasch", ",", "vAutos"}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "ordnet", " ", "jedem", " ", "Auto", " ", "eine", " ", 
        "zuf\[ADoubleDot]llige", " ", "Geschwindigkeit", " ", "von", " ", "0",
         " ", "bis", " ", "vMax", " ", "zu"}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Einzelne", " ", "Autos", " ", "sind", " ", "gekennzeichnet", " ", 
         "durch", " ", "Element"}], "-", 
        RowBox[{
        "Position", " ", "in", " ", "der", " ", "Liste", " ", "mit", " ", 
         "Position", " ", 
         RowBox[{"xAutos", "[", 
          RowBox[{"[", "n", "]"}], "]"}], " ", "und", " ", "Geschwindigkeit", 
         " ", 
         RowBox[{"vAutos", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}]}], "*)"}], "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Verkehrsregeln", " ", "aus", " ", "NaSch"}], "-", 
        RowBox[{"Modell", " ", "implementieren"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", "tMax"}], ",", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Schleife", " ", "der", " ", "Runden", " ", "bis", " ", "tMax"}], 
          ",", " ", 
          RowBox[{
           RowBox[{
           "Anfangsposition", " ", "au\[SZ]erhalb", " ", "Schleife", " ", 
            "ist", " ", "t"}], "=", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"deshalb", " ", "bis", " ", "t"}], "=", 
           RowBox[{"tMax", "-", "1"}]}], ",", " ", 
          RowBox[{
           RowBox[{"sodass", " ", "Anzahl", " ", "Runden"}], " ", "=", " ", 
           "tMax"}]}], "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Oft", " ", "verwendete", " ", "Variablen"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"minAuto", "=", 
          RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto", "=", 
          RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "xAutos", "]"}], ">", "1"}], ",", "\n", 
           RowBox[{"(", 
            RowBox[{"(*", 
             RowBox[{
             "Freie", " ", "Zellen", " ", "d", " ", "vor", " ", "dem", " ", 
              "Auto", " ", "bis", " ", "zum", " ", "vorderen"}], "*)"}], "\n", 
            RowBox[{
             RowBox[{"dAutos", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"In", " ", "Schleife"}], ",", " ", 
               RowBox[{"damit", " ", "es", " ", "geupdatet", " ", "wird"}]}], 
              "*)"}], "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "berechnet", " ", "freie", " ", "Zellen", " ", "zum", " ", 
                "vorderen", " ", "Auto", " ", "normal", " ", "au\[SZ]er", " ",
                 "f\[UDoubleDot]r", " ", "Autos", " ", "au\[SZ]er", " ", 
                "dem", " ", "mit", " ", "h\[ODoubleDot]chster", " ", 
                "Positition"}], " ", "-", " ", 
               RowBox[{
               "da", " ", "Ringstra\[SZ]e", " ", "sind", " ", "die", " ", 
                "freien", " ", "Zellen", " ", "geringer", " ", "als", " ", 
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "-", 
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], "*)"}], "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "Arrays", " ", "starten", " ", "mit", " ", "Element", " ", 
                "1"}], ";", " ", 
               RowBox[{"n", "+", 
                RowBox[{
                "1", " ", "muss", " ", "f\[UDoubleDot]r", " ", "das", " ", 
                 "letzte", " ", "gleich", " ", "nCar", " ", "sein"}]}]}], 
              "*)"}], "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
                 RowBox[{
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos", "[", 
                   RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", 
                  "1"}]}], "]"}]}], "]"}], ";"}], "\n", 
            RowBox[{"(*", 
             RowBox[{
             "Abstand", " ", "des", " ", "Autos", " ", "an", " ", "letzter", 
              " ", "Stelle", " ", "in", " ", "Liste", " ", "zum", " ", 
              "ersten", " ", "wird", " ", "angeh\[ADoubleDot]ngt"}], "*)"}], 
            ")"}], ",", "\n", 
           RowBox[{
            RowBox[{"dAutos", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}]}], "\n", "]"}], 
         ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R1", ":", " ", "Beschleunigen"}], ",", " ", 
           RowBox[{
           "falls", " ", "vMax", " ", "noch", " ", "nicht", " ", 
            "erreicht"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R2", ":", " ", "Abbremsen"}], ",", " ", 
           RowBox[{
           "falls", " ", "v", " ", "gr\[ODoubleDot]\[SZ]er", " ", "als", " ", 
            "Abstand", " ", "d"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"dAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"vAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", " ", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{"R3", ":", " ", 
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "mit", " ", "Wahrscheinlichkeit", " ", 
            "p"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vAutos", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", "0"}], 
                "]"}]}], ",", 
              RowBox[{"vAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "solange", " ", "noch", " ", "nicht", 
            " ", "v"}], "=", "0"}], "*)"}], "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Falls", " ", "zuf\[ADoubleDot]llige", " ", "Zahl", " ", "nicht", 
            " ", "im", " ", "gegebenen", " ", "Intervall"}], ",", " ", 
           RowBox[{"bleibt", " ", "v", " ", "gleich"}]}], "*)"}], "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"R4", ":", " ", 
           RowBox[{"Fahren", " ", "um", " ", "vAutos", " ", "Zellen"}]}], 
          "*)"}], "\n", 
         RowBox[{"xAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Falls", " ", "Autos", " ", "au\[SZ]erhalb", " ", "Zellen", " ", 
            "bewegt"}], ",", " ", 
           RowBox[{
           "wird", " ", "Bewegung", " ", "in", " ", "erster", " ", "Zelle", 
            " ", "fortgesetzt"}], ",", " ", 
           RowBox[{"da", " ", "Ringstra\[SZ]e"}]}], "*)"}], "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Aktualisieren", " ", "der", " ", "Positionen", " ", "nicht", " ", 
            "anhand", " ", "Verschieben", " ", "der", " ", "Autos", " ", 
            "innerhalb", " ", "der", " ", "Liste"}], ",", " ", 
           RowBox[{
           "sondern", " ", "durch", " ", "Ver\[ADoubleDot]ndern", " ", "der", 
            " ", "Eintr\[ADoubleDot]ge", " ", "in", " ", "xAutos"}]}], "*)"}],
          "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"Abspeichern", " ", "in", " ", "Variablen"}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xnasch", ",", "xAutos"}], "]"}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vnasch", ",", "vAutos"}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Letzter", " ", "Durchlauf", " ", "der", " ", "Schleife", " ", 
            "speichert", " ", "vorletzten", " ", "Abstand", " ", "ab"}], ",", 
           " ", 
           RowBox[{
           "deshalb", " ", "au\[SZ]erhalb", " ", "Schleife", " ", "letztes", 
            " ", "Element", " ", "abspeichern"}]}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dnasch", ",", "dAutos"}], "]"}], ";"}]}], "\n", "]"}], ";",
       "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Erneute", " ", "Berechnung", " ", "f\[UDoubleDot]r", " ", 
        "Endposition"}], "*)"}], "\n", 
      RowBox[{"minAuto", "=", 
       RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
      RowBox[{"maxAuto", "=", 
       RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Berechnen", " ", "Abst\[ADoubleDot]nde", " ", "im", " ", "letzten", 
        " ", "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"dAutos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", 
              RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
           RowBox[{"nCells", "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dAutos", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"nCells", "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
         "]"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "in", " ", "dnasch"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dnasch", ",", "dAutos"}], "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"xnasch", ",", "vnasch", ",", "dnasch"}], "}"}], "]"}]}]}], 
    "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995673020787754`*^9, {3.8999706595232134`*^9, 3.8999706724424915`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e3426614-f7d5-42a5-9a25-baf88eb424d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nasch100", "=", 
   RowBox[{"NaSch", "[", 
    RowBox[{"100", ",", "300", ",", "100", ",", "5", ",", "0.15"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.8998870972535305`*^9, 3.8998870983699684`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"90a6f162-a31c-489c-8ac1-50e57a6eccab"],

Cell[TextData[StyleBox[" Die Daten aus dem ersten Aufruf werden \
f\[UDoubleDot]r alle Plots, die die gleichen Eingabeparameter (100 Autos, 300 \
Zellen, 100 Runden, vMax=5 und p=0.15) fordern, verwendet. ",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{
  3.8995676775949755`*^9, {3.8995677571863747`*^9, 3.8995678542542644`*^9}, {
   3.8995684921013966`*^9, 3.8995684943893566`*^9}, {3.9000053984922123`*^9, 
   3.9000053992268043`*^9}, {3.90000542942973*^9, 3.900005432538332*^9}, {
   3.900005503303096*^9, 
   3.90000550933465*^9}},ExpressionUUID->"a477ff40-7d59-4ef6-868d-\
9299dadb2a90"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9000054491910553`*^9, 
  3.9000054513031015`*^9}},ExpressionUUID->"40a03ba5-8a9b-4b1d-9b2f-\
521043423f61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Grafische Darstellung der Stra\[SZ]e",
 FontFamily->"Squealer",
 FontColor->RGBColor[1., 1., 1.]]], "Chapter",
 CellChangeTimes->{{3.9000054617035713`*^9, 
  3.9000054906340957`*^9}},ExpressionUUID->"df572e4e-a503-4ad4-a92e-\
cec77a4508fe"],

Cell[TextData[StyleBox["Das Modul densityplot stellt die Stra\[SZ]e \
\[UDoubleDot]ber die Zeit grafisch dar mit besetzte Zellen in hell und leere \
Zellen in dunkelrot.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{
  3.9000055056258497`*^9},ExpressionUUID->"49511451-208e-4a3f-88a0-\
80cb1726d87a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"F\[UDoubleDot]r", " ", "NaSch"}], "-", 
     RowBox[{"Modell", " ", "ohne", " ", "VDR", " ", "q"}]}], "=", "0"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"densityplot", "[", 
    RowBox[{"Modell_", ",", "nCar_", ",", "p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "strasse", ",", "newstrasse", 
       ",", "listdensityplot", ",", "nasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder", 
        " ", "vdr"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"p", "==", "0.15"}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"!", 
             RowBox[{"nCar", "==", "100"}]}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"nCar", "==", "100"}]}], ",", 
           RowBox[{"nasch100", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
         RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
         RowBox[{
          RowBox[{"vdrNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
            "q"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Sortierte", " ", "Liste", " ", "der", " ", "Stra\[SZ]e", " ", "mit", 
        " ", "leeren", " ", "Zellen", " ", "als", " ", "0", " ", "und", " ", 
        "besetzt", " ", "als", " ", "1"}], "*)"}], "\n", 
      RowBox[{"strasse", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"nasch", "[", 
                 RowBox[{"[", "m", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"#", "==", "n"}], " ", "&"}]}], "]"}], "==", 
              RowBox[{"{", "}"}]}], ",", "0", ",", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "nCells"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "tMax"}], "}"}]}], "]"}]}], ";", " ", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Anpassen", " ", "strasse", " ", "sodass", " ", "t", " ", "in", " ", 
         "positive", " ", "x"}], "-", 
        RowBox[{
        "Richtung", " ", "l\[ADoubleDot]uft", " ", "statt", " ", "in", " ", 
         "positiver", " ", "y"}], "-", "Richtung"}], "*)"}], "\n", 
      RowBox[{"newstrasse", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"strasse", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "m"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "tMax"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "nCells"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", "ListDensityPlot", "*)"}], "\n", 
      RowBox[{"listdensityplot", "=", 
       RowBox[{"ListDensityPlot", "[", 
        RowBox[{"newstrasse", ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Zellen der Stra\[SZ]e\>\""}], 
           "}"}]}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}], ",", 
         RowBox[{"PlotLegends", "->", "Automatic"}], ",", "\n", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Grafische Darstellung der Stra\[SZ]e mit \>\"", "<>", 
           RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
           "\"\< Autos und p=\>\"", "<>", 
           RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
         RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", "\n", 
         RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Return", "[", "listdensityplot", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8995677453313117`*^9, 3.899567752214223*^9}, {
  3.8995697812464123`*^9, 3.899569797604559*^9}, {3.8998877497262297`*^9, 
  3.899887749809182*^9}, {3.8998969626436615`*^9, 3.8998969634230742`*^9}, {
  3.8999711709708524`*^9, 3.89997121106734*^9}, {3.8999743094296584`*^9, 
  3.8999743183426924`*^9}, {3.899974348700609*^9, 
  3.8999743527314997`*^9}},ExpressionUUID->"c58cf939-98c7-4afb-a201-\
1563e4c89ee2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listdensityplot", "=", 
   RowBox[{"densityplot", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", "100", ",", "0.15", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", "listdensityplot", "]"}]}], "Code",
 CellChangeTimes->{{3.8995700116057653`*^9, 3.8995700196939697`*^9}, {
  3.899887168093458*^9, 3.89988719889568*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8f730bb1-ce7e-41a0-9ceb-a0ab97259352"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
x+mPyXH6Y3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8m
x+mPLy+4cOP0x8zjwo3THzOPCzdOf8w8Ltw4/THzuHDj9MfM48KN0x8zjws3
Tn/MPC7cOP0x87hw4/THePpj/j0z/THexwf4EB/hY3yCT/EZPscX2N/Z83eT
/B2MDb7Bt/gOb7HPefvcns9h+L1avyfl3ds7hp9LuWfYG/5ddl04/TE5Tn9M
jtMfk+P0x+Q4/TE5Tn9MjtMfk+P0x+Q4/TE5Tn9MjtMfk+P0x+Q4/TE5Tn9M
jtMfk+P0x5cXXLhx+mPmceHG6Y+Zx4Ubpz9mHhdunP6YeVy4cfpj5nHhxumP
mceFG6c/Zh4Xbpz+mHlcuHH6Yzz9Mf8emf4Y7+MDfIiP8DE+waf4DJ/jC+zv
svo7e/5u0gbf4Ft8h7fY94L4nLfP7fkcht+r9XtS3r29Y/i5lHuGvcHf8p//
F3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8mx+mPyXH6Y3Kc/pgcpz8mx+mPyXH6
Y3Kc/pgcpz8mx+mPLy+4cOP0x8zjwo3THzOPCzdOf8w8Ltw4/THzuHDj9MfM
48KN0x8zjws3Tn/MPC7cOP0x87hw4/TH+Ks/8u+Rr/6I9/EBPsRH+Bif4FN8
hs/xBfZ3vP1dVn9nb4Nv8C2+w1vse6R8L4jPefvcns9h+L1avyfl3ds7hp9L
uWfQG/6d/sg/x9MfyfH0R3I8/ZEcT38kx9MfyfH0R3I8/ZEcT38kx9MfyfH0
R3I8/ZEcT38kx9MfyfH0R3I8/TFecOHG0x+Zx4UbT39kHhduPP2ReVy48fRH
5nHhxtMfmceFG09/ZB4Xbjz9kXlcuPH0R+Zx4cbTH/HsH/PfmV/9Ee/jA3yI
j/AxPsGn+Ayf4wt8if0db3+XdYNv8C2+w1t8j32PlO8F8Tlvn9vzOQy/V+v3
pLx7e8fwc6mVnkjO3/KffyPH2T8mx9k/JsfZPybH2T8mx9k/JsfZPybH2T8m
x9k/JsfZPybH2T8mx9k/JsfZPybH2T8mx9k/vrzgwo2zf8w8Ltw4+8fM48KN
s3/MPC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2zf8w8Ltw4+8fM48KNs3+MZ/+g
P+J9fIAP8RE+xif4FJ/hc3yBL/EV9ne8N/gG3+I7vMX3+AH7Hqkn7HPePrfn
cxh+r9bvSXn39o6xslfYE7XyN/sH/ZH8X8hx9g/6I/m/kuPsH/RH8n8jx9k/
6I/kfyPH2T/oj+R/J8fZP+iP5P8gx9k/6I/k/yTH2T/oj/zvcePsH/RH5nHj
7B/0R+Zx4+wf9EfmcePsH/RH5nHj7B/0R+Zx4+wf9EfmcePsH/RH5nHj7B/0
R+Zx4+wf9Ef+u3L2j/E+PsCH+Agf4xN8is/wOb7Al/gKX+MNvsG3+A5v8T1+
wI/4CfteEJ/z9rk9n8Pwe7V+T8q798rnUO4V9kRy/pb//F/IcfaPyXH2j8lx
9o/JcfaPyXH2j8lx9o/JcfaPyXH2j8lx9o/JcfaPyXH2j8lx9o/JcfaPLy+4
cOPsHzOPCzfO/jHzuHDj7B8zjws3zv4x87hw4+wfM48LN87+MfO4cOPsHzOP
CzfO/jHzuHDj7B/j2T/Gs3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/ANvsV3
eIvv8QN+xE/Y90j5XhCf8/a5PZ/D8Hu1fk9q2bV3jOwfk2N7w7/ZP+af4+wf
k+PsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+PsH5Pj7B+T
4+wfX15w4cbZP2YeF26c/WPmceHG2T9mHhdunP1j5nHhxtk/Zh4Xbpz9Y+Zx
4cbZP2YeF26c/WPmceHG2T/Gs3/Mfyd+9Ue8jw/wIT7Cx/gEn+IzfI4v8CW+
wtd4g2/wLb7DW3yPH/AjfsK+d9D3SPleEJ/z9rk9n8Pwe7XLrr17Z//wcyf3
CHvhX/76b/nPv5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+Ps
H5Pj7B+T4+wfk+PsH19ecOHG2T9mHhdunP1j5nHhxtk/Zh4Xbpz9Y+Zx4cbZ
P2YeF26c/WPmceHG2T9mHhdunP1j5nHhxtk/xrN/0B/xPj7Ah/gIH+MTfIrP
8Dm+wJf4Cl/jDb7Bt/gOb/E9fsCP+An7nlrfO+h7pHwviM95+9yez2Esu/Z7
Utk/6I/k38ixveHf7B/0R/J/JcfZP+iP5P9GjrN/0B/J/0aOs3/QH8n/To6z
f9Afyf9BjrN/0B/J/0mOs3/QH/nf48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZ
P+iPzOPG2T/oj8zjxtk/6I/M48bZP+iPzOPG2T/oj8zjxtk/6I/8d+HsH+N9
fIAP8RE+xif4FJ/hc3yBL/EVvsYbfINv8R3e4nv8gB/xE/a95r6n1vcO+h4p
3wvic94+t7fs2u/VZv/wru2dws+d3CPshe9//bf85/9KjrN/TI6zf0yOs39M
jrN/TI6zf0yOs39MjrN/TI6zf0yOs39MjrN/TI6zf3x5wYUbZ/+YeVy4cfaP
mceFG2f/mHlcuHH2j5nHhRtn/5h5XLhx9o+Zx4UbZ/+YeVy4cfaPmceFG2f/
GM/+QX/E+/gAH+IjfIxP8Ck+w+f4Al/iK3yNN/gG3+I7vMX3+AE/4ifs72D4
XnPfU+t7B32PlO8F8TnvZdc+h5H9g/5I/o0cZ/+gP+yJWvmb/YP+SP6DHGf/
oD+S/yTH2T/oj+S/yHH2D/oj+W9ynP2D/kj+BznO/kF/JP9z1wsu3Dj7B/2R
edw4+wf9kXncOPsH/ZF53Dj7B/2Redw4+wf9kXncOPsH/ZF53Dj7B/2Redw4
+wf9kXncOPsH/ZH/7pv9Y7yPD/AhPsLH+ASf4jN8ji/wJb7C13iDb/AtvsNb
fI8f8CN+wv5ukr+D4XvNfU+t7x30PVK+F2TZtc/tZf/we7N+D8q7tncKP3dy
j7AX/vWv/5b//Ac5zv4xOc7+MTnO/jE5zv4xOc7+MTnO/jE5zv4xOc7+MTnO
/jE5zv7x5QUXbpz9Y+Zx4cbZP2YeF26c/WPmceHG2T9mHhdunP1j5nHhxtk/
Zh4Xbpz9Y+Zx4cbZP2YeF26c/WM8+wf9Ee/jA3yIj/AxPsGn+Ayf4wt8ia/w
Nd7gG3yL7/AW3+MH/IifsL+z5+8m+TsYvtfc99T63kHfI7Xs2ue8s3/QH8m/
kePsH/RH8pW9wp6olb/ZP+iP5P9GjrN/0B/J/0aOs3/QH8n/To6zf9Afyf9B
jrN/0B/J/0mOs3/QH/nf48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZP+iPzOPG
2T/oj8zjxtk/6I/M48bZP+iPzOPG2T/oj8zjxtk/6I/8d93sH+N9fIAP8RE+
xif4FJ/hc3yBL/EVvsYbfINv8R3e4nv8gB/xE/Z3Wf2dPX83yd/B8L3mvqfW
9w4uu/a9INk/fC7P5yz83qzfg/Ku7Z3Cz53cI+yFH3/9t/zn/0aOs39MjrN/
TI6zf0yOs39MjrN/TI6zf0yOs39MjrN/TI6zf3x5wYUbZ/+YeVy4cfaPmceF
G2f/mHlcuHH2j5nHhRtn/5h5XLhx9o+Zx4UbZ/+YeVy4cfaPmceFG2f/GM/+
QX/E+/gAH+IjfIxP8Ck+w+f4Al/iK3yNN/gG3+I7vMX3+AE/4ifs73j7u6z+
zp6/m+TvYPhec99Tu+za90hl/6A/kn8jx9k/6I/kK3eL5Ct7hT1RK3+zf9Af
yX+S4+wf9EfyX+Q4+wf9kfw3Oc7+QX8k/4McZ/+gP5L/uesFF26c/YP+yDxu
nP2D/sg8bpz9g/7IPG6c/YP+yDxunP2D/sg8bpz9g/7IPG6c/YP+yDxunP2D
/sg8bpz9g/7If7fN/jHexwf4EB/hY3yCT/EZPscX+BJf4Wu8wTf4Ft/hLb7H
D/gRP+Fn7O94+7us/s6ev5vk72D4XvNl1753MPuH7/3wOW6fy/M5C7836/eg
vGt7p/BzJ/cIe+Hf/vpv+c9/kuPsH5Pj7B+T4+wfk+PsH5Pj7B+T4+wfk+Ps
H5Pj7B9fXnDhxtk/Zh4Xbpz9Y+Zx4cbZP2YeF26c/WPmceHG2T9mHhdunP1j
5nHhxtk/Zh4Xbpz9Y+Zx4cbZP8azf9Af8T4+wIf4CB/jE3yKz/A5vsCX+Apf
4w2+wbf4Dm/xPX7Aj/gJP+MX7O94+7us/s6ev5vk72Asu/Y9tdk/6I/k38hx
9g/6I/nK96KSr9wtkq/sFfZErfzN/kF/JP8bOc7+QX8k/zs5zv5BfyT/BznO
/kF/JP8nOc7+QX/kf48bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/
oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/8t9ls3+M9/EBPsRH+Bif
4FN8hs/xBb7EV/gab/ANvsV3eIvv8QN+xE/4Gb/gV+zvePu7rP7Onr+btOza
95pn//C9gr4nyvd++By3z+X5nIXfm/V7UN61vVP4uZN7hL3w86//lv/8b+Q4
+8fkOPvH5Dj7x+Q4+8fkOPvH5Dj7x+Q4+8eXF1y4cfaPmceFG2f/mHlcuHH2
j5nHhRtn/5h5XLhx9o+Zx4UbZ/+YeVy4cfaPmceFG2f/mHlcuHH2j/HsH/RH
vI8P8CE+wsf4BJ/iM3yOL/AlvsLXeINv8C2+w1t8jx/wI37Cz/gFv+I37O94
+7us/s7esmt/ByP7B/2R/Bs5zv5BfyRfee4i+cr3opKv3C2Sr+wV9kSt/M3+
QX8k/0WOs3/QH8l/k+PsH/RH8j/IcfYP+iP5n7tecOHG2T/oj8zjxtk/6I/M
48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZP+iPzOPG2T/oj8zjxtk/6I/M48bZ
P+iP/HfX7B/jfXyAD/ERPsYn+BSf4XN8gS/xFb7GG3yDb/Ed3uJ7/IAf8RN+
xi/4Fb/hd+zvePu7rMuu/d2k7B++t9z30PpeQd8T5Xs/fI7b5/J8zsLvzfo9
KO/a3in83Mk9wl7421//Lf/5L3Kc/WNynP1jcpz9Y3Kc/WNynP1jcpz948sL
Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2zf8w8Ltw4+8fM
48KNs3/MPC7cOPvHePYP+iPexwf4EB/hY3yCT/EZPscX+BJf4Wu8wTf4Ft/h
Lb7HD/gRP+Fn/IJf8Rt+xx/Y3/Fedu3v7GX/oD+SfyPH2T/oj+Qrz3UnX3nu
IvnK96KSr9wtkq/sFfZErfzN/kF/JP87Oc7+QX8k/wc5zv5BfyT/JznO/kF/
5H+PG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKP
G2f/oD8yjxtn/6A/Mo8bZ/+gP/LfVbN/jPfxAT7ER/gYn+BTfIbP8QW+xFf4
Gm/wDb7Fd3iL7/EDfsRP+Bm/4Ff8ht/xB/7Ey679XdbsH/4ukr9z4XvLfQ+t
7xX0PVG+98PnuH0uz+cs/N6s34Pyru2dws+d3CPshV9//bf8538nx9k/JsfZ
PybH2T8mx9k/JsfZP7684MKNs3/MPC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2z
f8w8Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/jGf/oD/ifXyAD/ERPsYn+BSf
4XN8gS/xFb7GG3yDb/Ed3uJ7/IAf8RN+xi/4Fb/hd/yBP/Gya3/HO/sH/ZH8
GznO/kF/JF95b1Tylee6k688d5F85XtRyVfuFslX9gp7olb+Zv+gP5L/JsfZ
P+iP5H+Q4+wf9EfyP3e94MKNs3/QH5nHjbN/0B+Zx42zf9AfmceNs3/QH5nH
jbN/0B+Zx42zf9AfmceNs3/QH5nHjbN/0B+Zx42zf9Af+e+m2T/G+/gAH+Ij
fIxP8Ck+w+f4Al/iK3yNN/gG3+I7vMX3+AE/4if8jF/wK37D7/gDf+Jl14Wz
f/i7q/6Onr+L5O9c+N5y30PrewV9T5Tv/fA5bp/L8zkLvzfr96C8a3un8HMn
9wh74e9//bf857/JcfaPyXH2j8lx9o/JcfaPLy+4cOPsHzOPCzfO/jHzuHDj
7B8zjws3zv4x87hw4+wfM48LN87+MfO4cOPsHzOPCzfO/jHzuHDj7B/j2T/o
j3gfH+BDfISP8Qk+xWf4HF/gS3yFr/EG3+BbfIe3+B4/4Ef8hJ/xC37Fb/gd
f+BPvOy6cPYP+iP5N3Kc/YP+SL7yXtrkK++NSr7yXHfylecukq98Lyr5yt0i
+cpeYU/Uyt/sH/RH8n+Q4+wf9Efyf5Lj7B/0R/73uHH2D/oj87hx9g/6I/O4
cfYP+iPzuHH2D/oj87hx9g/6I/O4cfYP+iPzuHH2D/oj87hx9g/6I/O4cfYP
+iP/XTT7x3gfH+BDfISP8Qk+xWf4HF/gS3yFr/EG3+BbfIe3+B4/4Ef8hJ/x
C37Fb/gdf+BPvOy6cPaPyXH2D3931d/R83eR/J0L31vue2h9r6DvifK9Hz7H
7XN5Pmfh92b9HpR3be8Ufu7kHmEv/P7rv+U//wc5zv4xOc7+MTnO/vHlBRdu
nP1j5nHhxtk/Zh4Xbpz9Y+Zx4cbZP2YeF26c/WPmceHG2T9mHhdunP1j5nHh
xtk/Zh4Xbpz9Yzz7B/0R7+MDfIiP8DE+waf4DJ/jC3yJr/A13uAbfIvv8Bbf
4wf8iJ/wM37Br/gNv+MP/ImXXRfO/kF/JP9GjrN/0B/JV373IvnKe2mTr7w3
KvnKc93JV567SL7yvajkK3eL5Ct7hT1RK3+zf9Afyf8gx9k/6I/kf+56wYUb
Z/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+g
PzKPG2f/oD8yjxtn/6A/8t89s3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/AN
vsV3eIvv8QN+xE/4Gb/gV/yG3/EH/sTLrgtn/5gcZ/+YHGf/8HdX/R09fxfJ
37nwveW+h9b3CvqeKN/74XPcPpfncxZ+b9bvQXnX9k7h507uEfbCP/76b/nP
/yDH2T8mx9k/vrzgwo2zf8w8Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/zDwu
3Dj7x8zjwo2zf8w8Ltw4+8fM48KNs3+MZ/+gP+J9fIAP8RE+xif4FJ/hc3yB
L/EVvsYbfINv8R3e4nv8gB/xE37GL/gVv+F3/IE/8bLrwtk/6I/k38hx9g/6
I/nK7+olX/ndi+Qr76VNvvLeqOQrz3UnX3nuIvnK96KSr9wtkq/sFfZErfzN
/kF/JP8nOc7+QX/kf48bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/
oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/8t81s3+M9/EBPsRH+Bif
4FN8hs/xBb7EV/gab/ANvsV3eIvv8QN+xE/4Gb/gV/yG3/EH/sTLrgtn/5gc
Z/+YHGf/mBxn//B3V/0dPX8Xyd+58L3lvofW9wr6nijf++Fz3D6X53MWfm/W
70F51/ZO4edO7hH2wh9//bf85/8kx9k/vrzgwo2zf8w8Ltw4+8fM48KNs3/M
PC7cOPvHzOPCjbN/zDwu3Dj7x8zjwo2zf8w8Ltw4+8fM48KNs3+MZ/+gP+J9
fIAP8RE+xif4FJ/hc3yBL/EVvsYbfINv8R3e4nv8gB/xE37GL/gVv+F3/IE/
8bLrwtk/6I/k38hx9g/6I/nK73YnX/ldveQrv3uRfOW9tMlX3huVfOW57uQr
z10kX/leVPKVu0Xylb3CnqiVv9k/6I/kf+56wYUbZ/+gPzKPG2f/oD8yjxtn
/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/
8t8ts3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/ANvsV3eIvv8QN+xE/4Gb/g
V/yG3/EH/sTLrgtn/5gcZ/+YHGf/mBxn/5gcZ//wd1f9HT1/F8nfufC95b6H
1vcK+p4o3/vhc9w+l+dzFn5v1u9Bedf2TuHnTu4R9sI///pv+c//3PWCCzfO
/jHzuHDj7B8zjws3zv4x87hw4+wfM48LN87+MfO4cOPsHzOPCzfO/jHzuHDj
7B8zjws3zv4xnv2D/oj38QE+xEf4GJ/gU3yGz/EFvsRX+Bpv8A2+xXd4i+/x
A37ET/gZv+BX/Ibf8Qf+xMuuC2f/oD+SfyPH2T/oj+TfyXH2D/oj+crv6iVf
+d2L5CvvpU2+8t6o5CvPdSdfee4i+cr3opKv3C2Sr+wV9kSt/M3+QX/kf4cb
Z/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+gPzKPG2f/oD8yjxtn/6A/Mo8bZ/+g
PzKPG2f/oD8yjxtn/6A/8t8ls3+M9/EBPsRH+Bif4FN8hs/xBb7EV/gab/AN
vsV3eIvv8QN+xE/4Gb/gV/yG3/EH/sTLrgtn/5gcZ/+YHGf/mBxn/5gcZ/+Y
HGf/mBxn/5gcZ/+YHGf/8L2BvgfK93r4nLbP3fkchd+L9XtO3q29Q/i5knuC
/97/86//LrhwO/dfd73gwo2zf8w8Ltw4+8fM48KNs3/MPC7cOPvHzOPCjbN/
zDwu3Dj7x8zjwo2zf8w8Ltw4+8f4qz/y/x199Ue8jw/wIT7Cx/gEn+IzfI4v
8CW+wtd4g2/wLb7DW3yPH/AjfsLP+AW/4jf8jj/wJ152XXj6Izme/kiOpz+S
4+mP5Hj6Izme/kiOpz+S4+mP5Hj6Izme/kiO814I+iP5ynMXyVe+F5V85W6R
fGWvsCeWlb+FG09/ZA4Xbjz9kXlcuPH0R+Zx4cbTH5nHhRtPf2QeF248/ZF5
XLjx9EfmceHG0x+Zx4UbT3/E8/kV/RHv4wN8iI/wMT7Bp/gMn+MLfImv8DXe
4Bt8i+/wFt/jB/yIn/AzfsGv+A2/4w/8iZddF87nV/RH8m/kOJ9f0R/Jv5Pj
fH5FfyT/QY7z+RX9kXzld5KSr7zHPPnKewaTr7wHJPnKc3rJV75Hm3zlzp18
5XOo5Cs9USt/G+fzK/ojc7hxPr+iPzKPG+fzK/oj87hxPr+iPzKPG+fzK/oj
87hxPr+iPzKPG+fzK/oj87hxPr+iPzKPG+fzK/pj/r+T6Y94Hx/gQ3yEj/EJ
PsVn+Bxf4Et8ha/xBt/gW3yHt/geP+BH/ISf8Qt+xW/4HX/gT7zsuvD0R3I8
/ZEcT38kx9MfyfH0R3I8/ZEcT38kx9MfyfH0R3I8/ZEc571z9Efylee6k688
d5F85XtRyVfuFsnphQXbG/6d/sg8Ltx4+iPzuHDj6Y/M48KNpz8yjws3nv7I
PC7cePoj87hw4+mPzOPCjac/Mo8LN57+iOf+MZ9Tzv1jvI8P8CE+wsf4BJ/i
M3yOL/AlvsLXeINv8C2+w1t8jx/wI37Cz/gFv+I3/I4/8Cdedl0494/Jce4f
k+PcPybHuX9MjnP/mBzn/jE5zv1jcpz7x+Q494/Jce4fvpfc98z63kDfA+V7
PXxO2+fufI7C78X6PSfv1t4h/FzJPcF/7//Xv/674MLt3L/vesGFG+f+MfO4
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
xCv8iJ/wM17jDd7iHd7jAz7iE37BZ/yK3/AFX/Fw64bz/kF/JH8nx3n/oD+S
f5DjvH/QH8k/yXHeP+iP5F/kOO8f9Efyb3Kc9w/6I/kPOc77B/2R/Jcc5/2D
/kj+d+sBN1w47x/0R+5x4bx/0B+5x4Xz/kF/5B4XzvsH/ZF7XDjvH/RH7nHh
vH/QH7nHhfP+QX/kHhfO+wf9kXtcOO8f9EfRH/EIj/EE3+F7PMUz/IDneIGX
eIUf8RN+xmu8wVu8w3t8wEd8wi/4jF/xG77gKx5u3XDeP+iP5O/kOO8f9Efy
D3Kc9w/6I/knOc77B/2R/Isc5/2D/kj+TY7z/kF/JP8hx3n/oD+S/5LjvH/Q
H8n/bj3ghgvn/YP+yD0unPcP+iP3uHDeP+iP3OPCef+gP3KPC+f9g/7IPS6c
9w/6I/e4cN4/6I/c48J5/6A/co8L5/2D/vjPf/1zf//oHuExnuA7fI+neIYf
8Bwv8BKv8CN+ws94jTd4i3d4jw/4iE/4BZ/xK37DF3zFw60bzvtHz3HeP3qO
8/7Rc5z3j57jvH/0HOf9o+c47x89x3n/6DnO+0fPcd4/eo7z/tFznPePnuO8
f/Qc5/2j5zjvHz3Hef/45wE3XDjvH/0eN1w47x/9HjdcOO8f/R43XDjvH/0e
N1w47x/9HjdcOO8f/R43XDjvH/0eN1w47x/9HjdcOO8f3f/6Y0p/xCM8xhN8
h+/xFM/wA57jBV7iFX7ET/gZr/EGb/EO7/EBH/EJv+AzfsVv+IKveLh1w70/
kuPeH8lx74/kuPdHctz7Iznu/ZEc9/5Ijnt/JMe9P5Lj3h/Jce+P5Lj3R3Lc
+yM57v2RHPf+SI57f3QPuOHCvT9yjxsu3Psj97jhwr0/co8bLtz7I/e44cK9
P3KPGy7c+yP3uOHCvT9yjxsu3Psj97jhwr0/4v5+Tn/EIzzGE3yH7/EUz/AD
nuMFXuIVfsRP+Bmv8QZv8Q7v8QEf8Qm/4DN+xW/4gq94uHXDeT+nP5K/k+O8
n9MfyT/Icd7P6Y/kn+Q47+f0R/Ivcpz3c/oj+Tc5zvs5/ZH8hxzn/Zz+SP5L
jvN+Tn8k/7v1gBsunPdz+iP3uHDez+mP3OPCeT+nP3KPC+f9nP7IPS6c93P6
I/e4cN7P6Y/c48J5P6c/co8L5/2c/sg9Lpz3c/rjv+iPeITHeILv8D2e4hl+
wHO8wEu8wo/4CT/jNd7gLd7hPT7gIz7hF3zGr/gNX/AVD7duuPdHctz7Iznu
/ZEc9/5Ijnt/JMe9P5Lj3h/Jce+P5Lj3R3Lc+yM57v2RHPf+SI57fyTHvT+S
494fyXHvj+4BN1y490fuccOFe3/kHjdcuPdH7nHDhXt/5B43XLj3R+5xw4V7
f+QeN1y490fuccOFe3/kHjdcuPdH3L+/oj/iER7jCb7D93iKZ/gBz/ECL/EK
P+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83LrhfH9FfyR/J8f5/or+SP5B
jvP9Ff2R/JMc5/sr+iP5FznO91f0R/Jvcpzvr+iP5D/kON9f0R/Jf8lxvr+i
P5L/3XrADRfO91f0R+5x4Xx/RX/kHhfO91f0R+5x4Xx/RX/kHhfO91f0R+5x
4Xx/RX/kHhfO91f0R+5x4Xx/RX/kHhfO91f0x3/TH/EIj/EE3+F7PMUz/IDn
eIGXeIUf8RN+xmu8wVu8w3t8wEd8wi/4jF/xG77gKx5u3XDvj+S490dy3Psj
Oe79kRz3/kiOe38kx70/kuPeH8lx74/kuPdHctz7Iznu/ZEc9/5Ijnt/JMe9
P5Lj3h/dA264cO+P3OOGC/f+yD1uuHDvj9zjhgv3/sg9brhw74/c44YL9/7I
PW64cO+P3OOGC/f+yD1uuHDvj7h/v0t/xCM8xhN8h+/xFM/wA57jBV7iFX7E
T/gZr/EGb/EO7/EBH/EJv+AzfsVv+IKveLh1w/l+l/5I/k6O8/0u/ZH8gxzn
+136I/knOc73u/RH8i9ynO936Y/k3+Q43+/SH8l/yHG+36U/kv+S43y/S38k
/7v1gBsunO936Y/c48L5fpf+yD0unO936Y/c48L5fpf+yD0unO936Y/c48L5
fpf+yD0unO936Y/c48L5fpf+yD0unO936Y//oT/iER7jCb7D93iKZ/gBz/EC
L/EKP+In/IzXeIO3eIf3+ICP+IRf8Bm/4jd8wVc83Lrh3h/Jce+P5Lj3R3Lc
+yM57v2RHPf+SI57fyTHvT+S494fyXHvj+S490dy3PsjOe79kRz3/kiOe38k
x70/ugfccOHeH7nHDRfu/ZF73HDh3h+5xw0X7v2Re9xw4d4fuccNF+79kXvc
cOHeH7nHDRfu/ZF73HDh3h9x33/8P//5X3/EIzzGE3yH7/EUz/ADnuMFXuIV
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
jNd4g7d4h/f4gI/4hF/wGb/iN3zBVzzcuuHsP+iP5O/kOPsP+iP5BznO/oP+
SP5JjrP/oD+Sf5Hj7D/oj+Tf5Dj7D/oj+Q85zv6D/kj+S46z/6A/kv/desAN
F87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/9/ru7etMFu7Rb1ChUqUKBAgRBG
CCGEJFv/svxgjDHGGJfwped/n1PBU8IuYZWwS7hL2CWsEnYJJ3nnAF3hxeCO
RzTmpD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9Me/6Y94
gId4hMd4gqd4hp/wHC/wEq/wGm/wFu/wM37Be3zAR3zCZ3zBV3zDr/iO33D3
6B5n/0F/JH8nx9l/0B/JP8hx9h/0R/JPcpz9B/2R/IscZ/9BfyT/JsfZf9Af
yX/IcfYf9EfyX3Kc/Qf9kfzv0R3uceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn
/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iPoj/iAR7i
ER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF7/EBH/EJn/EFX/ENv+I7fsPdo3uc
/Qf9kfydHGf/QX8k/yDH2X/QH8k/yXH2H/RH8i9ynP0H/ZH8mxxn/0F/JP8h
x9l/0B/Jf8lx9h/0R/K/R3e4x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9
kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A//kN/xAM8xCM8
xhM8xTP8hOd4gZd4hdd4g7d4h5/xC97jAz7iEz7jC77iG37Fd/yGu0f3OPsP
+iP5OznO/oP+SP5BjrP/oD+Sf5Lj7D/oj+Rf5Dj7D/oj+Tc5zv6D/kj+Q46z
/6A/kv+S4+w/6I/kf4/ucI8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3
uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf/zrf/vHbf/RPMBD
PMJjPMFTPMNPeI4XeIlXeI03eIt3+Bm/4D0+4CM+4TO+4Cu+4Vd8x2+4e3SP
s/9oOc7+o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j5bj7D9ajrP/aDnO/qPlOPuP
luPsP1qOs/9oOc7+o+U4+4+W4+w//nGHe1w4+492j3tcOPuPdo97XDj7j3aP
e1w4+492j3tcOPuPdo97XDj7j3aPe1w4+492j3tcOPuPdo97XDj7j+a2/6A/
4gEe4hEe4wme4hl+wnO8wEu8wmu8wVu8w8/4Be/xAR/xCZ/xBV/xDb/iO37D
3aN7nP0H/ZH8nRxn/0F/JP8gx9l/0B/JP8lx9h/0R/Ivcpz9B/2R/JscZ/9B
fyT/IcfZf9AfyX/JcfYf9Efyv0d3uMeFs/+gP3KPC2f/QX/kHhfO/oP+yD0u
nP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gPzr6Ix7g
IR7hMZ7gKZ7hJzzHC7zEK7zGG7zFO/yMX/AeH/ARn/AZX/AV3/ArvuM33D26
x9l/0B/J38lx9h/0R/IPcpz9B/2R/JMcZ/9BfyT/IsfZf9Afyb/JcfYf9Efy
H3Kc/Qf9kfyXHGf/QX8k/3t0h3tcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/
0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+uO/6I94gId4
hMd4gqd4hp/wHC/wEq/wGm/wFu/wM37Be3zAR3zCZ3zBV3zDr/iO33D36B5n
/0F/JH8nx9l/0B/JP8hx9h/0R/JPcpz9B/2R/IscZ/9BfyT/JsfZf9AfyX/I
cfYf9EfyX3Kc/Qf9kfzv0R3uceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/
5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iPnv6IB3iIR3iM
J3iKZ/gJz/ECL/EKr/EGb/EOP+MXvMcHfMQnfMYXfMU3/Irv+A13j+5x9h/0
R/J3cpz9B/2R/IMcZ/9BfyT/JMfZf9Afyb/IcfYf9Efyb3Kc/Qf9kfyHHGf/
QX8k/yXH2X/QH8n/Ht3hHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x
4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP++Df9EQ/wEI/wGE/w
FM/wE57jBV7iFV7jDd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d4+w/6I/k
7+Q4+w/6I/kHOc7+g/5I/kmOs/+gP5J/kePsP+iP5N/kOPsP+iP5DznO/oP+
SP5LjrP/oD+S/z26wz0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZ
f9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/VH0RzzAQzzCYzzBUzzD
T3iOF3iJV3iNN3iLd/gZv+A9PuAjPuEzvuArvuFXfMdvuHt0j7P/oD+Sv5Pj
7D/oj+Qf5Dj7D/oj+Sc5zv6D/kj+RY6z/6A/kn+T4+w/6I/kP+Q4+w/6I/kv
Oc7+g/5I/vfoDve4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/
5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9Md/6I94gId4hMd4gqd4hp/w
HC/wEq/wGm/wFu/wM37Be3zAR3zCZ3zBV3zDr/iO33D36B5n/0F/JH8nx9l/
0B/JP8hx9h/0R/JPcpz9B/2R/IscZ/9BfyT/JsfZf9AfyX/IcfYf9EfyX3Kc
/Qf9kfzv0R3uceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9
Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iPf/3v/7jtP5oHeIhHeIwneIpn
+AnP8QIv8Qqv8QZv8Q4/4xe8xwd8xCd8xhd8xTf8iu/4DXeP7nH2Hy3H2X+0
HGf/0XKc/UfLcfYfLcfZf7QcZ//Rcpz9R8tx9h8tx9l/tBxn/9FynP1Hy3H2
Hy3H2X+0HGf/0XKc/cc/7nCPC2f/0e5xjwtn/9HucY8LZ//R7nGPC2f/0e5x
jwtn/9HucY8LZ//R7nGPC2f/0e5xjwtn/9HucY8LZ//R3PYf9Ec8wEM8wmM8
wVM8w094jhd4iVd4jTd4i3f4Gb/gPT7gIz7hM77gK77hV3zHb7h7dI+z/6A/
kr+T4+w/6I/kH+Q4+w/6I/knOc7+g/5I/kWOs/+gP5J/k+PsP+iP5D/kOPsP
+iP5LznO/oP+SP736A73uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8L
Z/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RHR3/EAzzEIzzGEzzF
M/yE53iBl3iF13iDt3iHn/EL3uMDPuITPuMLvuIbfsV3/Ia7R/c4+w/6I/k7
Oc7+g/5I/kGOs/+gP5J/kuPsP+iP5F/kOPsP+iP5NznO/oP+SP5DjrP/oD+S
/5Lj7D/oj+R/j+5wjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf
9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F//Bf9EQ/wEI/wGE/wFM/w
E57jBV7iFV7jDd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d4+w/6I/k7+Q4
+w/6I/kHOc7+g/5I/kmOs/+gP5J/kePsP+iP5N/kOPsP+iP5DznO/oP+SP5L
jrP/oD+S/z26wz0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9Af
uceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/dHTH/EAD/EIj/EET/EMP+E5
XuAlXuE13uAt3uFn/IL3+ICP+ITP+IKv+IZf8R2/4e7RPc7+g/5I/k6Os/+g
P5J/kOPsP+iP5J/kOPsP+iP5FznO/oP+SP5NjrP/oD+S/5Dj7D/oj+S/5Dj7
D/oj+d+jO9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtc
OPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B//pj/iAR7iER7jCZ7iGX7Cc7zA
S7zCa7zBW7zDz/gF7/EBH/EJn/EFX/ENv+I7fsPdo3uc/Qf9kfydHGf/QX8k
/yDH2X/QH8k/yXH2H/RH8i9ynP0H/ZH8mxxn/0F/JP8hx9l/0B/Jf8lx9h/0
R/K/R3e4x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2
H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/iv6IB3iIR3iMJ3iKZ/gJz/ECL/EK
r/EGb/EOP+MXvMcHfMQnfMYXfMU3/Irv+A13j+5x9h/0R/J3cpz9B/2R/IMc
Z/9BfyT/JMfZf9Afyb/IcfYf9Efyb3Kc/Qf9kfyHHGf/QX8k/yXH2X/QH8n/
Ht3hHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9Af
uceFs/+gP3KPC2f/QX/kHhfO/oP++A/9EQ/wEI/wGE/wFM/wE57jBV7iFV7j
Dd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d4+w/6I/k7+Q4+w/6I/kHOc7+
g/5I/kmOs/+gP5J/kePsP+iP5N/kOPsP+iP5DznO/oP+SP5LjrP/oD+S/z26
wz0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KP
C2f/QX/kHhfO/oP+yD0unP0H/fGv/+Mft/1H8wAP8QiP8QRP8Qw/4Tle4CVe
4TXe4C3e4Wf8gvf4gI/4hM/4gq/4hl/xHb/h7tE9zv6j5Tj7j5bj7D9ajrP/
aDnO/qPlOPuPluPsP1qOs/9oOc7+o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j5bj
7D9ajrP/+Mcd7nHh7D/aPe5x4ew/2j3uceHsP9o97nHh7D/aPe5x4ew/2j3u
ceHsP9o97nHh7D/aPe5x4ew/2j3uceHsP5rb/oP+iAd4iEd4jCd4imf4Cc/x
Ai/xCq/xBm/xDj/jF7zHB3zEJ3zGF3zFN/yK7/gNd4/ucfYf9Efyd3Kc/Qf9
kfyDHGf/QX8k/yTH2X/QH8m/yHH2H/RH8m9ynP0H/ZH8hxxn/0F/JP8lx9l/
0B/J/x7d4R4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC
2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/ujoj3iAh3iEx3iCp3iGn/AcL/AS
r/Aab/AW7/AzfsF7fMBHfMJnfMFXfMOv+I7fcPfoHmf/QX8kfyfH2X/QH8k/
yHH2H/RH8k9ynP0H/ZH8ixxn/0F/JP8mx9l/0B/Jf8hx9h/0R/Jfcpz9B/2R
/O/RHe5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H
/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I//oj/iAR7iER7jCZ7iGX7Cc7zAS7zC
a7zBW7zDz/gF7/EBH/EJn/EFX/ENv+I7fsPdo3uc/Qf9kfydHGf/QX8k/yDH
2X/QH8k/yXH2H/RH8i9ynP0H/ZH8mxxn/0F/JP8hx9l/0B/Jf8lx9h/0R/K/
R3e4x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH
7nHh7D/oj9zjwtl/0B+5x4Wz/6A/evojHuAhHuExnuApnuEnPMcLvMQrvMYb
vMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH2X/QH8nfyXH2H/RH8g9ynP0H
/ZH8kxxn/0F/JP8ix9l/0B/Jv8lx9h/0R/Ifcpz9B/2R/JccZ/9BfyT/e3SH
e1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4X
zv6D/sg9Lpz9B/2Re1w4+w/649/0RzzAQzzCYzzBUzzDT3iOF3iJV3iNN3iL
d/gZv+A9PuAjPuEzvuArvuFXfMdvuHt0j7P/oD+Sv5Pj7D/oj+Qf5Dj7D/oj
+Sc5zv6D/kj+RY6z/6A/kn+T4+w/6I/kP+Q4+w/6I/kvOc7+g/5I/vfoDve4
cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9
B/2Re1w4+w/6I/e4cPYf9EfRH/EAD/EIj/EET/EMP+E5XuAlXuE13uAt3uFn
/IL3+ICP+ITP+IKv+IZf8R2/4e7RPc7+g/5I/k6Os/+gP5J/kOPsP+iP5J/k
OPsP+iP5FznO/oP+SP5NjrP/oD+S/5Dj7D/oj+S/5Dj7D/oj+d+jO9zjwtl/
0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH
7nHh7D/oj9zjwtl/0B//oT/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF
7/EBH/EJn/EFX/ENv+I7fsPdo3uc/Qf9kfydHGf/QX8k/yDH2X/QH8k/yXH2
H/RH8i9ynP0H/ZH8mxxn/0F/JP8hx9l/0B/Jf8lx9h/0R/K/R3e4x4Wz/6A/
co8LZ/9Bf+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zj
wtl/0B+5x4Wz/6A//vV//uO2/2ge4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8
jF/wHh/wEZ/wGV/wFd/wK77jN9w9usfZf7QcZ//Rcpz9R8tx9h8tx9l/tBxn
/9FynP1Hy3H2Hy3H2X+0HGf/0XKc/UfLcfYfLcfZf7QcZ//Rcpz9R8tx9h//
uMM9Lpz9R7vHPS6c/Ue7xz0unP1Hu8c9Lpz9R7vHPS6c/Ue7xz0unP1Hu8c9
Lpz9R7vHPS6c/Ue7xz0unP1Hc9t/0B/xAA/xCI/xBE/xDD/hOV7gJV7hNd7g
Ld7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/oP+SP5OjrP/oD+Sf5Dj7D/o
j+Sf5Dj7D/oj+Rc5zv6D/kj+TY6z/6A/kv+Q4+w/6I/kv+Q4+w/6I/nfozvc
48LZf9AfuceFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw
9h/0R+5x4ew/6I/c48LZf9AfHf0RD/AQj/AYT/AUz/ATnuMFXuIVXuMN3uId
fsYveI8P+IhP+Iwv+Ipv+BXf8RvuHt3j7D/oj+Tv5Dj7D/oj+Qc5zv6D/kj+
SY6z/6A/kn+R4+w/6I/k3+Q4+w/6I/kPOc7+g/5I/kuOs/+gP5L/PbrDPS6c
/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9B
f+QeF87+g/7IPS6c/Qf98V/0RzzAQzzCYzzBUzzDT3iOF3iJV3iNN3iLd/gZ
v+A9PuAjPuEzvuArvuFXfMdvuHt0j7P/oD+Sv5Pj7D/oj+Qf5Dj7D/oj+Sc5
zv6D/kj+RY6z/6A/kn+T4+w/6I/kP+Q4+w/6I/kvOc7+g/5I/vfoDve4cPYf
9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2R
e1w4+w/6I/e4cPYf9EdPf8QDPMQjPMYTPMUz/ITneIGXeIXXeIO3eIef8Qve
4wM+4hM+4wu+4ht+xXf8hrtH9zj7D/oj+Ts5zv6D/kj+QY6z/6A/kn+S4+w/
6I/kX+Q4+w/6I/k3Oc7+g/5I/kOOs/+gP5L/kuPsP+iP5H+P7nCPC2f/QX/k
HhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceF
s/+gP3KPC2f/QX/8m/6IB3iIR3iMJ3iKZ/gJz/ECL/EKr/EGb/EOP+MXvMcH
fMQnfMYXfMU3/Irv+A13j+5x9h/0R/J3cpz9B/2R/IMcZ/9BfyT/JMfZf9Af
yb/IcfYf9Efyb3Kc/Qf9kfyHHGf/QX8k/yXH2X/QH8n/Ht3hHhfO/oP+yD0u
nP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/
QX/kHhfO/oP+KPojHuAhHuExnuApnuEnPMcLvMQrvMYbvMU7/Ixf8B4f8BGf
8Blf8BXf8Cu+4zfcPbrH2X/QH8nfyXH2H/RH8g9ynP0H/ZH8kxxn/0F/JP8i
x9l/0B/Jv8lx9h/0R/Ifcpz9B/2R/JccZ/9BfyT/e3SHe1w4+w/6I/e4cPYf
9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2R
e1w4+w/64z/0RzzAQzzCYzzBUzzDT3iOF3iJV3iNN3iLd/gZv+A9PuAjPuEz
vuArvuFXfMdvuHt0j7P/oD+Sv5Pj7D/oj+Qf5Dj7D/oj+Sc5zv6D/kj+RY6z
/6A/kn+T4+w/6I/kP+Q4+w/6I/kvOc7+g/5I/vfoDve4cPYf9EfuceHsP+iP
3OPC2X/QH7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4
cPYf9Me//q9/3PYfzQM8xCM8xhM8xTP8hOd4gZd4hdd4g7d4h5/xC97jAz7i
Ez7jC77iG37Fd/yGu0f3OPuPluPsP1qOs/9oOc7+o+U4+4+W4+w/Wo6z/2g5
zv6j5Tj7j5bj7D9ajrP/aDnO/qPlOPuPluPsP1qOs/9oOc7+4x93uMeFs/9o
97jHhbP/aPe4x4Wz/2j3uMeFs/9o97jHhbP/aPe4x4Wz/2j3uMeFs/9o97jH
hbP/aPe4x4Wz/2hu+w/6Ix7gIR7hMZ7gKZ7hJzzHC7zEK7zGG7zFO/yMX/Ae
H/ARn/AZX/AV3/ArvuM33D26x9l/0B/J38lx9h/0R/IPcpz9B/2R/JMcZ/9B
fyT/IsfZf9Afyb/JcfYf9EfyH3Kc/Qf9kfyXHGf/QX8k/3t0h3tcOPsP+iP3
uHD2H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7IPS6c
/Qf9kXtcOPsP+qOjP+IBHuIRHuMJnuIZfsJzvMBLvMJrvMFbvMPP+AXv8QEf
8Qmf8QVf8Q2/4jt+w92je5z9B/2R/J0cZ/9BfyT/IMfZf9AfyT/JcfYf9Efy
L3Kc/Qf9kfybHGf/QX8k/yHH2X/QH8l/yXH2H/RH8r9Hd7jHhbP/oD9yjwtn
/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/Q
H7nHhbP/oD/+i/6IB3iIR3iMJ3iKZ/gJz/ECL/EKr/EGb/EOP+MXvMcHfMQn
fMYXfMU3/Irv+A13j+5x9h/0R/J3cpz9B/2R/IMcZ/9BfyT/JMfZf9Afyb/I
cfYf9Efyb3Kc/Qf9kfyHHGf/QX8k/yXH2X/QH8n/Ht3hHhfO/oP+yD0unP0H
/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX/k
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
eITHeIKneIaf8Bwv8BKv8Bpv8Bbv8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+ge
Z/9BfyR/J8fZf9AfyT/IcfYf9EfyT3Kc/Qf9kfyLHGf/QX8k/ybH2X/QH8l/
yHH2H/RH8l9ynP0H/ZH879Ed7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9B
f+QeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj//QH/EAD/EI
j/EET/EMP+E5XuAlXuE13uAt3uFn/IL3+ICP+ITP+IKv+IZf8R2/4e7RPc7+
g/5I/k6Os/+gP5J/kOPsP+iP5J/kOPsP+iP5FznO/oP+SP5NjrP/oD+S/5Dj
7D/oj+S/5Dj7D/oj+d+jO9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/7I
PS6c/Qf9kXtcOPsP+iP3uHD2H/RH7nHh7D/oj9zjwtl/0B//+n/+cdt/NA/w
EI/wGE/wFM/wE57jBV7iFV7jDd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d
4+w/Wo6z/2g5zv6j5Tj7j5bj7D9ajrP/aDnO/qPlOPuPluPsP1qOs/9oOc7+
o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j3/c4R4Xzv6j3eMeF87+o93jHhfO/qPd
4x4Xzv6j3eMeF87+o93jHhfO/qPd4x4Xzv6j3eMeF87+o93jHhfO/qO57T/o
j3iAh3iEx3iCp3iGn/AcL/ASr/Aab/AW7/AzfsF7fMBHfMJnfMFXfMOv+I7f
cPfoHmf/QX8kfyfH2X/QH8k/yHH2H/RH8k9ynP0H/ZH8ixxn/0F/JP8mx9l/
0B/Jf8hx9h/0R/Jfcpz9B/2R/O/RHe5x4ew/6I/c48LZf9AfuceFs/+gP3KP
C2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw9h/0R+5x4ew/6I+O/ogH
eIhHeIwneIpn+AnP8QIv8Qqv8QZv8Q4/4xe8xwd8xCd8xhd8xTf8iu/4DXeP
7nH2H/RH8ndynP0H/ZH8gxxn/0F/JP8kx9l/0B/Jv8hx9h/0R/Jvcpz9B/2R
/IccZ/9BfyT/JcfZf9Afyf8e3eEeF87+g/7IPS6c/Qf9kXtcOPsP+iP3uHD2
H/RH7nHh7D/oj9zjwtl/0B+5x4Wz/6A/co8LZ/9Bf+QeF87+g/74L/ojHuAh
HuExnuApnuEnPMcLvMQrvMYbvMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH
2X/QH8nfyXH2H/RH8g9ynP0H/ZH8kxxn/0F/JP8ix9l/0B/Jv8lx9h/0R/If
cpz9B/2R/JccZ/9BfyT/e3SHe1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/Q
H7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/6o6c/4gEe4hEe
4wme4hl+wnO8wEu8wmu8wVu8w8/4Be/xAR/xCZ/xBV/xDb/iO37D3aN7nP0H
/ZH8nRxn/0F/JP8gx9l/0B/JP8lx9h/0R/Ivcpz9B/2R/JscZ/9BfyT/IcfZ
f9AfyX/JcfYf9Efyv0d3uMeFs/+gP3KPC2f/QX/kHhfO/oP+yD0unP0H/ZF7
XDj7D/oj97hw9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP/5Nf8QDPMQjPMYT
PMUz/ITneIGXeIXXeIO3eIef8Qve4wM+4hM+4wu+4ht+xXf8hrtH9zj7D/oj
+Ts5zv6D/kj+QY6z/6A/kn+S4+w/6I/kX+Q4+w/6I/k3Oc7+g/5I/kOOs/+g
P5L/kuPsP+iP5H+P7nCPC2f/QX/kHhfO/oP+yD0unP0H/ZF7XDj7D/oj97hw
9h/0R+5x4ew/6I/c48LZf9AfuceFs/+gP3KPC2f/QX8U/REP8BCP8BhP8BTP
8BOe4wVe4hVe4w3e4h1+xi94jw/4iE/4jC/4im/4Fd/xG+4e3ePsP+iP5O/k
OPsP+iP5BznO/oP+SP5JjrP/oD+Sf5Hj7D/oj+Tf5Dj7D/oj+Q85zv6D/kj+
S46z/6A/kv89usM9Lpz9B/2Re1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/Q
H7nHhbP/oD9yjwtn/0F/5B4Xzv6D/sg9Lpz9B/3xH/ojHuAhHuExnuApnuEn
PMcLvMQrvMYbvMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH2X/QH8nfyXH2
H/RH8g9ynP0H/ZH8kxxn/0F/JP8ix9l/0B/Jv8lx9h/0R/Ifcpz9B/2R/Jcc
Z/9BfyT/e3SHe1w4+w/6I/e4cPYf9EfuceHsP+iP3OPC2X/QH7nHhbP/oD9y
jwtn/0F/5B4Xzv6D/sg9Lpz9B/2Re1w4+w/641//7R+3/UfzAA/xCI/xBE/x
DD/hOV7gJV7hNd7gLd7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/qPlOPuP
luPsP1qOs/9oOc7+o+U4+4+W4+w/Wo6z/2g5zv6j5Tj7j5bj7D9ajrP/aDnO
/qPlOPuPluPsP1qOs//4xx3uceHsP9o97nHh7D/aPe5x4ew/2j3uceHsP9o9
7nHh7D/aPe5x4ew/2j3uceHsP9o97nHh7D/aPe5x4ew/mv/pjyH9EQ/wEI/w
GE/wFM/wE57jBV7iFV7jDd7iHX7GL3iPD/iIT/iML/iKb/gV3/Eb7h7d49Yf
yXHrj+S49Udy3PojOW79kRy3/kiOW38kx60/kuPWH8lx64/kuPVHctz6Izlu
/ZEct/5Ijlt/JMetP5o73OPCrT9yj3tcuPVH7nGPC7f+yD3uceHWH7nHPS7c
+iP3uMeFW3/kHve4cOuP3OMeF279kXvc48KtP+K2H6Q/4gEe4hEe4wme4hl+
wnO8wEu8wmu8wVu8w8/4Be/xAR/xCZ/xBV/xDb/iO37D3aN7nP0g/ZH8nRxn
P0h/JP8gx9kP0h/JP8lx9oP0R/Ivcpz9IP2R/JscZz9IfyT/IcfZD9IfyX/J
cfaD9Efyv0d3uMeFsx+kP3KPC2c/SH/kHhfOfpD+yD0unP0g/ZF7XDj7Qfoj
97hw9oP0R+5x4ewH6Y/c48LZD9IfuceFsx+kPzb0RzzAQzzCYzzBUzzDT3iO
F3iJV3iNN3iLd/gZv+A9PuAjPuEzvuArvuFXfMdvuHt0j1t/JMetP5Lj1h/J
ceuP5Lj1R3Lc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHrj+S49Udy3PojOW79
kRy3/mjucI8Lt/7IPe5x4dYfucc9Ltz6I/e4x4Vbf+Qe97hw64/c4x4Xbv2R
e9zjwq0/co97XLj1R+5xjwu3/ojb/pz+iAd4iEd4jCd4imf4Cc/xAi/xCq/x
Bm/xDj/jF7zHB3zEJ3zGF3zFN/yK7/gNd4/ucfbn9Efyd3Kc/Tn9kfyDHGd/
Tn8k/yTH2Z/TH8m/yHH25/RH8m9ynP05/ZH8hxxnf05/JP8lx9mf0x/J/x7d
4R4Xzv6c/sg9Lpz9Of2Re1w4+3P6I/e4cPbn9EfuceHsz+mP3OPC2Z/TH7nH
hbM/pz9yjwtnf05/5B4Xzv6c/vijP+IBHuIRHuMJnuIZfsJzvMBLvMJrvMFb
vMPP+AXv8QEf8Qmf8QVf8Q2/4jt+w92je9z6Izlu/ZEct/5Ijlt/JMetP5Lj
1h/JceuP5Lj1R3Lc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHrj+S49Udzh3tc
uPVH7nGPC7f+yD3uceHWH7nHPS7c+iP3uMeFW3/kHve4cOuP3OMeF279kXvc
48KtP3KPe1y49Ufc3i+hP+IBHuIRHuMJnuIZfsJzvMBLvMJrvMFbvMPP+AXv
8QEf8Qmf8QVf8Q2/4jt+w92je5z3S+iP5O/kOO+X0B/JP8hx3i+hP5J/kuO8
X0J/JP8ix3m/hP5I/k2O834J/ZH8hxzn/RL6I/kvOc77JfRH8r9Hd7jHhfN+
Cf2Re1w475fQH7nHhfN+Cf2Re1w475fQH7nHhfN+Cf2Re1w475fQH7nHhfN+
Cf2Re1w475fQH7nHhfN+Cf3x3+iPeICHeITHeIKneIaf8Bwv8BKv8Bpv8Bbv
8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+get/5Ijlt/JMetP5Lj1h/JceuP5Lj1
R3Lc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHrj+S49Udy3PojOW790dzhHhdu
/ZF73OPCrT9yj3tcuPVH7nGPC7f+yD3uceHWH7nHPS7c+iP3uMeFW3/kHve4
cOuP3OMeF279Ebf3r+iPeICHeITHeIKneIaf8Bwv8BKv8Bpv8Bbv8DN+wXt8
wEd8wmd8wVd8w6/4jt9w9+ge5/0r+iP5OznO+1f0R/IPcpz3r+iP5J/kOO9f
0R/Jv8hx3r+iP5J/k+O8f0V/JP8hx3n/iv5I/kuO8/4V/ZH879Ed7nHhvH9F
f+QeF877V/RH7nHhvH9Ff+QeF877V/RH7nHhvH9Ff+QeF877V/RH7nHhvH9F
f+QeF877V/RH7nHhvH9Ff/x3+iMe4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8
jF/wHh/wEZ/wGV/wFd/wK77jN9w9usetP5Lj1h/JceuP5Lj1R3Lc+iM5bv2R
HLf+SI5bfyTHrT+S49YfyXHrj+S49Udy3PojOW79kRy3/kiOW380d7jHhVt/
5B73uHDrj9zjHhdu/ZF73OPCrT9yj3tcuPVH7nGPC7f+yD3uceHWH7nHPS7c
+iP3uMeFW3/E7f1E+iMe4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8jF/wHh/w
EZ/wGV/wFd/wK77jN9w9usd5P5H+SP5OjvN+Iv2R/IMc5/1E+iP5JznO+4n0
R/Ivcpz3E+mP5N/kOO8n0h/Jf8hx3k+kP5L/kuO8n0h/JP97dId7XDjvJ9If
uceF834i/ZF7XDjvJ9IfuceF834i/ZF7XDjvJ9IfuceF834i/ZF7XDjvJ9If
uceF834i/ZF7XDjvJ9If/4P+iAd4iEd4jCd4imf4Cc/xAi/xCq/xBm/xDj/j
F7zHB3zEJ3zGF3zFN/yK7/gNd4/uceuP5Lj1R3Lc+iM5bv2RHLf+SI5bfyTH
rT+S49YfyXHrj+S49Udy3PojOW79kRy3/kiOW38kx60/kuPWH80d7nHh1h+5
xz0u3Poj97jHhVt/5B73uHDrj9zjHhdu/ZF73OPCrT9yj3tcuPVH7nGPC7f+
yD3uceHWH3F7f5f+iAd4iEd4jCd4imf4Cc/xAi/xCq/xBm/xDj/jF7zHB3zE
J3zGF3zFN/yK7/gNd4/ucd7fpT+Sv5PjvL9LfyT/IMd5f5f+SP5JjvP+Lv2R
/Isc5/1d+iP5NznO+7v0R/Ifcpz3d+mP5L/kOO/v0h/J/x7d4R4Xzvu79Efu
ceG8v0t/5B4Xzvu79EfuceG8v0t/5B4Xzvu79EfuceG8v0t/5B4Xzvu79Efu
ceG8v0t/5B4Xzvu79Mf/pD/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF
7/EBH/EJn/EFX/ENv+I7fsPdo3vc+iM5bv2RHLf+SI5bfyTHrT+S49YfyXHr
j+S49Udy3PojOW79kRy3/kiOW38kx60/kuPWH8lx64/kuPVHc4d7XLj1R+5x
jwu3/sg97nHh1h+5xz0u3Poj97jHhVt/5B73uHDrj9zjHhdu/ZF73OPCrT9y
j3tcuPVH3N5vpz/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF7/EBH/EJ
n/EFX/ENv+I7fsPdo3uc99vpj+Tv5Djvt9MfyT/Icd5vpz+Sf5LjvN9OfyT/
Isd5v53+SP5NjvN+O/2R/Icc5/12+iP5LznO++30R/K/R3e4x4Xzfjv9kXtc
OO+30x+5x4Xzfjv9kXtcOO+30x+5x4Xzfjv9kXtcOO+30x+5x4Xzfjv9kXtc
OO+30x+5x4Xzfjv98b/oj3iAh3iEx3iCp3iGn/AcL/ASr/Aab/AW7/AzfsF7
fMBHfMJnfMFXfMOv+I7fcPfoHrf+SI5bfyTHrT+S49YfyXHrj+S49Udy3Poj
OW79kRy3/kiOW38kx60/kuPWH8lx64/kuPVHctz6Izlu/dHc4R4Xbv2Re9zj
wq0/co97XLj1R+5xjwu3/sg97nHh1h+5xz0u3Poj97jHhVt/5B73uHDrj9zj
Hhdu/RG3/z/+33/c/v9oHuAhHuExnuApnuEnPMcLvMQrvMYbvMU7/Ixf8B4f
8BGf8Blf8BXf8Cu+4zfcPbrH+f+j5Tj/f7Qc5/+PluP8/9FynP8/Wo7z/0fL
cf7/aDnO/x8tx/n/o+U4/3+0HOf/j5bj/P/Rcpz/P1qO8/9Hy3H+/2g5zv8f
/7jDPS6c/z/aPe5x4fz/0e5xjwvn/492j3tcOP9/tHvc48L5/6Pd4x4Xzv8f
7R73uHD+/2j3uMeF8/9Hu8c9Lpz/P5rb/x/0RzzAQzzCYzzBUzzDT3iOF3iJ
V3iNN3iLd/gZv+A9PuAjPuEzvuArvuFXfMdvuHt0j/P/B/2R/J0c5/8P+iP5
BznO/x/0R/JPcpz/P+iP5F/kOP9/0B/Jv8lx/v+gP5L/kOP8/0F/JP8lx/n/
g/5I/vfoDve4cP7/oD9yjwvn/w/6I/e4cP7/oD9yjwvn/w/6I/e4cP7/oD9y
jwvn/w/6I/e4cP7/oD9yjwvn/w/6I/e4cP7/oD+m9Ec8wEM8wmM8wVM8w094
jhd4iVd4jTd4i3f4Gb/gPT7gIz7hM77gK77hV3zHb7h7dI/z/wf9kfydHOf/
D/oj+Qc5zv8f9EfyT3Kc/z/oj+Rf5Dj/f9Afyb/Jcf7/oD+S/5Dj/P9BfyT/
Jcf5/4P+SP736A73uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+
/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/NvRHPMBDPMJjPMFT
PMNPeI4XeIlXeI03eIt3+Bm/4D0+4CM+4TO+4Cu+4Vd8x2+4e3SP8/8H/ZH8
nRzn/w/6I/kHOc7/H/RH8k9ynP8/6I/kX+Q4/3/QH8m/yXH+/6A/kv+Q4/z/
QX8k/yXH+f+D/kj+9+gO97hw/v+gP3KPC+f/D/oj97hw/v+gP3KPC+f/D/oj
97hw/v+gP3KPC+f/D/oj97hw/v+gP3KPC+f/D/oj97hw/v+gPzr6Ix7gIR7h
MZ7gKZ7hJzzHC7zEK7zGG7zFO/yMX/AeH/ARn/AZX/AV3/ArvuM33D26x/n/
g/5I/k6O8/8H/ZH8gxzn/w/6I/knOc7/H/RH8i9ynP8/6I/k3+Q4/3/QH8l/
yHH+/6A/kv+S4/z/QX8k/3t0h3tcOP9/0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz
/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/0B9/9Ec8
wEM8wmM8wVM8w094jhd4iVd4jTd4i3f4Gb/gPT7gIz7hM77gK77hV3zHb7h7
dI/z/wf9kfydHOf/D/oj+Qc5zv8f9EfyT3Kc/z/oj+Rf5Dj/f9Afyb/Jcf7/
oD+S/5Dj/P9BfyT/Jcf5/4P+SP736A73uHD+/6A/co8L5/8P+iP3uHD+/6A/
co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/
/ov+iAd4iEd4jCd4imf4Cc/xAi/xCq/xBm/xDj/jF7zHB3zEJ3zGF3zFN/yK
7/gNd4/ucf7/oD+Sv5Pj/P9BfyT/IMf5/4P+SP5JjvP/B/2R/Isc5/8P+iP5
NznO/x/0R/Ifcpz/P+iP5L/kOP9/0B/J/x7d4R4Xzv8f9EfuceH8/0F/5B4X
zv8f9EfuceH8/0F/5B4Xzv8f9EfuceH8/0F/5B4Xzv8f9EfuceH8/0F/5B4X
zv8f9Md/oz/iAR7iER7jCZ7iGX7Cc7zAS7zCa7zBW7zDz/gF7/EBH/EJn/EF
X/ENv+I7fsPdo3uc/z/oj+Tv5Dj/f9AfyT/Icf7/oD+Sf5Lj/P9BfyT/Isf5
/4P+SP5NjvP/B/2R/Icc5/8P+iP5LznO/x/0R/K/R3e4x4Xz/wf9kXtcOP9/
0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/0B+5x4Xz/wf9kXtcOP9/
0B+5x4Xz/wf90dMf8QAP8QiP8QRP8Qw/4Tle4CVe4TXe4C3e4Wf8gvf4gI/4
hM/4gq/4hl/xHb/h7tE9zv8f9Efyd3Kc/z/oj+Qf5Dj/f9AfyT/Jcf7/oD+S
f5Hj/P9BfyT/Jsf5/4P+SP5DjvP/B/2R/Jcc5/8P+iP536M73OPC+f+D/sg9
Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9
Lpz/P+iP3OPC+f+D/vjv9Ec8wEM8wmM8wVM8w094jhd4iVd4jTd4i3f4Gb/g
PT7gIz7hM77gK77hV3zHb7h7dI/z/wf9kfydHOf/D/oj+Qc5zv8f9EfyT3Kc
/z/oj+Rf5Dj/f9Afyb/Jcf7/oD+S/5Dj/P9BfyT/Jcf5/4P+SP736A73uHD+
/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+
/6A/co8L5/8P+iP3uHD+/6A//k1/xAM8xCM8xhM8xTP8hOd4gZd4hdd4g7d4
h5/xC97jAz7iEz7jC77iG37Fd/yGu0f3OP9/0B/J38lx/v+gP5J/kOP8/0F/
JP8kx/n/g/5I/kWO8/8H/ZH8mxzn/w/6I/kPOc7/H/RH8l9ynP8/6I/kf4/u
cI8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/co8L5/8P+iP3uHD+/6A/
co8L5/8P+iP3uHD+/6A/co8L5/8P+uN/0B/xAA/xCI/xBE/xDD/hOV7gJV7h
Nd7gLd7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/x/0R/J3cpz/P+iP5B/k
OP9/0B/JP8lx/v+gP5J/keP8/0F/JP8mx/n/g/5I/kOO8/8H/ZH8lxzn/w/6
I/nfozvc48L5/4P+yD0unP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+yD0u
nP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+KPojHuAhHuExnuApnuEnPMcL
vMQrvMYbvMU7/Ixf8B4f8BGf8Blf8BXf8Cu+4zfcPbrH+f+D/kj+To7z/wf9
kfyDHOf/D/oj+Sc5zv8f9EfyL3Kc/z/oj+Tf5Dj/f9AfyX/Icf7/oD+S/5Lj
/P9BfyT/e3SHe1w4/3/QH7nHhfP/B/2Re1w4/3/QH7nHhfP/B/2Re1w4/3/Q
H7nHhfP/B/2Re1w4/3/QH7nHhfP/B/2Re1w4/3/QH/+T/ogHeIhHeIwneIpn
+AnP8QIv8Qqv8QZv8Q4/4xe8xwd8xCd8xhd8xTf8iu/4DXeP7nH+/6A/kr+T
4/z/QX8k/yDH+f+D/kj+SY7z/wf9kfyLHOf/D/oj+Tc5zv8f9EfyH3Kc/z/o
j+S/5Dj/f9Afyf8e3eEeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+Qe
F87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/THf+iPeICHeITH
eIKneIaf8Bwv8BKv8Bpv8Bbv8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+ge5/8P
+iP5OznO/x/0R/IPcpz/P+iP5J/kOP9/0B/Jv8hx/v+gP5J/k+P8/0F/JP8h
x/n/g/5I/kuO8/8H/ZH879Ed7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/
H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf/wv+iMe
4CEe4TGe4Cme4Sc8xwu8xCu8xhu8xTv8jF/wHh/wEZ/wGV/wFd/wK77jN9w9
usf5/4P+SP5OjvP/B/2R/IMc5/8P+iP5JznO/x/0R/Ivcpz/P+iP5N/kOP9/
0B/Jf8hx/v+gP5L/kuP8/0F/JP97dId7XDj/f9AfuceF8/8H/ZF7XDj/f9Af
uceF8/8H/ZF7XDj/f9AfuceF8/8H/ZF7XDj/f9AfuceF8/8H/ZF7XDj/f9Af
//r//nH7/6N5gId4hMd4gqd4hp/wHC/wEq/wGm/wFu/wM37Be3zAR3zCZ3zB
V3zDr/iO33D36B7n/4+W4/z/0XKc/z9ajvP/R8tx/v9oOc7/Hy3H+f+j5Tj/
f7Qc5/+PluP8/9FynP8/Wo7z/0fLcf7/aDnO/x8tx/n/o+U4/3/84w73uHD+
/2j3uMeF8/9Hu8c9Lpz/P9o97nHh/P/R7nGPC+f/j3aPe1w4/3+0e9zjwvn/
o93jHhfO/x/tHve4cP7/aG7/f9Af8QAP8QiP8QRP8Qw/4Tle4CVe4TXe4C3e
4Wf8gvf4gI/4hM/4gq/4hl/xHb/h7tE9zv8f9Efyd3Kc/z/oj+Qf5Dj/f9Af
yT/Jcf7/oD+Sf5Hj/P9BfyT/Jsf5/4P+SP5DjvP/B/2R/Jcc5/8P+iP536M7
3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/sg9Lpz/P+iP
3OPC+f+D/sg9Lpz/P+iP3OPC+f+D/pjSH/EAD/EIj/EET/EMP+E5XuAlXuE1
3uAt3uFn/IL3+ICP+ITP+IKv+IZf8R2/4e7RPc7/H/RH8ndynP8/6I/kH+Q4
/3/QH8k/yXH+/6A/kn+R4/z/QX8k/ybH+f+D/kj+Q47z/wf9kfyXHOf/D/oj
+d+jO9zjwvn/g/7IPS6c/z/oj9zjwvn/g/7IPS6c/z/oj9zjwvn/g/7IPS6c
/z/oj9zjwvn/g/7IPS6c/z/oj9zjwvn/g/7Y0B/xAA/xCI/xBE/xDD/hOV7g
JV7hNd7gLd7hZ/yC9/iAj/iEz/iCr/iGX/Edv+Hu0T3O/x/0R/J3cpz/P+iP
5B/kOP9/0B/JP8lx/v+gP5J/keP8/0F/JP8mx/n/g/5I/kOO8/8H/ZH8lxzn
/w/6I/nfozvc48L5/4P+yD0unP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+
yD0unP8/6I/c48L5/4P+yD0unP8/6I/c48L5/4P+6OiPeICHeITHeIKneIaf
8Bwv8BKv8Bpv8Bbv8DN+wXt8wEd8wmd8wVd8w6/4jt9w9+ge5/8P+iP5OznO
/x/0R/IPcpz/P+iP5J/kOP9/0B/Jv8hx/v+gP5J/k+P8/0F/JP8hx/n/g/5I
/kuO8/8H/ZH879Ed7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh
/P9Bf+QeF87/H/RH7nHh/P9Bf+QeF87/H/RH7nHh/P9Bf/zRH/EAD/EIj/EE
T/EMP+E5XuAlXuE13uAt3uFn/IL3+ICP+ITP+IKv+IZf8R3//13du0lGDRqF
0dTQwMDAQERERMT7/XIQERERS/hLGKaCU8KUMCVMCW9pkz3wrXCx2fEO9xte
Nr3i/j/Yj/J3ctz/B/tR/kGO+/9gP8o/yXH/H+xH+Rc57v+D/Sj/Jsf9f7Af
5T/kuP8P9qP8lxz3/8F+lP9tesErHtz/B/tRHw/u/4P9qI8H9//BftTHg/v/
YD/q48H9f7Af9fHg/j/Yj/p4cP8f7Ed9PLj/D/ajPh7c/wf78Q/7kbfwNt7B
u3gP7+MDfIiP8DE+waf4DJ/jC3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gNL5te
cf8f7Ef5Oznu/4P9KP8gx/1/sB/ln+S4/w/2o/yLHPf/wX6Uf5Pj/j/Yj/If
ctz/B/tR/kuO+/9gP8r/Nr3gFQ/u/4P9qI8H9//BftTHg/v/YD/q48H9f7Af
9fHg/j/Yj/p4cP8f7Ed9PLj/D/ajPh7c/wf7UR8P7v+D/fgX+5G38Dbewbt4
D+/jA3yIj/AxPsGn+Ayf4wt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/4DS+bXnH/
H+xH+Ts57v+D/Sj/IMf9f7Af5Z/kuP8P9qP8ixz3/8F+lH+T4/4/2I/yH3Lc
/wf7Uf5Ljvv/YD/K/za94BUP7v+D/aiPB/f/wX7Ux4P7/2A/6uPB/X+wH/Xx
4P4/2I/6eHD/H+xHfTy4/w/2oz4e3P8H+1EfD+7/g/1Y2Y+8hbfxDt7Fe3gf
H+BDfISP8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb3jZ9Ir7/2A/
yt/Jcf8f7Ef5Bznu/4P9KP8kx/1/sB/lX+S4/w/2o/ybHPf/wX6U/5Dj/j/Y
j/Jfctz/B/tR/rfpBa94cP8f7Ed9PLj/D/ajPh7c/wf7UR8P7v+D/aiPB/f/
wX7Ux4P7/2A/6uPB/X+wH/Xx4P4/2I/6eHD/H+zHf9iPvIW38Q7exXt4Hx/g
Q3yEj/EJPsVn+Bxf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW942fSK+/9gP8rf
yXH/H+xH+Qc57v+D/Sj/JMf9f7Af5V/kuP8P9qP8mxz3/8F+lP+Q4/4/2I/y
X3Lc/wf7Uf636QWveHD/H+xHfTy4/w/2oz4e3P8H+1EfD+7/g/2ojwf3/8F+
1MeD+/9gP+rjwf1/sB/18eD+P9iP+nhw/x/sx3/Zj7yFt/EO3sV7eB8f4EN8
hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yEn/ELfsVveNn0ivv/YD/K38lx
/x/sR/kHOe7/g/0o/yTH/X+wH+Vf5Lj/D/aj/Jsc9//BfpT/kOP+P9iP8l9y
3P8H+1H+t+kFr3hw/x/sR308uP8P9qM+Htz/B/tRHw/u/4P9qI8H9//BftTH
g/v/YD/q48H9f7Af9fHg/j/Yj/p4cP8f7Mf/2I+8hbfxDt7Fe3gfH+BDfISP
8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb3jZ9Ir7/2A/yt/Jcf8f
7Ef5Bznu/4P9KP8kx/1/sB/lX+S4/w/2o/ybHPf/wX6U/5Dj/j/Yj/Jfctz/
B/tR/rfpBa94cP8f7Ed9PLj/D/ajPh7c/wf7UR8P7v+D/aiPB/f/wX7Ux4P7
/2A/6uPB/X+wH/Xx4P4/2I/6eHD/H+zHsB95C2/jHbyL9/A+PsCH+Agf4xN8
is/wOb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/Cy6RX3/8F+lL+T4/4/2I/y
D3Lc/wf7Uf5Jjvv/YD/Kv8hx/x/sR/k3Oe7/g/0o/yHH/X+wH+W/5Lj/D/aj
/G/TC17x4P4/2I/6eHD/H+xHfTy4/w/2oz4e3P8H+1EfD+7/g/2ojwf3/8F+
1MeD+/9gP+rjwf1/sB/18eD+P/69/B9owBSv
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
H7cHMgs/7gxkFvbc4T7OLw9kK3u9zTmYc5fHYtLdbqnp+50b8y7zM2H+A+7D
vHs8FqvudcuedglUi9zfBz2W9/7hQO8+bj0eyBHseTKQL3jzQiA7qK3HArnG
uBfdhwePBjKO2FOeh23PBTII8552H14+7z7yPuE1We8l58OetwKZgh9vu8Wn
1wKZhT2vBjKF80d8HezjlUDGEXsvkDV48LJzE3vdObDqHefGuWcDmcu+/xfo
vWQfb3gs9/JNt8T+CVRj1Mczvj7mv+818enjQAbhyqeBTMGbbwK931jyUSDv
GPet+3Diw0D2EfvM8/Dyq0AOYtLn7sPOr91H3k+8Jut953z49EcgRzDmT7c4
9FMgp7Dkx0Aecf53IFO4zh8CuUbsA18f+/veuYn97Bz49JdzM/9d32Oex++B
XGMfv/bHiYHM+M0tsS98TZj9XyCz8GnSUO8973IYyiMcikP5gitVqDqhzoJQ
xjGuDtWHE/wDK/IRS0LNw8gilEH4l4bqw7YyVB95o1Brst4gVD58Gi2UIxgz
eqgWh4ahnMKSLpRHnBdxv1bU5+2PNpRrxMYK5Qs2NKFyExspVA58GiNUbkzK
QznLvkcN5Rr7GDnUWL5Ro4RqiU0SyhTuYxbq+pg/dqg1MWz8UB7h0IShfMGV
KULZQc2NF8o4xk0Zqg8Pxg3lHbGJQs3DyMlCPTe+vROH6mMfk4fqI+8EodZk
valC5cOemUOZgh+zhGrxabpQZmHPtKFM4fzfQHXJezNNKOOIjRPq+tjf1KFy
E5s+VA6smjVUbpwbM9Q95nnMFMoI9jFDqLHU/YyhWmL8JuPvl/yunS1UDmyb
PVSLQ/OEMghX5gtlCt4sGsoOamvuUN4xbrFQfXgwVyj7iM0fah5eLhyqxjBv
gVB92LlIqD7yzhtqTdZbKJR9zFk8VG4cWjGUI/i0ZCi/sGTpUH7h0FKh+jhf
JZQvGLBCKJuYv0SofMxfNpRT1PRKoXLj3PKhfuszZ7lQcc6XCbUOcxYMdR3s
deVQ81hv1VBrYtJa/Z9/CWTJOqEcwZiNQ70H+LFGKOPwaZNQfRiweijviK0b
ah5GbhjKPoxfL1QfXm4Uqo+8a4dak/U2DZUPb/gH9DiCGdu7xaQtQzmFN1uE
coTzHUPZhCWbh3KN2Gqhro/9bebcxLZyDnzawbmZP37vyF3UT39sG8oF9rG1
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
Dgz7yrnx73+RfGffn0XylH184rHY9qlbYr9F8ov7+Kavj/nfek0c+jGSZTj0
cyRfcOWvSHaw9x8iGce4v913Rn98H8k4Yr94Hlb94efGs/3VfezjT/eR9yev
yXr/OB/GpLHqE1eyWC2WBLEcwS3+hVMsO8fzuK/Y9F8kv4h95+tjf/86N7Ew
Vg4My2Plxr+vfY95HkmsOmcfUayx2BbHaonxO4y/X/L3zzKWldi2V9o73x+j
9ccwlilYMkYsL6izMWO1GNDG8g6rxorVhxNNLPuIdbHi5Bo5llnYOXqseiPv
SLHWITaI5SPzR4tlH+MmjmUKlkwayxrMGC+WQVg1biy/OP+x//Ox/XFcf4wT
yzhik8TKwfzJY9U23owfKwcmTRTrtz7rTRjLLM4niBXnfOxY10reUWN9A9jr
KLGuj/PJYu2RNaaL5Q5+zBrLZcyYLVZLrU8Tyylsmz1WHzZMHcs+YtPGipNr
hlg+Ytgssb4x5J0+1jrEpoplIvMXiGUHTiwYq8WhhWK12DNXLDuwauFYffgx
Raz7hKlzx4pj0pyxjGPOlLHirDdHrL0Tmz9W/bP2IrHyYcZ8sWqb2Dyx8uHZ
vLFaYovFcgeTtolVV7z727rlP1NaMpY7WLJ0LEcwZuVYXlBPS8QyjnGrxOrD
gMVj5Sa2TKx5GLlirLrCueX6P38RycuVYvWRd6lYa7LeqrHy4c16sRzBjPVj
tZi0Ziyn8GaNWI5w/pPf0+P7Y/VYrhHbKJYvGLBarNzE1oqVA582iJUb21aI
ZS77XjfWd4h9rB1rLKauE6slNnOs3x+8N8vHuj7mbxxrTUzaPJY7WLJlLEcw
Zof+qPqj7o/NYhnHuB3dRx1vGss7Ylt5HkZu5+eGPVu7j+e6vfvIu4XXZL2d
nA9X9o7lAn7s4xafdotlFpbsGssdzheN9a7xDu0Syyxim8S6Pva3s3MT2905
sGpf58a8DWPdY57HXrFqnn3s4bHU/Z5uic0U6zcE93fGWDXK+X7Oh5eHxfIF
b7CKGpvS7wIttXtILJsm8PtBHx4cHMs+Yoc6Tq4jYlmJc8fEMo68h3sdYgfF
spL5Z8R6D/DjTLf4dJZbfDopljsYdmes+uF9v8st7+bJjmPPibEsY84dseqQ
OSd478RO9z1i7aNjWcleT4t1v4id4nw4d6pbYnd7TWrlqFjfA+af7f1i54Wx
TMGSi2NZg0PnxTIL5y6IZRnjror1ruDN+Y4Tu8TzsPOKWCZi2KXuw9Er3cf8
i7wm610TyxfsuTVWfeLKbW6x5Kb+WDaWMefGcpP9nePr4Pz6WNZg23WxvOP8
Wufm/AbHMex25+a+HxnrXeAe3RKrztnHzV6T86t93ez151jvGc/q/Vj1Rp19
GKseeH8fiGUKljweyynMeMIttXVfLO+w6kn34cG9sewjdr/j5HoollnY+Vis
eiPvg16H2D1+5sx/KdY3AEtedosfr7jFp2di+YUlB8T6ZvNbYP9Y9cf5s45j
29OxLGPOa7Esw56nvHdiL8b6DrH2o7H8Za8vxLKM2HPOh3nPuyX2ge8l9/GR
WN8G5r/q/bLeO7FMwZKPvVf2/onbA/vjrVjeYdWn7qOm/xfLPmJvO06u92KZ
xbP8yM+QvO96HWJvxvKR+d/Fqivq8nu3WPKDW6z6IpZNh3p97iumvO57hqlf
Oo5zn8cyizlvOM56n3nvxL6N9b6y9sOx3gXu0TexXCP2lfPh2dduiV0e63cM
9flLrPcXh05Mem/6Y9r++D2WU7jyZyxT8CZIVG/U32+xvGNcmKgPM351PmJ/
eR6G/RfLSuz5232Yyn+hjD7y/uE1We/fWM4yJ0qUG28GiXzBkiSRTRiWJTIF
w9JEfZx3ieoWY+pE18/8OFE+5heJ/MKqJlFunKv6P1/me1YminOeJ1qHOf/4
Othrm2ge6w0TrYk9o/V/vjGWYWMkMgVjxk/0bcDpURL5hU8TJOqjjkdOZBmx
MRPNw8hxE30z+M6MlagPL8dL1Efe0ROtyXoTJsqHK1Mlqkn8mDpRi0+TJjIL
SyZJ5A7nvBOYhU8TJzKL2EiJro/9TZQoN7HJEuXAKt4pcjN/i0TPkns/ZaLa
Zh+TJxrLuzxFopbYdInWxJUZErmDVasmqjfqbKZENmHJzIlaLJk1kTU4NGOi
eYybJ1HtUVuzJBrLuLkTWUZszkQ+4s1ciVpisyfyFEdnS5Sb83kT5cOG+RK1
GLN4ou8BliyQyCO8WSiRX7iyYKI+zpdO5BS1Pn+iHMxZONFYfFokUcs3Z4lE
ufFvjkT7Yt9LJurDwkUTjcXUxRK17GmcRN8/3qGlEo1l7ekT3W/u9fKJbMKS
FRK1WLJSImtwaLlExjFuzUTfRVxZMdFYxq2R6Lc7sdUSPTf+3rl6opbYKok8
5bmunCg352slyocraydqsWeTRKbgx7o2Cz/WT2QW9qyXqI/zZRPZyl7XSZSD
ORskGotJGyZqqelNE+XGvGUSPRPmb+Y+zNso0Vis2jhRy57GTlSL3N/NPZb3
fku/+7i1bSJHsGf7RL7gzW6J7KC2tknkGuN2dx8ebJ3IOGI7eB627ZLIIMzb
0X14uav7yLud12S9PZwPew5KZAp+HOwWn/ZNZBb27JPIFM638nWwj70TGUfs
sETW4MFe/TGqY/s5B1Yd4tw4t3Mic9n3gYneS/axv8dyLw9wS+ziRDVGfezk
62P+4V4Tn45OZBCuHJvIFLw5JdH7jSVHJfKOcae6DyeOTGQfseM8Dy9PSuQg
Jh3vPuw82X3kPcZrst5pzodP5ydyBGMucItDZyVyCkvOTOQR5xclMoXrPCOR
a8SO8PWxv9Odm9jZzoFPFzo38w/1PeZ5nJfINfZxjsdixrluiZ3ga8LsSxOZ
hU9PJ3rveZevSOQRDl2VyBdcuTFRnVBnlycyjnE3uQ8nLnM+Yld7HkZen8gg
/LvGfdh2g/vIe6XXZL2bnQ+f7knkCMbc6xaHbk/kFJbclsgjzvk7M/8Mj/8M
4dZErhF7IJEv2HCLcxO7wznw6T7nxqTrEjnLvu9O5Br7uNNj+Ubd5ZbYU4lM
4T5e6+tj/oNeE8MeTeQRDj2eyBdceS6RHdTcI4mMY9zz7sODhxN5R+wJz8PI
Z/zc+PY+6T728az7yPuY12S9F5wPe95MZAp+/M8tPr2SyCzseTmRKZxfkqgu
eW9eSmQcsYd8fezvRecm9qpzYNVbzo1z9/se8zzeSGQE+3jNY6n7190S4zcZ
f7/kd+3bzoFt7/bHnokc+iiRQbjySSJT8ObrRHZQWx8m8o5x37gPDz5IZB+x
Tz0PL79MVGOY95n7sPMr95H3Y6/Jel8kso853zo3Dv2eyBF8+j6RX1jyYyK/
cOgH93H+VyJfMOC3RDYx/zvnY/7PiZyipv9wbpz7NdFvfeb84jjnP3kd5nzu
62Cvf3oe6/3tNTGJ/xEI3MGSMJUjGFOkeg/w479ExjGuTNWHAf8m8o5YlGoe
Rmap7MP4OFUfXuap+sgbpFqT9apU+fBmlFSOYAb/bJ4Wk9pUTuFNk8oRzkdP
ZROWDFK5RuwfXx/7q1PlJtalyoFP/HN/cjP/sf7PG/bHRv0xcioX2Mcw1Vhq
faRULbExUq2JMWOlMgif5k9VY9TBOKn8wp5xU7W4Mn4qU/Bm7FTzGDdZKkeo
s/FSjWXcpKlcIzZxKr+orUlStcQmTGUodk6QKjfnk6fKhytTpGqxZ8ZUpuDH
VKnMwo9pUpmFPVOn6uN81lSmUPdTpsrBnGlTjcWk6VK1GDlTqtyYN1GqfbHv
mVP1Yd70qcbyXZohVcue0lTfP96hWVKNZe0xU91v7vWcqfzCnrlStbgyTypT
8GaOVK4xbpH+z+/17fv9MXeqsYxbOJUvxBZI9dywZ6H+z+8kis2XylCe67yp
cnO+aKp8uLJYqhZ7lk9lCn4skcos/FgqlVnYs2SqPs5nT+Use108VQ7mLJ1q
LCYtk6qlpldIlRvzZkv1TJi/Yqo+zFs21VisWi5Vy56SVLXI/V0p1VgMWzlV
iz1rpHIEe9ZK5QveUB/YQW2tnso1xlEz9OHBaqmMI7Z2qnnYtn4qgzBvnVR9
eLlBqj7yrplqTdbbOFU+7NkmlSn4sa1bfNo8lVnYs1kqUzg/JtV7z/u+aSrj
iB2dqsaIbZIqN7EtnAOrtnNunFsvlbnse+tU7yX72NJjuZdbuSV2rNekPtZN
dX3M3yGVcTi0SyrLcGhXtxizeypfsGfnVMYxbqdUrnG+m8cybt9UBlETe6ey
DAv3cUtsz1Se4ugezs35fp6HWwekMgirjkjlC64cnMogrDo0lSkYs6Ovgz0d
lMo1xh3oHJwf4nnMOczzMOBI58az7X2PuS9HuY9ns7/3xZ4O9zz2RJ3x9xO+
38f5HuPWranqgXf/xFR+YdLJqTzCmLNS+UWtnJDKNcad7T7q73jnI3aK52HS
GanMwqFT3YedZ7qPvCd5TdY7x/mw57L+WDCVJZe7xZsLUhmEVeen8ovzVVLV
H78dzktlHLGrUlmDMec6N7ELnQOTrnBunDs9lb/s+5JU3yRsu8hj8exit8Ru
SWUW9/E0Xx/zr/aamHR9Kr8w6cZUHmHMHansYO/XpXKNcXe6b9X+uDaVg8Ru
8jxMus3PDYdudh/7uN195L3Ba7LeXc6HMQ+nqk9cecQtltyXyhHcujeVZWt6
HvcVm+5J5Rexa3x97O9u5yZ2v3Ng2KPOjX9X+h7zPB5KVefs4wGPxbYH3RJ7
PJWPePZkKncwaeOs961v/+uPZ1JZhkPPpfIFV15NZQc193Qq4xj3mvuw4Snn
I/a852HVy6kso85ecB+OvuI+8j7rNVnvdefDnvdTmYIlH7jFm7dSGYRV/0vl
F+dP+Pq4tjdTGUfs41T1jDFvODext50Dkz50bkx6KZXv7Pu9VP9+Bvt4x2Px
7F23xIJM9UZNvOjrY/4nXhOTvkjlEYZ9lcojXPkxlddY8nkq7xj3k/vw4LNU
xhH72vMw8vtU3xK+M9+4D9t+cB95v/SarPez82HPP6lMwY9/3eLT76nMwp7f
UpnCOf8jbDjFdf6ayjhin/r62N8vzk3sD+fAqv+cm/kf+R7zPP5OZQT7+NNj
qfu/3BL7LpXLXGeUySOsmipTPfB7Oc1kEK7kmUzBmy6THdRWksk7xg0z9eFB
nCkfsbL/86WpvGwy1RjmVZn6sLPN1EfeLNOarDdSpnzYM3YmU/BjnEwtPo2W
ySzsGTWTKZzzm28vf1dGyWQcsfEzWYMHI2fKTWz0TDmwatxMuXFukMlf9j1W
pm8S+xgj01h8HTNTS2zKTGZxH+tM18f8CTKtiU+TZDIIVybLZAreTJup3rBk
4kzeMW66TH14MFEm+4hNnmkeXk6d6blh0hSZ+tjHNJn6yDtppjVZb/pM+bBn
jkym4MecmVp8mjmTWdgzUyZTOA8z1SXvzYyZjCM2YabrY38zZMpNbJZMObBq
rky5cW68TPeY5zF7JiPYx6yZxlL3s2VqifHvYvDPhPh3qr5NVZe8x/NkMg6H
FsxkEK4snMkUvFkqkx3U1gKZvGMc/64ufXgwfyb7iC2SaR5eLpGpxjBv0Ux9
2Llkpj7yLpRpTdbj3/0lH/asmskU/FgtU4tPK2QyC3uWz2QK57tlqiXe/eUy
GUds10y1R2zZTLmJrZgpB1atnik3zi2eyV/2vUqmmmcfK2Uay/1bOVNLbHev
SU0slun6mL9mJuNwaN1MluHQeplajNkgky/Ys04m4xi3dibXOF8/01jGbZbJ
d96jTTJZhoWbZmqJbZTJUxzdMFNuzjf3PNzaMpM1OLRTplrFmG0yOYJb22cy
CG/WynQd7GnrTMYxbivn4Hy7/ig8ZwfPo453dm6sWiPTPea+7OI+ns0W3hd7
2tHz2NPcmd533tE9fI8x6bxM9UZN7J3JMhzaN5MvuHJIJrPwY69MxjHuUPdR
c3s6H7H9PA+rDspkGXW2v/tw9GD3kXcfr8l6hzkfxhyf6XuAKye4xZKjMjmC
W0dmsozzeTPVH78RjsjkF7GTM/mFN4c7N7GjnQPDTnRu/Dswk+/s+7hMnrKP
YzwW2451S+zcTH5xHw/w9TH/FK+JQ2dksgyHzsrkC65cmMkO9n56JuMYd5H7
5uuP0zIZR+xsz8Oq8/3ceLbnuI99XOA+8p7pNVnvYufDmGsy1SeuXOsWSy7P
5AhuXZbJsoU8j/uKTZdm8ovYqb4+9neJcxO7wjkw7Drnxr+TfI95HldnqnP2
caXHYttVbon90/T3rj/O7I/rnQMv/+7PT3fs9kymYMl9mbygzu53iwG3ZvIO
qx5wH07cksk+Yrc5Tq47M5mFnfdmqjfy3uF1iN2cyUfm35PJPsY9mckULHk6
kzWY8Ugmg7Dq4Ux+cX5G3j/z/pilPx7KZByxp5yD+c9mqm28edQ5MOmJTL/1
We/xTGZx/pjjnD/oayXv3Zm+Aez1Ll8f5894j6zxaiZ38OPtTC5jxjtuqfWX
MzmFbe+6Dxte6o9tHXvFcXK9nslHDHsr0zeGvK95HWIvZDIROz/LZAdOfO4W
h75wiz0fZLIDq750H3485/uEqR86jknvZzKOOc87znrvee/EPs1U/6z9lfNh
xieZapvYR86HZx+7JfZNJncwaaRcdcW7P3Kulvf3+0zuYMmPmRzBmD8yeUE9
fZfJOMb96T4M+Na5if3keRj5W6a6wrmf3YeXv7uPvD94Tdb7y/nwJs7lCGYk
uVpM+i+TU3jzbyZHOD+rHzNrf8zWH/9kco1YnssXDPjbuYnxP/BMDnxKc+XG
tl8zmcu+o1zfIfYR5BqLqWGultj/Mv3+4L35xdfH/CLXmpg0yOUOlrS5HMGY
0fo/39i3N/VHncs4xo2eq486rnJ5R6zLNQ8jR8n13PjvVA1z9fFcR83VR94m
15qsN0aufLgyYS4X8GOiXC0+jZPLLCwZO5c7nH/td413aKxcZhErc10f+xsz
V25i4+bKgVUT58qNeVmue8zzmCBXzbOP8XKNpe7Hz9USezPTbwju7xuZapTz
SXLlw8tpcvmCN1hFjVFDmEVL7U6Vyybs4f14MZMHU+ayj9jUueLkmi6XlTg3
Uy7jyDttrnWITZHLSubPn+s9wI8FcrX4tGCuFp/mzOUOhq2fq3543zfI1fJu
zpUrjj1z5LKMOevlqkPmzJ5r78Tmy3WPWHvGXFay13lz3S9ic+fKh3Pz5GqJ
bZhrTWplhlzfA+YvlGu/2LlELlOwZKlc1uDQornMwrnFc1nGuBVzvSt4s1iu
OLGlc83DzuVzmYhhy+Tqw9EVcvUxf8lca7Leyrl8wZ61c9UnrqyTq8WSNXK5
gzGL5HKT/S2c6zo4Xy2XNdi2ai7vOF8lV27OV88VJ9e6uXJz36fP9S5wj9bK
VefsY81ca3K+Uq7rZq9n2yGe1WG56o06OyJXPfD+bpbLFCzZNpdTmLGdW2pr
k1zeYdX27sODjXPZR2zTXHFybZHLLOzcJle9kXdzr0NsI/vI/D1yfQOwZE+3
+LGXW3zaKZdfWDJZrm82vwUmzVV/nO/sOLbtmMsy5uyTyzLs2cF7J7Z7ru8Q
a2+dy1/2ulsuy4jt4nyYt6tbYof7XnIft8r1bWD+3t4v6x2cyxQsOSrXXtn7
0W4n748Dc3mHVce4j5o+IJd9xA5ynFyH5jKLZ3mknyF5D/E6xPbP5SPzT81V
V9TlaW6x5HS3WHV8Lpum9vrcV0zZ1/cMU09wHOeOy2UWc/ZznPWO9d6JnZLr
fWXtLf0ucI9OzuUasROdD89OcktsuVy/Y6jPc3K9vzg0e9Gb07cv98f5uZzC
lQtzmYI3V+SqN+rvvFzeMe5K92HGuc5H7CLPw7DLclmJPRe7D1Mvdx95L/Ca
rHdpLmeZc5Vz480tuXzBkmty2YRh1+UyBcOudR/nt+eqW4y52dfP/Kudj/k3
5PILq251bpy7qT+W9ZwbHef8eq/DnEt8Hez1Ns9jvTu8Jvbck8sdDLsvlykY
82iubwNO353LL8Y95j7q+K5clhG73/Mw8uFc3wy+Mw+4Dy8fcR957/WarPe4
8+HKC7lqEj9edItPT+cyC0ueyuUO57wTmIVPT+Yyi9idvj7294RzE3vGObDq
JedmflvoWXLvn89V2+zjWY/lXX7OLbFXvCauvJbLHaz6K1e9UWdv5LIJS950
iyVv5bIGh173PMZ9mKv2qK3/eSzjPshlGbH3cvmIN++7JfZOLk9x9G3n5vwj
58OGj91izDe5vgdY8mkuj/Dm81x+4cpn7uP8h1xOUeufOAdzvvBYfPrSLd+c
b50b/971vtj3d+7Dwq88FlO/dsueHsr1/eMd+t5jWftV32/u9S+5bMKSX91i
ye+5rMGhn3MZxzj+j0j4LuLKbx7LuP9y/XYn9refG3/v/Lc/znTsz1ye8lz/
cG7Og0L5cCUs1GJPVcgU/IgLmYUfaSGzsCcp1Mf5T7lsZa9RoRzMyQqNxaS8
UEtN14VyY96PfibMHxTqw7yi0FisKgu17OnBXLXI/W0KjeW97wq9+7g1SiFH
sGe0Qr7gzbiF7KC2Ri7kGuPGK9SHByMVMo7Y6IXmYdvYhQzCvDEK9eHlOIX6
yDtqoTVZb/xC+bBnikKm4MeUhVp8mriQWdgzUSFTOB8Wug72MWEh44hNU8ga
PJigUG5ikxTKgVVTFcqNc2MVMpd9T17ovWQfkxYay72crFBLbMlCNUZ9jFno
+pg/baE18WnGQgbhysyFTMGbuQq931gyQyHvGDd3oT6cmL6QfcRmKTQPL+co
5CAmzVqoDzvnLNRH3pkKrcl68xTKh0+LFnIEYxYr1OLQAoWcwpL5C3nE+RKF
TOE65yvkGrHpCl0f+5u3UG5iCxbKgU+LF8rN/KkL3WOexyKFXGMfCxUaixkL
F2qJzVbomjB76UJm4dNOhd573uXlCnmEQysU8gVXVi9UJ9TZsoWMY9wahfpw
YplC+YitWGgeRq5ayCD8W6lQH7atVqiPvMsXWpP11iyUD582LuQIxmxSqMWh
dQs5hSXrFPKI89WqPmfZ5+yPtQu5RmzzQr5gw1qFchNbr1AOfNq0UG5MWqWQ
s+x7o/7P/+Tax/qFxvKN2qBQi3k7FjKF+7hyoetj/hZeE8O2KeQRDm1XyBdc
2bWQHdTc1oWMY9xu7sODrQp5R2x7z8PInf3c+Pbu4D72sYv7yLut12S93Z0P
ew4oZAp+HOgWn/YuZBb27FXIFM6XKlSXvDd7FjKO2Ja+Pva3h3MT28c5sOog
58a5zXyPeR77FzKCfezrsdT9fm6J8ZuMv1/yu/Zg58C2Q9zi0JGFDMKVowuZ
gjcnFbKD2jqikHeMO9l9eHB4IfuIHeN5eHlCoRrDvGPdh50nuo+8R3lN1ju+
kH3MOcW5cei8Qo7g02mF/MKSMwr5hUOnu4/zCwv5ggHnFrKJ+ac6H/PPKuQU
NX2+c+PcOYV+6zPnbMc5P9PrMOc4Xwd7vcDzWO8ir4lJlxVyB0uuKOQIxlzv
9wA/Li1kHONucB8GXFLIO2JXeh5GXlvIPoy/yn14eZ37yHu512S9G50Pb+4q
5Ahm3O0Wk24t5BTe3FLIEc7vLWQTltxcyDViF/v62N9Nzk3sNufAp3ucm/nb
9I5k/ZH3x52FXGAft3sstX6HW2L3eU2MeaCQQfj0aaEaow4eKuQX9jzsFlce
648NC3nzoOcx7tlCjlBnj3gs9jxTyDViTxXyi9p62i2xJwoZip2POzfnzzkf
rjzvFnveKGQKfrxYyCz8eLmQWdjzkvs4f7uQKdT9C87BnFc8FpNedYuRbzo3
5j3pfbHv/7kP817zWL5Lr7tlT9cU+v7xDr3lsax9v+839/r9Qn5hzwduceWj
QqbgzXuFXGPcl/1xaH8c1h8feizjvijkC7HP/Nyw53O3xD4pZCjP9WPn5vwr
58OVr91izy+FTMGPbwuZhR/fFzILe75zH+fvFnKWvX7jHMz5wWMx6Ue31PSv
zo157/iZMP8392HeTx6LVT+7ZU9XF6pF7u/vHothf7jFnn8LOYI9/B8S4gve
UB/YQW39U8g1xlEz9OHB34WMIxaUmodtSSmDMC8s1YeXaak+8v7nNVmvKJUP
e0YqZQp+jFyqxadBKbOwpy5lCuczl3rved+rUsYRm6lUjRErS+Um1pTKgVWj
lMqNc3Epc9n3sNR7yT7aUmO5l12pltgspdakPqJS18f80UoZh0NjlbIMh8Yu
1WLMuKV8wZ4xSxnHuDFKucb5OKXGMm7iUgZRExOWsgwLJyrVEhu/lKc4Op5d
43ySUvNwa7JSBmHV9KV8wZWp+j8/WsiqaUqZgjGjl7oO9jRFKdewavJSOTif
utQ85kxbah4GzFAqN56NWuoec19mLNXHs5m01L7Y03Sl5rEn6oy/n/D9nrXU
PcattUvVA+/+HKX8wqS5SnmEMQuW8otamb2Ua4xbqFQf9TdbqXzE5i41D5Pm
L2UWDs1Tqg87FyjVR945S63JeguXyoc9y5QyBUuWLdXizeKlDMKqxUr5xfmf
heqP3w6LljKO2AqlrMGYRUrlJrZEqRyYtFyp3Dg3Xyl/2ffSpb5J7GPJUmPx
bKlSLbG1SpnFfZy31PUxf8VSa2LSqqX8wqTVS3mEMeuVsoO9r1LKNcatX6rv
r/5YuZSDxNYoNQ+T1in13HBozVJ97GPdUn3kXa3Umqy3Qal8GLNlqfrEla3c
YskmpRzBrY1LWfaf98F9xaaNSvlFbKVS18f+NiyVm9impXJg2NbOjX/Ll7rH
PI8tStU5+9jMY7Ftc7fEtvVvCjzbvpQ7mFT2f3+5FJv6Y6dSluHQLqV8wZW9
S9lBze1YyjjG7eM+bNjB+Yjt6nlYtWcpy6iz3dyHo3u5j7w7e03W29f5sOew
UqZgyeFu8ebAUgZh1QGl/OJ8O18f17Z/KeOIHVWqnjFmP+cmdpBzYNIRzo1J
e5TynX0f2h8TeB8HeyyeHeKW2BWl6o2a2N3Xx/yjvSYmnVDKIww7qZRHuHJm
Ka+x5PhS3jHuLPfhwXH9MaVjJ3seRp5e6lvCd+YU92HbGe4j74lek/XOdj7s
uaSUKfhxqVt8Or+UWdhzXilTOL+8lFNc57mljCN2jK8Pg89xbmIXOAdWXebc
zD/S95jncXEpI9jHhR5L3V/klthppVzmOq8q5RFWvVCqHvi9fG0pg3Dl+lKm
4M1tpeygtq4p5R3jbncfHlztfMRu8Dy8vKVUjWHeje7DzlvdR97rvCbr3eF8
2PNgKVPw4yG3+HRPKbOw5+5SpnDOb74J/F25q5RxxB4tZQ0e3OncxO51Dqx6
2Llx7uZS/rLvB0p9k9jHfR6Lr/e7JfZ8KbO4jzf5+pj/mNfEp6dKGYQrz5Qy
BW9eLlVvWPJkKe8Y94r78OCJUvYRe9bz8PJFPzdMes597OMl95H3aa/Jeq86
H/a8W8oU/HjPLT69Wcos7HmjlCmcX1mqLnlvXi9lHLHHfX3s7zXnJvY/58Cq
950b5x7xPeZ5vFPKCPbxlsdS92+7Jca/i8G/V8q/U3VqqbrkPf6wlHE49Fkp
g3Dli1Km4M33peygtj4t5R3j+GdMx5by4JNS9hH70vPw8ttSNYZ5X7kPO79z
H3k/95qs95PzYc/fpUzBj3/c4tNvpczCnl9LmcL5OJVqiXf/l1LGERu7Uu0R
+9m5if3uHFj1r3Pj3Del/GXff5Wqefbxh8dy//50S2zcSmtSE1/7+pjP/4E5
xuFQXMkyHEoqtRiTVfIFe6JKxjEurOQa52mlsYwbVPKd96iqZBkW1pVaYkUl
T3E0r5Sb86bSPNzqKlmDQ2NUqlWMGbmSI7g1aiWD8CaodB3saaRKxjFuWCkH
56NUmsec0SrNo47HrJQbq/7zPea+jFWpj2fTVtoXexq90jz29EGp9513dLxK
9xiTFqlUb9TEhJUsw6GJK/mCK1NVMgs/JqhkHOOmrtRHzY1fKR+xSSrNw6op
KllGnU1aqQ9Hp6zUR96JKq3JetNUyocxs1b6HuDKbJVaLJmhkiO4NX0lyzj/
qFT98Rthukp+EZuzkl94M22l3MRmrJQDw2avlBv/Jq/kO/uepZKn7GOmSmOx
beZKLbGFK/nFfZys0vUxf65Ka+LQfJUsw6EFKvmCK4tXsoO9z1vJOMYtUanv
4/6Yp5JxxBasNA+rFq303Hi2C1XqYx+LVeoj7/yV1mS9JSvlw5iVKtUnrqxc
qcWSZSs5glvLVLLsc++D+4pNS1fyi9jcla6P/S1VKTex5SrlwLBVKuXGvzkq
3WOex4qV6px9LF9pLLatUKklxr+7tozNXb2Sldj2+KB3vj827o/1KpmCJZtW
8oI628wtBqxTyTus2tx9OLF2JfuIrVspTq4NKpmFnZtUqjfyrl9pHWJrVfKR
+RtXso9xO1QyBUt2qmQNZmxdySCs2qqSX5zPX/fPiHeiP7asZByxHZ2D+btU
qm282cY5MGn7Sr/1WW+7SmZxvq3jnG/hayXvRpW+Aex1w0rXx/nO3iNr7F3J
Hfw4qJLLmHGwW2p9z0pOYdsh7sOGPSrZR2wvx8m1byUfMezASt8Y8u7jdYjt
XslE5h9byQ6cOM4tDh3vFnsOr2QHVp3gPvzY1fcJU49wHJMOq2Qcc3ZznPUO
9d6JHVOp/ln7ROfDjKMr1TaxI50Pz45yS+zkSu5g0h2V6op3/67+WLXSf6Z0
WiV3sOSMSo5gzPmVvKCeTq1kHOMucB8GnOLcxM70PIw8t1Jd4dxZ7sPL89xH
3tO9Jutd6Hx4c1UlRzDjareYdGklp/DmkkqOcL5Arff07f64uJJrxK6r5AsG
XOTcxC5zDny6xrmx7ZxK5rLvKyt9h9jH5R6LqVe4JXZApd8fvDdn+/qYf73X
xKSbK7mDJbdWcgRj7u2PNfpjzf64qZJxjLvPfdTxjZW8I3ab52Hk3X5u2HO7
+3iu97iPvLd4Tda73/lw5YlKLuDHk27x6eFKZmHJQ5Xc4fykSu8a79CDlcwi
doOvj/094NzEHnEOrHrKuTHvWt9jnsfjlWqefTzqsdT9Y26J7V/pNwT3d79K
Ncr5086Hly9X8gVvsIoao4beckvtvljJJux523148EIl+4i95Di5Xq1kJc69
Wck48r7idYg9X8lK5n9S6T3Aj0/d4tNnbvHpvUruYFhSq35439NaLe/m+45j
z7uVLGNOXKsOmfOO907sY98j1n6jkpXs9SPfL2IfOB/OfeiWWFZrTWrl9Urf
A+Z/7v1i57eVTMGS7ytZg0NfVTIL576pZBnjfqv0ruDN144T+8HzsPOXSiZi
2I/uw9Ff3cf877wm6/1RyRfsCWrVJ66EtVos+beSOxjzZSU32d8Xvg7O/65k
Dbb9Vck7zv90bs7/cZxcUa3c3PfX/C5wj0bUqnP28Z/X5Px3Xzd7XbDWe8az
mrZWvVFn09eqB97fupYpWDJyLacwY5RaLbVV1vIOq0at1YcHRS37iFW14uRq
apmFnSPVqjfyDmqtQyyv9cyZP36tbwCWTFCrxY8Ja7X4NEYtv7Dk2UrfbH4L
PFOp/jgfs1Yc20avZRlzJq5lGfaMVmvvxMbr/3xnpbWHtfxlr+PUsoxv1Fi1
8mHe2LVaYtPVupfcx67Wt4H5E9XaL+tNVcsULJmx1l7Z+0y12uf6Y4pa3mHV
zLX6qOnJa9lHbMpacXJNU8ssnuUMtZ4heaeutQ6xyWr5yPx5atUVdTlvrRZL
5qvVYtVstWx6yXvivmLKJLXuGabOXiuOc7PWMos5k9aKs94stfZObO5a7ytr
t7XeBe7RXLVcIzZHrXx4NmetltjPlX7HUJ8L1Xp/ceid/s979Mee/bFoLadw
ZfFapuDNcrXqjfpbpJZ3jFu+Vh9mLFwrH7Elas3DsGVqWYk9S9bqw9Rla/WR
d7Faa7Le0rWcZc4KtXLjzVq1fMGSlWrZhGGr1DIFw1au1cf5urXqFmPWrHX9
zF+xVj7mr1bLL6xau1ZunFuj//NPvmer14pzvmqtdZizVK3rYK/r1JrHeuvV
WhN7NqrlDoZtUssUjNm61rcBpzes5RfjtnEfdbxBLcuIbVprHkZuWeubwXdm
M/fh5VbuI+/GtdZkvW2dD1d2q1WT+LG7W3zasZZZWLJDLXdqvxOYhU/b1zKL
2Pq1ro/9befcxHZyjsbv1Mief2utZ8m937VWbbOPnT2Wd3kXt8T28pq4sk8t
d7Dqolr1Rp3tV8smLNnfLZYc1B/j1nJoX89j3JG1ao/aOsBjMemIWpYRO6yW
j3hzuFtih9TyFEcPdm7Oj3I+bDjaLcacUut7gCXH1vIIb46v5ReuHOc+zs+o
5RS1foxzMOcEj8WnE93yzTnVufHvUO+LfZ/mPiw8yWMx9WS37GmLWt8/3qHT
PZa19/b95l6fU8smLDnXLZacX8saHDq7lnGMu6zWdxFXzvNYxl1a67c7sYv9
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
3m70PcCVd9xiyWuNHMGtVxtZxvlRjeqP3wivNPKL2PuN/MKbl52b2OvOgWHv
Ojf+PdvId/b9ViNP2ccbHott/+uPXR37spFf3MdnfH3M/8Br4tAnjSzDoc8a
+YIr3zayg71/3Mg4xn3nvqP746NGxhH73POw6ms/N57tF+5jH9+4j7yfek3W
+975MOaPRvWJK3+6xZKfGzmCWz81sux4z+O+YtOPjfwi9qGvj/394NzEfnEO
DPvLufHvPd9jnsfvjeqcffzqsdj2m1ti/Hec+O9u8t/t/LeRa9hz9xh9ffTH
6v0RtzIFS6pWXlBndasWA8JW3mHVoFUfTgSt7CMWtYqTK21lFnaWreqNvEmr
dYiNaOUj84tW9jFutFamYMkYrazBjGErg7Cqa+UX55/0fz6gPw7sj7aVccRG
b5WD+WO1qm28GalVDkwatdVvfdYbpZVZnI/cKs550+payZu3+gaw16zV9XE+
Zqs9ssaErdzBjylauYwZU7ZqqfXxWzmFbVO16sOG8VrZR2yCVnFyTdzKRwyb
vNU3hrwTtVqH2LitTGT+zK3swIlZWrU4NGurFnumbWUHVs3Wqg8/xm51nzB1
ulZxTJqmlXHMGadVnPWmbrV3YjO1qn/Wnr1VPsyYsVVtE5u+VT48m6FVS2zO
Vu5g0vqt6op3f4NWLf9by/O0cgdL5m/lCMYs1soL6mnuVsYxbvFWfRgwV6vc
xBZoNQ8jF2lVVzi3YKs+vFy0VR955+v//Gaj9ZZolQ9vVmzlCGas1KrFpGVa
OYU3S7dyhPNP/Z4e1B9LtXKN2KqtfMGAJVvlJrZsqxz4tHKr3Ni2cCtz2fcK
rb5D7GO5VmMxdflWLbHJWv3+4L1ZqNX1MX+1Vmti0lqt3MGSdVo5gjEbt7Lj
v/5Ys5VxjNukVR91vEYr74it22oeRm7Y6rnxv5+9Xqs+nutGrfrIu3arNVlv
01b5cGW7Vi7gx/Zu8WnLVmZhyRat3OF8jlbvGu/Q5q3MIrZ6q+tjf5s5N7Gt
nAOrdnBuzFul1T3meWzbqubZx9YeS91v45bYpK1+Q3B/J2lVo5zv6Hx4uWcr
X/AGq6ixcfwu0FK7u7eyaWS/H/ThwW6t7CO2h+Pk2ruVlTi3fyvjyLuX1yG2
aysrmX90q/cAP45xi0/HusWnQ1u5g2HXtKof3vdr3fJuHuY49hzSyjLmXN2q
DplzsPdO7CjfI9ber5WV7PXIVveL2OHOh3NHuCV2ndekVvZt9T1g/nHeL3ae
0soULDmtlTU4dGIrs3Du5FaWMe7cVu8K3pzkOLHTPQ87z25lIoad4T4cPcd9
zD/Va7Le+a18wZ4rWtUnrlzpFksubeUOxpzQyk32d7yvg/OLW1mDbRf1x7w+
v8C58e8Sx8l1lXNz3/dp9S5wjy5vVefs4zKvyfl5vm72+lmr94xn9XKreqPO
Xm1VD7y/N7cyBUvuauUUZtztltq6sZV3WHWP+/Dghlb2EbvJcXLd2sos7Lyz
Vb2R9xavQ+x6P3PmP9rqG4Alj7nFj8fd4tP9rfzCkp1bfbP5LbBTq/rj/AHH
se2+VpYx58lWlmHPvd47sUdafYdY+45W/rLXh1tZRuxB58O8h9wSe8X3kvt4
e6tvA/Of8H5Z74VWpmDJ694re3/D7S798Vwr77DqTfdR08+2so/Y846T66VW
ZvEsX/MzJO+LXofYM618ZP6HreqKuvzILZZ87Bar3m5l0x5en/uKKU/5nmHq
O47j3FutzGLO046z3v+8d2IftHpfWfu2Vu8C9+j9Vq4Re9f58Ow9t8TOavU7
hvr8vNX7i0OHdL03/TFBf3zVyilc+aaVKXjzc6t6o/6+bOUd435xH2Z84XzE
vvU8DPuxlZXY8537MPUn95H3a6/Jej+0cpY5vzo33ozo5AuW/N7KJgz7s5Up
GPaH+ziPOtUtxvzn62f+b87H/L9b+YVVQafcOPdvf5zpOf84zvlfXoc53/s6
2GvYaR7rxZ3WxJ6ikzsYVnUyBWNG6vRtwOm8k1+MG7lTH3WcdbKMWN1pHkZ2
nb4ZfGcGnfrwctipj7xlpzVZb5RO+XBl3E41iR/jdWrxaYxOZmHJ6J3c4Zx3
ArPwabROZhFL+z9f2Gp/o3bKTWzMTjmwineK3Mxfu9Oz5N6P06m22cdYncby
Lo/dqSU2Yac1cWXiTu5g1RKd6o06m7STTVgyWacWS6boZA0OTdJpHuOm71R7
1NbkncYybrpOlhGbppOPeDNtp5bYVJ08xdEpO+XmfIZO+bBhxk4txszV6XuA
JTN38ghvZu3kF67M0qmP8/k6OUWtz9QpB3Nm6zQWn2bv1PLNmbtTbvybutO+
2Pc8nfqwcI5OYzF1zk4te2o7ff94h+btNJa1J+p0v7nXC3WyCUsW7tRiyaKd
rMGhBTsZx7hlOn0XcWWRTmMZt3Sn3+7Eluz03Ph751KdWmKLd/KU57pYp9yc
L9spH64s16nFntU7mYIfK9gs/Fipk1nYs2KnPs4X6GQre12+Uw7mrNxpLCat
0qmlptfolBvz5u/0TJi/Zqc+zFu101isWq1Ty56aTrXI/V2r01je+3U6vfu4
tUEnR7Bno06+4M1W/Z+TTrW1fifXGLe1+/BgvU7GEdu40zxs27yTQZi3Sac+
vNzCfZi0Yac1WW8b58OeXTuZgh+7ucWnHTqZhT3bdzKF83U7XQf72K6TccT2
7GQNHmzr3MR2dA6s2t25cW6zTuay7106vZfsYyeP5V7u7JbYaZ1qjPrYtNP1
MX8vr4lP+3UyCFcO6GQK3hze6f3Gkn07ece4I9yHE/t0so/YgZ6Hl4d2chCT
DnIfdh7mPvLu7zVZ70jnw6eTOjmCMSe7xaFjOzmFJcd08ojzUzuZwnUe3ck1
Ynv7+tjfUc5N7DjnwKdTnJv5e/ge8zxO7OQa+zjeYzHjBLfEDvY1YfYZnczC
p/s6vfe8y2d38giHzu3kC65c0qlOqLOzOhnHuEvdhxNnOh+x8zwPIy/qZBD+
ne8+bLvYfeQ9x2uy3mXOh0/Xd3IEY25wi0NXdXIKS67s5BHnF43Ur9Uf8/XH
FZ1cI3ZzJ1+w4XLnJna1c+DTjc6NSRd2cpZ9X9fJNfZxjcfyjbrWLbF7O5nC
fbzA18f8W7wmht3RySMcuquTL7jyYCc7qLnbOxnHuIfchwe3dfKO2N2eh5H3
+7nx7b3HfezjAfeR906vyXoPOx/2PNPJFPx4rj+27OTT453Mwp7HOpnC+emd
6pL35tFOxhG71dfH/h5xbmJPOAdWPe/cOHeT7zHP4+lORrCPJz2Wun/KLTF+
k/H3y///53POgW0vusWh1zoZhCtvdDIFb97rZAe19Won7xj3vvvw4JVO9hF7
0/Pw8p1ONYZ5/3Mfdr7rPvK+7jVZ7+1O9jHnA+fGoa86OYJPH3XyC0s+6eQX
Dn3sPs6/7eQLBnzZySbmf+h8zP+sk1PU9NfOjXNfdPqtz5zPHef8U6/DnLd8
Hez1G89jve+8Jib91MkdLPmlkyMY87ffA/z4sZNxjPvHfRjwQyfviP3qeRj5
Zyf7MP439+HlX+4j789ek/X+dT68yYZyBDPyoVpMCodyCm+CoRzhvBzKJiwZ
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
nMecjWrOo443jdxYtVTNe8x92Sz6eDZr1dwXe9q45jz2NG3N9513dKu4x5h0
Qs16oya2rWkZDm1f0xdc2a2mWfixTU3jGLd79FFzW0c+YjvEPKzapaZl1NmO
0Yeju0YfebeLNVlvj8iHMQfW/B7gykHRYsk+NR3Brb1rWsb59DXrj98Ie9X0
i9ihNf3Cmz0jN7F9IweGHRy58W/nmr6z7wNqeso+9oux2LZ/tMSOr+kX93Gn
uD7mHxZr4tBRNS3DoWNq+oIrJ9e0g70fWdM4xp0SfTMMjyNqGkfs2JiHVSfG
c+PZHhd97OOk6CPv0bEm650a+TDmvJr1iSvnR4slZ9Z0BLfOqGnZLDGP+4pN
p9f0i9jhcX3s77TITeysyIFhF0Ru/Dsk7jHP49yadc4+zo6x2HZOtMT4Hcbf
L///z9JquoY99ebwW9YYWj88Lq9pGQ5dWdMXXLmhph3U3GU1jWPcjdGHDZfW
NI7YVTEPq66raRl1dnX04ej10UfeK2JN1ru2pq3MuSly49A9NU3Bm1tq+oVb
t9X0CLdujT7O769Zw7hyd02bmH9z5GP+HTU9wqd7Izcm3VXzdz9z7ow457fH
Osy5Jq6Dvd4X81jvweGxTk2HHq1pEG49XtMgLHmuptH48UhN4xj3fPRhwMM1
XSP2RMzDxWdqfj/4tjwZfXj2bPSR97FYk/VeiHx482ZNRzDjrWgx6ZWaTuHN
yzUd4fydmjZhyUs1XSP2UFwf+3sxchN7NXLg09uRm/lH14e1MzwmHx5v1HSB
fbwWY6n116Ml9m6siTHv1zQIn0avW2PUwYc1/cKej6LFlU9qmoI3H8Q8xn1d
0xHq7OMYy7ivarpG7IuaflFbX0ZL7LOahmLnp5Gb828iH658Gy32/FbTFPz4
vqZZ+PFjTbOw54fo4/yvmqZQ999FDub8FGMx6edoMfL3yI15n8e+2Pcf0Yd5
v8RYvku/Rsuenq75neMd+jPGsvZ7cb+51//V9At7Rqrb4soodU3Bm39rusa4
seuacsnwGLnuWMaNVfd3HrEx6j43/vfAMeu2xEarayjPddS6uTkfp24+XBm3
bos9jbqm4Mf4dc3CjwnrmoU9E9Tt4/yfms6y1/Hq5mDORHXHYtKIui013ayb
G/P+jmfC/KRuH+bV6o7Fqnrdlj09VbMWub+tumMxrF23xZ6iriPY06vrC95Q
H9hBbXXqusY4aoY+PMjrGkesrDsP2yauaxDmVXX78HLS4Z8fqJm3W3dN1pui
bj7smbGuKfgxU90Wn6apaxb2TF3XFM5XrPve875PVdc4YivUrTFiU9bNTWza
ujmwaua6uXFuUNdc9j1D3feSfUxXdyz3cvq6LbGV6q5JffTrXh/zZ61rHA7N
WdcyHJqrbosx89T1BXvmqGsc42av6xrnc9cdy7iF6hpETSxQ1zIsXLBuS2y+
up7i6LzhGucL152HW4vWNQirlq3rC64sUdcgrFqqrikYM1vd62BPi9d1jXGL
1c3B+ZJ15zFn6brzMGC5urnxbJa695j7snzdPp7NInX3xZ6WqTuPPR0TNvNe
rFz3HuPWnnXrgXd/tbp+YdIadT3CmPXr+kWtrFrXNcZtULeP+lulbj5ia9ad
h0nr1jULh9aq24ed69XtI+/qdddkvQ3r5sOereqagiVbR4s3m9Y1CKs2qesX
52nd+uO3w8Z1jSO2XV1rMGajurmJbRY5MGmbyI1z69T1l31vWfebxD42j7F4
tkW0xPaoaxb3ce2618f87WNNTNq5rl+YtGtdjzBmn7p2sPed6rrGuH2jLxse
O9Z1kNhuMQ+T9ornhkO7Rx/72Dv6yLtLrMl6+0U+jDm8bn3iypHDY5K6lhxU
1xHcOrCuZd2Yx33FpgPq+kVsh7g+9rd/5CZ2cOTAsKMiN/5tG/eY53FY3Tpn
H4fEWGw7NFpi89etP+rz2LrvL/ZMMfwt+/CwfWR4nFDXLzw7MVpMOrmuNRhz
fF3LGHdWXVOoxZNiLOPOrFtXxE6vayWenREtsVPrWoapp0Ruzk+LPuacHbmx
59K6vuDKlXXrEzPOq2sZhl1Q1yYMO7euX8TOiRycXxhxHLq4rk3cm8siN55d
Hi0+XRJx1r4o5jHnioizj6tiL9jzaN16pv6uresXDl0XLYbdUNcjXLmmrl+M
u72u3bhyfYxl3G11vyXEbqnrFN+QW6MldlNdN7HtxsjN+R2RD1fujBZ7Hqpr
Cn7cXdcs/Li3rlnYc0/0cX51XB97vStyMOe+GItJ90dL7T4cuTHv/Hg+PJtH
oo979ECMxYkHo2VPozR8ZjzDx+Je4s0TdT3CqiejxbCnosWhp6PFmGeixZhn
o8Wh56LFxeejxcUXosWwF6Olzl6KFv9ejhaTXomW2n01Wox5LVoc+riuF9T0
G3X9wpK36vqFQ6/HWGJvRx8OvRMtLr4bLd+Z9+uahU8f1TWONT6IPix8L8Yy
7sPoY9zNdd8R3qFPYl849HvdGqbWP6trFoZ9Hi0OfREtxnwZLcZ8FS0OfR0t
Ln47PI6o6+J30WLY99Hyd50fouW7+mO0+PRTtMcNj5+jxZ5fosWqT2Pv7PW3
umZxDX/EdeDKrzGW2J/Rhz1/RYs3f0eLVf/WdQrDHq/73v3/Gxh9mPdPjGXc
SA37sGrkhi3v7qgN31982m3459rwqA+PMRo6hUNjNmxxZeyGHuHN6A1rhnET
NfSF+hur4VjGTdjQQWLjNzQLkyZo2BIbt6Gb2DZOw9ycj2iYD3vYFy1W5Q1N
wZtGQ7NwKGloFq40G/Zx3mtoCh5wbeRgTqvhWExqN2x57zoNc+PceA33xb6L
hn1YlTYci3NZw5Y9jdbwXnJfug3HsvZcDWuPmhs09AuTJm7YYtKkDa3BmH5D
1xg3TcNnjCuTNBzLuKkbukNsyoZm4fpUDVtikzc0FOcma5ib82kb5sOn6Rq2
+DR7Q0fwY4aGTuHTTA1twqQZG/ZxXjV0mb1O3zAHc2ZuOBa3ZmnY4tYcDXNj
UtnwmTB/zoZ93KNZG47FttkatuyJ2uK3AN/1uRveS0zauOF7zzs+f0Oz8GmB
hi0+LdTQJryZb/jnN+uOW7KhL9Togg3HMm6JhiYSW6yhTRi2eMOW2CINjcOz
hRvm5nyphvnwaemGLT6t2tAR/Fi2oVP4tHxDmzBpuYZ9nK/Z0BFsWKZhDuas
OPzzN3XdWqlhi1urNcyNSYs23Bf7Xr1hHz6t3HAstq3SsGVP8zZ0n/uyRsOx
rD1Pw3tMbN2GZuHTeg1bfNqgoU14s05Doxm3eUNfqIn1G45l3GYNv53ENmn4
3DBp02iJbdTQOJ7rhg1zc75F5MOeLaPFqp0amoI3Wzc0C4e2bWgWrmwTfZyv
3dBi9rpV5GDOdjEWk7aPFgN2jtw4t1bDZ8L8XaIPq3aIsTi3Y7TsadeIY9ju
DQ3CrSfmHL67w2OT4bF3Q49waN+GvuDKIQ3rhDrbq6FxjDs0+nBiz4beEdsv
5mHkQQ0Nwr/9ow/bDo4+8u4Ta7LegQ2NY85hkRurTmhoDQ4d0dAsHDqqoVm4
cmT0cX5yQ1Pw4PiGHjH/8MjH/GMa2sTv+hMjNyYd19Ay5hwbcc6PjnWYc0Bc
B3s9Keax3imxJm6d0dAg7DmroSlYcmHDd5r3/fSGrjHuoujDhtMaGkfs7JiH
i+c3dBx7zok+PLsg+sh7ZqzJehdHPky6pqEduHJttNhzeUOb8OOyhgZxfn1D
R/Dj0oaWETs1ro/9XRK5iV0ROTDpusjN/PWawzodtn8Nj6sbWsY+royxOHFV
tMRuiDXx5qaGTmHSGw1rgPf91uGxQkOHbosWh+5o6Auu3BzzsO3+hjVDzd0e
Yxl3X0PjiN3T0CnsuTdaYnc1dBPb7ozcnD8Q+fDmwWjx6amGjmDMww2dwp5H
GzqFJY9EH+fPNXQEAx6KHMx5LMbi0OPR8p15OnJj292xL/b9TPTh0xMxFtue
jJY9ndfwO8c79GyMZe0b435zr19qaBYOvRwtDr3a0BdcebGhZYx7p6EpewyP
V2Is495u+HuO2Jvx3HDorWiJvd7QTZ7ra5Gb83cjH668Fy32fN7QFPz4oKFZ
+PFRQ7Ow58Po4/yFhhaz1/cjB3M+jrGY9Em01PQXkRvzno9nwvwvow/zPo2x
WPVZtOzp3Ia1yP39KsZi2NfRYs8PDR3Bnp8a+oI31Ad2UFvfN3SNcX9FHx58
19A4Yj/HPGz7vaFBmPdL9OHlH9FH3h9jTdb7O/Jhz+hNTcGPMZq2+DRSU7Ow
57+GpnA+adP3nvf934bGEZukaY0R+ydyExu5aQ6sGrNpbpz7raG57Hu0pu8l
+xil6Vju5ahNW2KTNV2T+vg1ro/5Yzc1DofGb2oZDk3QtMWYiZr6gj3jNTWO
ceM2dY3zCZuOZVzS1CBqotHUMixsNm2J1Zp6iqMjmubmvNV0Hm5lwz/f0tCq
flNfcKVoahBW9ZqagjHjNL0O9tRp6hrj8qY5OO82ncecsuk8DBg0zY1nYzW9
x9yXiZv28WzaTfeFi1XTeexp/abvGe/F5E3vMW4t27QeePenauoXJk3T1COM
mbmpX9TKlE1dY9wsTfuovyma5iM2bdN5mDRjU7NwaLqmfdg5U9M+8k7ddE3W
m7VpPuyZr6kpWDJ/0xZv5mxqEFbN0dQvzr9pWH/8dpi9qXHEFmpqDcbM1jQ3
sbma5sCkBZrmxrkZmvrLvudt+k1iH3M3HYtn8zRtiS3T1Czu4/RNr4/5Czdd
E5MWb+oXJi3Z1COMWaGpHex9saauMW7Fpn3fDo9FmzpIbKmm8zBpuabPDYeW
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
7SP2aMTJ9USilTj3TKJx5H081iH2UKKVzH8j8T3Ajzejxae3osWnlxLdwbA/
EuuH9/3PaHk3X4449ryYaBlzfk+sQ+a8EHsn9nrcI9Z+OtFK9vpa3C9ir0Q+
nHs1WmJ/xZrUylOJ3wPmvx37xc4PE03Bko8TrcGh9xLNwrkPEi1j3FeJ7wre
vB9xYp/EPOz8ItFEDPs0+nD0y+hj/kexJut9k+gL9vySWJ+48mu0WPJjojsY
826im+zvnbgOzr9PtAbbvkv0jvNvIzfnP0ScXL9Fbu77k4nvAvfo58Q6Zx8/
xZqcfx3XzV5nafme8ayqlvVGnQ1a1gPv70gtTcGSMVs6hRljtWyprX8TvcOq
sVv24cE/ifYR+y/i5BqlpVnYOUbLeiPvyC3XIfZ3PHPm11t+A7Ck0bLFj2bL
Fp/Ga+kXljyQ+M3mt8D9ifXH+QTDMVck2jZuS8uY02ppGfaM03LvxGotv0Os
PXpLf9nriJaWEZuwZT7Mm6hlS6zf8l5yH0dr+W1gftJyv6zXbWkKlkzScq/s
fdKW7YPDo9PSO6yarGUfNZ23tI9Y0TJOrrKlWTzLiVs+Q/L2Wq5DLGvpI/On
b1lX1OUMLVssmbFli1VTtrTp0dgT9xVT2i3vGaZO1TKOc1O0NIs5acs4603e
cu/Epmv5vrL2qC3fBe7RtC1dIzZ1y3x4Nk3Lltjnib9jqM9ZW76/OPTC8M9b
D49thsccLZ3ClblamoI3C7asN+pv9pbeMW6hln2YMVvLfMTmbjkPw+ZvaSX2
zNOyD1MXaNlH3jlbrsl687V0ljkLt8yNN8u29AVLFm1pE4Yt3tIUDFusZR/n
K7SsW4xZpuX1M3+RlvmYv2RLv7BquZa5cW7p4Z8/i3u2VMs450u0XIc587a8
Dva6fMt5rLdiyzWxZ9WW7mDY6i1NwZj1Wn4bcHqVln4xbv2WfdTxyi0tI7ZG
y3kYuU7LbwbfmTVb9uHlui37yLtayzVZb4OW+XBly5Y1iR9bRYtPm7Q0C0s2
bunOSPFOYBY+bdTSLGIrtbw+9rdhy9zENo0co8Q7NWbMv6Lls+Teb9GyttnH
ZjGWd3nzaIltG2viyvYt3cGqU1vWG3W2U0ubsGTnaLFk15bW4NCOw2P8GLdP
y9qjtnaJsYzbu6VlxPZs6SPe7BUtsd1beoqju0VuzveNfNiwX7QYc3jL7wGW
HNDSI7w5qKVfuHJg9HF+dEunqPX9IwdzDo6x+HRItHxzjojc+LdH7It9Hxl9
WHhojMXUw6JlT2u3/P7xDh0VY1l7u7jf3OvjW9qEJSdEiyUntbQGh45raRzj
zmz5XcSVE2Ms485o+dud2Gnx3Ph75+nREjulpac815MjN+dnRT5cOTta7Lmk
pSn4cW5Ls/Dj/JZmYc950cf5sS1tZa/nRA7mXBBjMenCaKnpSyM35h0Tz4T5
l0Uf5l0UY7Hq4mjZ01ota5H7e3mM5b2/suW7j1vXtnQEe65v6Qve3NbSDmrr
mpauMe726MODq1saR+yGmIdtt7Q0CPNujD68vDX6yHtdrMl6d0Q+7HmwpSn4
8VC0+HRPS7Ow5+6WpnB+VVwH+7irpXHEHm1pDR7cGbmJ3Rs5sOrhyI1zN7c0
l30/0PK9ZB/3xVju5f3REvu4ZY1RHzfF9TH/sVgTn55qaRCuPNPSFLx5ueX7
jSVPtvSOca8Ojx1aOvFES/uIPRvz8PLFlg5i0nPRh50vRR95n441We+1yIdP
77d0BGM+iBaH3mrpFJa82dIjzj9qaQrX+UZL14g9HtfH/l6P3MTejhz49GHk
Zv4jcY95Hu+1dI19vBNjMePdaIk9H9eE2Z+2NAufxmv73vMuf9HSIxz6qqUv
uPJjyzqhzj5vaRzjfoo+nPgs8hH7OuZh5PctDcK/b6IP236IPvJ+GWuy3s+R
D5/+aekIxvwbLQ793tIpLPmtpUecf58O1xoeRw+PX1u6Rmzktr5gwy+Rm9gf
kQOf/ovcmPRdS2fZ998tXWMff8ZYvlF/RUts3LamcB+/jetj/iht18SwMdp6
hENjtfUFVyZsawc1N3pb4xg3Uds+PBitrXfExm47DyPHb/vc+PaO07aPfUzQ
to+8Y7Zdk/VGtM2HPVlbU/Ajb9viU7OtWdjTaGsK55+0rEvem3pb44iN2vb6
2F+tbW5iSdscWNVpmxvnRmp7j3keaVsj2Eer7Vjqvt22JcZvsgPjd23RNge2
ddu2ODRoaxCuTNLWFLyZuq0d1Fa/rXeMm6ZtHx5Ube0jNmnbeXg5Zdsaw7zJ
2vZh51Rt+8g7cds1WW+KtvYxZ9q2uXFo9raO4NP0bf3Ckhnb+oVDM7Tt43zu
tr5gwGxtbWL+dG3zMX/mtk5R03MO//xKS+dmbftbnzmztI1zPlPbdZgzedvr
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
c33Mo45vitxYdUbcY+7LzdHHs7ki9sWeboh57Gnv1Pedd/T2uMeY9F5qvVET
d6VahkP3pPqCKw+nmoUfd6Yax7hHoo+auyPyEbs35mHVg6mWUWf3RR+OPhR9
5L071mS9RyMfxjyf+j3AlReixZKnUh3BrSeHxyZxvm9q/fEb4fFUv3Du5VS/
8OaxyE3s6ciBYS9Gbvx7INV39v1cqqfs45kYi23PRkvs3VS/uI/3x/Ux/5VY
E4feSLUMh95K9QVXPky1g72/nmoc4z6Kvv2Gx2upxhF7O+Zh1fvx3Hi270Qf
+/gg+sj7ZqzJeh9HPoz5JrU+ceXbaLHk81RHcOuzVMsOinncV2z6NNUvYq/G
9bG/TyI3sS8iB4Z9F7nx76W4xzyPr1PrnH18GWOx7atoifHvr/Hv0vLv0f6Q
aiW2bdAZOp8PnR8ev6eagiX/pXpBnY2U2WLAr6neYdXImX048UuqfcR+izi5
/kw1Czv/Ta038v4R6xD7OdVH5v+Tah/jxsk0BUvGy7QGM0bPNAirRsv0i/M3
hn/eeXjsMjxGzTSO2LiZOZg/QWZt480YmTkwaezM3/qsN1amWZyPmRnnfJTM
ayXv36nfAPb6V1wf5+Nn7pE1mpnu4Ecn02XMKDJbar2e6RS2dTP7sKGWaR+x
RmacXK1MHzEsz/zGkDfJXIfYiEwTmT9Zph04MXlmi0NTZLbYU2XagVVTZvbh
x4SZ9wlT+5lxTCozjWPORJlx1utl7p3YpJn1z9pTZebDjEkya5vYIDMfnk2c
2RKbdvjnJ1JNWimzrnj3V85s+d+UZsh0B0tmynQEY+bM9IJ6mj7TOMbNldmH
AdNl5iY2c+Y8jJw9s65wbpbMPrycI7OPvDNmrsl6c2fmw5tFMh3BjEUzW0ya
P9MpvJkv0xHO34z3dNfhMW+ma8SWyPQFA+bJzE1sgcwc+LRYZm5smy3TXPa9
cOZ3iH0smDkWUxfKbIllmb8/eG9mzbw+5i+ZuSYmLZvpDpYsn+kIxqw2/POP
w/an4bFMpnGMWz2zjzpeOtM7YitkzsPIVTKfG/asmNnHc101s4+8y2WuyXpr
ZObDlQ0zXcCPjTJbfFon0ywsWTvTHc6nznzX+HatlWkWsaUyr4/9rZmZm9i6
mTmwauPM3Ji3eOY95nlskFnz7GO9zLHU/fqZLbE08zcE97edWaOcb5KZDy+3
yfRl7LCKGpso3gVaanerTJvGjPeDPjzYMtM+YltHnFzbZVqJcztlGkfebWMd
YltkWsn8/TLfA/zYP1p8OiBafNoj0x0MOz+zfnjfL4iWd3PPiGPP7pmWMee8
zDpkzm6xd2L7Zt4j1t4x00r2uk/m/SK2V+TDub2jJXZhrEmt7JD5PWD+gbFf
7Dw80xQsOTLTGhw6JNMsnDss0zLGnTg8psn05tCIEzsq5mHncZkmYtjR0Yej
x0cf79oRsSbrnZzpC/acnVmfuHJOtFhyRqY7GHNwppvs76C4Ds5Py7QG207N
9I7zUyI356dHnFznRm7u+/aZ7wL36KzMOmcfZ8aanJ8U181e38p8z3hWj2XW
G3X2RGY98P5elmkKllyb6RRmXBcttXVJpndYdX304cHFmfYRuzTi5Loi0yzs
vCaz3sh7eaxD7KJ45sy/I/MbgCV3Rosfd0WLTzdl+oUlm2V+s/ktsGlm/XF+
c8Sx7cZMy5hzT6Zl2HND7J3Y7ZnfIda+OtNf9npbpmXEbol8mHdrtMQej3vJ
fbwq89vA/Ltjv6z3cKYpWPJU7JW9Px3t5sPjwUzvsOqZ6KOmH8i0j9hDESfX
o5lm8SyfjGdI3kdiHWL3Z/rI/Fcz64q6fC1aLHk9Wqx6PtOmrWN97ium3Bv3
DFNfiDjOPZdpFnPuizjrPRt7J/ZK5vvK2ldmvgvco5czXSP2YuTDs5eiJXZs
5u8Y6vPtzPcXh3Yf/patD4/G8Hgv0ylc+SDTFLz5PLPeqL93M71j3BfRhxnv
RD5iH8Y8DPs000rs+Sj6MPWz6CPv+7Em632S6SxzvozcePNzpi9Y8nWmTRj2
baYpGPZN9HH+e2bdYsxPcf3M/yryMf/7TL+w6tfhcUKmcz8Oj2Nizg8R5/y7
WIc5H8d1sNffYh7r/RFrYs8/me5g2H+ZpmDMGLnfBpz+O9Mvxo2Z20cd/5Vp
GbGRcudh5Gi53wy+MyPn9uHl6Ll95P031mS9sXLz4cqI3JrEj1pui0/j5ZqF
JePmusM57wRm4dM4uWYR+zOuj/2NnZub2Pi5ObCKd4rczF8u91ly7yfKrW32
MUHuWN7lCXNbYs3cNXGllesOVs2dW2/UWZprE5ZkuS2WdHKtwaF27jzGDXJr
j9rKc8cyrp9rGbEy10e8qXJbYt1cT3G0yM3N+cS5+bBhktwWY6bN/R5gyWS5
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
mLNa4TzqeM3C3Fg1X+E95r6sVdjHs1m+cF/safXCeeypX/i+846uV3iPMemQ
wnqjJjYstAyHNi70BVe2KjQLPzYoNI5xW0cfNbd+YT5imxTOw6otCi2jzjaN
PhzdMvrIu1Hhmqy3TeTDmF0Lvwe4slu0WLJDoSO4tX2hZZxPXFh//EbYrtAv
YnsW+oU320ZuYjtGDgzbPXLj3+aFvrPvXQo9ZR87xVhs2zlaYgcX+sV93Cyu
j/l7xZo4tF+hZTh0QKEvuHJ4oR3sfd9C4xh3RPRNMjz2KTSO2IExD6sOjefG
sz0o+tjHYdFH3v1jTdY7MvJhzEmF9YkrJ0eLJccWOoJbxxRaNkXM475i09GF
fhHbO66P/R0VuYkdFzkw7JTIjX97xD3meZxYWOfs4/gYi20nREuM/34b/91O
/pudp0YOvDy90DgcOrfQFCy5pNAL6uzSaDHg7ELvsOqy6MOJswrtI3ZOxMl1
fqFZ2HlxYb2R97xYh9iZhT4y/6JC+xh3faEpWHJToTWYcVWhQVh1ZaFfnO/f
HT6j4dEZHlcUGkfsxuGxTMy/pbC28ebqyIFJ1xX+1me9awvN4vyaiHN+eVwr
eS8s/Aaw1wvi+ji/OfbIGncXuoMfDxW6jBkPR0ut31noFLY9En3YcEehfcTu
iji57i30EcMeLPzGkPeeWIfY7YUmMv/ZQjtw4rlocej5aLHn8UI7sOqF6MOP
W+M+YeoTEcekxwqNY85tEWe9R2PvxJ4prH/WfjHyYcbThbVN7MnIh2dPRUvs
5UJ3MOmPwrri3f8zWt7f1wrdwZI3Ch3BmPcLvaCeXi00jnEfRB8GvBK5ib0Z
8zDy3cK6wrm3og8v34s+8r4ea7Leh5EPb74qdAQzvo4Wkz4tdApvPil0hPMD
4j0thsfHha4R+67QFwz4KHIT+yxy4NM3kRvb3ik0l31/WfgdYh+fx1hM/SJa
Yg8U/v7gvXk7ro/538eamPRzoTtY8muhIxjzT6EXZwyPnwqNY9y/0Ucd/1jo
HbHfYh5G/hXP7bTh8Xv08Vz/jj7y/hJrst5/kQ9XxurqAn6M3bXFp1G7moUl
o3R1h/OXCt813qGRu5pF7Ie4PvY3UtfcxEbrmgOrxumaG/O+jXvM8xiza82z
j9G7jqXux+jaEru/8DcE9/e+whrlfNyu+fCy3tUXvMEqaowa4l2gpXZHdLUJ
e3g/6MODibraR6zWNU6uZPjnGwqdy7oaR95G13VwdMKuVjJ/0q7vAX5M1rXF
p8m7tvhUdnUHwxbtWj+874t1bXk3q65x7Ol1tYw5i3StQ+Z0u+6d2CRd7xFr
p12tZK8Td71fxPpd8+HcoGtLbPGua1Ir7a7fA+ZP0XW/2DldV1OwZIau1uDQ
1F3Nwrlpu1rGuNm7vit4M03XOLEZu87Dzlm7mohhM3Xtw9HZuvYxf/qua7Le
nF19wZ4Fu9YnrizUtcWS+bq6gzFTdXWT/U3Z9To4n6erNdg2d1fvOJ+ra27O
5+0aJ9fCXXNz31td3wXu0QJd65x9zN91Tc7n6Hrd7PXAcIhntU3XeqPOtuta
D7y/y3Q1BUtW7uoUZqzStaW2lurqHVat2rUPD5bsah+xpbvGybVcV7Owc6Wu
9UbeZbuuQ2yJ8JH563X9BmDJ+l1b/Niga4tPa3T1C0vG7/rN5rfAeF3rj/M1
u8axbfWuljFno66WYc9qXfdObN2u3yHWXrGrv+x1na6WEVuraz7MW7trS2zb
uJfcxxW6fhuYv2HX/bLell1NwZIduu6Vve8Y7QTDY/Ou3mHVTtFHTW/W1T5i
W0ScXFt3NYtnuX08Q/JuFesQ27Srj8zfp2tdUZf7Rosl+0WLVbt2takW63Nf
MWXjrvcMU3eLOM7t0tUs5mzSNc56O8feie3d9X1l7eW7vgvco726ukZs98iH
Z3sOj2bEZun6O4b6PCjeXxzq9obmDNs7h8ehXZ3ClcO7moI3x3WtN+rvkK7e
Me746MOMgyMfsSNiHoYd09VK7Dky+jD12Ogj72GxJusd3dVZ5pwQufHmrK6+
YMlJXW3CsFO6moJhJ0cf5+d2rVuMOTOun/knRj7mn9bVL6w6O3Lj3BnDY+aY
c3rEOT811mHOUXEd7PWcmMd658Wa2HNRV3cw7JKupmDM1V2/DTh9YVe/GHdN
9FHHF3S1jNilMQ8jr+z6zeA7c1n04eVV0Ufei2NN1rs28uHKbV1rEj9ujxaf
buxqFpbc0NUdznknMAufru9qFrHz4/rY33WRm9hNkQOr7ojczP81niX3/tau
tc0+bo6xvMu3REvsrlgTV+7p6g5WfdS13qiz+7rahCX3R4slD3a1BofujXmM
e6Jr7VFbD8RYxj3e1TJij3b1EW8ei5bYw109xdGHIjfnT0Y+bHgqWox5uev3
AEue6eoR3jzX1S9ceTb6OH+9q1PU+tORgznPx1h8eiFavjmvRG78eyT2xb5f
jT4sfDHGYupL0bKnK7p+/3iHXouxrH133G/u9dtdbcKSd4fHHl0teb+rNTj0
VlfjGPdZ1+8irrwXYxn3adff7sQ+jufG3zs/iZbYh1095bl+ELk5/zzy4coX
0WLPj11NwY+vupqFH990NQt7vo4+zt/sait7/TJyMOfbGItJ30VLTf8UuTHv
jXgmzP85+jDv+xiLVT9Ey54u71qL3N9fYizv/W9d333c+qurI9jzT1df8Ga0
nnZQW392dY1xo/fsw4M/uhpH7N+Yh22j9DQI8/6LPrwctWcfef+ONVlvjJ75
sGfCnqbgx0Q9W3wap6dZ2DN2T1M4/z2ug32M1dM4YvWe1uDBmD1zExu3Zw6s
GtEzN86N3NNc9j1Bz/eSfYzXcyz3cvyeLbHpe9YY9TFSz+tjfqPnmvjU7mkQ
rmQ9TcGbquf7jSWtnt4xrt+zDyeSnvYRy3vOw8teTwcxqdOzDzvLnn3kTXuu
yXqDnvnwaeqejmDMND1bHJqsp1NYMmlPjzifrqcpXOckPV0j1ux5fexv4p65
iU3eMwc+TdszN/NrPe8xz2Oqnq6xjyl6jsWMKXu2xIqe14TZM/Y0C5/W6Pne
8y7P0tMjHJqtpy+4Mm/POqHOZu5pHOPm69mHEzP1zEds9p7zMHLungbh3xw9
+7Btnp595J2155qsN3/PfPi0ZE9HMGapni0OLdLTKSxZuKdHnM9TDXOWw5zD
Y6GerhFbtqcv2LDg8M/vdI0t2jMHPi3dMzcmzdXTWfa9RE/X2MdiPcfyjVq8
Z0ts9Z6mcB/n7Hl9zF+u55oYtlJPj3BolZ6+4MraPe2g5lbsaRzj1unZhwcr
9PSO2Ko952Hkmj2fG9/e1Xr2sY+1evaRd+Wea7Leuj3zYc9mPU3Bj82jxacN
e5qFPRv0NIXzGXrWJe/N+j2NI7Z8z+tjf+v1zE1so545sGqLyI1zy/S8xzyP
TXsawT427jmWut+kZ0uM32T8/ZLftVtGDmzbKloc2r6nQbiyY09T8GaPnnZQ
W9v19I5xe0YfHmzb0z5iO8U8vNytZ41h3s7Rh527Rx95d4g1WW/XnvYxZ6/I
jUOH9HQEn/bp6ReW7NfTLxzaN/o4P7ynLxhwcE+bmL935GP+AT2doqYPjdw4
d1DP3/rMOTDinO8f6zBnl7gO9npYzGO9I2JNTDqmpztYclxPRzDm1J7vAX4c
3dM4xp0WfRhwVE/viB0f8zDy5J72YfwJ0YeXp0QfeY+NNVnv9MiHNxf0dAQz
LowWk87u6RTenNXTEc4v7mkTlpzZ0zViR8b1sb8zIjexcyIHPl0UuZm/0tCR
b4ftd8Pj/J4usI9zYyy1fl60xC4dHgv0NObyngbh0zM9a4w6uLKnX9hzVbS4
ck1PU/DmipjHuJt7OkKdXR1jGXdTT9eI3dDTL2rrxmiJXdfTUOy8NnJzfkvk
w5Vbo8We+3qagh+39zQLP+7saRb23BF9nD/U0xTq/rbIwZy7Yiwm3R0tRt4f
uTHv+tgX+34g+jDvnhjLd+neaNnTST2/f7xDD8ZY1r4s7jf3+rGefmHP49Hi
ypM9TcGbR3u6xrgXhsfWw2Ob4fFEjGXc8z19IfZsPDfseS5aYk/3NJTn+lTk
5vzFyIcrL0WLPW/3NAU/XulpFn681tMs7Hk1+jh/pKez7PXlyMGc12MsJr0R
LTX9TuTGvIfjmTD/3ejDvDdjLFa9FS17OrFnLXJ/34uxGPZ+tNjzSU9HsOez
nr7gDfWBHdTWxz1dY9x30YcHH/U0jtjnMQ/bvu5pEOZ9EX14+U30kffTWJP1
vo982PNHT1Pw489o8ennnmZhz089TeE8K33ved9/7GkcsbS0xoj9ELmJ/RI5
sOqvyI1zX/U0l33/3vO9ZB+/xlju5W/REstL16Q+vozrY/4/PY3DoZFLLcOh
UUpbjBmt1BfsGanUOMb919M1zkctHcu4cUsNoibGKrUMC8cZ/vmSnrExSj3F
0dFLc3M+Xuk83Jqg1CCsSkp9wZURpQZhVb3UFIz5N66DPU1U6hrjJizNwXmt
dB5zGqXzMKBVmhvP/o57zH1pl/bxbMYv3Rd7apbOY0/UGX8/4fvdKb3HuLVg
aT3w7vdK/cKkqtQjjJm81C9qpVvqGuOmKO2j/orSfMT6pfMwadJSs3BoUNqH
nZOV9pG3LF2T9aYszYc9M5WagiUzl7Z4M22pQVg1TalfnH/Qs/747TB1qXHE
Ziu1BmOmKs1NbLrSHJg0S2lunJuk1F/2PWPpN4l9TF86Fs9mKG2JLVBqFvdx
4tLrY/7spWti0tylfmHSvKUeYcwipXaw97lKXWPcoqV9Hw6POUsdJDZf6TxM
Wqj0ueHQ/KV97GPh0j7yzlO6JustVpoPY5YvrU9cWaG0xZKlSh3BrSVLLfs0
9sF9xaYlSv0iNkfp9bG/xUtzE1u6NAeGrViaG/9mLb3HPI/lSuucfSxTOhbb
li1tia1c6iOerVrqDib9MPzz0cPjmOGxRqllOLRWqS+4smGpHdTc6qXGMW6j
0j5sWK00H7G1S+dh1fqlllFn65T24egGpX3kXbN0TdbbuDQf9mw7PMYutWS7
aPFm81KDsGqzUr84X6X0+ri2TUuNI7ZjaT1jzCaluYltETkwafvIjUnrlfrO
vrce/nnMUtu2jLF4tlW0xI4rrTdqYt3S62P+TrEmJu1W6hGG7VHqEa7sX+o1
luxa6h3jDog+PNil1Dhie8Y8jNy39FvCd2av6MO2/aKPvLvHmqx3YOTrDo+j
Sk2ZLJ4/LT4dWmoW9hxSagrnx5Y6xXUeXGocsZ3j+tjfQZGb2GGRA6uOidzM
3yHuMc/jyFIj2MfhMZa6PyJaYvuUusx1nlDqEVbdVloP/F4+udQgXDm11BS8
OafUDmrrpFLvGHdu9OHBiZGP2GkxDy/PKq0xzDs9+rDz7Ogj7ymxJuudF/mw
5/JSU/Djimjx6aJSs7DnwlJTOOc3H3+n5LtyQalxxK4utQYPzo/cxC6OHFh1
ZeTGuTNL/WXfl5V+k9jHJTF2geFxabTEbi01i/t4Rlwf86+JNfHphlKDcOWm
UlPw5s7SesOS60u9Y9xd0YcH15XaR+zmmIeXt8dzw6Rboo993BF95L0x1mS9
uyMf9jxSasoGw+PRaPHp/lKzsOe+UlM4P760Lnlv7i01jti1cX3s757ITeyB
yIFVj0VunLsq7jHP4+FSI9jHgzGWun8oWmIfTzysw+Gx//DYu7QueY+fKDUO
h54tNQhXni81BW/450nYQW09U+od496IPjx4utQ+Yi8Oj21KvXy1tMYw76Xo
w87Xoo+8z8WarPdm5MOej0pNwY+Po8Wnd0vNwp53Sk3hfNTKWuLdf7vUOGKj
VNYesbciN7H3IgdWfRK5Dxger5T6y74/LK159vF+jOX+fRAtsdEq16QmXo7r
Y/5npcbh0FelluHQ19FizLelvmDPl6XGMe6LUtc4/ybGMu7nUt95j34stQwL
f4qW2PelnuLod5Gb819iHm79VmoNDv1XWqsY82epI7j1d6lBePN5XAd7+qPU
OMb9Hjk4/yvmMeefmEcdj1SZG6s+jXvMfRm5so9n82vsiz39G/PY0+Ol7zvv
6OiV9/iC4TFVZb1RE2NVWoZD41T6gisjKs3CjzErjWNcrbKPmhujMh+xcSvn
YdWElZZRZ+NV9uHoRJV95B27ck3Wq1fmw5hO5fcAV4rKFktalY7gVlJpGedP
ltYfvxGalX4RKyv9wptGZW5i7cocGNatzI1/E1T6zr7zSk/ZR1o5FtuyypbY
lJV+cR/Hr7w+5leVa+LQJJWWPTA8Jqv0BVemrbSDvU9caRzjpqvse2p4DCqN
IzZ55TysmrryufFsp6jsYx/TVPaRd9LKNVlv+sp8GDNnZX3iylyVLZbMXOkI
bs1UadlzsQ/uKzbNWOkXsX7l9bG/GSpzE5t1+OcXSg2buzI3/vUq7zHPY47K
Omcfs1WOxbbZK1ti/A7j75f//2dplVZi27WDofPDY8nhsUilKR8Mj6UrvaDO
lqlsMWChSu+watnKPpxYsNI+YgtXxsm1WKVZ2LlUZb2Rd9HKdYgtUOkj85es
tI9xq1WagiVrVFqDGStWGoRVK1T6xfmk/eEz4p0YHstXGkds9coczF+rsrbx
ZqXKHJi0auVvfdZbpdIszleujHO+XOW1kneJym8Ae1288vo4X7Nyj6yxYaU7
+LFFpcuYsWW01Pr6lU5h21bRhw3rVdpHbIPKOLk2rvQRwzav/MaQd6PKdYit
W2ki83eutAMndokWh3aNFnu2rbQDq3aLPvxYu/I+Yep2EcekbSqNY846lXHW
2zr2Tmynyvpn7d0jH2bsWFnbxLaPfHi2Q7TE9qx0B5POr6wr3v0LouV/U9qn
0h0s2a/SEYw5tNIL6mnvSuMYd1j0YcBekZvY/jEPIw+urCucOyD68PKQ6CPv
vrEm6x0e+fDmhEpHMOPEaDHp6Eqn8OaoSkc4n6zve/rQ8Diy0jVip1T6ggFH
RG5ix0QOfDopcmPbQZXmsu/jK79D7OPYGIupx0VLbLPK3x+8NwfG9TH/1FgT
k86qdAdLzql0BGMuHh7zDY/5h8eZw2OWGHdJ9FHHp1d6h3/nxjyMvDCeG/ac
F30814uij7xnx5qsd2nkw5XrKl3Aj+ujxacrK83Ckisq3eF8j8p3jXfo8kqz
iJ0W18f+LovcxK6KHFh1Q+TGvJPjHvM8rq2sefZxdYyl7q+Jltimlb8huL+b
VNYo5zdGPry8s9IXvMEqaowaejBaavf2Spuw56How4PbKu0jdkfEyXV3pZU4
d3+lceS9K9Yhdmullcx/uvI9wI9nosWnZ6PFp0cr3cGwryvrh/f9m2h5Nx+L
OPY8UmkZc76qrEPmPBx7J/ZU3CPWvq/SSvb6ZNwvYo9HPpx7Ilpi38aa1Mq9
ld8D5j8X+8XOVypNwZLXKq3BoRcrzcK5lystY9y7le8K3rwUcWKvxzzsfLvS
RAx7I/pw9J3oY/6rsSbrvV/pC/Z8XlmfuPJFtFjySaU7GPNCpZvs7/m4Ds4/
qrQG2z6s9I7zDyI35x9HnFxfRm7u+z2V7wL36LPKOmcfn8aanL8X181eJ+/7
nvGsGn3rjTpL+tYD7+9PlaZgyZ+VTmHGX9FSWz9UeodVf0cfHnxfaR+xHyNO
rl8qzcLOPyrrjbw/xzrEvotnzvwx+n4DsGTMvi1+jNW3xaeR+vqFJTdXfrP5
LXBTZf1xPnLfOLb9V2kZc8bpaxn2/Ds8zojY6H2/Q6z9e6W/7HW0vpYRG6Vv
PswbtW9LrNn3XnIff6v8NjB/7L77Zb0RfU3BknbfvbL3tG97y/CYsK93WJX1
7aOmJ+hrH7GJ+sbJVe9rFs+y1fcZkrfWdx1i4/f1kfmDvnVFXU7ct8WSSfq2
WFX0temO2BP3FVPG7XvPMLXbN45znb5mMWe8vnHWy/vunVi/7/vK2r/Gu8A9
qvq6RqzXNx+elX1bYm9V/o6hPqfo+/7i0MPDP683PNYfHlP3dQpXpu1rCt7M
0rfeqL+p+nrHuFn79mHGlH3zEZuu7zwMm6mvldgzfd8+TJ25bx95p+m7JuvN
2NdZ5szWNzfeLNDXFyyZo69NGDZXX1MwbM6+fZwv3LduMWb+vtfP/Nn75mP+
PH39wqoF++bGufmGf34z7tm8feOcz913HebM0Pc62OtCfeex3iJ918SeJfq6
g2FL9TUFY1bs+23A6cX7+sW4lfr2UceL9bWM2NJ952Hk8n2/GXxnlunbh5cr
9O0j75J912S9lfvmw5V1+tYkfqzbt8Wn1fuahSWr9XWHc94JzMKnVfuaRWzR
vtfH/lbpm5vYGn1zYBXvFLmZf3bfZ8m9X7tvbbOPNfuO5V1eq29LbMPhn/+p
dGXjvu5g1RF9640627SvTViyWbRYskVfa3Bok77zGLd939qjtjaPsYzbrq9l
xLbp6yPebBstsa36eoqjW0ZuzneIfNiwY7QYs1ff7wGW7NzXI7zZta9fuLJL
9HG+X1+nqPWdIgdzdoux+LR7tHxz9o7c+Ld17It97xN9WLhHjMXUPaNlT8v1
/f7xDu0bY1l7o773m3t9UF+bsOTgaLHk0L7W4NCBfY1j3DF9v4u4ckiMZdzR
fX+7Ezsynht/7zwqWmKH9/WU53pY5Ob82MiHK8dFiz2n9zUFP07oaxZ+nNTX
LOw5Mfo4P6Cvrez1+MjBnJNjLCadEi01fUbkxrz945kw/8zow7xTYyxWnRYt
e1q2by1yf8+Ksbz35/R993Hrgr6OYM9FfX3Bmyv72kFtnd/XNcZdFX14cF5f
44hdHPOw7fK+BmHeJdGHl1dEH3kvjDVZ7+rIhz239DUFP26NFp+u72sW9lzX
1xTOz43rYB/X9jWO2B19rcGDayI3sRsiB1bdFrlx7rK+5rLvm/u+l+zjxhjL
vbwpWmKv9a0x6uPSuD7m3xlr4tO9fQ3Clfv7moI3j/d9v7Hknr7eMe6J6MOJ
u/vaR+yBmIeXjw6PDfqa9GD0Yedj0Ufe+2JN1nsy8uHTS30dwZiXo8WhZ/s6
hSXP9PWI81f7msJ1Pt3XNWJ3xfWxv6ciN7HnIgc+vRK5mX973GOex4t9XWMf
z8dYzHghWmIPxTVh9ht9zcKn//q+97zLb/f1CIfe7esLrnzSt06os7f6Gse4
T6MPJ96MfMTei3kY+VFfg/Dv/ejDto+jj7zvxJqs91nkw6fv+zqCMT9Ei0Nf
9XUKS77s6xHn/J2Zf4bH/4bwRV/XiP3c1xds+DxyE/s6cuDTj5Ebkz7s6yz7
/q6va+zjmxjLN+rbaIn929cU7uMHcX3M/yXWxLA/+nqEQ3/19QVXRhloBzX3
e1/jGDfqwD48+K2vd8T+jnkYOdLA58a395/oYx8jD+wj75+xJuuNNjAf9ow/
0BT8mGBgi09jDTQLe8YcaArnr/etS96bMQYaR+zXuD72N/rA3MTGHpgDqyYc
mBvnfop7zPMYb6AR7GOcgWOp+3EHtsT4TbZL/K6daGAObBsxsMWhZKBBuNIe
aAre9AbaQW01B3rHuHJgHx40BtpHLB04Dy+LgTWGednAPuzsDuwjb2vgmqzX
GWgfc6qBuXFo6oGO4NNgoF9YMslAv3Bo4oF9nE830BcMmGqgTczvD8zH/MkG
OkVNTzMwN85NOfzzI33nTD4wzm//SQeuw5x84HWw12kHzmO96QeuiUkzD3QH
S2Yd6AjGzDPwPcCPmQYax7h5B/ZhwIwDvSM228B5GDnXQPswfvaBfXg598A+
8s4ycE3Wm29gPrxZfKAjmME/m6fFpIUGOoU3Cw50hPOlBtqEJQsMdI3YDAOv
j/3NPzA3sYUH5sAn/rk/uZn/5/DPpwyPU4fHYgNdYB+LDBxLrS86sP0fC/cc
x8q1NWC4dm9tNzPJJJNkMpnUtm3btm27p7Z7atu2bdvWl/d71x/z22f22nvt
PVjP5PT2ltiyNdfEmOVrGoRPu9SsMepgxZp+Yc9KNVtcWaWmKXizQs15jFu7
piPU2co1xzJurZquEVujpl/U1po1W2Kr1TQUO1etmZvzdWrmw5V1a7bYs1lN
U/Bj/Zpm4ceGNc3Cng1q9nG+VU1TqPv1auZgzkY1x2LSxjVbjNw8cmPe6jX3
xb63iD7M26TmWL5Lm9Zs2dPcNb9/vENbxljWXq7m/eZeb1fTL+zZPlpc2bGm
KXizbU3XGLfH8Jh0eEw2PHaIsYzbvaYvxHaN54Y9u0VLbOeahvJcd4rcnO8Z
+XBlr2ix5+CapuDHPjXNwo/9apqFPftGH+fb1HSWve4dOZizf4zFpAOipaYP
idyYt3U8E+YfGn2Yd2CMxaqDomVPc9WsRe7vYTEWww6PFnuOqekI9hw/PJo1
vaE+sIPaOrqma4w7Pfrw4KiaxhE7IeZh2yk1DcK8E6MPL0+NPvIeG2vi2YjI
hz0X1DQFPy6MFp/OrmkW9pxV0xTO76/53vO+n1nTOGL31awxYmdEbmLnRA6s
uihy49zJNc1l3+fXfC/Zx7kxlnt5XrTEHog1qY+T4vqYf0lN43DoipqW4dCV
0WLM1TV9wZ7LaxrHuMtqusb5VTGWcTfUNIiauK6mZVh4fbTErqnpKY6OjNyc
3xjzcOvmmgZh1d01fcGV22oahFV31DQFYy6N62BPt9Z0jXG3RA7Ob495zLkz
5mHAPZEbzy6Oe8x9uTf6eDY3xb7Y010xjz1RZ/z9hO/3g3GPcevzmvXAu/9I
Tb8w6bGaHmHMszX9olYeruka456LPurvochH7PGYh0lP1zQLh56IPux8JvrI
+2isyXrPRz7seaOmKVjyZrR483JNg7DqpZp+cX5Ezfrjt8OLNY0j9k5NazDm
hchN7JXIgUlvRW6ce6qmv+z79ZrfJPbxaozFs9eiJfZZTbO4j0/G9TH/3VgT
kz6s6RcmfVzTI4z5qqYd7P2Dmq4x7uvoO3J4vF/TQWKfxDxM+iKeGw59Gn3s
48voI+9HsSbrfRP5MOa3mvWJK79HiyU/Do/jarr1fU3Ljo153Fds+q6mX8Te
i+tjf99GbmI/RQ4M+yNy49/bcY95Hr/WrHP28XOMxbZfoiX2V00f8eyfmu5g
0ohk6NvwqIbHKImW4dBoib7gyriJdlBz/9U0jnHjJfZhw7+Rj9joifOwauxE
y6izMRL7cHScxD7yjpq4JuuNn5gPeyZPNAVLpkhs8WaiRIOw6n+JfnH+d1wf
1zZhonHEpk6sZ4yZIDE3sYkTc2DSlIm5MWmsRN/Z92SJ/34G+5gkcSyeTZrY
Epstsd6oiTETr4/50ySuiUkzJHqEYTMleoQr9USvsWT6RO8Y10jsw4PpEo0j
NnPiPIxMEr8lfGdmSezDtjSxj7wzJq7JelliPuwpE03BD54/LT61E83CnjzR
FM4HiU5xna1E44hNm3h97K+ZmJtYJzEHVvFukZv5UyXeY55HL9EI9tFNHEvd
F4ktsVqiy1znHIkeYdX6ifXA7+W5Ew3ClXkTTcGbRRLtoLbmSvSOcYsm9uHB
nIn5iM2XOA8vF0qsMcybP7EPOxdO7CPvPIlrst5iifmwZ/lEU/BjhcQWn5ZK
NAt7lkw0hXN+8/F3Sr4rSyQaR2zlRGvwYPHE3MSWTsyBVSsm5sa5BRP9Zd/L
JX6T2McyiWPxddnElth6iWZxHxdIvD7mr5K4Jj6tmWgQrqydaArebJRYb1iy
RqJ3jNs4sQ8PVh/++YeasXUS5+HlBonPDZPWTexjHxsm9pF3rcQ1WW+TxHzY
s22iKfixXbT4tEWiWdizeaIpnM+eWJe8N5uFccRWTbw+bN40MTexLSMHVm0f
uXFupcR7zPPYJtEI9rFVjKXut46WGP8uBv9MiH+natbEuuQ93jHROBzaLdEg
XNkj0RS82T/RDmpr10TvGHdA9OHBLon2Edsz5uHlvok1hnl7RR927hd95N09
1mS9AyMf9hyVaAp+HB0tPh2aaBb2HJJoCudXJtYS7/7BicYRuyKx9ogdFLmJ
HRY5sOqYyI1z+yT6y76PTKx59nF4jOX+HREtsatiTWpi77g+5h+XaBwOnZRo
GQ6dHC3GnJroC/acmGgc405IdI3zU2Is485K9J336IxEy7DwzGiJnZ7oKY6e
Frk5Pzvm4da5idbg0KWJtYoxFyQ6glsXJRqEN8fHdbCn8xONY9x5kYPzC2Me
cy6OedTxZZEbq46Ne8x9uTz6eDbnxL7Y0yUxjz3tkPi+845eHfcYk15MrDdq
4tpEy3Do+kRfcOW2RLPw45pE4xh3e/RRcyMjH7EbYh5W3ZJoGXV2Y/Th6K3R
R97rYk3Wu3N4rJZozEOJ3wNceThaLLk30RHcuifRMs53Sqw/fiPcnegXsccS
/cKbuyI3sfsiB4Y9Ernx7+ZE39n3g4meso/7Yyy2PRAtsRcS/eI+3hTXx/zH
Y00cejrRMhx6NtEXXHkl0Q72/lSicYx7Nfp2Hh5PJhpH7LmYh1UvxXPj2T4f
fezj5egj7zOxJuu9Fvkw5v3E+sSVD6LFkrcSHcGtNxMt2z3mcV+x6Y1Ev4g9
EdfH/l6P3MTejhwY9mHkxr9H4x7zPN5LrHP28U6MxbZ3oyXGf1eS/zYt/33Y
jyIHXvbaw/uVD+/r8Pgq0RQs+THRC+rsp2gx4ItE77Dq5+jDic8T7SP2ZcTJ
9U2iWdj5Q2K9kffrWIfYZ4k+Mv/7RPsY90+iKVjyX6I1mPF7okFY9VuiX5w/
nQ6f+fDYcnj8mmgcsX8jB/NHTa1tvPkjcmDS34m/9Vnvr0SzOP8z4pz/EtdK
3u8SvwHs9du4Ps5HSd0ja4yT6g5+TJTqMmZMnNpS62OlOoVtk6T2YcOYqfYR
Gzs1Tq7xUn3EsP+lfmPIO27qOsTGSDWR+dOm2oET06W2ODR9aos9k6fagVUz
Dv98R6Ifo6XeJ0ydIjWOSZOlGsec0VPjrDdp6t6JTZNa/6w9U2o+zJg6tbaJ
TZmaD8+mSm2JzZLqDiYtnlpXvPtLpLa8v0mqO1hST3UEYzqpXlBPtVTjGNdN
7cOAWVNzE2ukzsPIPLWucC5L7cPLdmofedPUNVmvSM2HN3OmOoIZc6W2mFSl
OoU3/VRHOH8m3tOthkeZ6hqxeVN9wYBeam5ig9Qc+DR3am5sa6Way77nSP0O
sY/ZUsdi6uypLbEJU39/8N40U6+P+fOlrolJC6W6gyWLpDqCMUsP//zJsP10
eCyYahzjlknto44XSPWO2KKp8zByydTnxv+narHUPp7rUql95F04dU3WWzY1
H66sluoCfqye2uLTiqlmYckKqe5wPnPqu8Y7tHyqWcTmT70+9rdcam5iK6Xm
wKo1UnNj3jyp95jnsWpqzbOPlVPHUverpLbEJkj9DcH9HT+1RjlfMzUfXm6Y
6gveYBU1Nnq8C7TU7vqpNmHPVtGHB+ul2kdsg9Q4uTZOtRLnNk81jrwbpa5D
bN1UK5m/c+p7gB+7RItPu0aLT9umuoNhp6TWD+/7qdHybm4XcezZJtUy5pyc
WofM2Tr2Tmyn1HvE2pulWsled0y9X8S2j3w4t0O0xE6LNamVTVO/B8zfLfaL
nfukmoIl+6Vag0N7ppqFc3unWsa4w1LfFbzZK+LE9o952HlIqokYdkD04eih
0cf8fWNN1jsi1RfsOSG1PnHlxGix5NhUdzBmj1Q32d/ucR2cH51qDbYdleod
50dGbs6PiTi5Torc3PdNUt8F7tHxqXXOPo6LNTk/PK6bvT6b+p7xrO5MrTfq
7O7UeuD9PSvVFCy5MNUpzLgoWmrrjFTvsOri6MODEan2ETsz4uQ6J9Us7Lwg
td7Ie3asQ+z0eObMH5n6DcCSa6LFj2ujxafLUv3CkrVTv9n8Flgrtf44vzzi
2HZpqmXMuT7VMuy5JPZO7OrU7xBrn5/qL3u9KtUyYldEPsy7Mlpid8W95D6e
l/ptYP51sV/Wuy3VFCy5N3Wv7P2+aNcZHrekeodV90cfNX1zqn3Ebo04ue5I
NYtneU88Q/LeHusQuynVR+Y/kVpX1OWT0WLJU9Fi1UOpNm0Q63NfMeWGuGeY
+nDEce7BVLOYc2PEWe+B2Duxx1PfV9Y+N94F7tFjqa4ReyTy4dmj0RI7eHjM
kFqfz6W+vzi0TX3ozfAYe3i8mOoUrrycagrevJVab9TfC6neMe7t6MOM5yMf
sVdiHoa9kWol9rwafZj6ZvSR96VYk/VeT3WWOe9Ebrz5PNUXLHkv1SYM+yDV
FAx7P/o4/yq1bjHms7h+5r8b+Zj/UapfWPVF5Ma5T4fHQTHn44gfODw+jHWY
81pcB3v9Muax3texJvZ8n+oOhv2YagrG/JH6bcDp71L9Ytyf0Ucdf5tqGbGf
Yh5G/pb6zeA783P04eXv0UfeH2JN1vsr8uHKGHVrEj/GrNvi03+pZmHJv6nu
cM47gVn49E+qWcS+ietjf39HbmKj1M2BVbxT5Gb+wnWfJfd+9Lq1zT5GrTuW
d3m0ui2xcequiSvj1XUHq4q69UadTVDXJiyZsG6LJRPVtQaHxq87j3FT1q09
aut/dccyboq6lhGbrK6PeDN53ZbYJHU9xdGJ6+bmfKq6+bBh6rotxsxS93uA
JdPW9Qhvpq/rF65MV7eP87SuU9T6NHVzMGeGumPxaca6Ld+cWevmxr9J6+6L
fdfq9mHhTHXHYurMdVv29Gvq9493KKk7lrXHrXu/udfNujZhSatuiyXtutbg
UFbXOMZVdb+LuJLXHcu4ft3f7sR6dZ8bf+8s67bEunU95bl26ubmfFA3H67M
VrfFnvnrmoIfc4RZ+DFXXbOwZ866fZw36trKXmevm4M5c9cdi0nz1G2p6QXq
5sa8et1nwvwF6/Zh3rx1x2LVfHVb9vRLai1yfxeqO5b3fpG67z5uLVHXEexZ
evjnT1K9WamuHdTW4nVdY9zKdfvwYLG6xhFbpu48bFuhrkGYt2zdPrxcsW4f
eZesuyaerVI3H/asW9cU/FivbotPa9Q1C3tWr2sK54vWvQ72sVpd44htWNca
PFi1bm5ia9bNgVXr182Nc8vXNZd9r1P3vWQfa9Udy71cu25LbL+6NUZ9LFf3
+pi/Ud018WmzugbhyhZ1TcGb7eu+31iyaV3vGLdD9OHEJnXtI7ZlzMPLbePb
iElbRR92bhd95N081mS9HSMfPu1V1xGM2TtaHNq1rlNYsktdjzjft64pXOfO
dV0jtnHd62N/O0VuYrtFDnzaJ3Izf4O695jnsWdd19jH7jEWM/aIltjWcU2Y
fUBds/Dp0rrvPe/ywXU9wqFD6/qCK8fUrRPq7KC6xjHu2OjDiQMjH7HDYh5G
HlXXIPw7PPqw7ejoI+8hsSbrHRf58On0uo5gzIhoceikuk5hyYl1PeL8qGy4
1vBIh8cJdV0jdlZdX7Dh+MhN7OTIgU9nRG5MOrKus+z7tLqusY9TYizfqFOj
JXZJXVO4j0fE9TH/7FgTw86v6xEOXVjXF1y5oq4d1Nx5dY1j3JXRhwfn1vWO
2EUxDyMvi+fGt/fi6GMfl0cfeS+INVnvqsiHPTfXNQU/bokWn66raxb2XDs8
lorz/evWJe/NyLrG4c05cX3s7+rITez6yIFVt0ZunDsz7jHP46a6RrCPG2Is
dX9jtMT4TcbfL///n89FDmy7PVocuqeuQbhyX11T8ObRunZQW3fX9Y5xj0Uf
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
SU3MnHl9zK8yjcOhOTItw6E5M1uMmTvTF+yZPdM4xs2W6Rrnc2WOZdxCmb7z
Hi2QaRkWLpjZEps301McnSczN+cLZ87DrUUzrcGhZTNrFWOWyHQEt5bKNAhv
BpnXwZ4WzzSOcYtl5uB8ycx5zFk6cx51vFxmbqzqZ95j7svymX08m0Uy98We
lsmcx56myHzfeUdXzrzHmLRnZr1RE6tlWoZDa2T6givrZ5qFH6tmGse4DTL7
qLlVMvMRWzNzHlatm2kZdbZWZh+OrpfZR97VM9dkvQ0z82HMVpnfA1zZOlos
2TTTEdzaJNMyzqfKrD9+I2yc6Rex7TL9wpuNMnMT2ywzB4ZtE7nxb51M39n3
lpmeso/NYyy2bREtsT0y/eI+rp15fczfPtbEoZ0zLcOhXTN9wZV9Mu1g7ztl
Gse4faNv6uGxY6ZxxHaLeVi1Vzw3nu3u0cc+9o4+8u4Sa7LefpEPYw7PrE9c
OSJaLDko0xHcOjDTsuljHvcVmw7I9IvYDnF97G//yE3s4MiBYUdGbvzbNu4x
z+OwzDpnH4fEWGw7NFpi/LtrB4a5R2daiW1/tYbOD48Rw+OkTFOw5IxML6iz
M6PFgBMyvcOqs6IPJ47PtI/YiREn1ymZZmHniMx6I+/JsQ6x4zJ9ZP7pmfYx
7pJMU7DkskxrMOO8TIOw6txMvzjfpTl8RsNjouFxTqZxxC6NHMy/IrO28eb8
yIFJF2f+1me9i4bHfHF+QcQx7Oy4VvKelvkNYK+nxvVxfnnskTWuy3QHP27N
dBkzbouWWr8m0ylsuz36sGFkpn3Ero04uW7I9BHDbsn8xpD3+liH2NWZJjL/
gUw7cOLBaHHooWix565MO7Dq4ejDjyvjPmHq3RHHpDszjWPOVRFnvTti78Tu
z6x/1n4k8mHGfZm1TeyeyIdn90ZL7LFMdzDp68y64t3/Jlr+N6UnM93Bkqcz
HcGYlzK9oJ6eyDSOcS9HHwY8HrmJPRPzMPKFzLrCuWejDy9fjD7yPhVrst4r
kQ9v3s10BDPeixaT3sh0Cm9ez3SE813jPZ14eLyW6RqxDzN9wYBXIzexNyMH
Pr0fubHt+Uxz2fc7md8h9vFWjMXUt6MldnPm7w/em+fi+pj/UayJSZ9luoMl
X2Q6gjHfD49jhsexw+PTTOMY90P0UcefZHpH7MuYh5HfxnPDnq+ij+f6XfSR
9/NYk/V+jHy48lemC/jxd7T49GumWVjyS6Y7nD+a+a7xDv2caRaxj+P62N9P
kZvYb5EDq/6J3Jj3QdxjnsefmTXPPn6PsdT9H9ESuynzNwT398bMGuX838iH
l2M39QVvsIoao4Z4F2ip3TGa2oQ9vB/04cHoTe0jNtbwzxdm5hq3qZU4N2FT
48g7TtN1iI3W1ErmT9P0PcCPaZu2+DRd0xafJmvqDobN1bR+eN/nbtrybk7e
NI49kza1jDlzNq1D5kzSdO/Epm56j1h7gqZWstepmt4vYlM0zYdzUzZtic3T
dE1qZfym3wPmT990v9g5a1NTsCRpag0OzdTULJybpalljMubvit4M3PTOLG0
6TzsbDY1EcPqTftwtNW0j/m1pmuyXqepL9gzW9P6xJXZm7ZY0m/qDsbM2NRN
9jdD0+vgvNfUGmwrmnrHebdpbs7LpnFyzdE0N/d9vKbvAvdo0LTO2UfVdE3O
202vm73uFg7xrDZsWm/U2cZN64H3d8GmpmDJEk2dwowlm7bU1vxNvcOqpZr2
4cF8Te0jtkDTOLkWbmoWdi7etN7Iu1DTdYjNGz4yf+Wm3wAsWaVpix+rNm3x
admmfmHJKE2/2fwW+C+z/jhfrmkc25ZpahlzVm9qGfYs3XTvxFZq+h1i7cWa
+steV2xqGbHlm+bDvBWatsQ2anovuY+LNv02MH+1pvtlvfWamoIlmzbdK3vf
rGk76vBYp6l3WLV59FHTaze1j9i6TePk2qCpWTzLTZo+Q/Ku33QdYms19ZH5
OzatK+pyp2ixZOdosWrr4TFmU3tGjd9YmLJG03uGqdtEHOe2bGoWnq3ZNM56
W8Teie3Q9H1l7UWavgvco+2bukZs28iHZ9tFSyxr+juG+tw93l8cmmT4W3Yk
Hg2PvZo6hSv7NDUFbw5uWm/U355NvWPcIdGHGXtEPmL7xjwMO7CpldizX/Rh
6kHRR969Y03WO6Cps8w5NHLjzfFNfcGSw5vahGFHNjUFw46IPs5Palq3GHNc
XD/zD4t8zD+6qV9YdULkxrljh0cj5hwTcc6PinWYs39cB3s9Meax3smxJvac
3tQdDDujqSkYc37TbwNOn9bUL8ZdEH3U8alNLSN2ZszDyHObfjP4zpwVfXh5
XvSRd0SsyXoXRj5cuappTeLH1dHi06VNzcKSS5q6wznvBGbh08VNzSJ2Slwf
+7sochO7LHJg1cjIzfwv4lly769sWtvs4/IYy7t8RbTEro01ceX6pu5g1atN
6406u7GpTVhyU7RYcktTa3DohpjHuLub1h61dXOMZdxdTS0jdkdTH/HmzmiJ
3dbUUxy9NXJzfk/kw4Z7o8WYx5p+D7Dk/qYe4c2DTf3ClQeij/OnmjpFrd8X
OZjzUIzFp4ej5ZvzeOTGv9tjX+z7iejDwkdiLKY+Gi17Oqfp94936MkYy9rX
xf3mXj/f1CYseSFaLHmpqTU49FxT4xj3ZtPvIq68GGMZ90bT3+7EXovnxt87
X4+W2CtNPeW5vhy5OX8r8uHK29FizydNTcGPd5uahR/vNzULe96LPs6fHR5b
xV7fiRzM+SDGYtKH0VLTn0ZuzHs6ngk2fxZ9mPdRjMWqj6NlT2c3rUXu7+cx
lvf+y6bvPm5929QR7Pm+qS9481tTO6itb5q6xrjfow8Pvm5qHLEfYh62/dLU
IMz7Mfrw8tfoI+93sSbr/RH5sGe0lqbgx+gtW3z6p6lZ2PN3U1M4/yqug338
1dQ4YmO1tAYP/ozcxP6NHFg1RsvcOPdzU3PZ96gt30v28V+M5V6O0rIlVmtZ
Y9THT3F9zB+75Zr4NH5Lg3Blwpam4M3kLd9vLBmvpXeMm6JlH06M29I+Yv9r
OQ8vJ23pICZN1LIPOydr2UfeCVquyXpTtsyHTzO1dARjZm7Z4tC0LZ3Ckmla
esT5rC1N4TqnbukasXFaXh/7m6plbmLTtcyBT7O0zM38MVveY57HjC1dYx/T
txyLGTO0bIlN3PKaMDttaRY+Ldvyveddzlp6hEOtlr7gSn/452ea1lmjpXGM
q1r24US9ZT5iect5GFm0NAj/2i37sK3Xso/6a7Zck/UGLfPh03wtHcGY+Vu2
ODRnS6ewZI6WHnHO35n5Z3j8bwizt3SN2EItfcGG2VrmJjZXyxz4tEDL3JjU
beks+563pWvsY+6WY/lGzdOyJbZMS1O4j52W18f8hVuuiWGLt/QIh5Zs6Quu
rNDSDmpusZbGMW7Fln14sGhL74gt1XIeRi7X8rnx7V26ZR/7WL5lH3mXaLkm
663UMh/2rN3SFPxYp2WLT6u1NAt7Vm1pCudJy7rkvVmlpXHEFml5fexv5Za5
ia3eMgdWrdsyN84t2PIe8zzWamkE+1ij5Vjqfs2WLTF+k/H3S37XrtcyB7at
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
v5ejJfZbrElNPBbXx/w3c43DoXdzLcOh96LFmA9yfcGed3KNY9zbua5x/n6M
Zdxnub7zHn2SaxkWfhotsY9yPcXRDyM355/HPNz6MtcaHPoxt1Yx5ptcR3Dr
u1yD8OatuA729HWucYz7KnJw/m3MY873MY86/ilyY9UbcY+5Lz9HH8/mi9gX
e/oh5rGnu3Lfd97R3+MeY9KMbeuNmvgr1zIc+ifXF1wZo61Z+PFnrnGMG7Nt
HzX3R+Qj9m/Mw6rR2lpGnf0XfTg6ets+8v4da7LeWG3zYcxEbb8HuDJx2xZL
xmvrCG6N29Yyzu/JrT9+I4zT1i9ik7X1C2/Gbpub2Phtc2DYJG1z49+obX1n
3/9r6yn7mKDtWGybsG1LbIa2fnEfR2l7fcyfvO2aODR1W8twaNq2vuDKLG3t
YO9TtTWOcbO27bt3eEzZ1jhi07Wdh1UztX1uPNvp2/axj5nb9pF3mrZrsl6t
bT6M6bStT1zptm2xJGvrCG412lr2UOyD+4pN9WH/A7mxKdpeH/tL2ubGtmbb
HBhWtM2Nf5O2vcc8j3bbOmcfrbZjsS1v2xIbMcPwmzg8quFRtrUS276dbVgj
w+Po4TFnW1OwZIG2XlBnC7ZtMWD2tt5h1UJt+3Bitrb2EZujbZxcc7c1Czvn
b1tv5J2r7TrEBm19ZP58be1j3NJtTcGSZdtagxmLtTUIqxZt6xfn03SGz4h3
Yngs0tY4Ysu0zcH85dvWNt4s3jYHJi3V9rc+6y3Z1izOl2gb53zhttdK3nnb
fgPY6zxtr4/z5drukTVWa+sOfqzb1mXMWK9tS62v0tYpbFu/bR82rNzWPmKr
to2Ta422PmLYOm2/MeRdve06xFZqayLzt2hrB05sGS0ObRUt9mzU1g6s2jr6
8GOFtvcJUzduG8ekDdsax5wV28ZZb4O2eye2edv6Z+1tIh9mbNa2tolt0jYf
nm3atiW2XVt3MOmUtnXFu39qtPy3lnds6w6W7NzWEYzZq60X1NMObY1j3N7R
hwHbR25iu8Q8jNyjbV3h3K7Rh5d7Rh95d4o1WW+fyIc3h7Z1BDMOixaTDmjr
FN7s39YRzqft+J7eOjz2a+sasSPb+oIB+0ZuYgdGDnw6PHJj2+5tzWXfh7T9
DrGPg2Isph4cLbG12/7+4L3ZLa6P+UcPj7StSce3dQdLTmzrCMaMGB794VEN
j+PaGse4M6KPOj62rXfETop5GHlaPDfsOTn6eK6nRx95T4g1We/MyIcrF7V1
AT8ujhafzm1rFpac09Ydzrdt+67xDp3d1ixix8T1sb+zIjex8yIHVl0SuTHv
iLjHPI8L29Y8+zg/xlL3F0RLbK22vyG4v2u2rVHOL418eHlNW1/wBquoMWro
lmip3avb2oQ9t0YfHlzV1j5iIyNOruvaWolzN7U1jrzXxjrErmxrJfPvi/cA
P+6PFp8eiBaf7mjrDoa917Z+eN/fj5Z3886IY8/tbS1jzrtt65A5t8Xeid0b
94i1b2xrJXu9p+39InZX5MO5u6Ml9kGsSa3c0PZ7wPwHY7/Y+XhbU7DkybbW
4NAjbc3CucfaWsa4F9q+K3jzaMSJPRXzsPO5tiZi2NPRh6PPRx/zn4g1We+l
tr5gz1tt6xNX3o4WS15v6w7GPNzWTfb3UFwH56+2tQbbXmnrHecvR27OX4s4
ud6J3Nz369u+C9yjN9vWOft4I9bk/MW4bvY6Xcf3jGc1dsd6o87G7VgPvL+f
tjUFS74dHke1NeO7aKmtj9t6h1XfRx8efNTWPmKfRJxcn7c1Czu/bltv+PdZ
rEPsw3jmzP+j7TcAS/6MFj/+ihaffmrrF5Zc3vabzW+By9rWH+c/Rxzbfmxr
GXP+aWsZ9vwQeyf2e9vvEGt/1dZf9vpbW8uI/RL5MO/XaImN0/Fech+/bPtt
YP7fsV/WG6OjKVgyfse9svcJOrZXDI/ROnqHVRN27KOmR+1oH7HRO8bJNVZH
s3iW43V8huQds+M6xEbp6CPzp+xYV9TlVB1bLJm6Y4tVE3e0aWTsifuKKf/G
PcPUSTrGcW6ijmYx57+Is97/Ou6d2BQd31fW/iLeBe7R5B1dIzZpx3x4NlnH
ltizbX/HUJ/Td3x/cej24Z9XGR6rDo+ZOjqFK7N0NAVvso71Rv3N2NE7xjU7
9mHGDB3zEZu14zwMq3e0EntqHfswtdGxj7wzd1yT9dKOzjKn1TE33gw6+oIl
7Y42YVi3oykY1unYx/kcHesWY6qO18/8vGM+5vc6+oVVs3XMjXP94Z+fiXtW
doxzXnRchzlJx+tgr7N3nMd6c3ZcE3vm7egOhs3f0RSMWazjtwGn5+noF+MW
79hHHc/d0TJiC3Sch5GLdPxm8J1ZsGMfXi7asY+883Vck/WW6JgPV1bsWJP4
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
fc/rY36v55qYNOjpDpbM3tMRjJlv+OfXh+0bw6PqaRzj5u/ZRx33e3pHbI6e
8zBynp7PDXvm7NnHc523Zx95Z+u5Just0DMfrizZ0wX8WKpni0+L9DQLSxbu
6Q7nk/V813iHFuppFrGy5/WxvwV75ia2aM8cWLV0z9yY1+15j3keS/Ssefax
WM+x1P3iPVti/xX+huD+/ltYo5wv0zMfXq7S0xe8wSpqjBriXaCldlfqaRP2
8H7Qhwcr9rSP2Mo94+RaraeVOLdWT+PIu2rPdYit0NNK5m/W8z3Aj82jxact
osWnDXq6g2GH96wf3vcjouXd3LBnHHvW72kZcw7rWYfMWa/n3olt2vMesfaa
Pa1kr5v0vF/ENuqZD+c27tkSOzLWpFbW6Pk9YP6WsV/s3L6nKViyY09rcGib
nmbh3HY9LWPcnj3fFbzZNuLEdh4eE/a0c/eeJmLYLtGHo3tEH/N3iDVZb++e
vmDPwT3rE1cOiRZLDujpDsZs3dNN9rdVXAfn+/W0Btv27ekd5/tEbs73jzi5
Do3c3PfVe74L3KODetY5+zgw1uR8r7hu9vpAz/eMZ3VNz3qjzq7rWQ+8v8f1
NAVLTu3pFGacFi21dUxP77Dq9OjDg6N72kfs2IiT64SeZmHnKT3rjbzHxzrE
jopnzvzze34DsOSCaPHjwmjx6cyefmHJcj2/2fwWWLZn/XF+VsSx7YyeljHn
4p6WYc+I2Dux83p+h1j75J7+stdze1pG7OzIh3nnREvs2riX3MeTen4bmH9R
7Jf1ruppCpbc0HOv7P3GaJcfHlf09A6rboo+avrynvYRuzLi5BrZ0yye5fXx
DMl7daxD7LKePjL/7p51RV3eEy2W3BstVt3a06aVY33uK6ZcEvcMU2+LOM7d
0tMs5lwacda7OfZO7K6e7ytrnxjvAvfozp6uEbs98uHZHdES263n7xjq88Ge
7y8OrT/8LfvHsP1zeDzS0ylceaynKXjzbM96o/4e7ukd456LPsx4KPIRezzm
YdjTPa3EnieiD1OfiT7yPhprst5TPZ1lzvORG2/e6ukLlrzY0yYMe7mnKRj2
UvRx/m7PusWYN+P6mf9C5GP+az39wqq3IzfOvTE8do05r0ec81eHx04x58m4
Dvb6TsxjvfdiTez5qKc7GPZJT1Mw5uue3wac/rCnX4z7Jvqo4w96Wkbs05iH
kV/2/Gbwnfks+vDyq+gj78exJut9G/lw5beeNYkfv0eLTz/2NAtLfujpDue8
E5iFT9/3NIvY+3F97O+7yE3sp8iBVX9EbubPVvosufe/9qxt9vFzjOVd/iVa
Yn/FmrjyT093sGrW0nqjzv7raROWjFLaYslopdbg0L8xj3HjltYetTVq6VjG
jVNqGbGxSn3Em7FLW2JjlHqKo6OX5uZ8vNJ82DB+aYsxk5d+D7BkwlKP8Gai
Ur9w5X+lfZxPXeoUtT5BaQ7mTFw6Fp8mKW355kxRmhv/xizdF/uesrQPCyct
HYupk5W27OmLnt8/3qGpSsey9t9xv7nX05fahCUzlLZYMlOpNTg0XalxjKuX
fhdxZcbSsYxLS3+7E6uVPjf+3pmUtsRmKfWU5zpzaW7OG6X5cCUrbbGnLDUF
P1qlZuFHu9Qs7MlL+zifttRW9toszcGcTulYTOqWttR0vzQ35k1T+kyYX5X2
YV5ROhareqUte/q8Zy1yfwelY3nvZy9993FrnlJHsGe+Ul/wZtFSO6ituYd/
fqXnuMVK+/BgzlLjMG/+0nnYtnCpQZi3QGkfXi5S2kfeeUvXZL3FS/Nhzwql
puDHiqUtPi1dahb2LFVqCudzlF4H+1iy1Dhiq5RagwdLlOYmtkxpDqxaqTQ3
zi1Uai77Xr70vWQfy5aO5V4uV9oS27G0xqiPBUuvj/mrlq6JT2uWGoQra5ea
gjcblb7fWLJGqXeM27i0DydWL7WP2Dql8/Byg1IHMWnd0j7s3LC0j7xrla7J
epuU5sOnbUsdwZjtosWhLUqdwpLNSz3ifIdSU7jOzUpdI7Za6fWxv01LcxPb
MnLg0/aRm/krl95jnsc2pa6xj61iLGZsHS2x9UqvCbN3LjULn84ofe95l3cr
9QiH9ij1BVf2L60T6mzXUuMYd0D04cQukY/YnjEPI/ctNQj/9oo+bNsv+si7
e6zJegdGPnw6qtQRjDk6Whw6tNQpLDmk1CPO+Tsz/wyP/w3h4FLXiB1X6gs2
HBS5iR0WOfDpmMiNSfuUOsu+jyx1jX0cHmP5Rh0RLbERpaZwH/eO62P+8bEm
hp1c6hEOnVrqC66cXWoHNXdSqXGMOyf68ODEUu+InRbzMPLMeG58e0+PPvZx
VvSR95RYk/XOGx5zldpzeakp+HFFtPh0UalZ2HNhqSmc71Ral7w3F5QaR+yE
uD72d37kJnZx5MCqKyM3zh0b95jncVmpEezjkhhL3V8aLTF+k/H3S37XXhU5
sO3qaHHo+lKDcOXGUlPw5o5SO6it60q9Y9yd0YcH15baR+ymmIeXt5XWGObd
HH3YeXv0kfeGWJP1bi21jzl3RW4ceqTUEXy6p9QvLLmv1C8cujf6OH+81BcM
eLjUJubfHfmY/0CpU9T0o5Eb5x4q/a3PnAcjzvn9sQ5zbonrYK+PxTzWeyLW
xKRnSt3BkudKHcGYV+M9wI+nS41j3GvRhwFPlXpH7PmYh5Evl9qH8S9EH16+
En3kfTbWZL3XIx/efFDqCGZ8GC0mvV3qFN68VeoI5x+X2oQlb5a6RuzJuD72
90bkJvZO5MCnjyI380/pD2tneBTD4/1SF9jHuzGWWn8vWmKfxJoY81mpQfg0
Yd8aow6+KPULe76MFle+LjUFbz6PeYz7qdQR6uyrGMu4H0tdI/Z9qV/U1g/R
Evu21FDs/CZyc/5z5MOVX6LFnn9LTcGP30rNwo8/Ss3Cnt+jj/PR+5pC3f8a
OZjzZ4zFpL+ixcj/IjfmfRf7Yt+j9O3DvL9jLN+lf6JlTy+Vfv94h0Ybjj+3
dO1P435zr8fu6xf2jNO3xZXx+pqCN2P1dY1xkwz/PHLYXjM8xu07lnET9/WF
2P/6PjfsmahvS2yCvobyXMfvm5vzSfvmw5XJ+rbYM31fU/Bjir5m4cdUfc3C
nin79nE+Zl9n2evkfXMwZ+q+YzFpmr4tNT1D39yYN0bfZ8L8Gfv2Yd60fcdi
1XR9W/b0Ymktcn9n6jsWw2bu22JP2tcR7Gn09QVvqA/soLaSvq4xjpqhDw9q
fY0jlvWdh23tvgZhXrNvH152+vaRt953Tdbr9c2HPXP1NQU/5u7b4tOgr1nY
U/U1hfO1+r73vO/9vsYRW7NvjREr++YmNlvfHFg1T9/cOJf3NZd9z9n3vWQf
s/cdy72co29LbO2+a1Ifrb7Xx/z5+hqHQwv1tQyHFu7bYsyifX3BngX7Gse4
Bfq6xvkifccybum+BlETS/a1DAuX6tsSW7yvpzi6WLjG+TJ95+HWcn0NwqrV
+vqCKyv2NQirVu5rCsbM3/c62NMKfV1j3PJ9c3C+Ut95zFml7zwMWL1vbjyb
t+895r6s0bePZ7Ns332xp1X7zmNP1Bl/P+H7vU7fe4xbB/etB9799fv6hUkb
9vUIY7bs6xe1sl5f1xi3VfRRf+v2zUdso77zMGnz4Z9H7evQxn37sHOL6CPv
Bn3XZL2tIx/27NLXFCzZNVq82b6vQVi1XV+/OJ+lb/3x22HbvsYR26OvNRiz
TeQmtkPkwKTdIjfObdrXX6zdue83iX3sGGPxbKdoiR3U1yzu4yZ9r4/5e8aa
mLRvX78waf++HmHMYX3tYO/79HWNcYdH36zDY+++DhI7IOZh0iHx3HDowOhj
H4dGH3n3izVZ74jIhzEn9q1PXDkpWiw5pq8juHV0X8vqMY/7ik1H9fWL2F5x
fezvyMhN7NjIgWEnR2782z3uMc/jhL51zj6Oi7HYdny0xE7t6yOend7XHUwq
q6E/w/aZ4XFmX8tw6Oy+vuDKRX3toObO6Gsc4y6OPmwYEfmInRPzsOqCvpZR
Z+dGH45eGH3kPSvWZL1LIh/2XNPXFCy5Nlq8uaKvQVh1eV+/OD8tro9ru6yv
ccRu6FvPGHNp5CZ2ZeTApOsiNyad39d39j2y77+fwT6uirF4dnW0xJ7rW2/U
xHlxfcy/MdbEpFv7eoRht/f1CFfu6+s1ltzS1zvG3R99eHBzX+OI3RHzMPKe
vt8SvjN3Rh+23Rt95L0t1mS9ByIf9jzV1xT8eDpafHqkr1nY83BfUzh/tq9T
XOdDfY0jdlNcH/t7MHITezRyYNUzkZv518c95nk8OTw2i308FmOp+8ejxY+7
+7rMdb7Q1yOs+q1vPfB7+eW+BuHKq31NwZt3+tpBbb3U1zvGvRt9ePBi5CP2
WszDy7f61hjmvR592Pl29JH3lViT9d6LfNjzeV9T8OOLaPHpo75mYc+HfU3h
nN98S8R35YO+xhH7uq81ePB+5Cb2ceTAqi8jN8692ddf9v1Z328S+/gkxuLr
p9ES+7WvWdzHN+L6mP9NrIlPP/Q1CFd+6msK3vzZt96w5Pu+3jHur+jDg+/6
2kfs55iHl7/Hc8OkX6KPffwRfeT9MdZkvb8jH/aMWWkKfoxV2eLTKJVmYc9/
fU3h/Pm+dcl7829f44h9G9fH/v6J3MRGrcyBVWNX5sa5r+Ie8zzGqDSCfYxW
OZa6H72yJfZG/DMh/p2qu/rWJe/xuJXG4dD/Kg3ClYkrTcGbqSrtoLYmrPSO
cfy7uvThwQSV9hGbpHIeXk5RWWOYN2llH3ZOWdlH3okq12Q9/t1f8mHPrJWm
4EetssWnGSrNwp7pK03hfJHKWuLdn67SOGILV9YesWkrcxObsTIHViWVuXFu
8kp/2fcslTXPPmaqHMv9m7myJbZo5ZrUxGSV18f8eqVxONSqtAyH8soWY7rD
Pz/R155mpXGMyypd47xdORaHBpW+8x71Ky3DwqqyJdar9BRHi8rcnM9WOQ+3
5qi0BocWqKxVjJm70hHcmrfSILxpVF4He5qr0jjGzVmZg/N5KucxZ77KedTx
gpW5sSqtvMfcl4Uq+3g2s1fuiz3NXzmPPY1T+b7zji5WeY8xaZvKeqMmlqy0
DIeWrvQFV1aqNAs/lqg0jnErV/ZRc4tX5iO2TOU8rFqh0jLqbNnKPhxdsbKP
vEtVrsl6q1Tmw5h1K78HuLJeZYsla1Q6glurV1rG+XiV9cdvhNUq/SK2YaVf
eLNqZW5ia1bmwLD1K3Pj3/KVvrPvdSo9ZR9rVY7FtrUrW2JbV/rFfVyu8vqY
v1Hlmji0WaVlOLRFpS+4sn2lHex900rjGLdD9I0/PDapNI7YljEPq7aN58az
3Sr62Md20UfezWNN1tsx8mHMXpX1iSt7R4slu1Y6glu7VFo2UczjvmLTzpV+
Edu48vrY306Rm9hukQPD9onc+LdB5T3meexZWefsY/cYi217REuM/64k/41s
/vuw+0YOvOS/F8l/v5bYoZWmYMkxlV5QZ8dGiwEHV3qHVcdFH04cVGkfsUMi
Tq7DK83CzqMr6428h8U6xA6s9JH5R1Xax7gRlaZgyZmV1mDGycOjU2nViZV+
YdLmg+EzGh6jDY8TKo0jdkbkYP7ZlbWNN6dEDkw6vfK3PuudVmkW56dGnPPj
41rJe2TlN4C9HhHXx/lZsUfWuKjSHfy4stJlzLgqWmr9gkqnsO3q6MOG8yvt
I3ZhxMl1SaWPGHZF5TeGvBfHOsTOqzSR+TdX2oETt0SLQ7dGiz3XVtqBVbdF
H36cE/cJU6+LOCZdU2kcc86NOOuNjL0Tu6my/ln79siHGTdW1jax6yMfnt0Q
LbE7K93BpPcq64p3//1oeX/vqXQHS+6rdARjHq30gnq6u9I4xj0WfRhwV+Qm
dn/Mw8iHK+sK5x6IPrx8JPrIe2+syXqPRz68eaHSEcx4MVpMerrSKbx5qtIR
zreI93T04fFkpWvEXqn0BQOeiNzEnokc+PRS5Ma2hyrNZd/PV36H2MezMRZT
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
4N+V8m+qNkqsS97j6xONw6FbEw3CldsTTcEb/nsSdlBbtyR6x7j7og8Pbk60
j9gdMQ8v70msMcy7M/qw897oI+9tsSbr3R/5sOeJRFPw48lo8enhRLOw56FE
Uzj/IrGWePcfTDSO2OeJtUfsgchN7JHIgVVPRW6cuzvRX/b9eGLNs49HYyz3
77FoiX0Za1ITd8X1Mf+ZRONw6IVEy3DoxWgx5uVEX7Dn+UTjGPdcomucvxRj
Gfdmou+8R68nWoaFb0RL7NVET3H0lcjN+VsxD7feSbQGhz5JrFWMeT/REdz6
MNEgvHk2roM9vZdoHOPejRycfxDzmPNRzKOOP43cWPV03GPuy2fRx7N5O/bF
nj6OeezpusT3nXf0q7jHmDRZar1RE98mWoZD3yf6giu/JZqFH98kGse436OP
mvs68hH7IeZh1S+JllFnP0Yfjv4afeT9LtZkvT8iH8aMkfo9wJUxU1ss+SfR
Edz6O9Eyzm9IrD9+I/yV6BexcVL9wps/IzexfyMHho2Vmhv/fk70nX2Pnuop
+/gvxmLbaKktsUlT/eI+/hTXx/xxU9fEoQlTLcOhEam+4MqUqXaw9wlSjWPc
1IM/3zhobxoc46caR2zi1HlYNXnqc+PZTpLaxz6mSO0j70Spa7LeNKn5MGbW
1PrEldlSWyyZIdUR3Jo+1bLbYh/LJto0XapfxMZLvT72N21qbmIzpubAsNlT
c+Pf2Kn3mOcxS2qds4+ZUsdi28ypLTH+7dp0Ye6cqVZi2ymNgfODY5HBsUCq
KViyWKoX1NniqS0GzJfqHVYNpfbhxLyp9hGbPzVOrpGpZmHnoqn1Rt4FU9ch
Nk+qj8xfJNU+xrVSTcGSdqo1mFFPNQir0lS/OJ+oPnhGvBODI0k1jliRmoP5
ZWpt400jNQcmNVN/67NenmoW51lqnPNa6rWSd+HUbwB7XSj1+jjvpO6RNUal
uoMfy6e6jBkrpLbU+nCqU9i2YmofNlSp9hFbIjVOrqVSfcSw5VK/MeRdMnUd
Yv1UE5m/VqodOLF2aotD66S22LNKqh1YtW5qH350U+8Tpq6aGseklVONY04v
Nc56K6XundiaqfXP2uul5sOMNVJrm9hqqfnwbPXUltgGqe5g0mGpdcW7f3i0
/G9KG6e6gyWbpjqCMdukekE9bZRqHOO2jT4M2DA1N7HNYh5GbpVaVzi3efTh
5dbRR95NUtdkve0iH97snuoIZuwRLSbtlOoU3uyY6gjnI+q+p1cOjh1SXSO2
T6ovGLB95Ca2c+TAp70Gx1Sptm2Zai773i31O8Q+domxmLprtMSWTf39wXuz
RVwf8/eNNTHpwFR3sOTgVEcw5qjBMdfgmHtwHJBqHOOOjj7qeP9U74gdEvMw
8oh4bthzaPTxXI+MPvIeFGuy3jGRD1dOTXUBP06LFp9OSDULS45PdYfz9VPf
Nd6h41LNIrZfXB/7OzZyEzsxcmDV6ZEb8/aOe8zzOCW15tnHSTGWuj85WmLL
pP6G4P4unVqjnJ8R+fDyglRf8AarqDFq6Ipoqd3zUm3K4v2gDw/OTbWP2PkR
J9dFqVbi3GWpxpH3wliH2DmpVjL/pngP8OPmaPHplmjx6ZpUdzDsxdT64X1/
KVrezWsjjj1Xp1rGnBdS65A5V8Xeid0Y94i1L021kr3ekHq/iF0X+XDu+miJ
vRxrUiuXpH4PmH9r7Bc77041BUvuTbUGh+5INQvn7kq1jHEPp74reHNnxIn9
L+Zh54OpJmLYfdGHow9FH/PviTVZ79FUX7Dn2dT6xJXnosWSp1LdwZjbU91k
f7fFdXD+RKo12PZ4qnecPxa5OX8y4uR6PnJz3y9OfRe4R8+k1jn7eDrW5PyR
uG72OnHd94xn9WdqvVFnf6fWA+/vG6mmYMkHqU5hxofRUluvpXqHVR9FHx68
mmofsdcjTq63Us3CzvdT6428b8Y6xF6JZ878r1O/AVjyTbT48W20+PRpql9Y
clbqN5vfAmem1h/nn0Uc2z5JtYw536dahj0fx96JfZX6HWLt91L9Za9fplpG
7PPIh3lfREvsr7iX3Md3B8eeMf+72C/r/ZZqCpb8G3tl7/9Fe/bg+CXVO6wa
rW4fNf1zqn3Efo04uf5INYtn+U88Q/L+HusQ+ynVR+aPX7euqMsJ6rZYMmHd
FqvGrGvT+bEn7ium/BD3DFPHqhvHuTHqmsWcHyPOeqPX3Tux8eq+r6z9drwL
fD/HresasbHr5sOzceq2xB5I/R1DfU5S9/3FoasHfx4eHEsMjsnrOoUrU9Y1
BW9mqFtv1N9kdb1j3Ix1+zBj0rr5iE1Vdx6GTVfXSuyZum4fpk5ft4+8U9Rd
k/Wmressc2aqmxtv5qnrC5bMUtcmDJutrikYNmvdPs7nr1u3GDN33etn/sx1
8zF/jrp+YdW8dXPj3FyDP98f92zOunHOZ6+7DnOmqXsd7HW+uvNYb4G6a2LP
wnXdwbBF65qCMfW63wacXqiuX4xr1O2jjkfWtYzYYnXnYWRS95vBd2bxun14
mdbtI+8idddkvaxuPlzp161J/KjqtvhU1DULS1p13eGcdwKz8KlZ1yxiC9a9
PvaX181NrF03B1bxTpGb+QfVfZbc+17d2mYfnbpjeZe7gz+/kxobVXdNXFmq
rjtYtX3deqPOlqlrE5YsW7fFkuXrWoNDS9edx7jV6tYetbVc3bGMW7WuZcRW
rusj3qxStyW2Yl1PcXSFurk5X71uPmxYo26LMRvW/R5gyVp1PcKbder6hStr
1+3jfNO6TlHra9bNwZx1647Fp/XqtnxzNqqbG/9Wqrsv9r1x3T4sXL/uWEzd
oG7Lnmp1v3+8Q5vUHcvaS9a939zrLevahCVbRYsl29S1Boe2qGsc43au+13E
la1jLON2qvvbndgO8dz4e+eO0RLbrq6nPNdtIzfnu0Q+XNk1WuzZr64p+LF7
XbPwY8+6ZmHPHtHH+eZ1bWWvu0UO5uwVYzFp72ip6f0jN+ZtFs+E+QdEH+bt
E2Oxat9o2dNQ3Vrk/h4YY3nvD453H7cOr+sI9hxZ1xe8OaGuHdTWYXVdY9yJ
0YcHh9Y1jthRMQ/bjqtrEOYdHX14eXz0kfeIWJP1Top82HN2XVPw45xo8em0
umZhz6l1TeH8kLgO9nFKXeOInV/XGjw4OXITOz1yYNW5kRvnjq1rLvs+q+57
yT7OiLHcyzOjJXZv3RqjPo6J62P+BbEmPl1S1yBcubyuKXhzXd33G0surusd
466PPpy4qK59xK6IeXh5TV0HMenK6MPOa6OPvJcNjjLWuyHy4dOddR3BmLui
xaFb6jqFJTfX9Yjze+qawnXeVNc1YhfG9bG/GyM3sVsjBz7dHbmZf17cY57H
HXVdYx+3xVjMuD1aYlfFNWH2fXXNwqdP6r73vMsP1vUIhx6u6wuuPFW3Tqiz
B+oax7inow8n7o98xB6JeRj5RF2D8O/R6MO2J6OPvA/Fmqz3TOTDp1frOoIx
r0WLQy/UdQpLnq/rEef8nZn/hsf/hvBcXdeIvVnXF2x4NnITezFy4NPrkRuT
Hq/rLPt+pa5r7OOlGMs36uVoiX1c1xTu42Nxfcx/K9bEsPfqeoRDH9T1BVc+
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
t65wbuLcPrycPLePvBPmrsl6U+Xmw5uZcx3BjFlyW0yaLtcpvJk21xHOb473
dPnBMU2ua8Rmz/UFA6bOzU1s+twc+DRrbm5smzTXXPY9U+53iH3MkDsWU2fM
bYn9lPn7g/dmktzrY/4cuWti0jy57mDJfLmOYMwigz8/lWnG3LnGMW7R3D7q
eK5c74jNnzsPIxfKfW7Ys0BuH8914dw+8s6buybrLZabD1fyXBfwo5nb4lOS
axaW1HLd4Xyc3HeNd2go1yxic+ZeH/tbPDc3sTQ3B1a1cnNj3my595jnkeXW
PPuo546l7hu5LbEfM39DcH9/yKxRzovcfHg5nOsL3mAVNUYN8S7QUrv9XJuw
h/eDPjzo5dpHrMqNk2tUrpU4t0yuceRdIncdYt1cK5m/Ru57gB9r5rb4tFZu
i08r5bqDYXvm1g/v+17R8m6unBvHnhVzLWPOHrl1yJwVcvdObPXce8TaS+da
yV5Xy71fxFbJzYdzq+a2xPaONamVpXK/B8xfO3e/2LnR4M//ZFqySa41OLRe
rlk4t0GuZdizde67gjfr58aJbZo7Dzu3zDURwzaLPhzdKvqYv3Humqy3ba4v
2LNrbn3iym7RYslOue5gzLq5brK/dXKvg/Mdcq3Btu1zveN8u8jN+Y4RJ9fu
kZv7vmTuu8A92iW3ztnHzrEm59vEdbPXW3LfM57VBbn1Rp1dlFsPvL8H5JqC
JYfnOoUZR0RLbe2X6x1WHRl9eLBvrn3E9o84uQ7KNQs7D8utN/IeGOsQ2yee
OfNPyv0GYMnJ0eLHKdHi0zG5fmFJJ/ebzW+Bdm79cX5sxLHt6FzLmHNarmXY
c1TsndiJud8h1j4011/2ekKuZcSOi3yYd3y0xC6Me8l9PCT328D8U2O/rHdu
rilYcknuXtn7pdGWg+PsXO+w6rLoo6bPyrWP2DkRJ9f5uWbxLC+OZ0je82Id
Ymfm+sj863Prirq8IVosuTFarLoy16Yq1ue+Ysrpcc8w9aqI49wVuWYx54yI
s97lsXdi1+W+r6x9cLwL3KNrc10jdnXkw7NroiW2Re7vGOrz1tz3F4dWbA68
GbTfDI47cp3ClbtyTcGbB3Lrjfq7Pdc7xj0YfZhxW+QjdnfMw7D7cq3Ennui
D1Pvjz7y3hlrst7/cp1lzkORG2+ezfUFSx4dHBvmGvZ4rikY9lj0cf5Cbt1i
zDNx/cx/OPJh25O5fmHVc5Eb554eHJvHnKcizvkTsQ5z7o3rYK/PxzzWezHW
xJ5Xc93BsNdzTcGY93K/DTj9Sq5fjHs/+qjjl3MtI/ZGzMPId3K/GXxn3ow+
vHw3+sj7WqzJeh9EPlz5Mrcm8eOraPHpk1yzsOTjXHc4553ALHz6KNcsYi/F
9bG/DyM3sU8jB1Z9HbmZP2/TZ8m9/yK3ttnHZzGWd/nzaIl9G2viyve57mDV
VE3rjTr7MdcmLPkpWiz5JdcaHPoh5jHu79zao7Z+jrGM+yvXMmJ/5PqIN39G
S+y3XE9x9NfIzfk/kQ8b/o0WY8Zt+j3AktGaeoQ3YzT1C1dGb9rH+YRNnaLW
/4sczBmz6Vh8GqtpyzdnvKa58e/32Bf7Hr9pHxaO3XQspo7TtGVPb+d+/3iH
Jmg6lrW/i/vNvZ6kqU1YMmnTFksmb2oNDk3c1DjGTdf0u4grkzUdy7hpm/52
JzZ10+fG3zunadoSm7KppzzXKZrm5nz6pvlwZYamLfbM2dQU/JipqVn4MUtT
s7Bn5qZ9nI9oait7nbFpDubM2nQsJs3WtKWm52qaG/MmavpMmD930z7Mm73p
WKyao2nLnt7KrUXu7zxNx/Lezz/48yO5bi3U1BHsWaSpL3iTNrWD2hrZ1DXG
1Zv24cGCTY0jtmjTedhWa2oQ5i3WtA8vk6Z95F246Zqs12iaD3u6TU3Bj17T
Fp9aTc3CnmZTUzhfoOl1sI+8qXHEhptagwdZ09zEiqY5sKrfNDfODTU1l32X
Td9L9tFuOpZ72WnaEtu4aY1RH4s3vT7mL9F0TXxauqlBuLJsU1PwZpWm7zeW
LNXUO8at2rQPJ5Zsah+x5ZrOw8uVmjqIScs37cPOlZv2kXeZpmuy3mpN8+HT
+k0dwZgNmrY4tFZTp7BkzaYecb5RU1O4zjWaukZsVNPrY3+rN81NbO2mOfBp
w6a5mV81vcc8j/WausY+1mk6FjPWbdoSW6HpNWH2pk3Nwqejm773vMtbNPUI
h7Zq6guu7Ni0TqizzZsax7idog8nNot8xLaOeRi5fVOD8G+b6MO2HaKPvFvG
mqy3c+TDp32aOoIx+0aLQ7s3dQpLdmvqEefbF4O1BseEg2PXpq4RO6CpL9iw
S+QmtkfkwKf9IjcmbdfUWfa9d1PX2MeeMZZv1F7REjuqqSncx23j+ph/YKyJ
YYc29QiHDm/qC64c39QOau6QpsYx7oTow4ODm3pH7IiYh5HHxHPj23tk9LGP
4wbHfJH3sFiT9U6MfNhzVlNT8OPsaPHp1KZmYc8pTU3hfJOmdcl7c3JT44gd
FNfH/k6K3MROixxYdU7kxrn94x7zPM5sagT7OD3GUvdnREuM32T8/ZLftedG
Dmw7L1ocuripQbhyaVNT8OaapnZQWxc19Y5x10YfHlzY1D5il8U8vLyqaY1h
3uXRh51XRx95L4k1We/KpvYx57rIjUN3NHUEn25o6heW3NTULxy6Mfo4v7up
Lxhwe1ObmH995GP+LU2doqbvjNw4d1vT3/rMuTXinN8c6zDnirgO9npXzGO9
e2JNTLq/qTtY8mBTRzDmiXgP8OO+psYx7snow4D/NfWO2EMxDyMfa2ofxj8c
fXj5ePSR94FYk/Weinx483JTRzDjlWgx6bmmTuHNs00d4fy1pjZhyTNNXSN2
b1wf+3s6chN7PnLg06uRm/mHtQa1MzhmHxwvNXWBfbwQY6n1F6Ml9nqsiTFv
NjUIn0ZrWWPUwdtN/cKed6LFlfeamoI3b8U8xn3a1BHq7N0Yy7hPmrpG7KOm
flFbH0dL7IOmhmLn+5Gb888iH658Hi32/Dg4jm3qx5dNzcKPr5uahT1fRR/n
vzY1hbr/InIw55sYi0nfRouRP0VuzPsw9sW+f44+zPsuxvJd+j5anHu06feP
d+iXGMvab8T95l7/2dQv7PkrWlz5p6kpePNHU9cYN9bguZw/aC8YHH/HWMaN
2dIXYqO3fG7YM0bLlth/TQ3luf4buTkfu2U+XBmnZYs9k7Q0BT/Ga2kWfkzQ
0izsGb9lH+e/N3WWvY7bMgdzJmw5FpMmatlS05O2zI15v8UzYf5kLfswb0TL
sVg1ccuWPT3StBa5v5O3HIthU7RssWfalo5gz/QtfcEb6gM7qK1pWrrGOGqG
PjyYuqVxxGZoOQ/bZmlpEObN2LIPL2dt2Ufe6VquyXpztMyHPQu2NAU/RrZs
8WmelmZhz9wtTeF8mZbvPe/7XC2NI7Z0yxojNmfL3MTmbZkDqxZqmRvnZm5p
LvteoOV7yT7mazmWezl/y5bYsi3XpD5manl9zF+kpXE4NNTSMhyqtWwxJm3p
C/Ys3tI4xi3W0jXOk5ZjGddqaRA1kbe0DAubLVtijZae4mg9XOO8aDkPtzot
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
0DjG3RV9GHBd5CZ2c8zDyNsL6wrnbok+vLwj+sh7Y6zJendHPrx5uNARzHgk
Wky6r9ApvPlfoSOcr9X2Pf11cNxb6Bqxxwt9wYB7Ijex+yMHPj0aubHttkJz
2fdDhd8h9vFAjMXUB6Mldlbh7w/em1vj+pj/RKyJSc8UuoMlzxU6gjGvDo4d
B8dOg+PpQuMY91r0UcdPFXpH7PmYh5Evx3PDnheij+f6SvSR99lYk/Vej3y4
8kGhC/jxYbT49HahWVjyVqE7nF9T+K7xDr1ZaBaxJ+P62N8bkZvYO5EDqz6K
3Jj3WNxjnsf7hTXPPt6NsdT9e9ESO7PwNwT394zCGuX848iHl98U+oI3WEWN
UUO/REvtflVoE/b8Gn148GWhfcS+jji5viu0Eud+KjSOvN/GOsS+KLSS+f8V
vgf4MVrbFp9Gb9vi0x+F7mDYLG3rh/d91rYt7+afEcee3wstY87MbeuQOb/F
3on9G/eItX8stJK9/hP3i9hfkQ/n/o6W2Gxt16RWfij8HjB/jLb7xc7x2pqC
JRO0tQaHxm5rFs6N29Yyxk3W9l3Bm3HaxolN2HYedk7S1kQMm6htH45O2raP
+eO3XZP1pmjrC/bM0LY+cWXGti2WTNvWHYwZq62b7G/MttfB+dRtrcG2qdp6
x/mUbXNzPk3bOLlmapub+/59vAvco+nb1jn7mK7tmpxP3va62evabd8zntVw
23qjzka1rQfe37nbmoIlI9s6hRkLtW2prTnbeodVC7ftw4M52tpHbK62cXLN
29Ys7Fywbb2Rd5626xCbve0zZ3697TcASxptW/zI2rb4tFhbv7Dks8JvNr8F
Ph0cB8b54m3j2LZoW8uY02xrGfYs0nbvxNK23yHWXqCtv+w1aWsZsaG2+TCv
1rYltkTbe8l9nL/tt4H5edv9sl6vrSlYsnTbvbL3Zdq2nw+Osq13WLVs2z5q
utPWPmLdtnFyVW3N4lkuNfjzJ3EP+m3XIdZu6yPzV2tbV9Tl6m1bLFmjbYtV
K7S16evYE/cVU1pt7xmmrtg2jnPLtzWLOUXbOOst13bvxFZt+76y9nxt3wXu
0SptXSO2Utt8eLZy25bYxG1/x1Cf67R9f3Hot8GfTxocJw+O9ds6hSsbtjUF
b7ZoW2/U33ptvWPcltGHGeu2zUdso7bzMGyztlZiz8Zt+zB18+gj7wZt12S9
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
jpZh4UfREnu/o6c4+l7k5vyTmIdbn3U0CKu+6+gLrnzZ0SCs+rqjKRjzWlwH
e/qio2uM+zxycP5VzGPONzEPA76P3Hj2Stxj7ssP0cez+TT2xZ6+jXnsiTrj
7yd8v3+Je4xbM5TWA+/+7x39wqQ/O3qEMaOX+kWt/NbRNcaNUdpH/f0a+Yj9
FfMw6b+OZuHQ39GHnaOV9pH3j1iT9cYszYc9E5WagiUjSlu8GbfUIKwap9Qv
zu/qWH/8dhi71Dhik5ZagzFjleYmNl5pDkyauDQ3zv3b0V/2PWHpN4l9jF86
Fs8mKG2JTV9qFvfxn7g+5k9WuiYmTVXqFyZNU+oRxsxcagd7n7LUNcbNUtp3
9+CYotRBYtOWzsOkGUufGw5NV9rHPmYq7SPv1KVrst6spfkwZr7S+sSV+Utb
LJmz1BHcmqPUsvtiH9xXbJq91C9ik5deH/ubrTQ3sblKc2DYAqW58W+S0nvM
85i3tM7Zx9ylYx8cHPOUtsRGlvqIZwuXuoNJTw7+vOng2GxwLFZqGQ4NlfqC
K3mpHdTcoqXGMa5Z2ocNi5TmI1YrnYdVjVLLqLOktA9Hs9I+8i5euibrFYM/
v9HRniVKTcGSUaUt3nRLDcKqstQvzhcqvT6urVNqHLGlS+sZY9qluYn1SnNg
0pKluTGpXuo7+x4u/fcZ7KNfOhbPqtKW2Bal9UZNpKXXx/xlStfEpBVKPcKw
lUo9wpU1S73GkuVLvWPcWqV9eLBcqXHEVi6dh5Grl35L+M6sUtqHbWuU9pF3
xdI1WW/t0nzYs0mpKaPF86fFp/VLzcKe9UpN4XzzUqe4znVLjSO2bOn1sb91
SnMT26A0B1ZtFrmZv1TpPeZ5bFxqBPvYsHQsdb9RaUtstVKXuc6tSj3CqhNK
64Hfy9uWGoQr25eagje7ldpBbW1T6h3jdo8+PNg68hHbIebh5S6lNYZ5O0Yf
du4afeTdLtZkvT0iH/YcWGoKfhwULT7tU2oW9uxdagrn/Obj75R8V/YqNY7Y
oaXW4MGekZvYvpEDqw6O3Di3c6m/7PuA0m8S+9gvxuLr/tESO77ULO7jTnF9
zD8s1sSno0oNwpVjSk3Bm5NL6w1Ljiz1jnGnRB8eHFFqH7FjYx5enhjPDZOO
iz72cVL0kffoWJP1To182HNeqSn4cX60+HRmqVnYc0apKZxvWVqXvDenlxpH
7PC4PvZ3WuQmdlbkwKoLIjfOHRL3mOdxbqkR7OPsGEvdnxMtsZ3ivwnxb6pW
La1L3uOLS43DoStKDcKVq0pNwZsbS+2gti4v9Y5xN0UfHlxWah+xq2MeXl5f
WmOYd030YecN0UfeK2NN1rs58mHPPaWm4Me90eLT7aVmYc9tpaZw/nZpLfHu
31pqHLG3SmuP2C2Rm9gdkQOr/he5ce66Un/Z992lNc8+7oyx3L+7oiX2TqxJ
TVwb18f8+0uNw6GHSy3DoUeixZjHSn3BnodKjWPcg6Wucf5ojGXcM6W+8x49
VWoZFj4dLbEnSj3F0ccjN+fPxjzcer7UGhx6vbRWMealUkdw65VSg/DmgbgO
9vRiqXGMeyFycP5yzGPOqzGPOn4jcmPVfXGPuS9vRh/P5rnYF3t6Leaxp4sG
R6v0HX037jEmjdW13qiJD0otw6GPSn3BlS9LzcKP90uNY9xX0UfNvRf5iH0c
87Dq81LLqLNPog9Hv4g+8n4Ya7Le15EPY34p/R7gyq/RYsn3pY7g1nellnF+
SWn98Rvh21K/iP1R6hfefBO5if0QOTDst8iNf5+V+s6+fy71lH38GGOx7ado
iY3Z1S/u46dxfcz/M9bEoX9LLcOh0br6givjdbWDvf9Tahzjxu/ad+ng+LvU
OGKjd52HVeMM/nxhPNsxuvaxj3G79pH3v1iT9Sbomg9jpuhan7gyZdcWSybu
6ghujehq2ZWxD+4rNk3U1S9if8X1sb8Ju+YmNknXHBg2Vdfc+Pd73GOex+Rd
65x9TNp1LLZN1rUltvGSg3s3anAdg2PqrjnwcqNB/z+jjM3c1RQsmaurF9TZ
3F1bDJixq3dYNU/XPpyYoat9xGbqGifXrF3Nws45u9YbeWfpug6x6bv6yPw5
utrHuEW6moIli3W1BjMW6GoQVs3f1S/O/xv8+SzeicExX1fjiC3aNQfzh7rW
Nt4s2DUHJi3c9bc+6y3U1SzOR3aNcz5v12sl7+xdvwHsdbau18f54l33yBp5
V3fwo9vVZczodW2p9UZXp7Ct37UPG+pd7SOWdY2Tq9XVRwwru35jyNvsug6x
tKuJzF+2qx04sVzXFoeW79pizxJd7cCqFbr24Uet633C1FFd45g03NU45iRd
46xXdd07sWW61j9rr9g1H2Ys3bW2iS3ZNR+eLdW1JbZyV3cwac+udcW7v1e0
vL+rdXUHS9bo6gjGrN/VC+pp1a7GMW6Drn0YsErX3MTW7DoPI9ftWlc4t1bX
Prxcr2sfeVfvuibrbdg1H95s3dURzNgmWkzatKtTeLNJV0c4H63ne3rO4Ni4
q2vEtu/qCwZs1DU3sc0iBz5tG7mxbZ2u5rLvrQZ/Hjv2sXmMxdQtouUb1en6
+4P3Zu2u18f8HWJNTNqlqztYsltXRzBm38Ex7eCYbnDs3NU4xu0XfdTxTl29
I7Z7zMPIveO58X9TtUf08Vz3iT7y7hprst7+kQ9XjujqAn4cGS0+HdzVLCw5
qKs7nK/U9V3jHTqwq1nEdozrY38HRG5ih0QOrDoqcmPednGPeR6Hd6159nFo
jKXuD4uWWLvrbwjub9G1Rjk/OvLh5cldfcEbrKLGqKGzo6V2T+xq08h4P+jD
gxO62kfspIiT69SuVuLcmV2NI+8psQ6x47tayfxL4z3Aj8uixafLo8Wn87u6
g2GPdK0f3vdHo+XdvCDi2HNeV8uY83DXOmTOubF3YpfEPWLtM7payV4v7nq/
iF0Y+XDuomiJPRZrUiund/0eMP+K2C92XtfVFCy5oas1OHR1V7Nw7tquljHu
9q7vCt5cE3FiN8Y87Ly1q4kYdlP04eht0cf862NN1ruzqy/Y80DX+sSVB6PF
kv91dQdjrurqJvu7Mq6D83u6WoNtd3f1jvO7Ijfn90acXA9Fbu77aV3fBe7R
/V3rnH3cF2tyfkdcN3sdved7xrP6pmu9UWffda0H3t+nu5qCJS93dQozXomW
2nqyq3dY9Wr04cETXe0j9lTEyfVcV7Ow86Wu9UbeZwfHlhF7PJ4589/r+g3A
kvejxY8PosWnN7r6hSXHdv1m81vgmK71x/mbEce217taxpyPulqGPa/F3om9
2/U7xNovdvWXvb7T1TJib0U+zHs7WmLfxr3kPr7Q9dvA/A9jv6z3ZVdTsOSH
2Ct7/zHa4wbH5129w6qfoo+a/qyrfcS+iDi5vu5qFs/y+3iG5P0q1iH2aVcf
mf9317qiLv+JFkv+jRarfu1q00mxPvcVUz6Oe4apv0Uc537pahZzPok46/0c
eyf2V9f3lbWf7/oucI/+7Ooasd8jH579ES2xW7r+jqE+x+j5/uLQeYM/NwZH
NjjG7ukUrozb0xS8mbhnvVF/Y/X0jnGT9OzDjDF75iM2Xs95GDZRTyuxZ/ye
fZg6omcfecfpuSbrTdjTWeZM2jM33kzf0xcsmbynTRg2ZU9TMGyKnn2cz9Sz
bjFmup7Xz/zJeuZj/tQ9/cKqGXrmxrlpB3++Oe7ZND3jnE/Vcx3mTNDzOtjr
jD3nsd7MPdfEntl7uoNhc/Y0BWMW6PltwOnZevrFuAV79lHHs/a0jNhcPedh
5Hw9vxl8Z+bu2YeX8/fsI+8cPddkvZE98+FK2rMm8aPes8WnxQZ/fqarJYv0
dAfDeCcwC58W7mkWsVl6Xh/7W6hnbmKL98yBVbxT5Gb+rj2fJfc+6Vnb7GOo
51je5VrPlljec01cafV0B6s26llv1Fm7p01Y0unZYkm3pzU4VPScx7gle9Ye
tVX2HMu4UT0tIzbc00e8WaJnS6zf01Mc7fXMzflSPfNhw9I9W4xZpef3AEuW
7ekR3izf0y9cWa5nH+dr9HSKWl+mZw7mrNBzLD6t2LPlm7Nqz9z4V/XcF/te
rWcfFq7UcyymrtyzZU/z9vz+8Q6t3nMsazd73m/u9To9bcKSdXu2WLJ+T2tw
aO2exjFus57fRVxZr+dYxm3a87c7sY17Pjf+3rlJz5bYhj095blu0DM355tH
PlzZIlrs2bGnKfixVZiFH9v0NAt7to4+ztfqaSt73TJyMGfbGItJ20VLTe8U
uTFvzZ7PhPk7Rx/mbR9jsWqHaNnTPD1rkfu7S4zlvd8t3n3c2qunI9izT09f
8ObgnnZQW3v2dI1xh0QfHuzR0zhi+8Y8bDuwp0GYt1/04eVB0UfevWNN1js0
8mHPcT1NwY/jo8WnI3uahT1H9DSF893jOtjH4T2NI3ZST2vw4LDITeyoyIFV
J0RunDugp7ns+9ie7yX7ODrGci+PiZbYDT1rjPrYP66P+SfHmvh0Rk+DcOWs
nqbgzYU9328sOb2nd4y7KPpw4rTBsWjEzo55eHl+Twcx6Zzow84Loo+8Z8aa
rHdx5MOna3o6gjHXRotDl/d0Cksu6+kR59f3NIXrvLSna8ROievD5ksiN7Er
Igc+XRe5mX9i3GOex9U9XWMfV8ZYzLgqWmLnxjVh9k09zcKn13u+97zLt/b0
CIdu7+kLrvyvZ51QZ7f0NI5x90UfTtwc+YjdEfMw8p6eBuHfndGHbfdGH3lv
izVZ7/7Ih09P9HQEY56MFoce7ukUljzU0yPO76kGaw2ONQbHgz1dI/ZMT1+w
4YHITeyRyIFPT0VuTLq7p7Ps+/GerrGPR2Ms36jHoiX2Wk9TuI93xfUx/9lY
E8Ne7OkRDr3c0xdceaunHdTcCz2NY9zb0YcHz/f0jtgrMQ8j34jnxrf31ehj
H29GH3lfijVZ753Ihz2f9jQFPz6LFp8+6GkW9rzf0xTOb+xZl7w37/U0jthz
cX3s793ITezDyIFVn0dunHs67jHP45OeRrCPj2Isdf9xtMT4TcbfL/ld+0Xk
wLYvo8Wh73oahCs/9DQFb37vaQe19W1P7xj35+A4tacH3/S0j9iPMQ8vf+1Z
Y5j3U/Rh52/RR97vY03W+6Wnfcz5K3Lj0Nh9HcGnf3r6hSX/9fQLh/6NPs7H
6+sLBozV1ybm/x35mD96X6eo6XH65sa5Mfv+1mfOGH3jnI/Wdx3m/BzXwV7H
7TuP9cbvuyYmjejrDpZM0tcRjJm673uAHxP1NY5x0/Ttw4AJ+3pHbNK+8zBy
yr72Yfxkffvwcqq+feSduO+arDdt33x4M1tfRzBj9r4tJs3Y1ym8maGvI5zP
2dcmLJm+r2vEJuh7fexvur65ic3UNwc+zdE3N/NfGvx5u8Gx/eCYta8L7GPm
vmOp9Vn6tsTm6rsmxszT1yB8WqZvjVEH8/X1C3vm79viyoJ9TcGbefvOY9zi
fR2hzhboO5Zxi/V1jdgiff2ithbt2xJbqK+h2Dmyb27Oh/rmw5Va3xZ7ir6m
4Efa1yz8aPQ1C3vqffs47/Y1hbpP+uZgTtZ3LCblfVuMbPfNjXkL990X++70
7cO8Zt+xfJdafVv2NEXf7x/vUNl3LGvP3fd+c6+H+/qFPUv0bXFlyb6m4E3V
1zXGrTD481eD9uvBMarvWMYt39cXYsv2fW7Ys1zfltjSfQ3luS7VNzfnK/bN
hysr9W2xZ+2+puDHKn3Nwo/V+pqFPav27eO839dZ9rpy3xzMWb3vWExao29L
Ta/TNzfm9fo+E+avN/jzHz3NW7PvWKxaq2/LnibvW4vc3/X7jsWwDfq22LNp
X0ewZ/O+vowZ9YEd1NYmfV0bLWqGPjzYuK9xxLaIedi2TV+DMG/L6MPLbaOP
vJvFmqy3Q+TDnj37moIfe0WLT7v0NQt7du5rCudn9n3ved936mscsTP61hix
HSM3sV0jB1btHblxbuu+5rLvPfq+l+xjtxjLvdw9WmJnxZrUx1Zxfczft69x
OHRgX8tw6KBoMeaQvr5gzwF9jWPc/n1d4/zgGMu4o/oaRE0c0dcyLDwyWmKH
9fUURw+N3JwfHfNw69i+BmHVqX19wZUT+hqEVSf1NQVj9ovrYE/H93WNccdF
Ds5PjHnMOTnmYcBpkRvP9ol7zH05Pfp4NsfEvtjTKTGPPVFn/P2E7/fZcY9x
68HBsW7fd/+8vn5h0gV9PcKYy/v6Ra2c29c1xl0RfdTfOZGP2IUxD5Mu7WsW
Dl0Ufdh5WfSR9/xYk/WujHzYc1NfU7Dk5mjx5tq+BmHVNX394nzDvvXHb4er
+xpH7La+1mDMVZGb2HWRA5Nuidw4d0lff9n3jX2/Sezj+hiLZzdES+z+vmbh
ysVxfcy/PdbEpLv7+oVJ9/b1CGMe6WsHe7+rr2uMezT6Nhocd/Z1kNj/Yh4m
PRTPDYfuiz728XD0kfeeWJP1Hot8GPN83/rElReixZKn+jqCW0/2tWyzmMd9
xaYn+vpF7I64Pvb3eOQm9nTkwLAXIzf+3Rr3mOfxXN86Zx/PxFhsezZaYi/3
9RHPXu3rDibtMPh7y4SDY6LB8UZfy3Dorb6+4MqHfe2g5l7vaxzjPoo+bHgt
8hF7O+Zh1ft9LaPO3ok+HP0g+sj7ZqzJeh9HPuz5pq8pWPJttHjzeV+DsOqz
vn5x/kpcH9f2aV/jiP3Qt54x5pPITeyLyIFJ30VuTHqvr+/s++vBcXjs48sY
i2dfRUts4sp6oybejetj/o+xJib92tcjDPu9r0e48l9fr7Hkl77eMW60yj48
+LmvccT+iHkY+U/fbwnfmT+jD9v+jT7y/hZrst7olfmwZ4JKU/CD50+LT2NX
moU9Y1WawvmISqe4zjErjSP2U1wf+xujMjexcSpzYBXvFrmZ/33cY57H+JVG
sI9xK8dS9+NVtsT+7usy1zlppUdYlVbWA7+Xp6g0CFemqjQFb2astIPamrzS
O8bNVNmHB5NV5iM2deU8vJy+ssYwb5rKPuycobKPvFNWrsl6M1fmw555K03B
j/kqW3yavdIs7Jmt0hTO+c13WHxXZq00jtiCldbgwSyVuYnNUZkDq+avzI1z
01X6y77nqfwmsY85K8fi69yDPz/QN5ZUmsV9nLby+pg/snJNfFq00iBcWbzS
FLzJKusNSxap9I5xeWUfHixcaR+xocp5eFmvfG6YVKvsYx+Nyj7yLla5Jus1
K/NhT1VpCn4MV7b41Kk0C3valaZwPkllXfLeFGEcsYUqr4/9tSpzEysrc2DV
EpW5cW6BynvM8+hXGsE+upVjqfteZUuMf4vBvyvl31T91bcueY+XrDQOh5ar
NAhXVqg0BW/470nYQW0tW+kd4/hvTPThwTKV9hFbsXIeXq5aWWOYt1JlH3au
VtlH3uUr12S9NSvzYc9Glabgx8aVLT6tW2kW9qxTaQrnB1XWEu/+2pXGETuw
svaIrVWZm9h6lTmwapPK3Di3SqW/7HvDyppnH+tXjuX+bVDZEjs41qQmVq68
PuZvVmkcDm1VaRkObR0txmxb6Qv2bFlpHOO2qHSN821iLON2rvSd92jHSsuw
cKdoiW1f6SmObhe5Od8l5uHWbpXW4NB+lbWKMXtWOoJbe1cahDebx3Wwpz0q
jWPc7pGD871iHnP2iXnU8f6RG6s2rbzH3JcDoo9ns2vsiz3tG/PY06jK9513
9JC4x5h0dWW9UROHV1qGQ0cNjrkqXTmx0iz8OKzSOMadFH3U3KGRj9jRMQ+r
jq+0jDo7Jvpw9IToI+8RsSaenRz5MOacyu8BrpwbLZacXukIbp1WaRnnS1XW
H78RTq30i9gFlX7hzSmRm9gZkQPDzovc+Hdcpe/s++xKT9nHmTEW286KlthV
lX5xH4+N62P+hbEmDl1aaRkOXV7pC65cV2kHe7+k0jjGXR99Sw+OiyuNI3ZF
zMOqa+K58WyvjD72cW30kfeyWJP1boh8GHNnZX3iyl3RYsktlY7g1s2Vli0f
87iv2HRTpV/ELorrY383Rm5it0YODLs7cuPf+XGPeR53VNY5+7gtxmLb7dES
49+u8X8ngLn3VlqJbSNHDb5lSwysHxwPV5qCJU9VekGdPR0tBjxY6R1WPRN9
OPFApX3EHoo4uR6tNAs7n6ysN/I+EusQu7/SR+Y/UWkf416tNAVLXq+0BjNe
qDQIq56v9IvzS4cHz3xwlIPjuUrjiL0WOZj/ZmVt482LkQOTXqn8rc96L1ea
xflLEef82bhW8j5e+Q1gr4/F9XH+RuyRNT6odAc/Pq90GTO+iJZaf6/SKWz7
Mvqw4d1K+4i9H3FyfVTpI4Z9VvmNIe+HsQ6xdypNZP7PlXbgxC/R4tCv0WLP
t4PjyEqrfos+/Hgr7hOmfhdxTPq60ji8eTvirPdV7J3YT5X1z9q/Rz7M+LGy
tol9H/nw7Idoif1Z6Q4mzTJsXfHuzzpsy/+m9E+lO1jyX6UjGDPOsF5QT39X
Gse4cYftw4C/Ijex0Yadh5FjDVtXODf6sH14OfawfeT9N9ZkvfGGzYc3kw3r
CGZMPmyLSRMN6xTeTDisI5xfFu9pd3BMMKxrxKYa1hcMGH/Y3MRGDJsDn6YY
Nje2jTmsuex70mG/Q+xj4mHHYuokw7bEPq38/cF7M8aw18f8qYddE5OmH9Yd
LJlxWEcwZo7Bn/83aO8bHNMNaxzj5hy2jzqedljviM007DyMnG3Y54Y9Mw/b
x3Odfdg+8s4w7JqsN9ew+XBloWFdwI+Fh23xab5hzcKSeYd1h/M/4l3jHZpn
WLOITTPs9bG/uYfNTWz+YXNg1SLD5sa8KYe9xzyPkcPWPPtYYNix1P2Cw7bE
Pqn8DcH9/biyRjlfdNh8eNkY1he8wSpqjBriXaCldtNhbcIe3g/68CAZ1j5i
9WHj5MqHtRLn2sMaR97/s3TPYbAc3drGY9u2bRvTnnZPbNu2bWfHyY5t27Zt
23mTM/d5nj/6qt21qlZVY/16ds7+3m+5ntYhtmRPVjI/6ek9wI+0pxafsp5a
fFqzJ3cwbLue6of3fXu3vJu9nuLYs0ZPljFn257qkDmr97R3YnFP94i1V+rJ
SvYa9XS/iAU95cO5sKeW2A5ek1pZsafvAfP7Pe0XO9ueTMGSQU/W4FA1/PO3
a8q5pifLGLdBT+8K3tQ9xYmt1dM87FyvJxMxbO2e+nB0/Z76mN/1tCbrbdST
L9izVU/1iStbu8WSzXtyB2OKntzE1Lyn6+B8056swbZNevKO8417ys35Zj3F
ybWNc3PfV+jpXeAebdlTnbOPLbwm5xv2dN3s9XI7xLM6tad6o85O76keeH93
7ckULNmnJ6cwY1+31NbOPXmHVfu5Dw926sk+Yrs4Tq7dezILO/fuqd7Iu5vX
IbajnznzD+/pG4AlR7jFjyPd4tOBPfmFJYv39M3mt8BiPdUf5wc5jm0H9GQZ
c47uyTLs2d97J3ZYT98h1t6rJ3/Z66E9WUbsYOfDvEPcEjvN95L7uGdP3wbm
H+X9st5JPZmCJWf2tFf2fpbbJYbHCT15h1Vnu4+aPr4n+4id6Di5TunJLJ7l
GX6G5D3Z6xA7ricfmX9xT3VFXV7iFksudYtVI3qyaRmvz33FlGN8zzD1PMdx
7tyezGLOsY6z3jneO7GLenpfWXsPvwvcowt7co3Y+c6HZxe4JbZuT79jqM8r
enp/cWiN4W/Z94ftB8Pj6p6cwpVrezIFb27pqd6ov6t68o5xtw2PsiczrnQ+
Ytd5Hobd1JOV2HO9+zD1ZveR9xqvyXo39uQsc253brx5sCdfsOTOnmzCsLt7
MgXD7nIf54/0VLcY84Cvn/l3OB/z7+3JL6x6yLlx7v7hsY7n3Oc45/d4Hebc
4Otgrw97Hus96jWx58me3MGwp3syBWNe6unbgNNP9OQX4152H3X8eE+WEXvG
8zDyhZ6+GXxnnnUfXr7oPvI+5TVZ7xXnw5V3e6pJ/HjPLT690ZNZWPJ6T+5w
zjuBWfj0Wk9mEXvM18f+XnVuYm86B1a979zMnyHQs+Tev9NTbbOPtzyWd/lt
t8Q+9Jq48nFP7mDVOIHqjTr7tCebsOQzt1jyRU/W4NAnnse473uqPWrrc49l
3Hc9WUbsm558xJtv3RL7qidPcfRL5+b8B+fDhh/dYsxfPX0PsOTnnjzCm197
8gtXfnEf5//25BS1/pNzMOc3j8Wn393yzfnbufHva++Lff/jPiz8w2Mx9U+3
7On5nr5/vEP/81jW/sj3m3s9WiCbsGT0QC2WjBnIGhwaNZBxjJsg0HcRV8YI
NJZx4wf67U5s3EDPjb93jheoJTZ2IE95rmMFys35hIHy4cpEgVrsmTqQKfgx
SSCz8GOyQGZhz6SB+jgfJZCt7HXiQDmYM3mgsZg0RaCWmp4mUG7M+8/PhPnT
Dftv7cm8KQONxaqpArXs6bmeapH7O32gsbz3MwZ693Fr1kCOYM/sgXzBm/kC
2UFtzRLINcbNH6gPD2YOZByxOQLNw7Z5AhmEeXMG6sPLeQP1kXe2QGuy3gKB
8mHPkoFMwY+lArX4tEggs7Bn4UCmcD5ToOtgHwsFMo7YsoGswYMFA+Umtmig
HFi1dKDcODd3IHPZ9xKB3kv2sVigsdzLxQO1xLpANUZ9zBXo+pi/XKA18Wml
QAbhyiqBTMGbIND7jSUrBvKOcWGgPpxYIZB9xFYNNA8v1wzkICatFqgPO3uB
+si7cqA1WS8KlA+fqkCOYEwdqMWhLJBTWJIG8ojzNpApXGcSyDViywe6PvYX
B8pNrB8oBz41gXIzf5lA95jnUQZyjX3kgcZiRhGoJbZ6oGvC7LUCmYVPBwZ6
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
7WT3YcPhkewjdqTj5Domko8YdkKkbwx5j/Y6xA6LZCLzz4lkB06c6xaHRrjF
ntMi2YFV57kPPw7xfcLU0x3HpFMjGcecQx1nvVO8d2JnR6p/1j7f+TDjrEi1
TewM58OzM90SuzCSO5j0aKS64t1/zC3/W8uXRHIHSy6L5AjGXBPJC+rp4kjG
Me5a92HARc5NbKTnYeRVkeoK5y53H15e7T7yXuo1We8658Ob2yM5ghl3uMWk
myI5hTc3RnKE8yzWe/rl8LghkmvE7o7kCwZc79zEbnYOfLrTubHtykjmsu/b
In2H2MctHoupt7oldnyk3x+8N1f4+ph/j9fEpAciuYMlD0VyBGOejGTH5sPj
/kjGMe4p91HH90XyjtjDnoeRj/u58b+f/Yj7eK5PuI+8D3pN1nva+XDllUgu
4Mdrw2PnSD49H8ksLHkukjucXxDpXeMdejaSWcTu9fWxv2ecm9gLzoFVrzs3
5t3le8zzeDlSzbOPFz2Wun/JLbHjIv2G4P4eG6lGOX/D+fDyg0i+4A1WUWPU
0Bduqd33ItmEPV+6Dw/ejWQfsfcdJ9dHkazEuc8iGUfeD70OsXciWcn8nyK9
B/jxs1t8+sUtPn0TyR0MmyxW/fC+Tx6r5d381nHs+TqSZcyZNFYdMucr753Y
j75HrP1pJCvZ6w++X8S+cz6c+94tsSlirUmtfBLpe8D8X71f7Pw7kilY8r9I
1uDQH5HMwrm/IlnGuDFivSt486fjxP71POwcLZaJGPaf+3B09Fh9zP/Ha7Le
WLF8wZ6JYtUnrkwcq8WS8WO5gzG/R3KT/f3m6+B83FjWYNs4sbzjfOxYuTkf
L1acXJPEys19/9jvAvdowlh1zj4miLUm52PGum722o/1nvGslhv++dVIdbZC
rHrg/Z02lilYMksspzBj1lgttTV1LO+warZYfXgwVSz7iE0TK06u6WOZhZ0z
x6o38k4Xax1iU8Z65syfP9Y3AEsWiNXix4KxWnyaM5ZfWPJWpG82vwXejFR/
nM8VK45tc8SyjDkLx7IMe2aPtXdi88X6DrH2TLH8Za/zxrKM2Nyx8mHePLFa
YsvHupfcxxljfRuYv1Cs/bLeUrFMwZKVYu2Vva8cq317eCwRyzusWiVWHzW9
eCz7iC0ZK06uZWKZhZ0rxnqG5F061jrEFovlI/OjWHVFXcaxWixJYrVYtXos
m973nrivmLJIrHuGqWvEiuPcarHMYs6iseKst2qsvRMLY72vrD1DrHeBexTE
co3YmrHy4VkvVkts1Fi/Y6jPPNb7i0NfDf98+PA4YnhUsZzClSaWKXizbqx6
o/7KWN4xbr1YfZhRxMpHrI01D8PWjmUl9nSx+jB1nVh95K1jrcl6a8Vyljnr
x8qNN1vG8gVLNoxlE4ZtHMsUDNsoVh/n28SqW4zZItb1M3+DWPmYv2ksv7Bq
K+fGuc2Hxyies1msOOebxFqHOYNY18Fet/Y81tvWa2LPjrHcwbCdY5mCMXvF
+jbg9A6x/GLc3u6jjrePZRmxXTwPI/eI9c3gO7Or+/ByT/eRdyevyXr7OB+u
HBqrJvHjMLf4dEAss7Bk/1juTOt3ArPwab9YZhHbztfH/vZ1bmIHOsf0fqdm
8fyHYj1L7v0hsWqbfRzksbzLB7sldqTXxJWjY7mDVdfHqjfq7NhYNmHJcW6x
5IRY1uDQMZ7HuNNj1R61dbzHMu60WJYROyWWj3hzqltiJ8XyFEdPdG7Oz3A+
bDjTLcZcFOt7gCVnx/IIb86N5ReunOM+zi+L5RS1fpZzMGeEx+LT+cNj2Vjf
nIudG/9O9r7Y9yXuw8ILPBZTL3TLnnaP9f3jHbrUY1n7KN9v7vWVsWzCkqvc
Ysk1sazBoStiGce4m2N9F3Hlao9l3E2xfrsTu8HPjb933uiW2HWxPOW5Xuvc
nN/ifLhyq1vsuS+WKfhxeyyz8OPOWGZhzx3u4/zyWLay19ucgzl3eSwm3e2W
mr7fuTFvpJ8J8x9wH+bd47FYda9b9rRbrFrk/j7osbz3D8d693Hr8ViOYM+T
sXzBmxdi2UFtPRbLNca96D48eDSWccSe8jxsey6WQZj3tPvw8nn3kfcJr8l6
Lzkf9rwdyxT8eMctPr0WyyzseTWWKZw/4utgH6/EMo7Y+7GswYOXnZvY686B
Ve86N849G8tc9v1WrPeSfbzhsdzLN90S+ydWjVEfz/j6mP+B18SnT2IZhCuf
xTIFb76N9X5jycexvGPcd+7DiY9i2Ufsc8/Dy69jOYhJX7gPO79xH3k/9Zqs
973z4dMfsRzBmD/d4tDPsZzCkp9iecT537FM4Tp/jOUasQ99fezvB+cm9otz
4NNfzs3893yPeR6/x3KNffzqsZjxm1tiX/qaMPvfWGbh05yJ3nve5dGGfz4v
lkNjJPIFV8ZPVCfU2SiJjMOtCRL14cR/zkdszETzMHLcRAbh31iJ+rBtvER9
5B090ZqsN2GifPg0VSJHMGbqRC0OTZrIKSyZJJFHnI+bDddKh3mHx8SJXCM2
XSJfsGGiRLmJTZYoBz5Nkyg3Jo2TyFn2PWUi19jH5InG8o2aIlFLbI5EpnAf
x050fcyfPtGaGDZzIo9waNZEvuDKPInsoOZmSmQc4+ZN1IcHMybyjthsieZh
5FyJnhvf3tkT9bGPuRP1kXeWRGuy3nyJ8mHP4olMwY8lErX4tFAis7BnwUSm
cP6/WHXJe7NAIuOIzZDo+tjf/IlyE1s4UQ6sWjJRbpybNtE95nkslsgI9rFI
orHU/aKJWmL8JuPvl/yuXSpRDmxbOlGLQyskMghXVkpkCt6smcgOamv5RN4x
rpeoDw+WS2QfsZUTzcPL1RPVGOatkqgPO9dI1EfeFROtyXqrJbKPOUGi3DhU
JnIEn6JEfmFJksgvHIoT9XHeJPIFA4pENjE/TJSP+Vkip6jpKlFunMsT/dZn
Tj9RnPM00TrMWTXRdbDXOtE81msTrYlJaydyB0vWTeQIxmyS6D3Aj7USGce4
TRP1YcAgkXfE1ks0DyM3SmQfxq+fqA8vN07UR951Eq3Jepslyoc3OyRyBDN2
dItJWydyCm+2SuQI5zsnsglLtkzkGrEu0fWxvy2Gfx7VsW2cA592cm7mzzx0
5C7qZ3hsn8gF9rGtx1Lr27kltovXxJjdEhmET2cnqjHqYI9EfmHPnm5xZe9E
puDN7p7HuIMSOUKd7eWxjDswkWvE9k/kF7V1gFti+yYyFDv3cW7OD3Y+XDnE
LfYcm8gU/DgskVn4cUQis7DncPdxfmIiU6j7Q52DOUd6LCYd5RYjj3NuzNvP
+2Lfx7sP8472WL5Lx7hlTxsm+v7xDp3gsay9q+839/rURH5hz2luceWMRKbg
zSmJXGPcecNjmeGx7PA43WMZNyKRL8TO8XPDnnPdEjsrkaE81zOdm/PznQ9X
LnCLPVckMgU/LkpkFn5cksgs7LnYfZyfnMhZ9nqhczDnUo/FpMvcUtNXOjfm
neRnwvyr3Id5Iz0Wqy53y542SFSL3N+rPRbDrnGLPTcmcgR7bk7kC95QH9hB
bd2QyDXG3e0+PLg+kXHEbvE8bLsjkUGYd6v78PJO95H3Jq/Jevc4H/Y8msgU
/HjMLT49kMgs7Lk/kSmcf5boved9vy+RccQ+TVRjxO51bmIPOgdWPe7cOHd7
InPZ9yOJ3kv28ZDHci8fdkvsc69Jfdzm62P+U8Nj80QOPZfIMhx63i3GvJjI
F+x5NpFxjHsmkWucv+CxjHs9kUHUxKuJLMPC19wSezmRpzj6knNz/obn4dZb
iQzCqo8S+YIr7yYyCKveT2QKxjzt62BP7yRyjXFvOwfn73kecz7wPAz42Lnx
7AnfY+z/xH08mze9L/b0oeexJ+qMv5/w/f7C9xi3JkpVD7z7XyfyC5O+TeQR
xvySyC9q5atErjHuV/dRf186H7HvPA+TfkpkFg597z7s/Nl95P3Ga7Leb86H
Pf8lMgVLRknV4s1fiQzCqj8T+cX5tYnqj98OfyQyjtjoqazBmN+dm9jfzoFJ
o6bKjXM/JvKXff+b6JvEPv7xWDz7n1tiE6Yyi/v4g6+P+WOkWhOTxknlFyaN
l8ojjJk0lR3sfexUrjFuslR91w2PsVI5SGz8VPMwaeJUzw2HJkjVxz4mSdVH
3nFTrcl6k6fKhzEzpKpPXJkxVYslU6dyBLemSmXZTd4H9xWbpkzlF7ExU10f
+5siVW5i06TKgWEzpcqNf6Olusc8j+lT1Tn7mDbVWGybLlVLbJZUPuLZbKnc
waR7h39ea3isPTzmTGUZDs2dyhdcWTiVHdTcHKmMY9wiqfqwYfZU+YjNk2oe
Vi2QyjLqbN5UfTi60PDPTybKO1eqNVlv0VT5sGe5VKZgyfKpWrxZMpVBWLVE
Kr84nzXV9XFti6cyjthKqeoZYxZLlZvYUqlyYNIKqXJj0vypfGffyw7//Eqi
fSydaiyeLZOqJbZuqnqjJuZLdX3MXznVmpi0eiqPMGzNVB7hSprKayxZLZV3
jMtS9eHBqqmMI9ZLNQ8j41TfEr4zQao+bEtS9ZF3jVRrsl4/VT7sGaQyBT94
/rT4VKUyC3vKVKZwvk4qp7jOIpVxxFZJdX3sL0+Vm1idKgdW8W6Rm/krprrH
PI8ulRHso0k1lrpvU7XEolQuc53rp/IIqw5NVQ/8Xt4olUG4skkqU/Bm61R2
UFsbpvKOcdu4Dw82SJWP2Kap5uHllqlqDPM2S9WHnVu5j7wbp1qT9bZ1PuzZ
LZUp+LG7W3zaMZVZ2LNDKlM45zcff6fku7J9KuOI7ZXKGjzYzrmJ7eQcWLWH
c+PcFqn8Zd+7pvomsY+dPRZfd3FL7JBUZnEfN091fczf22vi0/6pDMKVA1OZ
gjdHpKo3LNkvlXeMO9J9eLBvKvuIHeR5eHmYnxsmHew+9nG4+8h7gNdkvaOc
D3tOGR4LpvLjVLf4dFwqs7Dn2FSmcL5eqrrkvTkmlXHE9vH1sb+jnZvY8c6B
Vac5N87t6XvM8zgplRHYdoLHUvcnuiU2Xqb/JjRyeISp6pL3+IxUxuHQuakM
wpXzUpmCN/z3JOygts5J5R3jLnMfHpydyj5i53seXl6cqsYw7wL3Yecl7iPv
CK+5jPdHPuy5PpUp+HGDW3y6KpVZ2HNlKlM4fz5VLfHuX5HKOGLPpao9Ypc7
N7GrnQOrbnRunLsolb/s+7pUNc8+rvFY7t+1bom94DWpiQt9fcy/OZVxOHR7
Kstw6A63GHNXKl+w57ZUxjHu1lSucX6nxzLugVS+8x7dl8oyLLzfLbF7UnmK
o3c7N+cPeh5uPZzKGhx6OlWtYsxjqRzBrSdSGYQ3t/g62NOjqYxj3CPOwfnj
nsecJz2POn7GubHqJt9j7suz7uPZPOR9saenPI89nZ7qfecdfdH3GJP+SFVv
1MQrqSzDoddS+YIr76YyCz9eTmUc495zHzX3kvMRe93zsOrtVJZRZ2+4D0ff
cR95X/WarPe+82HMF6m+B7jypVss+TiVI7j1USrLOD8zVf3xG+HDVH4R+yaV
X3jzgXMT+8Q5MOwr58a/t1L5zr4/T+Up+/jUY7HtM7fEfk/lF/fxTV8f87/1
mjj0YyrLcOjnVL7gyt+p7GDvP6QyjnH/uO+s4fF9KuOI/eJ5WPWnnxvP9rfh
cbL38Zf7yPuT12S9/zkfxoyVqT5xZexMLZaMmskR3Bolk2UjPI/7ik3/pfKL
2He+Pvb3r3MTGy1TDgwbJ1Nu/Pva95jnMWamOmcfo2cai21jZGqJ8TuMv1/+
/39Ly+Qa9uyTD50fHlMNj4kzWYZDk2byBVemyWQHNTdRJuMYN22mPmyYMJNx
xCbLNA+rpspkGXU2eaY+HJ06Ux95J8m0JutNmclW5kyXKTcOzZHJFLyZIZNf
uDVTJo9wa8ZMfZzPnamGcWX2TDYxf/pM+Zg/SyaP8GnOTLkxabZMv/uZM2um
OOczZ1qHOVNkug72Olemeaw3T6Y1cWiBTAbh1kKZDMKSJTMZjR/zZzKOcUtl
6sOA+TK5RmzhTPNwcfFM3w++LYtk6sOzJTL1kXfBTGuy3tKZ8uHNKpkcwYxV
M7WYtHwmp/BmuUyOcL56JpuwZNlMrhGbN9P1sb9lMuUmtkKmHPi0WqbczP9p
+Ofjh8cJw2PlTC6wjxUzjaXWV8rUElsj05oY08tkED5tl6nGqIMwk1/YE2Vq
cSXJZAreBJnmMa7K5Ah1Fmcay7gyk2vE8kx+UVtFppZYlslQ7Ewz5ea8zpQP
V5pMLfZskMkU/OgymYUfa2UyC3sGmfo43ySTKdR9mykHc9YZ/vnXVCatm6nF
yA0z5ca8fqZ9se+NMvVh3nqZxvJdWj9Ty54Wy/Sd4x3aONNY1l4z0/3mXm+R
yS/s2dItrmydyRS82TyTa4zbKZMpEwyPrTyWcTtm+p1HbHs/N/7vgTu4JbZt
JkN5rts4N+c7Ox+u7OIWe/bNZAp+7JbJLPzYI5NZ2LO7+zjfLJOz7HVX52DO
nh6LSXu5pab3c27M2zTTM2H+/u7DvL09Fqv2ccueFs1Ui9zfAzwWww50iz2H
ZXIEe47I5Mtsrg/soLYOzeQa405wHx4cksk4Ykd6HrYdm8kgzDvKfXh5nPvI
e7jXZL0TnQ97zspkCn6c7RafTs1kFvackskUzu/I9N7zvp+cyThit2eqMWIn
OTex05wDq85xbpw7JpO57PvMTO8l+zjdY7mXZ7gldqfXpD6O9vUxf0Qm43Do
wkyW4dBFbjHmkky+YM8FmYxj3PmZXOP8Yo9l3JWZDKImLs9kGRZe4ZbYZZk8
xdFLnZvzqzwPt67JZBBW3ZLJF1y5PpNBWHVjJlMw5jxfB3u6LpNrjLvWOTi/
wfOYc5PnYcCtzo1n5/oec19ucx/P5mrviz3d7Hns6edM7xnvxV2+x7j1YaZ6
4N2/b3isncmkBzJ5hDGPZ/KLWrknk2s494T7qL+7nY/Yg56HSY9mMguHHnIf
dj7mPvLe7zVZ70nnw56XMpmCJS+7xZtnMxmEVc9k8ovzgzLVH78dns5kHLHX
MlmDMU85N7HnnAOTXnFunHskk7/s+8VM3yT28bzH4tkLbol9kMks7uPDvj7m
v+41MentTH5h0ruZPMKYTzLZwd7fyuQa4z5138HD481MDhJ7z/Mw6SM/Nxx6
333s42P3kfcdr8l6nzkfxnyfqT5x5Qe3WPJVJkdw68tMlh3uedxXbPoik1/E
3vD1sb/PnZvY186BYT86N/696nvM8/guU52zj288Ftu+dUtsZKb6oz5/yfT+
Ys9J/aE/w2OB4fF7Jr/w7A+3mPRXJmsw5rdMljFu1L5MoRb/9FjGjdJXXRH7
N5OVePafW2L/ZLIMU/92bs7/5z7mjNZXbuyZoC9fcGWSvuoTM8bsyzIMG7sv
mzBsjL78IjZ6Xzk4H6evOA6N15dN3JsJ+8qNZxP11eLT+H3FWXvcvuYxZ+K+
4uxj0r72gj0L9lXP1N8UffmFQ1P21WLY1H15hCuT9+UX42bqy25cmaqvsYyb
sa9vCbHp+3KKb8gMfbXEpu3LTWybpq/cnM/cVz5cmaWvFnvm68sU/Ji9L7Pw
Y86+zMKeOfrq43yyvq6Pvc42/PO9mebM1ddYTJq7r5ba5Z0iN+aN1dfz4dnw
ntHHPZqnr7E4MW9fLXvaqq9nxjNcqK97iTeL9OURVi3aV4thi/XV4tDifbUY
s0RfLcYs2VeLQ0v11eLi0n21uLhMXy2GLdtXS50t11eLf8v31WLSCn211O6K
fbUYs1JfLQ4lfXlBTa/Sl19YslpffuHQyn2NJbZ6X304tEZfLS6u2VfLdybo
yyx8ivsyjjXCvvqwsNfXWMZFffUxbrq+3hHeobSvfeHQBn3VMLXe78ssDMv7
anGo6KvFmLKvFmOqvlocqvtqcbHpq8XFtq8Ww7q+Wv6uM+ir5bu6Vl8tPq3d
V/vr8FinrxZ71u2rxaqsr72z1/X7Motr2LCv68CV9ewasY366sOejftq8WaT
vlqs2qwvpzBs4b7eO965zfvqw7xN+xrLuC3ch1VbuuXd3drvLz69Ozz2Gh57
D4/t+nIKh7Z3iys79uUR3mzbV80wbo++fKH+dvBYxu3el4PEdu3LLEzazS2x
nftyE9t2cm7O93S+yb0vWqw6uC9T8GafvszCof36MgtX9nUf50cMj1n78mBv
52DO/h6LSQe45b07xLlxbhfvi30f6j6sOtBjce4gt+xpG99L7sthHotnF/dV
e9TcMX35hUnHusWk4/uyBmOO7ss1xp3mZ4wrx3ks407tyx1iJ/dlFq6f4pbY
iX0ZinMnODfnpzsfPp3hFp8u6MsR/DirL6fw6Zy+bMKks93H+VF9ucxez3QO
5pzrsbg1wi1uXejcmHSknwnzL3If9+g8j8W2892yJ2qL3wJ81y/xvcSkp/p6
73nHL+/LLHy6wi0+XdWXTXgzcnis6nE39uULNXqlxzLuhr5MJHZdXzZh2PVu
iV3Tl3F4drVzc36T8+HTzW7x6Z6+HMGPW/tyCp9u78smTLrNfZw/0Jcj2HCL
czDnDo/FrTvd4ta9zo1J13pf7Ps+9+HTXR6LbXe7ZU+X9eU+9+V+j2XtS32P
iT3Sl1n49KhbfHq8L5vw5uG+jGbcc335Qk085rGMe7avbyexp/3cMOkZt8Se
7Ms4nusTzs35886HPS+4xao3+zIFb17qyywceqUvs3DlZfdx/lBfFrPXF52D
Oa96LCa95hYD3nJunHvQz4T5b7sPq173WJx7wy17esdxDHuvL4Nw6+nlhtc+
PLYcHh/15REOfdKXL7jyTV91Qp192JdxjPvWfTjxQV/eEfvU8zDyq+FxeF/+
feY+bPvafeT92Guy3hd9GYdb3zk3Vv3RlzU49ENfZuHQT32ZhSs/uo/zv/sy
BQ9+78sj5n/vfMz/pS+b+F3/p3Nj0m99WcacXx3n/Gevw5zPfR3s9S/PY71/
vCZujZLLIOwZLZcpWDJurnea9/2/vlxj3Hi5+rDh376MIzZ6rnm4OHYux7Fn
jFx9eDZOrj7yjpprTdYbP1c+TJoilx24wn+bp8WeiXPZhB8T5TKI86lzOYIf
E+ayjNj/fH3sb4JcuYlNkisHJvHf/cnN/MeGf954eGwyPCbPZRn7mDTXWJyY
LFdLbJpca+LNdLmcwqSVc9UA7/sMuczCoRlztTg0cy5fcGX6XPMYN1eumqHm
Zso1lnFz5jKO2Oy5nMKeOXK1xGbN5Sa2zZIrN+dz58qHN/PkavFp0VyOYMx8
uZzCngVyOYUl8+fq43zJXI5gwLy5cjBnwVxjcWihXC3fmcVy5ca22XLti30v
nqsPnxbONRbbFsnVsqexcn3neIeWyDWWtafNdb+518vmMguHlsvV4tAKuXzB
lWVyWca41XOZ8v7wWD7XWMatluv3HLFVcj03HFo1V0tspVxu8lxXzJWb8zVy
5cOVNXO12JPnMgU/glxm4UeUyyzsCXP1cb50LovZay9XDubEucZiUpKrpaaL
XLkxb6lcz4T5Za4+zEtzjcWq/vDPX/a1pzFz1SL3t8o1FsPqXC32rJXLEexZ
J5cveEN9YAe1NcjlGuOoGfrwoMtlHLF1c83Dtg1zGYR56+Xqw8uNcvWRd+1c
a7LeprnyYc92uUzBj+3d4tOWuczCni1ymcL5cbnee973zXMZR+zYXDVGbLNc
uYlt5RxYtYNz49wGucxl39vmei/Zx9Yey73cxi2x470m9bF+rutj/k65jMOh
3XJZhkO7u8WYPXP5gj275jKOcbvkco3zPTyWcfvnMoia2DeXZVi4n1tie+fy
FEf3cm7OD/A83Dool0FYdVQuX3Dl0FwGYdXhuUzBmJ19HezpkFyuMe5g5+D8
MM9jzhGehwFHOzee7eh7zH05xn08mwO9L/Z0pOexp8dzvWe8Fyf4HuPWrbnq
gXf/5Fx+YdKpuTzCmHNy+UWtnJTLNcad6z7q70TnI3aa52HSWbnMwqHT3Yed
Z7uPvKd4TdYb4XzYc1kuU7BkpFu8uTCXQVh1QS6/OG9y1R+/Hc7PZRyxK3NZ
gzHnOTexi5wDky53bpw7M5e/7PvSXN8k9nGxx+LZJW6J3ZLLLO7jGb4+5l/l
NTHpulx+YdINuTzCmDty2cHer83lGuPudF87PK7J5SCxm4ZHlsuk2/zccOhm
97GP291H3uu9Juvd5XwY83Cu+sSVR9xiyX25HMGte3NZtrbncV+x6Z5cfhG7
2tfH/u52bmL3OweGPerc+HeF7zHP46Fcdc4+HvBYbHvQLbEncr2zePOkW0za
tBj6Nmz/Gx5P5/ILz55xi0nP5bIGY57yPMa9mssUavFZj2XcK7nqithLuazE
s5fdEnshl2WY+rxzc/6a8+HN625x6INcvuDKm7n8wq23c3mEW2+5j/NPctUw
rrzhHMx5x2Nx6F23+PShc+PZi94X+/7IfVj1nsfy7zXed8ueVii0V9b52GNZ
e5RCtU0tfpHLMkz60i2efZ3LJoz5PJdljPspl+MY85XHMu7HXN8VYt/nMovv
yQ9uiX2by1Cc+8a5Of/Z+TDmF7c49L9cvmDJb7n8wpI/cvmFQ7+7j/PPcjnL
Xn91Dub86bH49Jdb6vhf58a/T/1MmP+f+7hHf3ssZvzjlj195+vgOkctdC+x
Z95C9UZNjFnIMhwaq1CLMeMU8gV7xihkHOMmLmQKNTd2obGMm6iQccQmKGQZ
dTZhoZbYeIU8xdFxC+XmfJJC+TBm0kItDk1fyBcsmbyQX1gy1fDPN+ZyaIpC
fXg2cyFfMGCyQjmYM3Whsfg0TaEWL2colBv/xi+0L/Y9Y6E+/Ju20Fi+UdMV
atnT6IV8577MVGgsa49W6B4Tm72QZTg0R6EWY+Yq5Av2zFbIOMYtWMgajJmz
0FjGLVDo20lsvkLPjb/rzF+oJTZPIU95rnMXys35QoXyYc/ChVqsWqaQKXiz
aCGzcGjxQmbhymKF+jiftZC57HWRQjmYs0ShsZi0ZKEWA5YtlBvnZin0TJi/
XKE+rFqq0FicW7pQy574dxP82y7+PdbyhcZiBL/T+W8J/P1/lUJ+YdKqhVpM
Wr2QNRizciHXGBcXqh/qb7VCYxkXFfKOWFDILBwKC7XE1ixkKM6tUSg350mh
fNiTFmqxqi1kCt70C5mFQ0Uhs3AlL9TH+dqFTMGDrFAO5pSFxmJSVailprtC
uXGuV2hf7HtQqA+r6kJjca4p1LKnlQp9A7gvaxUay9q7F6pD6m/9Qn5h0gaF
WkzaqJA1GLNeIdcYt2Wh956a2LDQWMZtUcgdYpsVMgvXNy/UEtukkKE4t3Gh
3Jxv5XzYs7VbrNqlkCl4s20hs3Bo+0Jm4cp27uN83UIus9dtnIM5O3gsJu3o
FgN2dW6cW6fQM2H+bu7jHu3ksTi3s1v2tGKh7xj3dw/fSxw6v1A98O7vW8gv
TNrPLSYdUMgajNlneEzpcYcXqh/qb3+PZdxhhbwjdkghs3DoULfEDipkKM4d
6NycH+F82HOkW6w6qZApeHN0IbNw6NhCZuHKMe7j/LRCpuDBUc7BnOM8FpOO
d8s352TnxrmDvS/2fYr7sOoEj8W5E92yp70KfQPw/lSPZe09fY+JnVXIL0w6
2y0mnVvIGow5s5BrjLvYz4yaOMdjGXdRod8lxC7wc8OhC90SO6+QoTzXEc7N
+SXOhz2XusWqawuZgjcjC5mFQ1cUMgtXLncf52cUcpm9XuYczLnSYzHpKrcY
cJ1z49zpfibMv959WHW1x+LcNW7ZE/+7kvzv1PK/D3uDx+LZTYU8wrA7CpmC
JfcXqg1q6wG3eHBbIbOw6kH3Ycmthewjdrvj5LqrkJV4dl8hB8l7p9chdksh
K5l/byGzGPdUIUcw5plCBmHGo4WcwpJHCnnE+dnl8H0YHksOj4cLuUbsaedg
/nOFrMGJx5wDn54s5BfrPVHodz/njzvO+UO+VvLeU8hi9nq3r4/zZ71H1ni1
kCP48U6h95h3/L3hsXchA14u5BQ+ve8+/HipkHfEXnGcXK8X8hHD3i5kEHlf
8zrEXizkI/O/KOQFlnzpFm++cosTHxVyB5++dh9mPO/7hMEfO44xHxZyjTkv
OM56H3jvxD4vZBZrf+N8+PFZIReIfeJ8GPapW2LfFbIJhyYv9d7zjk9RquX9
/bGQQdjzcyFTsOSvQrVBbf1QyDXG/e0+bPjeuYn94nm4+EchdzDvV/fh2Z/u
I+9PXpP1/nE+TBqzlB24MlapFntGKWUTfvxXyCDOz/F7utTw+LeQZcTGLWUK
HvzPuYmNWioHJo1dKjcO/V7IVvY9RinL2MdopcbyXRq9VEvsrUK/A3hvfvP1
MX+8Umvi1kSlDMKeSUqZgiVTl/Li5uExYSnXGDdNqT7qeIJSxhGbtNQ8XJyy
1HO7cXhMVqqP5zpVqT7yTlxqTdabtlQ+XJmtlAv4MXupFp9mLGUWlsxQyh3O
v/W7xjs0fSmziI1f6vrY33SlchObqVQOrJqjVG7MG6fUPeZ5zFqq5tnHzKXG
UvezlGqJvVnoNwT3941CNcr5nKXy4eWCpXzBG6yixqgh3gVaanf+UjZhD+8H
fXgwXyn7iC1QKk6uhUtZiXOLlzKOvAuVWofYvKWsZP7Kpd4D/FilVItPqw3/
/G4hn5Yt5Q6GbVSqfnjfNy7V8m4uVyqOPcuUsow5G5aqQ+YsXWrvxFYqdY9Y
e7FSVrLXFUvdL2LLl8qHcyuUaoltUmpNamXRUt8D5q9ear/YGZUyBUuSUtbg
UK+UWTgXlrKMcVWpdwVvglJxYmmpedhZlDIRw7JSfThalupjflxqTdZrSvmC
PeuVqk9cWb9UiyVrl3IHY9Ys5Sb7W6PUdXA+KGUNtnWlvOO8LZWb87VKxcm1
Qanc3PdFSr0L3KN1S9U5+1in1Jqc16Wum72ea4d4VkeWqjfq7OhS9cD7u2Up
U7Bkh1JOYcaObqmtzUt5h1U7uQ8PNitlH7EtHCfX1qXMws7tS9UbebfyOsQ2
tY/M37vUNwBL9nGLH/u6xaddS/mFJXOX+mbzW2CuUvXH+W6OY9supSxjzv6l
LMOenb13YnuV+g6x9nal/GWve5ayjNjuzod5e7gldpTvJfdx21LfBubv5/2y
3mGlTMGSY0vtlb0f53ae4XFIKe+w6nj3UdMHl7KP2KGOk+uIUmbxLI/xMyTv
4V6H2EGlfGT+GaXqiro80y2WnOUWq04qZdMCXp/7iikH+J5h6smO49yJpcxi
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
WK0aIzZ+rdzEJq6VA6umrJUb58asZS77nqzWe8k+Jqk1lns5aa2W2BK11qQ+
xqh1fcyfupZxODR9LctwaIZaLcbMVMsX7JmulnGMm7aWa5zPWGss4+aoZRA1
MVsty7Bw9lotsVlqeYqjM9s1zuesNQ+35q5lEFYtXMsXXJmvlkFYtUAtUzBm
mlrXwZ7mreUa4+aplYPz+WvNY86CteZhwCK1cuPZVLXuMfdl0Vp9PJu5au2L
PS1Uax57os74+wnf76WG/S9Wcmu9WvXAu79sLb8waflaHmHMarX8olaWqeUa
41av1Uf9LV0rH7EVas3DpFVqmYVDK9bqw85Va/WRd7laa7LeGrXyYU9WyxQs
6ddq8SasZRBWBbX84vzvSvXHb4deLeOIlbWswZg1a+UmFtXKgUl5rdw4t3It
f9l3WuubxD7iWmPxLKnVElu3llncx5VqXR/zq1prYlJXyy9MWquWRxizYS07
2HtbyzXGbVSr75/h0dRykNjateZh0vq1nhsOrVOrj31sUKuPvINaa7LexrXy
Ycw2teoTV7Z1iyWb13IEtzarZdkonsd9xaZNa/lFrK51fexvk1q5iW3hHBi2
nXPjX1HrHvM8tq5V5+xjS4/Ftq3cEtvBvynwbKda7mDS+MO/v4zEpuGxay3L
cGj3Wr7gyn617KDmdqllHOP2dx827Ox8xPbwPKzap5Zl1Nme7sPRfd1H3t28
Jusd4HzYc2QtU7DkKLd4c0gtg7Dq4Fp+cb6jr49rO6iWccSOrVXPGHOgcxM7
1Dkw6WjnxqS9a/nOvo+o9f+vMPs4zGPx7HC3xK6sVW/UxF6+PuYf5zUx6aRa
HmHYKbU8wpVzhseStSw5sZZ3jDvXfXhwQi3jiJ3qeRh5Zq1vCd+Z09yHbWe5
j+/AyV6T9UY4H/ZcVssU/BjpFp8urGUW9lxQyxTOr6jlFNd5fi3jiB3v62N/
5zk3sYucA6sud27mH+N7zPO4tJYR7ONij6XuL3FL7IxaLnOdV9fyCKterFUP
/F6+rpZBuHJDLVPw5vZadlBb19byjnF3uA8PrnE+Yjd6Hl7eWqvGMO8m92Hn
be4j7/Vek/XudD7seaiWKfjxsFt8ureWWdhzTy1TOOc336z+rtxdyzhij9Wy
Bg/ucm5i9zkHVj3i3Dh3Sy1/2feDtb5J7ON+j8XXB9wSe6GWWdzHm319zH/c
a+LT07UMwpVna5mCN6/UqjcseaqWd4x71X148GQt+4g953l4+ZKfGyY97z72
8bL7yPuM12S915wPe96vZQp+fOAWn96qZRb2vFnLFM6vqlWXvDdv1DKO2BO+
Pvb3unMTe9s5sOpD58a5R32PeR7v1TKCfbzjsdT9u26J8W8x+Pdc/Juq02vV
Je/xx7WMw6EvahmEK1/VMgVv+O9J2EFtfV7LO8b95D48+KyWfcS+9jy8/L5W
jWHeN+7Dzh/cR94vvSbr/ex82PNPLVPw49/hcXYtn36vZRb2/FbLFM5nbFRL
vPu/1jKO2AyNao/YL85N7A/nwKr/nBvnvqvlL/v+u1bNs48/PZb795dbYjM1
WpOa+NbXx/xRGxmHQ2M2sgyHxmrUYsw4jXzBnjEaGce40Ru5xvnYjcYybqJG
vvMeTdDIMiycsFFLbLxGnuLouI1ycz5xo3m4NWkja3Bo2ka1ijFTNHIEt6Zq
ZBDejNboOtjT5I2MY9xkjXJwPmWjecyZutE86ni6RrmxapRG95j7Mn2jPp7N
JI32xZ6maTSPPX1U633nHZ250T3GpDUb1Rs1MVsjy3Bojka+4Mr8jczCj1kb
Gce4BRr1UXOzNMpHbM5G87Bq3kaWUWdzNerD0fka9ZF39kZrst6CjfJhzFKN
vge4snSjFksWbeQIbi3SyDLOP6lVf/xGWLiRX8SWa+QX3izUKDexxRrlwLBl
GuXGv3ka+c6+l2zkKftYvNFYbFuiUUtsjUZ+cR/nbnR9zF++0Zo4tHIjy3Bo
1Ua+4ErYyA72vlIj4xgXNer7dHis2Mg4Yqs1modVvUbPjWe7eqM+9hE06iPv
Ko3WZL24UT6MqRvVJ640jVos6TdyBLeyRpZ96X1wX7EpbeQXsRUaXR/7Sxrl
JpY3yoFhbaPc+Ldso3vM86ga1Tn7KBqNxbayUUuMf7/Gv6Xl39EOGlmJbU90
Q+eHx2bDY4NGpmDJFo28oM62dIsB6zXyDqu2ch9OrNvIPmLrN4qTa6NGZmHn
5o3qjbwbNlqH2DqNfGT+Zo3sY9zOjUzBkl0bWYMZ2zUyCKu2beQX56u0w2fE
OzE8tmlkHLFdnIP5uzeqbbzZ3jkwaadGv/VZb8dGZnG+g+Ocb+1rJe+mjb4B
7HWT4Z//V+t8N++RNfZr5A5+HNrIZcw4zC21vk8jp7DtcPdhw96N7CO2r+Pk
OqCRjxh2SKNvDHn39zrE9mpkIvNPaGQHTpzoFodOcos9RzWyA6tOdh9+7OH7
hKlHO45JRzYyjjl7Os56R3jvxI5vVP+sfYrzYcZxjWqb2DHOh2fHuiV2WiN3
MOnORnXFu3+XW/5vSmc2cgdLzm7kCMZc2MgL6umMRsYx7iL3YcDpzk3sHM/D
yPMb1RXOnes+vLzAfeQ9y2uy3sXOhzdXN3IEM65xi0kjGzmFN5c1coTzVVu9
p+8Oj0sbuUbs+ka+YMAlzk3scufAp2udG9vOa2Qu+76q0XeIfVzhsZh6pVti
Bzf6/cF7M8LXx/wbvCYm3dLIHSy5rZEjGHPv8FhreKw9PG5uZBzj7nMfdXxT
I++I3e55GHm3nxv23OE+nus97iPvrV6T9e53Plx5spEL+PGUW3x6uJFZWPJQ
I3c4P7XRu8Y79GAjs4jd6Otjfw84N7FHnAOrnnZuzLvO95jn8USjmmcfjw2P
jRvV/eNuiR3U6DcE9/fARjXK+TPOh5evNPIFb7CKGqOG3nFL7b7UyCbsedd9
ePBiI/uIvew4uV5rZCXOvdXIOPK+6nWIvdDISuZ/1ug9wI/P3eLTF27x6YNG
7mDYWK3qh/d97FYt7+aHjmPP+40sY86YreqQOe9578Q+9T1i7TcbWcleP/H9
IvaR8+Hcx26JjdNqTWrljUbfA+Z/6f1i5/eNTMGSHxtZg0PfNDIL575rZBnj
/mj0ruDNt44T+8nzsPO3RiZi2M/uw9Hf3cf8H7wm6/3VyBfsGa1VfeLK6K1a
LPmvkTsY83UjN9nfV74Ozv/XyBps+6eRd5z/7dyc/+s4ucZolZv7/rrfBe7R
qK3qnH2M0mpNzv/0dbPX1Vq9ZzyrhVrVG3W2SKt64P2dsJUpWDJFK6cwY8pW
LbU1fivvsGqqVn14MF4r+4hN0CpOrolbmYWdk7eqN/JO1GodYuO2eubMn7nV
NwBLZmnV4sesrVp8mraVX1jyXKNvNr8Fnm1Uf5xP1yqObdO0sow5s7eyDHum
brV3YjO1+g6x9mSt/GWvM7ayjNj0rfJh3gytWmILt7qX3MdJW30bmD9bq/2y
3vytTMGSxVrtlb0v3qp9fnjM08o7rFqiVR81PXcr+4jNN/zzo41yLdjKLJ7l
oq2eIXkXaLUOsbla+cj8FVvVFXW5UqsWS1Zu1WLV0q1setl74r5iyhyt7hmm
LtMqjnNLtTKLOXO2irPekq32TmyFVu8ra0/S6l3gHi3fyjViy7bKh2fLtWqJ
/drodwz1uXqr9xeH3hv+ee/hsc/w6LVyClfCVqbgTd6q3qi/NVt5x7iiVR9m
rNEqH7Go1TwMy1pZiT1xqz5M7bfqI2/Qak3WS1s5y5yyVW68WbeVL1hSt7IJ
w9pWpmBY06qP8w1a1S3GrNPq+plftcrH/EErv7BqvVa5cW7t4Z9/8T1bq1Wc
867VOsxJWl0He12/1TzW27DVmtizaSt3MGzzVqZgzHatvg04vUkrvxi3vfuo
441bWUZsC8/DyG1afTP4zmzpPrzc1n3k3azVmqy3g/Phyp6tahI/9nKLT7u0
MgtLdm7lzoR+JzALn3ZqZRaxjVpdH/vb0bmJ7eocE/udmsLzb2v1LLn3e7Sq
bfaxm8fyLu/ulti+XhNX9m/lDlZd0qreqLMDW9mEJQe5xZJDWlmDQwd4HuOO
blV71NbBHsu4o1pZRuyIVj7izZFuiR3WylMcPdS5OT/G+bDhWLcYc3qr7wGW
nDA85m3lzUmt/MKVE93H+dmtnKLWj3MODDvZY/HpFLd8c85wbvw73Pti32e6
DwtP9VhMPc0te9q61fePd+gsj2Xt/Xy/udfntbIJS853iyUXtrIGh0a0Mo5x
l7f6LuLKBR7LuJGtfrsTu9TPjb93XuaW2MWtPOW5XuTcnF/hfLhypVvsuamV
KfhxdSuz8OPaVmZhzzXu4/zcVray16ucgznXeSwmXe+Wmr7ZuTHvHD8T5t/i
Psy7wWOx6ka37GmrVrXI/b3VY3nvb2/17uPW3a0cwZ57W/mCN4+0soPauquV
a4x71H14cGcr44jd53nY9lArgzDvfvfh5cPuI+89XpP1HnM+7Hm+lSn48YJb
fHqqlVnY82QrUzi/w9fBPp5oZRyxl1tZgwePOzexp50Dq150bpx7sJW57Pu5
Vu8l+3jGY7mXz7ol9kOrGqM+HvD1Mf8Vr4lPb7QyCFfeamUK3nzY6v3Gktdb
ece4j9yHE6+1so/Y256Hl++3chCT3nEfdn7gPvK+6TVZ72Pnw6dvWjmCMd+6
xaHPWzmFJZ+18ojz71uZwnV+2so1Yq/6+tjfJ85N7AvnwKfvnJv5L/ke8zy+
buUa+/jSYzHjK7fE3vU1YfbPrczCp2k7vfe8y7+18giH/mjlC67816pOqLNf
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
k90bk/byM2H9KZ7jHp3gWmw70ZE9cbb4uwC/66f5XmLSvaHee97xs0KZhU9n
O+LTuaFswpszh5/FXXdJKF84o+e4lrqLQ5lI7sJQNmHYRY7kzg9lHJ6d596M
L3U/fLrMEZ+uD+UIflwRyil8uiqUTZh0pecY3xzKEWy43D1Yc7VrcesaR9y6
wb0x6QLvi33f6Dl8uta12HadI3s6I5T73JebXMu1T/c9Jnd7KLPw6Q5HfLor
lE14c1soo6l7MJQvnIk7XUvdA6F+O8nd5+eGSfc7krsnlHE817vdm/FD7oc9
Dzti1TOhTMGbR0OZhUOPhzILVx7zHONbQ1nMXh9xD9Y84VpMetIRA551b5y7
xc+E9c95Dqueci3OPe3Inp53HsNecMShFx0x7JVQfmHSq46Y9HooazDm5VCu
Ufd+qPPD+XvNtdS9F8o7cu+EMguH3nUk91YoQ3HuzeFnF4/f9hxrPnBvHPoq
lCl4810oLzjrH4fyC5M+DeUXxnwUyjhyH7oH48+cx6QvQv2dHre+dm+c+8YR
n750nmt/7nWs+dZ59vG994JV40Y6e5y5n0KZhUM/O+LQr6F8wZUfQ1lG3T+h
3nXOwS+upe7vUNaQ+zOUU1j+lyO530O5iW2/uTfjf90Pb/5zxKexIjmCMSNH
cgp7Ro3kFJaMEmmO8Q/+fux1pEg9WDNapFocGj1S5NyPHak3tn3i58OzGSfS
HPdojEi12DZmpMie7hz+efPhZ4vhZ7xI9xJ7JohkFj5NGCni1kSRIiZNHCli
0iSRIt5MGinizWSRIhZOHini1hSRIlZNGSni0FSRIhZOHSly/qaJFDnH00aK
2DNdpIhVc0cygvM9QySzcGimSGbhyvSRasnNHGkOe2aJFPltmTVSxKrZIzmF
YXNF8ohrzBFpDvNmi1RL3ZyR5qj7w+8I79A8kfaFVctFOsOc9fkiOYVb80eK
mLRApIhJC0aKeLNQpIg3C0eKWLhIpIhbi0aKWLVYpIhJi0eKmLREpIhJS0aK
Lw0/S0WK2LN0pIhV80baO3tdNpJZfIcVhn9+I5Qry0SqJbdipDnsWSlSxJuV
I0WsWjWSUxg2fqT37v+/k5HmMG+VSLXUrR5pDqvWiBTxZs1IEYfWihSxat1I
TuHQepEirmwQySO8WSfSmaGOc4AvnL/1I9VSt1kkB8ltEsksTNo0UiS3USQ3
sW3DSL0Zc67ohz0jIkWs6kUyBW/CSGbhUBzJLFyJIs0x3i/SGeDdDyL1YE0S
qRaT0kiR964fqTfObRxpX+y7iDSHVVmkWpzLI0X2tL+vw9kqI9XiWR3JIwxr
I5mFYZ0jPg0c8WlLR+zZyhF7tnbExW0cMWxbR9zazhHjt3fEpx0ceV8a74V9
7Og53No5kllYtWskp/BpN0d82iOSTZi0i2up2915cns6j1U7uTd9945kFlZV
ke4N92Ufz+HWXl5H3b6e4/nNGMkkPDrA9xiTLo90Hnj3D3Ydbh3iiFWHRXIK
nw6KZBx1x0ayD2MOdS11x0Qyi9xRkczCp6MdyR0RyS+cO9y9GR/nfpz74x2x
6oxIpmDJiZHMwqqTIzmFTyd5jvE5kUzBkhPcgzWnuBbDTnXEsDPdG5+O9L7Y
91mew6rTXItzpzuypwN9L7kvZ7uWa68dyQPO+YXDPy8fya2LHLHqkkhO4dP5
kYzD6asj+YIrF7uWuqsiGUTuCj83fLrSkdxlkfziuV7q3oyvcT/2da0jDt0W
yRdcuT6SX7h1YySPcOsGzzE+L5K57PU692DNTa7FoZsd8el298azc/1MWH+H
5/DvFtdixq2O7InfBP7eyt9H74rkGp7dE8kjDLsvklkYdr8jPj0YySa8ude1
1D0R6fzgygOupe7xSO6QezSSZbj1mCO5hyOZhaMPuTfjJ90PG55yxKqXI5mC
Jc9EMgurnovkFD496znGr0c681jytHuw5nnXYtgLjhj2invj0yPeF/t+1XP4
9KJrce4lR/Z0t+8l9/E113LtnyOdQ87f25H8wqd3HDHsvUhO4c1bkbyj7tNI
vnAm3nUtdZ9E8p3cR5Fs4rflY0dyH0QyDs/ed2/Gn7kf9nzuiFU/RDIFb76M
ZBYOfR3JLFz5ynOM34xkLnv9wj1Y841rMelbRwz40b1x7g0/E9b/5Dnu0Xeu
xbnvHdnTh/4efM9ffC9xaPpY54F3/49IfmHSn46Y9HckazDm90iuUTdqrPPD
+fvLtdSNEss7ciPFMguHRo4Vyf0byVCc+8e9GY8Wqx/2jDH88wWRrJowlil4
M1Yss3BonFhm4crYseYYTxrLFDwYM1YP1owbqxaTxosV+c2ZKFZvnPvP+2Lf
E8eaw6rxY9Xi3ASxInv6LdJvAPdlkli1XPtX32NyU8byC5OmihUxaZpY1mDM
FLFco27mWOcBV6aOVUvdTLHcITdDrOfGP7vMGCuSmy6WoTzXaWP1ZjxLrH7Y
M2usiFXzxTIFb2aPZRYOzRnLLFyZI9Yc48ljucxeZ4vVgzVzxarFpLljRQyY
P1ZvnJss1jNh/QKx5rBqnli1ODdvrMie+Pcy/Pt4/l38grFq8WzhWB5h2GKx
/MKkxWNFTFoyljUYs2gs16jj3/Vyfjh/S8SqpW75WN6RWzaWWTi0XKxIbulY
huLcUrF6M+bfHdMPe1aKFbFq7Vim4M0qsczCodVimYUrq8aaY9zFOlecg5Vj
9WDN6rFqMWmNWJEzvU6s3ji3TKx9se91Y81h1ZqxanFurViRPW05/PPosc7Z
erFq8WyDWB5h2EaxzMKwjWNFfNokVsSnTWNF7NksVsSezWNFXNwiVsSwEbEi
bgWxIsaHsSI+RbEiZ2jDWHthH3GsOc5cGssj3MpjmYVDvVgRt4pYvuBNFquW
un6sPLkyVp5zn8TqTd86ll+4tX6se8N9aTyHc1WsddS1nuP5LRTrPeUd3cr3
GIdOiHXeOBPbxjILw7ZzxKcdYtmEN9vE8o663WO5xhna3rXU7RbLHXK7xLIM
t3Z1JLdTLLNwdEf3ZryH+3Gm93TEoYNi+YIre8fyC7f2jeURbu3jOcaHxfIF
V/ZyD9bs51oc2t8Rnw52bzzb2fti34d4Dv8OcC2/UQc6sqetfS+5L4e6lmsv
EssDzvlRsczCsKMd8enYWDbhzZGxvKPuFD8zXDnGtdSdHMsdcif6ueHWSY7k
jo9lFs/1OPdmfKr7sa/THHHo/Fi+4MoZsfzCrbNieYRbZ3qO8RGxnGWvp7sH
a852LQ6d44hPF7g3nh3uZ8L6Cz2Hf+e6FjPOc2RPa+dDG7KhKcPPOrnip8PP
pbE8wrArYvmFSVfF8ghjbox1TvDj8liuUXeT5zjHl7kHuau9DpOuj2UWDl3j
Oey8wXP0vdLX5HrXxbKPNTe7N1bdG8sR/Lg1lllYdXssp/DpNs8xfiDWmceS
e2J5xPpb3I/1d8ayDMPuc28cujuWZay5y3nGd/g6rLnW34O93u91XO9BXxOT
Ho3lEVY9HssjXHk+lh2874/Eco26FzyHDQ/Hso/cE16HW88OP4NYxj/pOdx6
znP0fczX5Hovuh8mvRXLDlx52xF7Xo1lE368Essgxu/GcgQ/Xo5lGbmH/P3Y
30vuTe4198Ckd9yb9Ucnw3M6/Mw1/LwZyzL28bprceINR3Lv+Zp480EspzBp
jERngPf9o1hm4dDHjjj0aSxfcOVDr6Pum1hnhjP3iWup+zqWceS+jOUU9nzl
SO7zWG5i22fuzfhb98Ob7xzx6fdYjmDMD7Gcwp6fYjmFJT96jvHfsRzBgO/d
gzU/uxaHfnHkd+YP98a2L7wv9v2n5/DpV9di22+O7OnpWL9n/H3kL9dy7fd9
v7nXIyUyC4dGThRxaNREvuDKf7Eso26c4fwlsSwZJVEtdWMP/3xxrNyYiZ4b
/5v8WIkiudETuclzHS1Rb8bjJuqHK+MlitgzeSJT8GOCRGbhx0SJzMKeCRPN
Mf43lsXsdfxEPVgzcaJaTJokUeRMT5GoN+b942fC+ikTzWHepIlqsWqyRJE9
PRXrLHJ/p0pUi2FTJ4rYM0MiR7BnpkS+4A3nAzs4W9Mnco06zgxzeDBdIuPI
zZxoHbbNnsggzJsl0RxezpFojr4zJrom15s7UT/sWTSRKfixWKKIT/MnMgt7
5ktkCuNNE733vO/zJjKO3CaJzhi5eRL1JrdAoh5YtXii3jg3WyJz2fciwz8/
E2sfCyaq5V4ulCjyzm6W6Jqcj1kTfT/WL5nIOBxaNpFlOLRcoogxKyTyBXuW
SWQcdUsnco3x8olqqVstkUGciVUSWYaFqyaK5FZK5CmOrmjXGK+eaB1urZnI
IKzaMJEvuLJOIoOwar1EpmDMUom+B3taO5Fr1K2VqAfjdROtY836idZhwEaJ
euPZEonuMfdl40RzPJs1Eu2LPW2QaB17OsY2815snuge49Zeic4D736QyC9M
ihJ5hDH9RH5xVkYkco26ItEc52+LRP3IxYnWYVKeyCwcShLNYWcv0Rx9w0TX
5Hplon7Ys3UiU7BkG0e8aRMZhFVNIr8YT5Po/PF3hzqRceS2T2QNxlSJepPr
3AOTtnVvnMsS+cu+t0r0m8Q+Bq7Fsy0dye2ZyCzuY5ro+7F+B18Tk3ZJ5Bcm
7ZbII4zZN5Ed7H3nRK5Rt5/nph1+dkrkILndvQ6T9vZzw6E9PMc+9vEcfXf1
Nbne/u6HMUckOp+4cqQjlhycyBHcOiiRZTN6HfcVmw5M5Be5Hf392N8B7k3u
EPfAsKPcG/+28z3meRye6Jyzj0Ndi22HOZJbOdH543wem+j9xZ550qE/w/jo
8HNCIr/w7ERHTDo5kTUYc3wiy6g7O5EpnMWTXEvdWYnOFbkzElmJZ2c6kjst
kWWYeurws7DHp3uONee4N/ZclsgXXLkq0fnEjPMTWYZhFyayCcPOS+QXuXPd
g/FFzuPQJYls4t5c7t54doUjPl3qPNe+2OtYc6Xz7ONq7wV7Hkt0njl/1yXy
C4eud8SwGxN5hCvXJvKLujsS2Y0rN7iWutsT/ZaQuzWRU/yG3OZI7uZEbmLb
Te7N+E73w5W7HLHn4USm4Mc9iczCj/sSmYU993qO8TX+fuz1bvdgzf2uxaQH
HDm7j7g35l3g58OzedRz3KMHXYsTDzmyp1FTPTOe4eO+l3jzZCKPsOopRwx7
2hGHnnHEmGcdMeY5Rxx63hEXX3DExRcdMewlR87Zy47494ojJr3qyNl9zRFj
XnfEoU8SecGZfjORX1jydiK/cOgN15J7x3M49K4jLr7nyO/MB4nMwqePExnH
NT70HBa+71rqPvIcdbckekd4hz71vnDo90RnmLP+eSKzMOwLRxz60hFjvnLE
mK8dcegbR1z81hEXv3PEsO8d+WedHxz5Xf3REZ9+cjxu+PnZEXt+ccSqz7x3
9vpbIrP4Dn8OP6ckcuVX15L7y3PY87cj3vzjiFX/JXIKw55I9N79/zcw1Rzm
/eta6kZONYdVo6SKvLujpXp/8Ym/0/PvQ/l3B2OmcgqHxkoVcWWcVB7hzRip
zgx1E6fyhfM3dqpa6iZK5SC5CVKZhUkTporkxkvlJraNm6o340lS9cOeSVNF
rJoulSl4M3kqs3BoylRm4coUqeYYz5TKFDyYLFUP1kyVqhaTpk4Vee+mT9Ub
58ZPtS/2PUOqOayaJlUtzk2bKrKn0VPdS+7LjKlqufZyqc4eZ262VH5h0uyp
IibNmcoajJk1lWvULZDqGePKHKlqqZs/lTvk5k1lFq7PlyqSmzuVoTg3V6re
jBdM1Q+fFkoV8WnpVI7gxyKpnMKnxVLZhEmLpppjPEsql9nrwql6sGbxVLW4
tUSqiFvLpOqNSTOneiasXzbVHPdoyVS12LZUqsieOFv8XYDf9eVT3UtMqlO9
97zjK6cyC59WSRXxabVUNuHNSsM/v5Wobt1UvnBGV01VS906qUwkt1YqmzBs
7VSR3BqpjMOz1VP1Zrxeqn74tH6qiE9bpHIEPzZM5RQ+bZzKJkzaKNUc4yiV
I9iwQaoerNkkVS1ubZoq4taIVL0xac1U+2LfQao5fNosVS22bZ4qsqcVU7nP
fQlT1XLtFVLdY3J5KrPwqZcq4lORyia8yYZ//iNR3SCVL5yJfqpa6rpUv53k
Gj83TGodyVWpjOO5lql6M97S/bBnK0es2jmVKXizTSqzcGi7VGbhyraeY5yk
spjfk63dgzXbuxaTdnDEgF3cG+fiVM+E9bt6Dqt2dC3O7eTInnZzHsN2d8Sh
PRwxbO9UfmHSPo6YtF8qazBmr1SuUXdoqvPD+dvXtdQdkso7cgelMguHDnYk
d0AqQ3Fuf/dmfKDnWHOYe+PQCalMwZtTUnnBWT8ylV+YdHQqvzDmiFTGkTvc
PRgf4zwmHZfq7/S4daJ749xJjvh0vPNc+1ivY83JzrOPU70XrLoh1dnjzJ2R
yiwcOtMRh85O5QuunJ7KMuouSvWucw7Oci11F6ayhtz5qZzC8gscyZ2byk1s
O8e9GV/sfnhziSM+XZvKEYy5LJVT2HNFKqew5HLPMT7N34+9XuoerLnStTh0
lSPn/jr3xraj/Hx4Ntd7jnt0tWux7RpH9tTLhud6GP8efm70vcSem1OZhU+3
OOLWrY6YdJsjJt3uiDd3OOLNnY5YeJcjbt3tiFX3OOLQvY5YeJ8j5+9+R87x
g8NPmsqehxyx6vlURnC+H0llFg49lsosXHnYteQe9xz2POHIb8uTjlj1dCqn
MOy5VB5xjWc8h3lPuZa6Zz1H3Xmp3hHeoRe8L6z6KNUZ5qy/lMop3HrZEZNe
ccSkVx3x5jVHvHndEQvfcMStNx2x6i1HTHrbEZPeccSkdx33HH7ec8Se9x2x
6kXvnb1+mMosvsPH/h648oFryX3iOez51BFvPnPEqi9SOYVhN6V67/7/O+k5
zPvctdR95Tms+toRb75xxKFvHbHqh1RO4dCPjrjycyqP8Ob7VGeGOs4BvnD+
fnItdX+mcpDc76nMwqQ/HMn9mspNbPvFvRn/7X7Y848jVo2RyRS8+S+VWTg0
ciazcGWkTHOM5xj++YFU7/6/7sGaUTLVYtKomSLv3ZiZeuPcb94X+x4r0xxW
jZapFudGzxTZ05yZrsPZGjtTLZ6Nm8kjDBs/k1kYNkGmiE8TZor4NFGmiD0T
Z4rYM0mmiIuTZooYNlmmiFuTZ4oYP0WmiE9TZoq8L+Nl2gv7mCrTHG5Nk8ks
rJouk1P4NH2miE8zZrIJk6bNVEvdDJny5GbKlMeqqTP1pu8smczCqnEy3Rvu
y6yZ5nBr5kzrqJst0xyGPZrKJDyaK9M9xqQNMp0H3v15M9Xh1nyZIlYtkMkp
fJonk3HULZ7JPoyZP1MtdYtlMovcIpnMwqdFM0VyC2XyC+cWzNSb8RKZ+nHu
l8wUsWqlTKZgydKZzMKqZTM5hU/LZJpjvFomU7BkqUw9WLNcploMWz5TxLCV
M/XGp4Uz7Yt9r5JpDqtWyFSLcytmiuxp7kz3kvuyaqZarv1dKg8452tl8he3
1s4UsWrdTE7h05qZjKNuk0y+4Mo6mWqp2ziTQeQ2zPTc8GmjTJHc+pn84rmu
l6k3400z9WNfm2WKOJRm8gVXtsjkF24FmTzCrRGZ5hivkclc9rp5ph6sCTPV
4lCUKeJTlqk3nq2e6ZmwPs80h39xplrMSDJF9sRvAn9v5e+j/Uyu4VmZySMM
qzOZhWGNIz51mWzCmypTLXXbZTo/uNK6lrptM7lDbutMluHWNo7ktsxkFo4O
3Jvx9u6HDTs4YtWemUzBkp0ymYVVu2RyCp929hzjfTOdeSzZ0T1Ys6trMWw3
Rwzby73xaSvvi33v7Tl82t21OLeHI3sqMt1L7uM+ruXaZ2U6h5y/AzP5hU8H
OWLYIZmcwpsDMnlH3TGZfOFMHOxa6o7O5Du5I4ef2TP9thzlSO6wTMbh2aHu
zfhY98Oe4xyx6vRMpuDNCZnMwqGTMpmFKyd6jvH+mcxlr8e7B2tOdi0mneKI
AWe4N87t52fC+jM9xz061bU4d5ojezrc3wODz/a9xKGHMp0H3v3zM/mFSRc4
YtJFmazBmPMyuUbdlZnOD+fvQtdSd0Um78hdlsksHLrckdwlmQzFuYvdm/FV
7oc9Vzti1S2ZTMGbazOZhUPXZzILV67zHOM7MpmCB9e4B2tucC0m3ejIb86t
7o1zl3pf7Ps2z2HVTa7FuZsd2dO5mX4DuC+3u5Zrn+N7TO6eTH5h0r2OmHR/
Jmsw5u5MrlH3WKbzgCv3uZa6RzO5Q+5hPzf+2eURR3IPZjKU5/qAezN+3P2w
5wlHrHoxkyl481Qms3DomUxm4crTnmN8VyaX2euT7sGaZ12LSc85YsBL7o1z
d/qZsP5lz2HV867FuRcc2RP/XcWK/vezr7gWz17L5BGGvZnJL0x6yxGT3slk
Dca8kck16vhvxzg/nL+3XUvdR5m8I/dBJrNw6ENHcu9lMhTn3nVvxp+4H/Z8
6ohV32cyBW8+z2QWDn2ZySxc+cJzjCfMda44B5+5B2u+ci0mfe3Imf7BvXHu
fe+Lff/oOaz6dvg5IpNz3zmyp4lyXYdz9pNr8eyXTB5h2G+ZzMKw3x3x6Q9H
fPrTEXv+csSevx1x8R9HDPvXEbf+c8T4kXJFfBo5V+QM/eq9sI9Rcs1x5kbL
5RFujZHLLBwaM1fErbFz+YI3o+eqpW6sXHly4+TKc+5HzdWbvuPl8gu3fva9
4b6Mn2sO58bNtY66CXLN8fxezfSe8o5OnOse49CSuc4bZ2KyXGZh2OS5Ij5N
mcsmvJk0l3fUzZDLNc7QFLlqqZs+lzvkps1lGW5NlyuSmzqXWTg6Va7ejGfM
1Y8zPVOuiENz5/IFV2bJ5RduzZbLI9yaNdcc4/lz+YIrM+fqwZrZc9Xi0By5
Ij7Nk6s3nk2Ta1/se95cc/g3Z65afqPmyhXZ0yS57iX3Zb5ctVz79UwecM4X
zmUWhi2SK+LTYrlswpuFcnlH3bK5nhmuLJqrlrplcrlDbqlczw23ls4VyS2R
yyye6+K5ejNeLlc/9rV8rohDa+TyBVdWzOUXbq2cyyPcWinXHOMFcznLXlfI
1YM1q+SqxaFVc0V8WjNXbzxbINczYf1auebwb7VctZixeq7Invj34Pzvn/xv
n+vmsgyH5qqG978c3v/hZ8NcfmHSJsM/f5PJmDDXOcGPDXK5Rl2Ua45zvH4u
B8ltmmsdJo3IZRYObZZrDjuDXHP03SjXNfFvi1z2sSbO1Rur6lyO4Eeayyys
ynM5hU9ZrjnGXa4zjyVVLo9Yn+Tqx/p+LsswrHFvHCpzWcaaIleecS/XdViz
ea7vwV5br+N6A18Tk7bJ5RFWbZfLI1zZNZcdvO9b53KNut08hw1b5bKP3PZe
h1s75/otwfgdPIdbu3iOvtv6mlxvd/fDpANy2YErBzpiz965bMKPvXIZxPjg
XI7gx565LCO3pb8f+9vDvcnt4x6YdJB7s37R3vDcDeNzw8/+uSxjH/u6Fif2
cyR3iK+JN4flcgqTrs51Bnjfj8hlFg4d6YhDR+fyBVcO9zrqTsp1ZjhzR7mW
uhNzGUfu+FxOYc8JjuSOzeUmth3j3oxPdj+8OcURn87N5QjGnJbLKew5I5dT
WHK65xhfmMsRDDjVPVhzpmtx6CxHfmfOc29sO877Yt/new6fznYttp3jyJ52
yvV7xjt0gWu59qG+39zrS3OZhUOXOeLQFbl8wZVLcllG3fW5TFlv+LnctdRd
l+u/4yd3jZ8b/43/tY7krsrlJs/1SvdmfIP74cqNjthzdy5T8OPmXGbhx225
zMKeW4efjT2+OJfF7PUm92DN7a7FpDscOdP3uDfmXeRnwvp7PYd5d7oWq+5y
ZE875jqL3N/7XIth9ztizyO5HMGex3L5gjecD+zgbD2cyzXqnvMcHjyUyzhy
j3sdtj2dyyDMe8JzePmM5+j7qK/J9Z53P+x5I5cp+PGmIz69nMss7HkplymM
/8j13vO+v5jLOHK/5zpj5F5wb3KvuAdWveXeOPdULnPZ9+u53kv28apruZev
OZL709fkfDzp78f6d3IZh0Mf5LIMhz50xJiPc/mCPe/nMo6693K5xvgj11L3
ZS6DOBOf57IMC79wJPdpLk9x9BP3ZvyV1+HWN7kMwqpfcvmCK9/nMgirfsxl
Csa86+/Bnr7L5Rp137oH4x+8jjU/eR0G/OreePa27zH35TfP8Wy+9r7Y089e
x54W6+k94734y/cYt2bp6Tzw7v+byy9MGqknjzBmzJ784qz8k8s16sbqaY7z
97f7kRu5p3WYNHpPZuHQKD3NYecYPc3R9z9fk+uN3VM/7JmkJ1OwZNKeIt6M
35NBWDVeT34xfiDX+ePvDuP2ZBy5KXqyBmPG6ak3uQl66oFJk/XUG+dG68lf
9j1xT79J7GPCnmrxbKKeIrmZezKL+zhqT9+P9VP2dE1Mmq4nvzBphp48wpjZ
e7KDvU/bk2vUzdHT3IPDzzTDP9+SKzdjT+swadaenhsOzdTTHPuYrac5+k7f
0zW53pw99cOYhXo6n7iycE8RS+btyRHcmqcnyx71Priv2DR3T36Rm6qn74fT
c/XUm9x8PfXAsEV66o1/k/d0j3keC/Z0ztnH/D3VYtsCPUVyn+U6f5zPxXt6
f7Hn+eGftxp+th5+lurJLzxbuqeIScv2ZA3GLNmTZdSt0pMpnMVleqqlbuWe
zhW5FXuyEs9W6imSW74nyzB1uZ56M16hpznWrNpTb+xZvydfcGXjns4nZqzR
k2UYtlZPNmHY6j35RW61nnowXrunPA6t25NN3JsNeuqNZxv2FPFpvZ7yXHud
ntaxZqOe8uxjk572gj3b9HSeOX+b9+QXDm3RU8SwoCePcGWznvyiLu/JblwZ
0VMtdVlPvyXkkp6c4jck7SmSi3pyE9vCnnoz7vXUD1f6PUXs2bInU/Cj7Mks
/Kh7Mgt7qp7mGG/a0/djr0VPPVjTuBaTWsdR/U7RG/PW7On58Gy29hz3qHMt
Tgwc2dMVPT0znuG2vpd4s31PHmHVDo4YtqMjDu3kiDE7O2LMLo44tKsjLu7m
iIu7O2LYHo6csz0d8W8vR0za25Gzu+/wM3VPxuzniENH9+QFZ/qAnvzCkoN6
8guH9nctuYM9h0OHOOLioY78zhzek1n4dFRPxnGNIzyHhYe5lrojPUdd3NM7
wjt0jPeFQ+f1dIY568f1ZBaGHe+IQyc4YsyJjhhzkiMOneyIi6c44uKpjhh2
miP/rHO6I7+rZzji05mOSww/Zzliz9mOWHWs985ez+3JLL7D+f4euHKOa8ld
4DnsudARby5yxKpLenIKw7br6b37/2+g5zDvYtdSd5nnVh1+Lnfk3b2yp/cX
n74vhs9p+Dl6+LmmJ6dw6FpHXLm+J4/w5uqezgx1t/XkC+fvOtdSd2tPDpK7
uSezMOkWR3I39uQmtt3g3oxvdz/sucMRqx7syRS8uasns3Donp7MwpW7Pcf4
0Z5MwYM73YM197oWk+5z5L17yL1x7ibvi30/7Dmsut+1OPeAI3u6yveS+/KI
a7n2Rz2dPc7ckz35hUlPOWLSMz1ZgzFP9OQadS/7GePK066l7qWe3CH3Qk9m
4fqLjuSe68lQnHvWvRm/4n749KojPr3XkyP48XpPTuHTmz3ZhElveI7x4z25
zF5fcw/WvOVa3HrbEbfed29MeszPhPUfDj/7+B6941pse9eRPXG2+LsAv+sf
+15i0rh9vfe845/3ZBY+feGIT1/1ZBPefDb8HOi6H3vyhTP6pWup+6EnE8l9
15NNGPa9I7lvejIOz752b8Y/uR8+/eyIT//05Ah+/NqTU/j0e082YdJvnmM8
cl+OYMMv7sGaP1yLW3864ta/7o1J33pf7Ps/z+HTX67Ftr8d2dOnPbnPfRmp
r1qu/YnvMbnR+zILn8boK+LTWH3ZhDej9WU0dRP25QtnYsy+aqmboK/fTnLj
9fXcMGn8viK5cfoyjuc6dl+9GU/UVz/smbiviFXT9GUK3kzal1k4NHlfZuHK
ZH3NMR61L4vZ6yR99WDNFH3VYtKUfUUMmLav3jg3Sl/PhPXT9TWHVVP1VYtz
U/cV2dP0feUxbIa+Ig7N2FfEsFn68guTZu0rYtLsfVmDMTP35Rp18/V1fjh/
s/VVS928fXlHbu6+zMKhefqK5Obsy9CHhp85+urNeK6+5lgzf1+9cWjJvkzB
m2X78oKzvlBffmHSIn35hTEL9mUcuQX66sF40b7ymLR4X3+nx62l+uqNc0v3
FfFpib7yXHuxvtaxZpm+8uxjub72glVBX2ePM7diX2bh0Ep9RRxapS9fcGWF
viyjbp2+3nXOwcp91VK3dl/WkFuzL6c+Gn7W6iuSW60vN7Ft1b56M163r354
s15fEZ8278sRjNmgL6ewZ6O+nMKSDfuaY7x8X9+Pva7fVw/WbNxXLQ5t0lfk
3G/RV29sW7iv58OzGdHXHPdo075qsW2zviJ7GmP4238BZ3X4Cfu6l9gT92UW
PiV9RdxK+4qYlPUVMSnvK+JNr6+IN/2+IhYWfUXcKvuKWFX1FXGo7itiYePI
+WsdOcedI/YMHLFq176M4Hxv1ZdZOLRNX2bhypauJbet57BnO0d+W7Z3xKod
+3IKw3bpyyOusZPnMG8H11K3s+eoW2P4+aCnd2g37wurjujrDHPW9+jLKdza
0xGT9nLEpL0d8WYfR7zZ1xEL93PErf0dseoAR0w60BGTDnLEpIMdZxp+DnHE
nkMdsWp37529Ht6XWXyHI/09cOUw15I7ynPYc7Qj3hzjiFXH9eUUhkV9vXe8
c8d7DvOOdS11J3gOq050xJuTHHHoZEesOq0vp3DodEdcObMvj/Dm1L7ODHWc
A3zh/J3hWurO78tBcuf2ZRYmnedI7uy+3MS2s9yb8YXuhz0XOWLVNX2ZgjeX
9GUWDl3Wl1m4cqnnGD/d1xng3b/YPVhzuWsx6crhZ/W+3rtr3RvnzvG+2Pd1
nsOqq1yLc1c7sqdnfB3O1vWuxbMb+/IIw27uyywMu8URn251xKfbHLHndkfs
ucMRF+90xLC7HHHrbkeMv8cRn+515H25yXthH/d5Drce6MssrHqoL6fw6WFH
fHq0L5sw6UHXUveI8+Qecx6r7ndv+j7Rl1lYdYPvDfflSc/h1uNeR91TnuP5
bd2XSXj0rO8xJv3c13ng3X/Bdbj1oiNWvdyXU/j0fF/GUfdWX/ZhzEuupe7N
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
tdRtMfzzD4Vym5V6bvxv8puXiuQ2KeUmz3XjUr0ZB6X64UpYKmJPUcoU/IhL
mYUfaSmzsCcpNcd43VIWs9eoVA/WZKVqMSkvFTnTZanemLdOqWfC+qrUHOb1
StViVb9UZE9TlTqL3N+6VC2GNY7Ys1UpR7Bnm1K+jO3zgR2crS1LuTaGzwxz
eDAoZRy5bb0O23YsZRDmbec5vNzJc/Td2tfkeru6H/bsV8oU/NjfEZ/2LGUW
9uxRyhTG55d673nfdy9lHLnzSp0xcru5N7m93AOrDnBvnNuhlLnse99S7yX7
2Nu13Mt9HMld4GtyPrb392P9QaWMw6HDSlmGQ4c7YsyRpXzBnkNLGUfdIaVc
Y3yEa6k7vpRBnIljS1mGhcc5kju6lKc4epR7Mz7B63DrpFIGYdVZpXzBlVNL
GYRVp5cyBWMO9vdgT6eUco26k92D8Wlex5ozvA4DznZvPDvQ95j7cu7ws7Sf
zYneF3s60+vY05ul3jPeiwt9j3Hr8VLngXf/klJ+YdJlpTzCmGtL+cVZubiU
a9Rd5znO30XuR+5yr8Okq0uZhUNXeA47r/EcfS/1Nbne9e6HPXeUMgVL7nTE
m5tLGYRVN5Xyi3Fb6vzxd4cbSxlH7p5S1mDMDe5N7hb3wKS73BvnrirlL/u+
vdRvEvu41bV4dpsjucdKmcV9vNLfj/X3+pqY9GApvzCJ/48THmHMU6XsYO8P
lHKNuqc91w0/95dykNwjXodJT/i54dCjnmMfT3qOvg/5mlzvGffDmFdLnU9c
ec0RS14o5QhuPV/Ksq29jvuKTc+V8ovcff5+7O9Z9yb3ontg2OvujX93+x7z
PF4pdc7Zx0uuxbaXHckdU+r8cT7fKvX+Ys9u1dCf4WfS4efdUn7h2XuOmPRB
KWsw5p1SllH3eSlTOIvvu5a6z0qdK3KflLISzz51JPdRKcsw9UP3Zvyx51jz
hXtjz0+lfMGV30qdT8z4upRlGPZtKZsw7KtSfpH70j0Yf+c8Dv1Qyibuzc/u
jWe/OOLTj85z7e+9jjW/Os8+fvdesGeySueZ8/dXKb9w6G9HDPu3lEe48mcp
v6gbo5LduPKPa6kbvdJvCblRKznFb8holSK5kSq5iW3/uTfjMSv1w5WxKkXs
mbiSKfgxTiWz8GO8SmZhz7iV5hj/4e/HXseu1IM141eqxaQJKkXOLu8UvTHv
Gz8fng3vGXPcowkr1eLERJUie9qw0jPjGU5e6V7izZSVPMKqqSpFDJu6UsSh
aSpFjJm2UsSY6SpFHJq+UsTFGSpFXJyxUsSwmSpFztnMlSL+zVIpYtKslSJn
d7ZKEWNmrxRxaJFKXnCm56zkF5bMXckvHJqjUi25eSrN4dC8lSIuzlcp8juz
QCWz8GnhSsZxjQUrzWHh/JVqqVuo0hx1owz/fE6pd2jRSvvCodUrnWHO+uKV
zMKwJSpFHFqyUsSYpSpFjFm6UsShZSpFXFy2UsTF5SpFDFu+UuSfdVaoFPld
XbFSxKeVKsW3h5+VK0XsWaVSxKrFKu2dva5WySy+wxqVvgeurGrXyK1ZaQ57
1qoU8WbtShGr1q3kFIZNUem9451br9Ic5q1TqZa69SvNYdUGlSLv7kaV3l98
4u/0/PtQ/t3BppWcwqHNKkVc2aKSR3izSaUzQ11ayRfO3+aVaqlLKjlILqpk
FibFlSK5oJKb2DaiUm/GWaV+2JNXilg1qGQK3vQrmYVDZSWzcKWoNMd4m0qm
4EGvUg/WVJVqMakZfkau9N5t6d44F1baF/veynNY1boW5zpH9rRxpXvJfdna
tVz7iEpnjzO3QyW/MGlHR0zauZI1GLN9Jdeo26vSM8aVnVxL3Z6V3CG3eyWz
cH0PR3K7VjIU53Zxb8Z7ux8+7eOIT4dWcgQ/9qvkFD4dUMkmTNrfc4y3q+Qy
e93XPVhzoGtx6yBH3DrMvTFpWz8T1h/uOe7Rwa7FtkMc2RNni78L8Lt+pO8l
Jt1Q6b3nHT+2kln4dJwjPp1QySa8OabS//+cutMr+cIZPd611J1WyURyp1Sy
CcNOdSR3UiXj8OxE92Z8hvvh05mO+HRRJUfw4+xKTuHTuZVswqRzPMf4skqO
YMNZ7sGa81yLW+c74tbF7o1JJ3tf7PsSz+HTBa7Ftgsd2dPRldznvlzqWq59
lO8xuasqmYVPVzvi07WVbMKbKysZTd0tlXzhTFzjWupurvTbSe5GPzdMusmR
3PWVjOO5XufejG91P+y5zRGr7q9kCt7cUcksHLqrklm4cqfnGF9RyWL2ert7
sOZu12LSPY4Y8IB749zlfiasf9BzWHWva3HuPkf29JDzGPawIw494ohhj1fy
C5OeHH7qSiY9XckajHmskmvUvVTp/HD+nnItdS9W8o7c85XMwqEXHMk9W8lQ
nHvGvRk/5znWvOzeOPRuJVPw5sNKXnDWX6vkFya9UckvjHm1knHkXnEPxm86
j0lvV/o7PW695944974jPr3jPNd+y+tY84Hz7OMj7wWr/q109jhzn1YyC4c+
c8ShLyr5giufVLKMuu8rveucg89dS913lawh900lp7D8W0dyX1VyE9u+dG/G
P7gf3vzoiE9/VXIEY36u5BT2/FrJKSz5xXOMP/b3Y68/uQdrfnMtDv3uyLn/
272x7XU/H57NP57jHv3hWmz705E9XVMPz+nws/bw85/vJfaMXMssfBqlVsSt
UWtFTBqtVsSk0WtFvBmjVsSbMWtFLByrVsStsWtFrBqnVsShcWtFLByvVuT8
jV8rco4nqBWxZ8JaEaumq2UE53viWmbh0KS1zMKViWrVkpus1hz2TF4r8tsy
Ra2IVVPVcgrDpq3lEdeYutYc5k1Zq5a6aWrNUfe13xHeoelr7QurFqp1hjnr
M9ZyCrdmqhUxaeZaEZNmqRXxZtZaEW9mqxWxcPZaEbfmqBWxas5aEZPmqhUx
ae5aEZPmqRUfHX7mrRWxZ75aEatmqLV39rpgLbP4DgvX+h64ssDwz09Uyi1S
aw57Fq0V8WaxWhGrlqjlFIaNVOu9+//vZK05zFu8Vi11S9Waw6qla0W8WaZW
xKFla0WsWqGWUzi0Yq2IKyvX8ghvlq91ZqjjHOAL52+lWrXUrVnLQXKr1zIL
k9aoFcmtWstNbFulVm/GnCv6Yc86tSJWbVrLFLxZr5ZZOLRBLbNwZf1ac4x3
rHUGePfXrdWDNRvWqsWkjWpF3rvNavXGudVq7Yt9b15rDqs2rlWLc5vUiuxp
J1+Hs7VFrVo8C2p5hGFRLbMwLK4V8SmpFfEprRWxJ6sVsSevFXGxVytiWL9W
xK2iVsT4slbEp8pO8b6EtfbCPupac7jV1jILqwa1nMKnLR3xaetaNmFS51rq
tnKe3DbOY1Xj3vTdrpZZWDWi1r3hvmzvOdza1uuo28FzPL9JapmERzv7HmPS
WbXOA+/+bq7Drd0dsWrPWk7h0661jKPugFr2YcwerqVu/1pmkdu3lln4tJ8j
ub1r+YVze7k34wPdj3N/kCNWHV3LFCw5pJZZWHVYLafw6VDPMT6+lilYcrB7
sOZw12LYEY4Ydox749M+3hf7PtZzWHWka3HuKEf2tIvvJfflONdy7eVqecA5
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
u0Dk7E7cyibs4f1gDg8mamUfuUla5ek1eSsrcW7qVsbRd7JW1yE3YSsrWT9H
q/cAP+ZsFfFprlYRn2Zs5Q6GrdHq/PC+r9kq8m7O1CqPPTO0sow1q7c6h6yZ
vtXeyc3e6h5x7alaWcleZ2t1v8jNMvzzPY2cm7VVJLdWq2tyVqZs9XvA+rlb
7Rc7F2xlCpYs3MoaHJqvlVk4t0Ary6hbqtW7gjfzt8qTW6TVOuxcopWJGLZo
qzkcXbLVHOsXanVNrrdMK1+wZ5VW5xNXVm0VsWTFVu5gzLyt3GR/87T6HoyX
b2UNti3XyjvGy7bqzXiFVnl6rdaqN/d9ilbvAvdo5VbnnH2s1OqajJdu9b3Z
6wF2iGe1TavzxjnbrtV54P1dv5UpWLJZK6cwY/NWkbO1bivvsGqLVnN4sE4r
+8it1ypPrw1bmYWdm7Y6b/TdoNV1yK1tH1mft/oNwJJeq4gf/VYRn8JWfmHJ
+K1+s/m7wHitzh/jqFUe24JWlrGmbGUZ9oxotXdyWavfIa69SSt/2WvayjJy
cat+mJe0iuS29b3kPm7c6reB9UWr/XK9LVuZgiU7tNore9/RcYLhp2vlHVbt
5DnOdNvKPnID5+m1dSuzeJbb+xnSdytfh1zTykfW793qXHEu93HEkn0dsWrX
VjZN4utzXzGlanXPMHU353Ful1ZmsaZuled6O3vv5PZq9b5y7Y1avQvcoz1b
uUZud/fDsz0cyS3e6u8xnM8D/f7i0Azd0JthvHP4OXT4mbmVK4e3MgVvjmt1
3jh/B7fyDs+O9xxmHOR+5I7wOgw7ppWV2HOk5zD1WM/R9zBfk+sd3cpZ1pzg
3nhzVitfsOSkVjZh2CmtTMGwkz3H+NxW5xZjzvT3Z/2J7sf601r5hVVnuzfO
nTH8LOY1pzvP+FRfhzVH+Xuw13O8juud52tiz0Wt3MGwS1qZgjFXt/ptwOkL
W/lF3TWe4xxf0Moycpd6HUZe2eo3g9+ZyzyHl1d5jr4X+5pc71r3w5XbWp1J
/LjdEZ9ubGUWltzQyh3GvBOYhU/XtzKL3Pn+fuzvOvcmd5N7YNUd7s36X/0s
ufe3tjrb7ONm1/Iu3+JI7i5fE1fuaeUOVn3Y6rxxzu5rZROW3O+IJQ+2sgaH
7vU66p5odfY4Ww+4lrrHW1lG7tFWPuLNY47kHm7lKY4+5N6Mn3Q/bHjKEWNe
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
9L3qHJj0tnPj3NOJ/GXfbyT6JrGP1zwWz153pO+zRGZxH5/y9TH/Pa+JSRMT
+YVJHyfyCGO+SmQHe/8wkWuM+9ptY0P5IJGD9H3ieZj0hZ8bDn3qNvbxpdvI
+5HXZL1vnA9jfk10PnHlN0cs+SGRI7j1fSLLjvc87is2fZfIL/re9/Wxv2+d
m74fnQPDfndu/HvH95jn8Uuic84+fvJYbPvZkb4/E/mIZ38ncgeTzkiDP6Es
E0pfKstwqJnKF1yZLJUdnLn/EhnHuMlTtWHDv6Gc5b5WqnlYNSCVZZyzdqo2
HJ00VRt5G6nWZL0pUuXDnhlSmYIlM6aKeDMwlUFYNXUqv6j/5evj2qZKZRx9
s6Q6zxgzZarc9E2TKgcmzZQqNyZNksp39j19qn8/g31Mm2osnk2XKtK3XKrz
xpnopLo+5s+aak1MmjOVRxg2dyqPcGVQKq+xZI5U3jFucKo2PJg9lXH0zZNq
HkYukOpbwndm3lRt2LZgqjbyzpVqTdZbKFU+7FkqlSn4wfMn4tOQVGZhz6Kp
TKG+bCqnuM5FUhlH32ypro/9LZwqN32LpcqBVbxb5Gb+zKnuMc9jyVRGsI/F
U43l3C+RKtI3fyqXuc4VUnmEVbulOg/8Xl45lUG4smoqU/BmnVR2cLZWSuUd
49ZN1YYHK6bKR99qqebh5VqpzhjmrZ6qDTvXTtVG3lVSrcl666XKhz2bpzIF
P7ZIFfFpo1RmYc+GqUyhzm8+/pmS78oGqYyjb+tU1uDB+qly07dxqhxYtWWq
3Di3Zip/2fdmqb5J7GOTVGPxddNUkb5dU5nFfVwj1fUxf5tUa+LTDqkMwpWd
UpmCN3umOm9Ysn0q7xi3d/jzP4k82C6VffTtnGoeXu6e6rlh0i6p2tjHHqna
yLtjqjVZb59U+bAnSWUKfqSO+LRfKrOwZ1gqU6gvn+pc8t4MtXH0bZvq+tjf
vqly07e/c2BV5tw4t1Wqe8zziFMZwT66Hsu5jxzp49/F4O+E+Heq5kt1LnmP
i1TG4VB/KoNw5YBUpuDNwans4GzVqbxj3CFuw4NeKvvoG+F5eHlQqjOGeQe6
DTtHu428w70m641xPuw5JpUp+HGsIz4dkcos7Dk8lSnUr0p1lnj3D0tlHH1X
pjp79B3q3PQd6RxYdZxz49yoVP6y77Gpzjz7OMpjuX9HO9J3tdfkTIz09TH/
hFTG4dDJqSzDoVMcMea0VL5gz0mpjGPcuFSuUT/VYxl3dirfeY/OTGUZFp7l
SN/pqTzF0fHOTf0cz8Ot81JZg0OXpTqrGHNhKkdw6+JUBuHNib4O9nRBKuMY
d75zUL/I85hziedxji93bqw63veY+3KF23g253pf7OlSz2NPear3nXf0Gt9j
THop1XnjTExIZRkO3ZDKF1y5PZVZ+HFdKuMYd4fbOHPXOh99N3oeVt2ayjLO
2U1uw9Hb3Ebe670m693pfBjzUKrvAa487Igl96ZyBLfuSWUZ9TLV+eM3wt2p
/KLv8VR+4c1dzk3ffc6BYY84N/7dksp39v1gKk/Zx/0ei20PONL3Yiq/uI83
+/qY/4TXxKFnUlmGQ8+l8gVXXk1lB3t/OpVxjHvNbVUoT6Uyjr7nPQ+rXvZz
49m+4Db28YrbyPus12S9150PYz5IdT5x5UNHLHk7lSO49VYqy4Z7HvcVm95M
5Rd9T/r62N8bzk3fO86BYROdG/8eC2UvP4/3U51z9vGux2Lbe470feR5GPlJ
Ktewh/+9SP73a/nfrv0ilWU49FUqX3Dlx1R2cOY+T2Uc435yGzZ8lso4+r72
PKz6PpVlnLNv3IajP7iNvF96Tdb7LpWtzPnZuXHo31Sm4M2vqfzCrd9TeYRb
v7mNeiPTGcaVf1LZxPxfnI/5f6byCJ/+c25M+jvV737m/OV+6n94HeZ86+tg
r32Z5rFeM9OaODRJJoNwa9JMBmHJwExG40cnk3GMmyZTGwa0M7lG32SZ5uHi
VJm+H3xbJs/UhmdTZ2oj74BMa7LetJny4c1smRzBjNkzRUyaMZNTeDNDJkeo
z5nJJiyZPpNr9LUyXR/7my5TbvpmypQDn+bIlJv5z4Q/7xfK/qHMmskF9jFz
prGc9VkyRfrmyrQmxsyTySB8Wj/TGeMczJfJL+yZP1PElQUzmYI382aax7jF
MjnCOVsg01jGDcnkGn2LhD8/mupsLZop0jc4k6HYOShTbuqLZ8qHK0tkitiz
YiZT8GOpTGbhxzKZzMKepTO1UV81kymc+yUz5WDOspnGYtJymSJGrpQpN+Yt
lGlfuLtypjbMWz7TWL5LK2SK7GnKTN853qFVMo1l7bkz3W/u9ZqZ/MKetTJF
XFknkyl4s0Ym1xi3cSZTPg1l7UxjGbdRpv8OFX0bZHpuOLRhpkjfepkM5bmu
myk39U0y5cOVTTNF7Nkukyn4sXkms/Bjy0xmYc8Wmdqor57JWfa6WaYczNkq
01hM2jpT5Exvnyk35q2W6Zkwf4dMbZi3TaaxWLVtpsiepsh0Frm/O2Yai2E7
ZYrYs3smR7Bnz0y+4A3nAzs4W7tlco1x+7sND3bNZBx9e2Wah21DMxmEeXtn
asPLYW4j7x6Z1mS9rvNhT5XJFPzoOeJTmsks7EkymUL91EzvPe97nMk4+k7J
dMboi5ybvsw5sKp2bpzbN5O57LvM9F6yj9xjuZeFI32neU3Oxz6Zro/5wzMZ
h0MjM1mGQ6McMWZ0Jl+w58BMxjFuRCbXqB/ksYw7PJNBnIlDM1mGhYc50ndI
Jk9x9GDnpn6E5+HWUZkMwqpxmXzBlWMyGYRVx2UyBWMO8HWwp7GZXGPc0c5B
/VjPY87xnocBJzk3nvX7HnNfTnYbz+ZI74s9nRjKwt7Ts5neM96L8b7HuHV3
pvPAu39mJr8w6exMHmHMRZn84qyckck1xl3sNs7f6c5H3zmeh0kXZDILh851
G3Ze6DbynuU1We8S58OeazOZgiXXOeLNFZkMwqrLM/lFfedM54/fDpdlMo6+
GzJZgzGXOjd9VzoHJk1wbpw7P5O/7PuaTN8k9nGVx+LZ1Y703ZXJLO7jeb4+
5t/oNTHp1kx+YdLtmTzCmPsy2cHeb8nkGuPud9suodycyUH67vA8TLrHzw2H
7nQb+7jXbeS9zWuy3gPOhzFPZjqfuPKUI5Y8kskR3Ho4k2V7eB73FZseyuQX
fTf5+tjfg85N36POgWFPOzf+Xe97zPN4ItM5Zx+PeSy2Pe5I35hM54/z+Vym
9xd7ojz4E8okobyYyS88e8kRk17JZA3GvJDJMsa9nckUzuLLHsu4tzKdK/re
yGQlnr3pSN9rmSzD1Fedm/rrbmPOO86NPZ9m8gVXvsx0PjHj/UyWYdiHmWzC
sPcy+UXfu85BfaL7cejjTDZxbz5zbjz73BGfPnE/a3/kecz5wv3s4yvvBXsG
5DrPnL9vM/mFQ985YtiPoZyQyZVvMvnFuD8y2Y0r33ssbv2e6VtC36+ZnOIb
8psjfT9nchPbfnJu6n86H6785Yg97Vym4Mc/mczCj/8ymYU9/7qN+te+Pvb6
t3Mwpy/XWExq5IqcXd4pcmPeB34+PBveM9q4R81cY3GilSuyp7VzPTOe4aS5
7iXeTJ7LI6yaIlfEsClzRRyaKlfEmKlzRYwZmCvi0DS5Ii5Omyvi4nS5IoZN
nytyzmbIFfFvxlwRk2bKFTm7M+eKGDNLrohDC+bygjM9Wy6/sGSOXH7h0Ky5
xtI3Z642HJorV8TFuXNFvjPz5jILnxbIZRxrzJerDQvnyTWWcfPnamPcL35H
eIcG5doXDq2Y6wxz1hfKZRaGLZwr4tAiuSLGLJorYsyQXBGHFssVcXHxXBEX
l8gVMWzJXJF/1lkqV+S7unSuiE/L5IrPh7Jsrog9y+WKWDU4197Z6wq5zOIa
Vsp1HbiyvF2jb+VcbdizSq6IN6vmili1ei6nMGyyXO8d79waudowb7VcYxm3
Zq42rForV+TdXSfX+4tPx5ThOYWyYCjr53IKhzbIFXFlo1we4c16uc4M47bM
5Qvnb8NcYxm3RS4H6dssl1mYtHmuSN8mudzEto1z5aa+Va582LN1rohVu+Yy
BW+2zWUWDu2Qyyxc2T78+YdM9T1zmYIH2+TKwZwdc43FpJ1yRd673XLlxrlN
c+2Lfe+eqw2rds41Fud2yRXZ07q57iX3ZY9cY1n7oFxnjzO3by6/MGlorohJ
++WyBmP2yeUa47JczxhXhnks49Jc7tAX+9uI64kjfd1chuLc/s5NPXc+fCoc
8enAXI7gR5XLKXyqc9mEST23Ud87l8vstXQO5vR7LG4Nd8Stkc6NSXvleibM
H+U27tEBHottIxxn8NnitwDf9dG+l5h0aa73nnf80Fxm4dNhjvh0RC6b8GZM
KLN73HG5fOGMHu6xjDs2l4n0jc1lE4Yd40jfUbmMw7MjnZv68c6HTyc44tPp
uRzBj3G5nMKnk3PZhEknuY362bkcwYYTnYM5p3gsbp3qiFtnODcmHe19se8z
3YZPp3ksto13ZE+H5HKf+3KWx7L2wb7H9J2fyyx8usARny7KZRPenJfLaMZd
mcsXzsSFHsu4K3J9O+m7zM8Nky53pO+SXMbxXC92bupXOR/2XO2IVTfnMgVv
rs1lFg5NyGUWrlznNurn5rKYvV7jHMy53mMx6QZHDLjFuXHuHD8T5t/qNqy6
0WNx7iZH9nSb+zHsdkccusMRw+7J5Rcm3euISffnsgZj7s7lGuMey3V+OH/3
eSzjHs3lHX0P5zILhx5xpO/BXIbi3APOTf0htzHncefGoRdzmYI3r+bygrP+
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
G1gpH/bMWskU/JitUsSnGSqZhT3TVzKF+kqV3nve9+nCn68r1bdipTNG3zSV
cuPfjJVyYNXslXLj3OSVzGXfs1R6L9nHTJXGci9nrhTpW7nSmpyPySpdH/Pn
rGQcDs1byTIcmq9SxJgFKvmCPfNUMo5xc1dyjfr8lcYybpFKBnEmFqpkGRYu
XCnSN6iSpzi6oF2jvmilebi1WCWDsGq5Sr7gypKVDMKqpSuZgjFzVboO9rRE
JdcYt3ilHNSXqjSPOctUmocBy1fKjWdzVLrH3JcVKrXxbIZU2hd7WrbSPPbU
s828F6tUuse4tVel88C7v3olvzBpzUoeYcwGlfzirKxWyTXGbVipjfO3aqV8
9K1VaR4mrVfJLBxau1Ibdq5fqY28a1Rak/U2qpQPe7auZAqWbFMp4s1mlQzC
qk0r+UW9r9L547fDJpWMo2/7StZgzMaVctO3eaUcmLRtpdw4t24lf9n3VpW+
Sexji0pj8WzLSpG+PSuZxX1cp9L1MX+HSmti0i6V/MKk3Sp5hDH7VrKDve9c
yTXGDa3U1ghlp0oO0rd7pXmYtHel54ZDe1RqYx/7VGoj766V1mS9Yc6HMXml
84krhSOWRJUcwa1uJcs6nsd9xab9K/lF346Vro/97efc9MXOgWGlc+PfdpXu
Mc8jq3TO2UfisdiWOtJX+53Fm+GhTFvJpGl6wZ8Qrw1lRCW/8OxAR0waVcka
jDnA8xh3WCVTOIsjPZZxh1Y6V/QdUslKPBvjSN/oSpZh6kHOTf1w58ObIxxx
6IRKvuDKUZX8wq2xlTzCraPdRv3kSmcYV450DuYc47E4dKwjPp3o3Hh2sPfF
vse5DauO89jBoRzvyJ6+8F5Z5ySPZe3rKp1tzuL4SpZh0umOeHZmJZsw5rRK
ljHugkqOY8wZHsu48yt9V+g7t5JZfE/Oc6Tv7EqG4txZzk39QufDmIsccejq
Sr5gySWV/MKSyyr5hUOXuo36qZWcZa8XOwdzLvdYfLrCkXN8jXPj3yl+Jsy/
1m3coys9FjOucmRP5/g6uM4JvpfY82ql88aZuKmSZTh0syPG3FrJF+y5sZJx
jLunkimcuVs8lnF3VzKOvjsrWcY5u8uRvtsreYqjtzk39XudD2Puc8Shxyv5
giUPVPILSx6q5BcOPeg26k9X8gUD7ncO5jzssfj0iCNePuHc+HeH98W+n3Qb
/j3qsXyjHnNkTzdU8p378pTHsvb1vsf0PV/JMhx6wRFjXqrkC/Y8V8k4xr0V
Sn8lY170WMa9UenbiUOv+bnxzzqvO9L3SiVPea4vOzf1t50Pe95xxKpPKpmC
N+9VMguHPqhkFq687zbqz1Yyl72+6xzM+dBjMWmiIwZ86tw494yfCfM/cxtW
feSxOPexI3vCBn7v8Hvoc4/FCH7f83cJ/D3CN5X8wqRvHTHp+0rWYMzXlVxj
3G+Vzg/n7zuPZdyvlbyj7+dKZuHQL470/VjJUJz7wbmp/+582POHI1Y1ezIF
b/6qZBYO/VPJLFz5223UJ+nJFDz40zmY86/HYtJ/jpzpVk+5ce4n74t9t3tq
w6q+nsbiXKOnyJ6+qvQN4L50ehrL2vP1dA45f5P35BcmTdFTxKSperIGYybr
yTXGzdDTe8+ZmLKnsYybvid36Ju2J7NwfbqeIn0DezIU56buKTf1GXvKhz0z
9RSxau6eTMGbWXoyC4dm68ksXJm1pzbqk/bkMnuduacczJm9p7GYNEdPEQPm
6Sk3zg3o6Zkwf96e2rhHc/Y0Fufm6imypy8rfce4v/P3dC9xaJOezgPv/uCe
/MKkhXqKmLRIT9ZgzKCeXGPcUj2dH87fwj2NZdySPXlH3+I9mYVDS/QU6RvS
k6E4t2hPuakv3VM+7Fmmp4hVq/ZkCt4s15NZOLRCT2bhyvI9tVFfqydT8GDZ
nnIwZ8WexmLSSj1Fvjmrhz+/Wcm5xXraF/teo6c2rFq5p7E4t0pPkT0t2NM3
gPuyZk9jWXuBnu4xfev15Bcmrd9TxKQNe7IGY9btyTXGbdHTM+NMbNDTWMZt
3tPvEvo27em54dBmPUX6Nu7JUJ7rRj3lpr5lT/mwZ6ueIlbt3JMpeLNNT2bh
0HY9mYUr2/bURn2dnlxmr1v3lIM52/c0FpN26CliwC495ca5tXt6Jszftac2
rNqxp7E4t1NPkT1tOzisOyisG8puPY3Fsz168gjD9u7JL0zap6eISUN7sgZj
9urJNcYlPZ0fzt++PY1lXNyTd/R1ezILhyJH+vbryVCcG+bc1Pd3G3NS58ah
A3oyBW9G9eQFZ73oyS9MqnryC2PynoyjL3MO6j33Y1J/T7/vcWuEc+PcgY74
NNz9rF17HnNGup99HOS9YNUZPZ09ztwhPZmFQ2McceiwnnzBlYN7soxxx/T0
rnMODvVYxo3tyRr6jurJKSw/2pG+I3pyE9sOd27qxzof3hzniE+n9eQIxpzQ
k1PYM64np7DkRLdRH+3rY6/HOwdzTvJYHDrZkXM/3rmxrfTz4dmc7jbu0Ske
i22nOrKn9etwrkOcGMqZvpfYc3ZPZuHTOY64da4jJp3niEnnO+LNBY54c6Ej
Fl4cymo9uXWJI1Zd6ohDlzli4eWOnL8rHDnHVzpiz1WOWHVbT0Zwvq/pySwc
uq4ns3Dlao+lb4LbsOd6R74tNzhi1U09OYVht/bkEWvc7DbMu9FjGXeL2xh3
ZE/vCO/Q7d4XVj3Z0xnmrN/Zk1O4dZcjJt3tiEn3OOLNvY54c58jFt7viFsP
OGLVg4449JDj7qE87IhJjzjuGcqjjtjzmCNW3eG9s9cnejKLa3jK14Erj3ss
fU+7DXueccSbZx2x6vmenMKws3p67/7/nXQb5j3nsYx70W1Y9ZIj3rzsiEOv
OGLV6z05hUNvOOLKWz15hDev9XRmGMc5wBfO35sey7gPenKQvvd6MguT3nek
752e3MS2t52b+kTnw56PHLHq655MwZtPejILhz7rySxc+dRt1KesdQZ49z92
DuZ87rGY9IUj7903zo1z73pf7Ptbt2HVlx6Lc185sqepaq3D2frOY/Hsh548
wrCfejILw352xKdfHPHpV0fs+c0Re353xMU/HDHsT0fc+ssR4/92xKd/HHlf
fvRe2Me/bsOtvlpmYVWzllP41KoV8WmS8OeLejKpUWss49q1+nFrQK1+rPrP
uck7WS2zsOp73xvuy+S12nBr0lrzGDdFrTae37U9mYRHU9e6x5i0bK3zwLs/
ba1xuDVdrYhVM9RyCp+mqWUc42avZR/GTF9rLONmq2UWfbPUMgufZq0V6Zup
ll84N2Ot3NTnqJWPcz9nrYhVg2qZgiVz1zILq+at5RQ+zVOrjfoitUzBkrlq
5WDOfLXGYtj8tSKGDa6VG59mrrUv9r1QrTasWqDWWJxbsFZkTwNr3Uvuy8K1
xrL2qz15wDlfvJa/uLVErYhVS9VyCp8Wq2Uc41as5QuuLFlrLONWqGUQfcvV
em74tHytSN8ytfziuS5dKzf1lWrlY18r14o4tE4tX3Bl1Vp+4dbqtTzCrdVq
tVEfUstc9rpKrRzMWaPWWBxas1bEp3Vr5cazRWs9E+avV6sN/9aqNRYz1q4V
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
R1Pf/AlNncPT3PZ7U6a0w7xWS5797jUw6G/nwrBmS2uc4P3+0JRlrP9vU279
4zlnuY06jnD/pmrJ6x98nRjUaWltDJosxElbMmUKfn+3tNfpQpy2Jc/oH9DS
dUzfUh/G0TZJSwZN2dJ83JmmpeeHT6xPHwaRjz68Yx3WxpQZWsrLuZwzxDla
smOulur4MUuIM7fkCHGmln5vXe/7i1u0zdiSteyL68Qt2lgDs2ZtKRc+8buA
NbCe58C95nyz/uwtWTZbS3M487RRx6/5Qpy3JW8WCHH+UHYK5T76W3JncIiD
WnJk4RAXaumMLRniEi3ZRv+CLZ2/pVrqwzbayItDi7Q0n3O1eIiLteTWoi31
cebIRx9+sQ5rY8zSLeXFjlVCXLklS1ZtqY49y4e4XEsGEZdtyVCuievEMtqW
aekcrxHi6i15RhtrYNAKLeXCoNVaWgNz2e+Qlixj/ZVacmvFlubgGW3UOQO7
hrhLS98D5nGdGLRmS2vj0LohrtOSI+uHuF5LdmwW4qYtOUX/2i2d/81b6sM2
2tZqyaENWprPN2QT3qmWLNuwpT7cJx99eMc6rI0rW7SUFy92DHGHlvzgPaCO
NduEuHVLlhC3askRrm/nlnyhbcuWrGVfXCee0cYa2LRtS7lwbWe/a3jKc+Be
YwPrb9/SOd+upTmce9qo4zHXt1FLDu0e4m4tnYMjQjm8JUf2CnHPlizZJ8S9
WzpLUSjdlmyif4+WzlnsPsyjjbz4tG9L8zlb+4eyX0tWDm2pr+189GEW67A2
riTOixf9odQt+THcdawpQslbsoSYtfR3WnxPVrRttKUtnf8DQxnRkmep18Cm
0rlw7QCv0fR+h7VkGev3WvKs8pyp3UZ9Lt+/w1ryepivE3tGem0cOTiU0S1Z
MiaUQ1o6Z2NDObolm+g/qKXzf4z7ZnbbqJZ8OtTzMeioUI5sycrD3Def89E3
m9dhbVw51nnx4tRQTmnJj9Ncx5oTQzmhJUuIx7f0jeJ94XwOdttxLbk7ytc5
yG2sgU3jnAvXxnuN6f0cuNeLef2TWzrnJ3nOELdR33RA8D2UGwbo9wTvL+cT
d84I5fSWHDk3lHNasuT8UM5r6Szx90qXtmQT/We3dM4ud99ybjurJZ8u8HzO
1iWhXNySlRe6bw3no29Fr8PauHKF8+LFDaFc35IfN7qONdeEcnVLlhCvauld
fyGU51vyhbYrWzpXtD3XkmdXeg1suta5cO0mr7Ga93tRS2ed9Sf4fl3nORu5
jTpn4EWvvarncZ24c0soN7fkzh2h3N6SKXe6jit3h3JXS7bRf1tLnhFvbcmd
uzyH9+bBUB5oybD7W/pe7uI26rjJ9/Oeljy7x2vw3j3k+RjzSCgPt3RGnwnl
6Zb8eDyUx1ry5clQnmjJ0Vt9PXu5/9GWDHvUufbxWOZzbp/yfGx61mts7vvB
ve76mdC3u/fC/oZ5L8znu8u7yXuPNy/5XnMG/gjl95bceTWUV1py5PVQXmvJ
i/dCebcl2+h/uaUz9r77MreRF4fe8HzO1TuhvN2SW2+6b4Tz0Vd6Hdbm7H7g
vDjyZShftGTHV67jx8ehfNSSI8SJLX3/z2zpHI5224ct+fJtKN+05NaHXgOz
PnEufPraawz3ft9qydHPQ/msJcs+9ZzD3Eb9VN+/31r6Hrzl68Sd77w27vwU
yo8tOfJLKD97r3+H8ldLttH/g6/jH/cd77bvW3LoV8/nWf7p53eK1//Vz/kv
943zOqyNKf86L+dyQDt8M9uyY9K26vjRDLHRliNE/gXUZT2ffeEWbf+15Ov3
vk7c+s9rYFarrVz4xN+js8ZYPwfuNeeb9TttWdZuaw5nnjbq/N0Zv9X4XYZl
U7T19/IzTRLelVBGTiI7pgtt07Z1rmYNcZa2ztlsbdWxaZoQB7blwext9WEe
bVO35RE5GIdVM4Q4fVvnjHwzt2UVbayHi8ybqq1zSP9MbdmxQIjzt2XEoBAX
bMueuUOcqy2DiHOGcmIoP4XyY1uW0TZHWw4xj1yc6YVCHNyWQfO0lQuzWGe+
tqwiztuWVUTGYSH5uGZcZo8ztvUNIHKdeEFu9ooXS4S4eFtGLB/icm2d7RXa
quPTYiEOaevcr9hWH2bRtmhbZpGDcZi1VIhLtuU7+ZZtyyfaWA8LmbdIWy6s
FeKabTmxdlt1rFmnrTpmrBLiym15sW5bfRi6cFv3C4NWbWscvjB2pbasZR3G
4RltXAPnnjXXaMuI9drKy5mmbfW2/Fqtrbycc9qo480GIa7vdz0NJWnr3c9c
x46NQ9yoLT82DXGTts7PtiFu05ZH9G/Y1tnarq0+nKONNTBx8xA3a+s8bR3i
Vm35uEVbfbhDPvpwinVYG0u2bysvRuwR4u5tmbFnW3V82TnEndryg7hjKOOo
+33FFNp2aOvM7xPi3m0ZRhtr4NEubeXCsr3aWoPzz363bMsv1t+tLcN2bWsO
ptJGnd8dvC/LtGU087hOvNm3rbWxY/9Q9mvLjyiUbihThlKGUrTlEf3D2jq3
lfsabhvalkmx52NN7uc3wM+Tvimcj76212FtPOg5Lx4cFMqotvwY7Tp2HBDK
8La8Ifa39V3i3eGdm8ZtdVvWsi+uc6DbWAOHRjgXxh3sNfCd58C9nsnrj2zr
nB/oOTO6jTq/HbivS7f1G4LIWcXHQ5wXV44O5ai2zgxmndDWGRrnOtYcGcoR
bZ3jk9w3t9sOb8ukozwO144JZWxbZ5V8x7fl2VivN5fnHdbW8z8rlDPb8uNs
1/HoHNfx5tRQTmnr/b4rlDvbehfvdh1rTvO4xTz25LbOGGPvaMuwk30Ny3jN
M9oykj0e5/tF2+ltGTbeeZdyG3XOwT1ee5DnHduWled639hxcSgXtWXMpaFc
0pZVF4RyflvW0H9hW+/INaFc3ZZrF3ocbl3m+Zh1VShXtuXm5e5bz/PoW93r
sDauXBfKtW2dy9tCubUtO253HVNuDuWmtrxkX+e15eZ5vh6MuSGU69uyhjih
Lc8meI3NnOPGtny6w2ss6HvDO7Gl17+lrXN+i9fewHu8xs/ml7Y84lx9GMoH
bb2vH4UysS07HgzlgbaMeCKUx9s6S0+6jk33h3JfW+fsKfft5LZ72/LoAY/D
qodDeaitc0a+x9qy6iGvt6Pn8eyx4+VQXmrLi1dcx49XXceOZ0N5pq1v9aGh
jGnrm03kHGLMcx63n8c+3ZY1r4fyWluGPe1rSL3mi21ZwB4fbcsw2l5oy7jn
nTd2G/XRvn/c0z0975G2rHzN+8aO90J513v8JJSPvfdPXcemd0J5u60z/Jn7
hrvtrbY8etfjRvkZvu9r/tjPcqTbWK/f895s6zx9H8p3bZ3LH1zHkh9dx5ov
Q/mird9Wh3mPGPqG7x0mfeVxR3js521Z+6bHHe42ruFYr/ltW99L7g3vxDFu
+6Ytv7523rFuo85vFM7lFW0Z82tb7/FinWBRKCd35MgfofzeliV/hfJnW+es
GfobHflF/29tncVWR32nuI28+PS352MN/yWz/9ry7B/3cW7JR994r8PaeMrY
f9vypd3RGtgxdYhTdWTSJCF2OrJk0hAHdGQKkT7O67QhTtPRdTNvyo7cYh55
sWnyECfryKeBHa3BPWLsFB0ZRmQcxjGW9c7yHrkeXGAd5mPNdB2tjTczhzhT
R5bMGuIsHbk8T4hzd+QR/TN2dG7n7agPw2YIcfqOTJqto/l8K+YKcc6OfJy9
oz6+MeSjD7NYh7XxYL6O8nIWFw1xkY78GNJRHTsGhbhgR94QF+jIo8U7ekcw
iLb5OzKVfXGdWEUba+DQ4I5yPeF3a4jvdTeU/Ts606y/cEfv7kIdzeFdpo06
jizR0dp4s1SIS3Z0rrYPcbuO7FgmxKU7smPZjuoYs3yIy3VkFv3M5yytFuKq
HXlDP3M4h7St0pEvK4e4Ukfe0EYdN1cMcYWObCOyBmd09Y7yYsMaHdWxY8MQ
N+jIl7VCXLMjR9YJce2O7CHSx9neNMRNOvKJseTCnnU7moNP63VUx6eNOloD
x9kv+8O+jTvqw9D1O5qDqeyFOt893p05OjKRNZmD39xj7jt2bBniFh3ZsVVH
dYzZJsStOzKL/s07cmTnEHfqyBv6mcM3krYdO3Jxh46eH7/jaaOOmzzPbTuy
jcgaOLJLR3lxZdeO6ngxNJR9O/Ji9xB368iaPUPcoyNLiPRhKnvcrCO3GEsu
DNqrozmc4b07qmPSMK+Bu8zj2WDcfu7j3O/T0RysYi/U+T3BfeVMYtb+noM3
UUdnAD+yUNKOXClCyTs6SweEMrwjX+hPOjpnI9w3wG1xRz6Vno89/aHUHTlX
uW9a56Nvcq/D2lgzMpQDO/Li8FAO68iPI1zHmoNDGd2RJcSDOrI19vXM7LZR
HZ3/o0M5qiPPRnkNbDrEuXDtSK8x0PvtdfQ+sv6hvndjPGcOt1HnPFwayiUd
Gd3zdWLPWK+NI8eHclxHlpwYygkdvdfjQzmtI5voP7YjF05334JuO6Yjn8Z5
Pgad2tE3EitPct8SzkffQl6HtfHmDOfFjwtDuaAjYy5yHTvOCeXsjhwintWR
HVzfxR3ZRNuZHbl7jK9zGbexBg6d61yreR5rzOvnwL1e2euf35ER53nOSm6j
jtEn+9rw6PJQLuvo3X0mlKc7cueqUK7syJFrQrm6o/NxUyg3duQU/Vd0dOZu
dt/abiMvDl3r+dhzQyjXd2TZde7b1PnoW8/rsDbe3OK8+HFvKPd0ZMx9rmPH
HaHc3pFDxNs6+s8M+GfyKewZbbd2ZMGDoTzQkXG3eg0cutO5MOh+r7Gx9zuh
I79Y/+6ODLvLc7Z3G/Vhvn9PdeTyBF8nDj3ktXHnsVAe7ciRJ0J5vKMz9nwo
z3XkFP2PdHT+XnDfHm57uCOHnvR87HnWz2+o16ev63z07e11WBtXXnRevHgr
lDc78uNt17Hm1VBe6cgS4ssdfa94Xzifmdte6sjfh32dqdtYA5tecy5ce8dr
7OLnwL2uvf4bHZ3z1z2n5zbq/H0cv9X4jYZl74XybkfuvO86jnwcykcdWfJp
KJ90dJa+CeXrjmyif2JH5+xb941224cd+fSZ53O2vgrly46s/Nx9RzsffWO8
Dmsf6bFfdGTMd14DP/4I5feO7PghlO87cuenUH7syJUf3ceZ/zuUv/5H03nH
cTl2f/xR+u69KokyEkmUSEKJkpEIhUqRpCUVLWkoGiqSyt5777333nvvvff+
nffr8/n9cV7HOec+51zXdV/nfX/F42km7pD3WzPx7HvXZYZ/Cfm5mbj2p3us
8LO/NtOs/+rnlvtZ+s33GtnPKvchH978496wYy3+gxAJ8aNp6CYJvf9M6HRC
PCL+XzPNfDahGJzD928zMWnthPJhXip0MiE+Nksoxn2iHjE4RR96w5JcQnVh
RD10LSFm8Gf02PClFLqYED/QhYTY0SJ084SYgi+fEGv/9T5hGD56wKNyQrVg
GXn0ODTksZBHE+IB/asJzXYloRxmHR82TGmZUG/Y0yr0Ognd+56hd0qINa1D
r5sQR9ZLyIYlbUKvnxDPiJPPXG0Sul1CrCFODkzBt3FCs7RR6A0Tmi182LBy
g9BtE2IYmh7Ma/uE6sKVTROy4UXn0FslxIsOoTdLiDUdQ2+eEEvQxJjzbUJ3
TYhbPEstGLRFQjkwqVNCNkzqklAPOMt6WR+M2zqhGBzdMqEcuMZasPnucXcS
CfGLnuTAcs6Yc4c13UNvlxBHtk/IhiU7hO6REM+Idwt5P/5619C7JMQa4uTA
FXy9E2LNzqF7JcQafNiwkve5Y0IMQ9MDjvRJqC5c6ZuQDS8GhN47IV70C71b
QqzZI/TuCbEETQy+ssZtE+IWz1ILBu2ZUA4zvFdCNkzaJ6EeMJg83g2M2zeh
GHPfP6EcWMVasPk9wbkykzBrYEI5sGa/hGz4cWDowQlx5eDQByU0S8zJiIT4
QnxQQnN2WEIx2IbvgIT4NCShfNgzPPQhCXFuaEIxGEQ9YvCLPvSGKyMTqgsv
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
dT32PMhrvCupb8Bd3udo12at8OLVkFeSYsQ7IW8nNdvv2oZPL4e8lNTcv+fY
BPteTIpZr/g5mPV6yGtJ8Z16byXFp9fcb7zzXkiKC5+HfJYUJ76wDWu+tA0z
Pgz5IClefOUYDH3O5wWDPvJzx/nZ95Ni7fN+bqZ97GGee36aFCO+dt259n2S
FL8+dt059mHDm29DvknqrlfjfVZSuq+1lGzY8UPI90nx46eQH5Oanz9D/kiK
R8S/S2q2/nJssX30gEk/O595+j3kt6T4+ItjK12P2FL3oTcs+dt1YUSzWNfa
KTEjkZINX/iPNP+XFD/Q/4ZsQ+z/76t9/yQ18+nwpVJi2D/uAY/WSqkWLEum
1GOF1/trUvyif9OUGNYkpRyYig/7WN+XN5Ni9K/eJ7zJpNQbdhRC51PiRyl0
MeTG+OvmoRsp8Yh4LqW5bZFSDM7hy6bEpHJK+fCmntL7g4+8T2L876uoRwxO
0Yfe8KBlSnXhwQah26bEjw1TsmFH69DrpsQbdKuUvkvf+M7BIHzrpMRa1sU+
YRU+esCh9VKqBeM2SqkHfOc9cNbMOv3bpDTn66eUw9zjwz7G5/pGUr8h0Mwq
fNw4pbpwpWPozVOama1Dd0lpVrkTMAzWdAi9WUpzvG1KMTiFb9OUmEQNnoNr
nUJvkdKsUq9zSjzDRz8YSV77lN5/z9A7pcSPXinZ8GjnlGx40z30dind7+Gh
D0npLo5IyYY126f0HGzi2W4pzRjPDkuJYfjYA2dDzx1TYiRr3Cqlc8K3Q0oM
65FSXc4OHzZzcGhKvWEreVumxMreKa0bdvQLvVtKjNkj9O4psapP6F1TYg3x
vindkX1D75MS1/DxHNzaM6V8mDUg9N4pcXOvlGLcLfKIwS360Buu7Bd6YEpz
OST0wSmxY2hKNkw5MPTglHjJunZJiZto9gNjBoU+ICXWoPdPiWdoesAsavAc
fOK86cG3jrPhTjDf9D8opTlH0xv2scZ9/W7OTolHzNVJISf6vi4KWZgSO44I
GZUSIyaEjE9plo6yDZsODxmZ0pxNdAzm4TssJR6N8nOw6siQ0SnNGfXGpcSq
0e4HF8nj3cOO6SHTUuLFDNvwY6Zt2DE5ZFJK3+pNQrdL6ZuNZg5hzBQ/l/ez
R6fEmlkhx6XEsKO9h6p7Tk2JBaxxbEoMw3dsSow7xnXL9mFv6PPjTBPOG5MS
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
+u+TFcsGZJXDzOPD3sus5d9lg2WDs/pz+cPycVdCHsuLHYeEb1hWczUq5PCs
5uwI27BpaOghWfFgtGMwD9/BWfGIGjwHq0aEHp7VnFFvZFaswkc/uEjeQVnN
IfHDsmLH0SETs2LE5JBJWbFnXMjYrBiEHsM74i7k4h3lxDJ8R2bFoUmuxUwf
EzIlKwaNd62s+xyVFavQE7Ji1QQ/t7brsWe4zBoPzeobgGafRddmrfDiuJCZ
WTHihJB5Wc32fNvwaUbI9KzmfoFjNfumZcWsmX4OZh0fMisrvlNvblZ8muV+
VedNzYoLy0KWZsWJ5bZhzSm2YcbCkJOy4sWpjsHQY31eMGiRn9vAz56YFWun
+rm29rGH9u55claMWOG6m9i3JCt+LXbddvZhw5uVIadlddfvDLkjq7t/l23Y
sTpkVVb8OCNkTVbzc37IeVnxiPjpWc3WBY5taR89YNKZzmeezg05Jys+nuVY
d9cj1sV96A1LLnRdGHFVyJVZMeNq2/Dl0pBLsuIH+uKQt4nlfF/tuyirmb8u
5NqsGHaRe8Cjy1wLll3jHt283rOz4hf9r8iKYZc7Zxf7sPndwX2ZkxWjz/Y+
4c317g07bg65KSt+3BpyS8iBIfeG3JMVj4jfmNXc3ufYXvbdkBWTbnM+rLnb
7w8+3u7YYNcjNsB96A0P7nddePBEyONZ8eNJ27Dj4ZCHsuIN+sGsvkvcHe7c
UPseyIq1N3ifQ+yjBxx6xLVg3FPu0c/vgbM+zP0fy2rOH3XOofZht/K5zs7q
NwSaWYWPT7suXHk55KWsZgZmvZnVDL1tG9a8GPJCVnP8jmPj7Hs+Kya95Ofg
2qshr2Q1q9R7IyueveJ+Y533nN//pyGfZMWPz2zDo89tw5v3Q97L6n4nYGpO
dzGZkw1rPvBzM/zsu1nNGM+unRPD3vUe5rjnx1kxkjW+7nPC91FWDPvQdY+3
D5s5SOXUe7LzXsuKlV943bDju5Bvs2LMDyHfZ8Wqr0O+yoo1xL/J6o78HvJb
Vlz7xs/BrR+dD7N+DfklK27+5NgK5xFb4j70hit/hvyR1Vw2ifWulRM7muZk
w5T/Qv7Nipes68usuPml9wNj/gn5OyvWoP/Kimd/uccZrsFz8Inzpscknw13
gvmm//9ymnM0vVd6jb/73eycE4+Yqy1Cd8zpvm4ZulNO7MiHzuXEiFroak6z
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
WR2yqihWrQg5tSjWED+tqDtybsg5RXHtND8Ht9Y4H2adHXJWUdw8w7FuziO2
lfvQG66cH3JeUXN5RcjlRbHjStsw5dKQS4riJes6pShunuL9wJiLQy4qijXo
C4viHfqCoph1iZ/r4/OmRwufDXeit/tfVtScX+be3b3Gc/1uPi+KR8zVyyEv
FXVfXw15pSh23BxyU1GMuCvkzqJm6W7bsOnGkBuKmrN7HNvTvuuL4tFNfg5W
3RpyS1FzRr07imLVLe63h/N497Dj0ZBHiuLFY7bhx+O2Ycf9IfcV9a2eEjK5
qG82mjmEMQ/4uYP87L1FsebJkCeKYti93sNw93y4KBawxtuLYhi+h4pi3IOu
O8w+7Ik+P850oPNuK4qVT3jdsOOFkOe9xtdDXvPa37ANm54LebaoGX7TsSPt
e6YoHj3v5yb4Hb7oPb/mdznePvqNdt7TRc3TRyEfFjWXH9uGJZ/YhjXvhLxd
1G+rY7xGGPqUzw4mvevnpvrZt4pi7dN+7lj72MMs9/ygqO8lZ8OdOM6+94vi
13uuO9M+bH6jMJdnFsWYL4q6x21KwaKQ+SVx5OuQr4piybch3xQ1Z7+E/FwU
v4h/WdQs/urYAvuoC5++cz6s+Snkx6J49r1jy12P2EL3ofdSP/tDUXz5zT1g
x1qxxv+VxKQ/Qn4viiV/hfxZFFP+dIx5XTuebVrSvsn7ryhu/e66sOmfkL+L
4lOTknpwRjz7b1EM+9fPrfaz9DvZa2Q/cIE+5MOaROhmJfEmEzpdEktyobMl
cbkaulISj4inSprbWkkxGIYvWRKT8iXl860ohy6VxMdCSTG+MdQjBrPoQ294
UC+pLrO4XujWJfFj/ZJs2NEydIuSeINuXhKP2pZ0R2AQvkZJTGVd7BNW4aMH
HFqnpFp3+W7Rg7MeEvrgkmaa/uuWdHdblZTDXcaHDUc2KKk3vNko9IYlzVW/
0LuVxI52oTcuiR2blGTDmE1Dty+JWcTJZ5a2DN2pJN4QJ4c5xLdFSXzpGHrz
kniDDxtudgi9WUlsQ9ODGd2qpLqwoXNJNuzYPnT3kviydeguJXFkm9BdS2IP
mhizvVPoHUviE89SC/ZsW1IOfOpWkg2fepTUA46zXtYH+3YoKQZDtyspB6ay
Fmy+e9ydYklMpCc58Jsz5txhR+/QO5fEjl1KsmFMn9C7lsQs4r1K4sheofcs
iTfEyeEbiW+Pkri4e0nvj9/x+LDhJu+zb0lsQ9MDjvQvqS5c2bskG14MDj2o
JF7sE3pASawZGHrfkliCJgZTWWPPkrjFs9SCQfuVlMMM71+SDZMOLKkH3CWP
dwPjDiopxtwfUFIOrGIt2Pye4FyZSZjFfScH3gwtaQbgx4jQw0viymGhDy1p
lsaGjCmJL8QPKWnOxjkG2/ANK4lPI0vKhz2jQ44oiXOHlxRr5npHlsQv+tAb
rox3XXhxbMgxJfFjqm1Yc3TIxJJYgj6qJLbSn/1k7JtQ0vzPCJleEs8muAds
muRacG2aezTxekeVdB/pP8VnN9k5RfuwmYfVIatKYvQo7xP2zHRvODI75PiS
WDI3ZE5J93phyEklsYn4rJK4sMixFvYdVxKf5jkfBp1Y0jcSVp7g2AauR6yV
+9Ab3ix2XfhxWsiKkhiz0jbsWBaytCQOoU8uiR3s7/SS2IRvSUncPc77bGcf
PeDQctfa0nn0qPk9cNYd3f/UkhhxinM2tw8bRs/33uDRGSFrSrq794XcWxJ3
zg45qySOnBtyTknzcUnIxSVxiviZJc3cpY51tY+6cOg858Oei0IuLIll5zu2
k+sR6+Y+9IY3l7ku/Lg+5LqSGHODbdhxVciVJXEIfQW9KlEv5MKK2ITv8pJY
cHPITSUx7nL3gENXuxYMutE9dvB6LyiJX/S/tiSGXeOcfvZhH+jzu6ckLl/g
fcKhW9wb7twRcntJHLkr5M6SZuzBkAdK4hTx20qav4cc29e+W0vi0N3Ohz33
+/0Ndn9iQ1yP2P7uQ2+48rDrwotnQ54piR/P2YY1j4c8VhJL0I+W9L3ivjCf
I+x7pCT+3up9DrePHrDpCdeCa8+7R3+/B84aNjwd8lRJc/6kc0bZh82fx53p
32iw7AXXgjsv2oYjr4W8WhJL3gh5vaRZej/kvZLYRPyVkubsA8cm2vdySXx6
0/nM1rsh75TEyrccm+F6xCa7D72n+dm3S2LMh+4BP74O+aokdnwc8lFJ3Pk0
5JOSuPKJY8z8dyHflsQd8r4siWcfuS4z/HnIZyVx7Rv3WOBnvyhp1r/wc/P8
LP2meo3sZ5H7kA9vvndv2PFzyE8l8ePXkF/8/v8J+bskHhH/saSZ/9expfb9
UBKTfnM+zPsr5M+S+Pi7Y6tdj9gp7kNvWPKf68KIVDm+k2UxI12WDV+ahm5S
Fj/Qa5XFjmzoTFlMwfe/slj7g/cJw/DRAx6tXVYtWEYePfYPuTPkjrJ4QP9E
WbPdrKwcZh0fNkzJldUb9hRC58u691uH7lIWa0qhi2VxpFyWDUuqoStl8Yw4
+czVOqFblsUa4uTAFHwtypql5qEbZc0WPmxYWQ9dK4thaHowr63KqgtX1i3L
hhcbh96oLF6sF7p1WaxpE3r9sliCJsacbxq6fVnc4llqwaC2ZeXApA3KsmFS
u7J6wFnWy/pg3CZlxeDohmXlwDXWgn26784fJfGLnuTAcs6Yc4c1HUNvXhZH
tijLhiVbhu5UFs+Idwh5Kf66W+hty2INcXLgCr5tymJN17LeH6zBhw0reZ+d
y2IoequyOLJdWXXhSveybHjRO/TOZfGiR+jty2LNjqF3KIslaGLwlTVuVha3
eJZaMGinsnKY4Z5l2TBpl7J6wGDyeDcwbteyYsx9r7JyYBVrwV7pc2UmYVaf
snJgTd+ybPixZ+g9yuJK/9B7lTVLzMl+ZfGF+O5lzdkBZcVgG75+ZfFp77Ly
Yc/A0PuWxbkBZcVgEPWIwS/60BuuDCqrLrwYHvqQsvgxoiwb1hwc+qCyWII+
0Pd7TsjssviCb7BnAN/xZfEMHz1g05CyasG1Q8vqAStZ7z5l3Uf6Dyvr7IaW
lcNZ4sNmHua6N4wmj33CnZGhDyuLO6NDjiiLKUfahitjQ8aUxTbio8riGfrw
srgzxjnMwNEhE8ti2FEhE8ri0UTbcHN8yLiyeDbOPZihSc6HPVNCJpfFkeNC
ZpbFnqkhx5bFkukh08riKGthP2XHjymLa8e4VtXPks/Mz3A+rJrlHrCe8+Cs
W/qdECt4Layv4bWQz9+XMG8vmT3zfNbc9StCLi+LQQtC5pfFlJNCTixrNpaF
LC2LZ8RPKGtulju2nn3UhUELnQ93Tg5ZUhafFjnW3vWItXUfejPHp7gu7Dgz
5IyyWHKWbdizMuS0shiEXlHWN3+3suawo32nlsWUc0POKYtnp7oHDFoVcnpZ
DDvbPdp5vYvLYhn915TFrdXO6WIfdm+f32Vl8Xqx9wmDznNvGHRRyIVlMeWS
kIu91qtDriqLZ8QvKGsf1zjWw77zy2LQpc6HO1f6/e3s/sT6uB6xndyH3jDl
WtdlLm8LubUsdtxuG37cGHJDWRxBX1/W761+Xtce9l1XFmvP9z53t48eMOsm
14JPd7hHN78Hznof97+lLJbd7JwB9mHDr7vK+m0Bb+4JuTvkx5BB8fcuB1TE
nftD7iuLIw+GPFDWjD0R8nhZbCN+b1nz96RjB9pHXTj0kPOZq8dCHi2LWw87
dpjrERviPvSGMU+5Lux4OeSlsljyim3Y81zIs2UxCP1MWQy92/scbd/TZc3x
6yGvlcWzp90DBj3vWjDoVfcY4fU+UhbL6P9iWdx6wTnj7cNmBn4J+bms78Ej
3icMesO94dA7IW+XxZH3Qt4tix2fhnxSFqeIv1XW/H/m2LH2vVkWh953Pt+Q
j0M+KotlHzg2x/WITXcfesOVz10XXvwQ8n1Z/PjRNqz5OuSrsliC/rIsjrC/
n8riC74vymLtm97nfPvoAZu+ca1lzqPHJL8HznqJ+39X1px/65zF9mEf7/19
WBaHfgv5taw5WC/ubOuKOPJXyJ9lseSfkL/LmqW1I960IjYR/6OsOWtWUQzm
/e668Olf5zNbTSK+VkWs/M8xGEQ9Yqvdh95wJVFRXXhRDF2oiB+limxYkwmd
rogl6FRFf6bF94TfgPAFX7Ki+a+GrlTEM3z0gE3ZimrBtXJFPWAB6/1fRSyj
f74inuUqyoGv+LDhCOe3bkW8Jo99wp5aRb3hSIvQzStiyTqhW1Y0Z21Dt6mI
TcQbFc3/BhXFYB6+ekV8alVRPgxav6L3ByvpT4y5pR4xmEUfesOVDSuqCy82
D92hIn50rMiGNZuEblcRS9AbV/SN4r4wn/AF30YVcZd1sU94ho8esKl9RbXg
2hYV9YD1vAfOGjbQf7OK5nzTinKYe3zYn9aD741geUO/J7i/zCfc2TLinSri
SNfQW1fEkm1Db1PRLPHnSjtUxCbiXSqas50qisE8fJ0r4lO3ivKZrR6ht6+I
ldtVFINB1CMGs+hDb7jSs6K68KJf6N0q4sfuFdmwZpfQvStiCXpn3/UxIUdW
xBd8vTxX+EZXxDN89IBNu1ZUC67tUVEPWMB6u1c06/TvW9F59akoh/PD18cz
MNa94TV57BPu7BV6z4q4s0/oARUxZd+KbLiyX+iBFbGN+N4V8QzdvyLuECeH
e3NQ6AMrYtjgir6XsBAfNtzk+7l/RTxD04N7d3BF+XBnWOihFc3oqJDDK+LH
iNDDK+LLYaEPrYijrIX9wBfih1TEMDS14BTPks/cjqwoHzYd4R6wnvPgrJv6
nRCDd0MqWt//vBby+e5yN7n38Gacz5oZWBFyakXcOSpkQkUcOTpkYkW8mBYy
tSK2ER9f0YxNdyxlH3Xh0CTnM1fHhhxTEbcmO1ZxPWJZ96E3szvDdeHICSHz
KmLHfNvw4/iQWRVxBH1cRd//rSqaw+b2zayILyeFnFgRt2a6B8ya7VrwaYF7
lLzeKRVxlP5zK2LZHOesax/25j6/Uyr6HkzxPuHOQveGOyeHLKmII8tClnqt
p4esrIhtxBdXtI9Vjm1s36KKOLTc+bzL0/z+Org/sU6uR6y9+9Abpqx2Xeby
/JDzKmLHBbbhx1khZ1bEEfQZFf3m6ux1bW3fmor4usj77GIfPWDW2a4Fny50
j7Z+D5x1d/c/tyKWneOc7ezD5s/O+K023oy8uKI/l7+uFvcvWFytix1XhVxZ
0VzdGHJDRXN2k23YdEXI5RXx4GbHett3WUU8utLPwaprQq6uaM6od31FrLra
/XZ23qUVzSHx6ypixz0hd1fEiPtC7q2IPbeH3FYRg9C38o6q8Y5CTq6KZfhu
qYhD97oWfHkw5IGKGHSHaw1yn7sqYhX6zopYdaefG+B67Hl3r/Hair4B13qf
8OJ+rxVePBHyeEWMeD7kuYpm+wXb8OmxkEcrmvsXHRth3yMVMetxPwezngp5
siK+U+/Zivj0pPsNd97DFXHhrZA3K+LE27ZhzTu2YcYrIS9XxIt3HYOhD/m8
YNCrfu4oP/tSRax92M9NsI89HOOeb1TEiPdcd4p9r1fEr9dcd7J92PDmg5D3
K7rriXifzaq6+8mqbNjxcchHFfHj05BPKpqfb0K+rohHxD+saLa+dWyWffSA
SZ85n3n6KuTLivj4uWMnuR6xOe5Db1jynevCiN9DfquIGX/Yhi8/hfxYET/Q
P4RsGntY9v/31b7vK5r5v0P+qohh37sHPPrZtWDZn+6xwOv9oiJ+0f/Xihj2
i3NOtQ+b3x3cl2cqYvQX3ie8+ce9Ycdasa7/VcWPpqGbhFwSf50Jna6KR8T/
q2hus1XF4By+fyti0tpV5cOaVFXvDz7yPonBIeoRg1P0oTc8yFVVFx7UQ9eq
4kejKht2lEIXq+INulDVd+l93zkYhC9fFWv/9T5hFT56wKFyVbVgXPOqeqzy
e+CsmXX6V6ua80pVOcw9PuzRPtenK/oNgWZW4WOLqurClTah169qZmDWJlXN
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
/FgRcmpN7Fgcsqgm7pwcsqQmrixxjJk/PWRlTdwh75SaeLbIdZnhZSFLa+La
ae7Rwc8ur2nWl/u59n6Wfq29RvbTyX3Ihzer3Bt2nBlyRk38ODvkrJre/0Uh
F9bEI+Jrapr5ix3rYt/qmph0jvNh3gUh59fEx3Md28H1iG3jPvSGJZe4Loy4
NuSamphxnW34ckXI5TXxA31ZTey4IeT6mpiC79KaWLva++xlHz3g0ZWutYfz
6PFXyPB6zGRdPKD/1TXN9lXO6WsfNky50b1hz80hN9V0798MeaMm1twWcmtN
HLndNiy5M+SOmrhG/Jaa5uqBkPtrYs0dzjnYvvtqmqV7Q+6pabbusw0r7w65
qyaG3eUezOuDrgtXHrINL54OeaomXjwS8nBNrHks5NGaWPKoY8z58yHP1cSt
h10LBj3uHJj0hG2Y9Ix7DPZ6WR+Me9YxOPqkc0Z5Ldh897g759XEr+ec099n
zLnDmpdDXqqJI6/YhiWvhbxaE8+IvxgyPeTdkHdqYs2rzplm39s1seYtv7+p
9mFP8ft8vSaGve4ecOQ914Ur79uGF1+EfF4TLz4M+aAm1nwc8lFNLPnIsfFe
4ws1cesD14JBnziHGf7UNkz60j3GOY93A+O+coy5/8w5J3gt2N19rswkzPra
ObDmG9vw48eQH2riys8hP9U0S8zJnzXxhfj3Nc3Z344tse+7mvj0i/Nhzx8h
v9fEuV8dO931iC1zH3rDlX9cF14kYi6b1cWPZF02rFkr9P/qYgn6v5ru9ybx
1+3q4gu+f2uaAXwb18Wzf90DNjWpqxZcS9XV4zSv97ea7iP9167r7JrWlcNZ
4sNmHtrX1XuF89gn3MmEL10Xdwqh83UxpViXDVfKoUt1sY14ri6eobN1cYc4
OcxA89CNuhhWr+ufZcIjfNhwk3+2WamLZ2h6MEMt6sqHPa1Cr1MXRzYMvUFd
7FkvdOu6WNIm9Pp1cZS1sB/YRHzduriGphbc4Vnymfm2deXDqo3q6gHrOQ/O
GrbxTojBQdbSsi5msBby+fsS5o05hj2b1nXW3PW9Q/evi0Gbh+5QF1O2CN2x
rtnoGnrrunhGfLO65mabumIwDh91YVCnuvLhTpfQnevi05Z1xWAS9YjBO/rQ
mznetq66sKNn6J3qYkmvumzYs33o7nUxCL1dXd/8bz2HsAxft7qYskvo3nXx
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
zH0GpsSVU70uvDgjNCYlfoy1D2tOC41MiSXYESl9o3hfmM8NHRueEnfZF/fZ
0jF6wKZRXguujXMPWM9z4Kxbuf/olOb8dNds5hg+f5+Uv5PB39fg9wTvL/MJ
dyaExqfEkamhKSmxZHpoWkqzxJ8rzUmJTeQnpzRnc53LODYpJT7NcD2zNTs0
KyVWnulczeuRy7sPveHK2V4XXiwLLU2JH8vtw5qFoQUpsQQ7P6V3/Y7Q7Snx
hdi8lOaK2G0p8Wyee8CmRV4Lrp3jHhXvd2ZKs07/JT6vxa7ZxjF8ZuBO9y67
jvuEO+eFzk2JOxeGLkiJKRfZhyuXhC5OiW3kz0+JZ9gVKXHnYtfw3lwZuiIl
hl2e0veym2P4cJPv56Up8exS9+C9u8r1MOaa0NUpzegtoZtT4sf1oetS4suN
oRtS4ugK38/ezl+bEsOu9Vr7+lrqmdubXA+bbnWPDj4PzrqHnwm5Pb0X9neA
90I9313eTd57eHOXz5oZ+CD0fkrcuTd0T0ocuT90X0q8eCz0aEpsI393SjP2
uHO9HWNdOPSA65mrR0IPp8StB5072uuRO9x96M3sPuF14chLoRdTYsfL9uHH
s6FnUuII9umUvv8TU5pDuPVU6MmU+PJa6NWUuPWke8Cs57wWfHrFPfp6vw+l
xFH6v5ASy553zYmO4Z/h81uV0vfgId8n3HndveHO26G3UuLIu6F3vNePQx+l
xDbyb/o+PnFuhGNvpMSh91zPs/zQz2+M+7/n5/yRc6Pch94w5VOvy1x+F/o2
JXZ8bx9+fBn6IiWOYD9P6TfXJO9rimOfpcTXN3yfkx2jB8z6ymvBpx/cY6if
A2c90/2/SYllX7vmTMfw+bv7sJa/ywbLfkzpz+X/zsS7ko13MCt2/B76LaW5
+i/0b0pztkZaPmz6NfRLSjxollZugWM/p8Sj33wdrPoz9EdKc8Z6/6TEqj/c
b77rVqc0h+T/Tokd68fa66XFiJZhN0iLPWuHXSstBmGbh04LvR16Ky2WEVsz
LQ5Rx1rM9EZhN0yLQeuktRbMos+6abEK2yItVmG5DhayHve83Hv8K6VvwF++
T3jB2uwVXmwRdvO0GJENm0lrtnNp+fCpVdjN0pr7fFo5mEVs07SYxRpcB7MS
YZvS4jvrpdPiEzH6wULqNkmLC42w9bQ40TotH9a0ScuHGaWwxbR4sWVaORi6
cVrnBYPKaV0HX7i2kBZr6cN18IwY98Dc07OWFiPaprUuM02smha/Kmmty5wT
w4dBW4fdKq13vVfYQ9J693un5cOO7cJumxY/tg/bPq356RS2Y1o8Ir9NWrO1
S1o5OEeMHjCpQ1r1zNPOYXdKi487pJWDO6xHDk7Rh96wpHNa68KIvcLumRYz
uqflw5fdwnZNix/YLqFR+H5fYQqxXdOa+X3D7pMWw4jRAx51S2stWLZ3Wj2Y
f/a7Y1r8ov8eaTFs97RqYCoxfH538L6k0mI0ddwnvNkvrd6w46CwB6bFj4PD
9gj9FP98eNjD0uIR+QPSmtsj0srBOWL7p8WknmnVw5pD03p+8JHnSQ4OsR45
OEUfesODI9NaFx4cF/bYtPgxIC0fdvQL2zct3mD7pPVdapfWOweDiB2VFmvZ
F/cJq4jRAw4dndZaMO74tHrAd54DZ82s079/WnN+TFo1zD0xfH47cK7JtH5D
YJlV+DgwrXXhyimhk9OaGZg1Mq0ZGmUf1gwJnZTWHJ/u3NqOnZgWk072dXBt
WGhoWrPKeiPS4tlQ91vLdSek9fwnhSamxY/J9uHRFPvw5ozQmLTe74tDF/ld
vMQ+rBnr61r52tFpzRjXXpgWw0b7HlLuOSEtRrLH4T4vYuPTYtg4r5twDJ85
uNS9W7ru1LRYOdX7hh2zQjPTYsyc0Oy0WDUjND0t1pA/My2+LAotTItrZ/o6
uHWW62HW/NC8tLg51znerQXOVd2H3nBlSWhxWnN5fmhFWuy4wD5MOTd0Tlq8
ZF/T0uLmNN8PjFkeWpYWa7BL0+LZUvfY3mtwXUefNz028NnwTuzo/uelNefn
uffW3uMiP5t30+IRc/Vk6Im03tenQ0+lxY4rQ1ekxYgbQtenNUs32odNl4dW
pjVnNznX1bHL0uLRFb4OVl0duiqtOWO969Ji1VXu18V1PHvYcXforrR4cY99
+HGvfdhxa+iWtL7Vg0OD0vpmY5lDGHObrzvQ196cFmvuD92XFsNu9j30cs87
02IBe7w2LYYRuyMtxt3udXs6hj/A58eZdnfdNWmx8j7vG3Y8FnrUe3w29Iz3
/px92PRI6OG0Zvh55/o69lBaPHrU1x3rZ/i47/kZP8v+jtGvj+seTGue3gi9
ntZcvmkflrxlH9a8FHoxrd9WJ3iPMPQBnx1MetnXneRrX0iLtQ/6uhMd4x5O
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
1oJhx+bVA7ay34PzYhn9++XFrb551cAzYvjr+vxOzovX1HGfMOj4vHrDoBNC
g/NiykmhE73X4aFT8+IZ+UF53ccI55o5NjAvBg1xPdwZ5ufXwv3JbeD1yK3l
PvSGKSO9LnM5ITQ+L3ZMtA8/RodOz4sj2FF5/d7ayPvaxLHT8mIt++I+N3aM
HjBrjNeCT5PcA9bzHDjrhPuPy4tlY0Nn5DXz4+zz24K5ZA5hzdS83uO78Avx
XhfErRmh6Xkx6Ez7MGVWaGZeDCM/La/Zmx+alxeDZrqmjWNn58WvuaGz8pqx
s+3DsDmh2Xlxa7Z71H0tOeZ7gXvAkfNC5+Y1lxeGLsiLWYtDi/Ji0tLQkry4
RWxhXtxa6LXgzjJfx1mcE1qeF6tWuAc8Ot9+B/fkuva+lvqd3Z/rYM1F3hPz
dk/o7ry4c2nokrw4dJl9OHJ5aGVe3CJ/cV4cuS50bV6cWuma7o5dkxefrg5d
ldc35Br7sOzK0BV5seoK94Aj13tduHKDfXhxZ+iOvHhxU+jGvFhzS+jmvFhy
s3O7eI/c536+lrVg0K2uYVZvsw+T7nKPbfxMeE69fTbkmO/bXdPTe7ndz+rX
0C958eVenykcuj90X16sesA+3HnQPkx5yD5Medg+jHnEPhx61D4cfMw+zHrc
PnP1hH3m7En7MOgp+8zq0/aZ3Wfsw5hn7TPDb4XezIsdz4eey4s7L4ZeyItV
z7kG7rzkHBx62T5cfMU+PHot9GpeDGLtN/Ji1evODXWemuHOk+PbxrvDuwJj
3vb+mN1vQ9/kxap3Q+/kxZ337MOU90Or8mLKB/ZhzIf24dBH9uHgx/Zh1if2
Ydin9vmOfmYfHn1uHz59YR/WfGkf9nxlf5T3yD2c6b1/nRdHvvP9zHCMGhjz
vXPw5Qf78OZ/9uHTT6Ef8/q+8a7x/sGz1c7NdZ4a2PSzc/DlF/uw57e83uO3
isGCUsx6Sdz5M/RHXhz5yz58+Sf0d16zQv73vOZtrWBz84LY87drYA2xNQti
ULOwaxTEJGL4sOy/0L95Mexf92CO1y5oXdizTkE+LNk47EYFcWfdsC0K4sj6
YdcriElYcsx/q7CbFcQ1rmUt2LNBQTW8Zy0L8mHYJgX1gK3sl/3Bpk0LyvFu
blhQDVxjL/iLfR6cKfyiJzXM2DZhty6IQYmwTQUxKFmQD1PSYVMF8Yz8FgU9
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
mO2amveCn/D9cT9wZ77PlHf9jtDtRTFocWhRUQxaYh+mLAstLYpn5BcWNTcX
hM4vikFLXbOTYyuK4s55oXOL4tAK+3DtnNDyori13D2Y4wu9Luy5yD4suSp0
ZVHcuSR0cVEcuSx0aVFMutQ55v+60LVFce1irwV7VroGJl1uH4Zd7R4dvF/2
B5uuca5b6ArX7O694LfzeSwoil/XuqatY5w1DLopdGNRDLrZPky5NXRLUTwj
f0NRc3BP6O6iGHSLa3o7dldRrLrTz6+XY/gH+3neVhS3bnMPWHOv14U999mH
JY+HHiuKOw+E7i+KIw+FHiyKSQ86t6/3eH1RXLvfa8Geh13DzD9i/9jQE+6x
j+t4NrDpSefgxKOuOcZ7wee/6fHnVvw5Dfx6yjVw6JnQ00Ux6PnQc0Ux6AX7
MOWl0ItF8Yz8s0XNDX/m+2ZRDHrRNSMce6Mo7rweeq0oDr1hH669GnqlKIZi
Xy5qjt/2urDnHfuw5JPQx0Vx573Qu0Vx5P3QqqKYtMo53vs1S8Hmkrj2rteC
PR+4hhn+0D4M+9Q9hnm/7A82feYcc/+RayZ4L/jMVfOS+k2Jf/7cNXDoy9AX
RbHq69BXRfHoG/vw6Fv7sOY7+7Dme/uw5wf7MOt/9uHUj/bh1k/24dFq+8zM
z/anuz97Yp5+cQ4O/Rb6tSju/BH6vSgO/Wkfrvwd+qsolv3ummWOcR1z/o+v
W+j16AGn/gv9WxSXv/AZwbA1Ssqd6zz1MI/nRo5vJO8m7yvcWauks2YGtgzb
piRWtQi7Tkk8WrckH76sH3a9klhGfu2SZmbTsJuUxCzy1MAbYhuXxKmNwm5Y
EoOI4cOqlmE3KIlZWHowi5uVtC4z3aokH45kw2ZK4tQWYTcviUOJsE0l8QhL
Do4UwxZKYhjXshbcSZZUA4dSJfmwKldSD5jLftkfbMuXlINh6ZJqYBx7wYfl
nAdnCsvoSQ2/V5hvuACrqhGrlMSjWkk+fGmErZfEMvLlkp7V1mG3KolZ5Knh
+RFrVxKn2pb0/GAQMXxYxfNsXRKzsPRgH9uUtC772rYkH450CtuxJE61D7td
SRzqEHb7kniEJQdf2WOpJIZxLWvBnR3D7lASh3YqyYdVu5TUAy5Tx7OBbfw3
LnIwYueSamAGe8GfWA2WhD4OTQp9ah8O7Rb5riUxaI+wu5fElL3C7lnSfBwQ
dv+SeEa+W0lze2BJORhHjLU+in/uXlI93Nkv7L4l8WnvknLMG+uRg3f0oTdc
49p9SmLDQSX1gBdHhD28JDYdHLZHSTw6JGzPkjiFJces9wl7VEncoe6wkhhH
HevCrN5he5XEnSNL6gGzuPbQkliG5Tp4x7X0g8vskfuBKfShHgb1Lak3HOof
9piSOHJc2GP9fp8YOqEkTpE/uqR3/yTnYByxfiVxaEBJ9TB9cGhQSZw6vqRc
c69HDt7Rh94wZojXhRmnhUaWxJVR9uHFsNDQktiDPaUkXowOnV4Sj4idXBJr
2Rf32cIxesCeU73Wpq6jx8Ohejnmrixm0X9ESVwY7poNHcOHL2PcGwaNDZ1R
0vt9ceiikrgzPjSuJO5MsA9HJoUmlsSwca5nVs4MzSiJOxNdU3RsekmsmRaa
WhJ7ptuHZVNCk0ti1WT3YHZnel14M8s+/FgYWlASa+aEZpfEjrmhs0ri0FnO
MfNLQ0tKYtlsrwVvznYNHJpnH24tco+c98v+4NFi52DZfNe09V7w+Y7x7gws
iVlLXLO5z5hzhzvnhc4tiTsr7MORC0Lnl8Swc0LLS2LHytBlJXHnfNd0cezS
kvh0iZ/fro7hd/LzvLAkVl3oHnDkcq8LV66wDy9uDN1QEi+uCl1ZEmuuCV1d
Ekuudq6997isJG5d6bVg0LWuYYavsw+TbnKP7VzHs4FxNzvH3F/vmn29F/w1
fK7MJMy6xTWw5lb78OOu0J0lceWe0N0lzRJz8lBJfCF/R0lz9ohzPR27vSQ+
3et62PNg6IGSOHefc328Hrne7kNvuPKo14UXz4WeLYkfz9uHNU+GniiJJdjH
S3q/vw19UxJfiD1W0gwQ+7oknj3mHrDpKa8F115wjyO93/tLeh/p/4zP7mnX
DHQMn3n4zr2PcB33CXdeCr1YEndeC71aElNetw9X3gy9URLbyL9SEs+wL5fE
nTdcwwysCr1XEsPeDb1TEo/esw833w69VRLP3nIPZuh918OeD0MflMSRL0Nf
lMSeT0Ifl8SSz0KflsTRl30/E5z/qCSufeS1Jvla6pn5z10Pq75yj5N8Hpz1
DD8TcmO9F/Y31XuhnvegURajYc/3Pmve9S0itnlZDPox9L+SmLI69FNJs/Fn
6I+SeEb+h5Lm5i/n5jjGujDoZ9fDnd9Dv5XEp1+cW+L1yJ3tPvRmjv/2urBj
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
+2N2x4fGVcSnk0NDKmLQKfZh0FD78GWYffhyqn14M9w+nBphHzaNtA+DTrMP
g0bZh0Gn24dJo+3DmjH2Yc8Z9tfxHrmHJu99bEUcmeD72cIxamDMROfgyyT7
8Gayffg0NTSlom8d7xrvHzyb5lzWeWpg03Tn4MsM+/DmTPtwaKZ9uDMnNLsi
jpxlH77MC51d0ayQn1XRvDEPSypiz1zXbOPY4ooYtCi0sCImLbYPyxaE5lfE
sPnuwRwv87qwZ7l9WHJx6KKKuHNu6JyKOLIidF5FTDrPOd71B0MPVMS1c7wW
7DnfNbxnF9iHYZe4Rzvvl/3Bpkud49280DWdvBd8Zukh94Nfl7kGDl0eWlkR
q64MXVERj66yD4+utg9rrrEPa661D3uusw+zrrcPp26wD7dutA+PbrLP+3Gz
/W7uz554d25xDjbdFrq1Ih7dEbq9Ih7daR8G3R26qyJ+3e6aXo5xHWy6x9cd
5PXoAZvuC91bEZdX+ozg1P3OHeY89Uf6uZHjNxEcgk0w6GGfNe/6F6HPK8o/
Fnq0IjY9bh8ePRl6wvXkH6mIKS+Enq+IX0+45gTHnquIR8+GnqmIT8/Zh1tP
h56qiF9PuQdz/qLXZe5fsg873g69VRGbXgm9XBGPXgu9WhGnXnUOdqwKvVcR
1172WjDrddfArDfsw6N33GOg98v+YNO7zsG1N10z0nvB7+fz4ExHuyc1fAuZ
b7gApz4KfVgRmz62D48+DX1SEdvIf1ARR74JfV0Rvz5xzQzHvqqIR1/6+U13
DH+Kn+dnFfHrM/dgH996Xfb1nX048lvo14o49UPo+4o49VPox4p49D/nxnqP
71fEsO+9FtxZ7Ro49LN9WPW7e5zhOp4NbPvDORjxi2sWei/4/Hs13wa+FfDr
r4p+N8Chf0J/V8Sq/0L/VsSjNary4cua8c/NqmLZv65hbtaL2LpVMYs8NcwS
sRZVcWqdsGtXxSBi+LBqrbDNq2IWlh6wYP2q1oUNG1Tlw47Nw7aqik0bhm1Z
FY82DrtRVZzCkmPWk2ETVXGNa1kLZm1SVQ3M2rQqHx5tUVUPmMt+2R88aqoq
B9c2q6oGrrEX/OU+P84UvtCTGuatQ9jtq+JRNmymKj7lqvLhSyFsviqukU9X
NQP1sLWq+EWeGlhDrFoVkyphy1Wxnhg+/CqFLVbFMCw9mK1GVevCntZV+bBk
u7DbVsWdLcO2qYoj7cK2rYpJWHKwlj2mquIa17IW7NmqqhpmfuuqfBjWvqoe
MJo6ng1s4mzIwYltqqqBa+wFH+Zyf9wP3NmhqjPlXe8Xtm9VDOoYdueqGNSp
Kh+mdA67S1U8I79TVXOzR9jdq2IQeWqYJWLdquLObmG7VsUhYvhwrUvYXavi
FpYezPGeVa0Le/aqyoclB4U9sCru7B22e1Uc2TfsPlUxCUuO+T8kbM+quMa1
rAV79quqBibtX5UPw3pU1QO2sl/2B5sOrioH1w6oqgausRd8+M557FgVv+hJ
DYwnxlnDoMPDHlYVg46oyocpR4U9siqukT+0qjk4Nmz/qhhEnhpmg9gxVbHq
6KqeHwwihg/XeJ59quIWlh6w5riq1oU9A6ryYcnJoSFVcWdg6PiqODI4NKgq
Jg1yDub2DturKq5xLWvBnhNcw8yfaB+GneIesJk6ng1sGuocnDjJNet4L/j8
/VT+XJa/ZwG/hrkGDg0PnVoVg04LjayKQaPsw5TRodOr4hn5EVXNDX+HbEJV
DDrdNUnHxlfFnXGhsVVxaLx9uHZGaExV3BrjHszxJK8LeybbhyWzQ7Oq4s7U
0JSqODI9NK0qJk1zjvf+qtCVVXFtiteCPTNcwwyfaR+GzXGPLbxf9gebznKO
uZ/pmor3gs9cXe1+8Guua+DQvNDZVbFqQWh+VTxaaB8eLbIPaxbbhzVL7MOe
pfZh1jL7cGq5fbh1jn14dK59ZuY8+1u6P3tinlY4B4cuCJ1fFXcuCl1YFYcu
tg9XLg1dUhXLLnRNZ8e4jjm/zNft5PXoAacuD62sistn+4xg2BXOdXWe+t39
3MjxjeTd5H2FO9f4rJmBl0MvVcWq60PXVcWjG+zDl5tCN1bFMvLXVjUzd4bu
qIpZN7qmp2O3V8Wp20K3VsWg2+3DqltCN1fFrJvdg1m8y+vCnXtCd1fFkUdD
j1TFqftC91bFoQdC91fFo/udgyNPhp6oimH3ei2486Br4NBD9mHVY+5xkPfL
/mDb487BsIdd0897we/u8+BMj3VPavi9wnzDBVj1bOiZqnj0nH348kLo+apY
Rv5pP6vXQ69VxaznXTPMsVer4tQrfn5DHcMf4uf5YlXMetE92McbXpd9vWkf
jnwY+qAqTr0deqsqDr0beqcqHr3j3PHe41NVMewtrwV33nMNHFplH1Z95B4D
XMezgW0fOwcj3nfNWO8Fn79DwX8n4M/F4c5nVf392r5t4uxDD7URg74KfVkV
U74JfV3VfPwU+rEqnpH/oqq5Xe3cVMc+r4pB37oe7vwv9ENVfPrOublej9wM
96H3HF/7fVVs+Nk94MW/oX+qYtOvoV+q4tHvod+q4tRvzjHrzWrx3auJO9T9
XRXjfvG6MOvP0B9Vcec/91jua/+qimV/+bolvpZ+s71H7gem0Id6GLRmTb3h
0Dph166JI+uGbVHT+71x2I1q4hT5tWp69zepKQfjiDWviUPr1VQP0zcM27Im
Tq1fUw4GsR45eEcfesOYTWtaF2akw6Zq4kqmJh9ebBF285rYg21VEy/yYXM1
8YjYZjWxln1xn3CNGD1gT1NNa8GdbE09BoeeCz1bE7Pon6yJC4maauAEMXz4
UqipNwwqhS3W9H53D7tXTdyphC3XxJ1qTT4cqYet1cQw8tQzK1uFbVcTd8hT
w/wQa1sTa7YM26Ym9hDDh2WtwzZqYhWWHszu1jWtC2+2qcmHHzuH3akm1mwX
dtua2LF92PY1cQhLjpnvHHaXmljGtawFbzrUVAOHdqjJh1sda+oBT9kv+4NH
nWrKwbIda6qBZewFn+8Y784GNTGLntTAdc6Yc4c7u4XtWhN3utXkw5E9wu5e
E8PId6mJJfuF3bcm7pCnBr4Q26cmPu1d0/Pj7/QTw4dlPM89a2IVlh5wZP+a
1oUrB9Tkw4tDw/auiRcHhT2wJtYcHLZHTSzBkoOz7HHXmrjFtawFg3rWVMMM
H1KTD5MOq6kHPKaOZwPjDq8px9z3qqkGVrEX/P//fVDTTMKsI2qqgTVH1uTD
j6PD9quJK/3DHlPTLDEng2riC/m+Nc3ZCc7BNmJ9auLTsTXVw56BoeNr4txx
NeWaeT1y8Is+9IYrJ3pdeDEiNLwmfoy0D2tOCZ1cE0uwQ2p6vxeHFtXEF2In
1TQDxBbWxLOT3AM2DfVacO0094CV7HdATe8j/U/12Q1zzQaO4TMPS9wbRlPH
fcKd00OjauLO2NAZNTFlnH24MiE0via2kR9TE8+wo2viznjXMAPTQ9NqYt/U
0JSaeDTNPtycFJpYE88mugczNMP1sGdm6MyaODI/NK8m9swJza6JJXNDZ9XE
0dG+n6rzs2ri2iyvVfe11DPzZ7seVi1wj018Hpx1Oz8TciXvhf218V7O9nvw
fE2Mhj1Lfda86/eG7qmJQeeEltfElPNC59Y0G5eELq6JZ+SX1TQ3lzq3nWOs
C4NWuB7uXBS6sCY+ne/cLl6PXAf3oTdzfJnXhR3Xha6tiSXX24c9V4auqIlB
2Mtr+uYfVdMc7ubYypqYclPoxpp4ttI9YNBVXguG3eAeHb3fC2piGf2vqYlb
V7tmL8fwD/X53V0Try/wfcKgm90bBt0euq0mptwZusN7fSB0f008I39rTffx
oHMHOXZLTQy6y/Vw5z4/v97uT+4Ir0eup/vQG6Y85HWZy6dDT9XEjmfsw4/H
Qo/WxBHsIzX93urjffVz7OGaWHuL77OvY/SAWY97Lfj0rHvs5+fAWQ9w/ydr
YtkTrjnOMXx+W0yuaQ5hzQs1vcdr14M/oRPr4tbLoZdqYtAr9mHKa6FXa2IY
+Rdrmr13Q+/UxKBXXTPKsbdr4tdboTdrmrG37cOwN0Kv18St191jhK8lx3y/
5x5w5IvQ5zXN5Tehr2ti1geh92ti0kehD2viFrFVNXFrldeCOx/7Os7i09An
NbHqS/eAR1/Zn+Ken9XErU9cP8P9uQ7WfOs9MW8t4izXqYs7P4S+r4lD/7MP
R34K/VgTt8h/VxNH/gj9XhOnfnTNYsd+q4lPv4Z+qekb8pt9WPZzaHVNrFrt
HnDkT68LV/6yDy/Wij02r4sX/4T+rok1/4X+rYkl/zo3y3vkPpf7WtaCQWvU
VcOsNqvLh0m8W/QY52fCc4JxnA055nvNumrgBHvB51ntHrZbXXxZt64zhUPr
h12vLlZtUJcPd1rW5cOUDevyYcpGdfkwZuO6fDi0SV0+HNy0Lh9mbVaXz1y1
qstnzjavy4dBW9TlM6tNdfnMbqIuH8Yk6/KZ4VrYal3sSIdN1cWdbNhMXawi
Rg3cydWVg0P5uny4WKjLh0elsMW6GMTalbpYVa4rB8vIUwP7yJNb4HeHdwXG
1OvaH7O7c9id6mJV67CNurjTpi4fpmxZlw9T2tblw5h2dflwaKu6fDi4dV0+
zNqmLh+GbVuXz3d0u7p8eNS+Lh8+bV+XD2s61OXDnh3q8mEne+Qe4A5737Eu
jnSs637gFzFqYEynunLwZZe6fHjTuS4fPnUJu2td3zfeNd4/eNa1rhz8Ik8N
bNqtrhx84Z3Fhz171PUeV1vHnIdmtRZ3ukdsr7o4snddPnzZL+y+dc0K+T3r
mreeYQ+uiz371FUDa4j1qItBB4U9sC4mEcOHZQeE3b8uhmHpwRwfUte6sKdX
XT4s6Ru2T13cOTRs77o4cnjYw+piEpYc898/7DF1cY1rWQv2HFFXDe/ZkXX5
MKxfXT1gK/tlf7Dp6LpyvJtH1VUD19gLPuzgPDhT+EVPapix8aFxdTHo+LAD
6mLQwLp8mDI4NKgunpE/rq5nOzR0Sl0MGuSadR07uS5WDanrG9nCMXy4xjfz
hLq4dYJ7wKNhXhcenWofXpwRGlMXj0aEhtfFoNNCI+ti00jnYC57PLYulg33
WnBqlGvg1On2YdBY94DN1PFsmnw25GDZaNe08l7w+fcPZuwFc2uCz5R3emXo
srp4NCU0uS4eTbUPX6aHptXFMvKT6prJs0Jz6mLWNNfUHJtdF5NmhWbWxbDZ
9uHXmaEZdTFshnsw63O9Ljw62z68WBZaWheP5ofm1cWghaEFdbFpgXOw4LzQ
uXWxbJ7XglOLXAOnFtuHQcvdo+z9sj94dI5zsGyJa7b1XvDTPo+JdTHrXNek
HOOs4dGFoQvq4tFF9uHLJaGL62IZ+fPrmoGrQlfWxayLXbO7Y1fUxaDL/fy6
OYbfxc/z0roYdql7MFtXe13Yc419WHJb6Na6uHNd6Nq6OHJj6Ia6mIW9vi4G
s8cVdXHtWq8Fe25yDTN/s30Ydrt77Og6ng1susM5OHGLaw7yXvBh1p2+Du7c
ZR8O3W0fBt0XurcuBt1vH6Y8GHqgLp6Rv6euuXki9HhdDHrANf0de6wu7jwa
eqQuDj1mH649HHqoLm495B79fC05ZvpJ94AlL4deqmu2Xw+9VheDngk9XRdT
ngs9WxfLiD1VF8Oe8lqw53lfB6deDL1QF8NecQ949Kr9Ie7JdSf6WuqHuT/X
wZs3vCdm7MfQ/+riztuht+rizjv24ch7oXfrYhj5N+t6xz8JfVwXd951zQTH
PqqLTx+GPqiLOx/Zh2Xvh1bVxapV7sE8fep14c1n9uHH96Hv6mLNF6HP62LH
V6Ev6+LQl86N8B65zym+lrXgzdeuYc6/sQ+3fnCPQX4mPKezfDbkYMO3rpnl
veDv0og5DV3UEGt+8pnCo59Dq+vi0y/2YdCv9mHQb/bhy+/24csf9uHNn/bh
1F/2YdPf9uHOP/bh0L/2mbf/7DN/azTkM8fNGvJhz5oN+czzxmE3aog7a4Vt
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
JR+O9A/1S4lTx4c9LiUOnRC2d0o8wpKDI4NCJ6XEMK5lLbjTJ6UaONTXPqwa
4B4wl/2yP9g20DkYdqJrVvJe8GE558GZruae1PB7hfmGC7BqSGhwSjwaah++
DAudmhLLyJ+S0rMaHRqVErNOdU07x0amxKkRfn4bOIbf1s9zeErMGu4e7GOM
12VfZ9iHI5NDk1Li1JmhsSlxaHxoXEo8GufcGt7jySkxbKzXgjtnuQYOTbAP
q852j9au49nAtinOwYiJrtnCe8F/IRvMyAVPcvrv+vlv1/hv4uDQtNC5KTFo
ZmhGSkyZFTovpfmYH7ogJZ6Rn57S3C5wLuUYa8Gg810Pd+aF5qbEp9nOlb0e
uaz70Lvoa+ekxIYL3QNeXB26KiU2XRy6KCUeXRJamBKnFjrHrF8XujYl7lB3
ZUqMu8jrwqzLQpemxJ1r3GN7X3tFSizDXp4S7y51v8R75H52ch/qYdD17g2H
bg7dlBJHbg3dktL7fU/o7pQ4Rf7GlN79e53r4dgNKXHoNtfD9LtCd6bEqdud
28/rkdvDfegNY+7zujDjf6HHUuLK4/bhxUOhB1NiD/aBlHjxZOiJlHhE7P6U
WHuD77OXY/SAPQ97raNdR4+10zF3oaFpMYv+j6bEhUdcc7hj+PDlKfeGQc+E
nk7p/f4u9G1K3Hku9GxK3HnePhx5MfRCSgx71vXMyhuh11PizguuGeTYaymx
5tXQKymx5zX7sOzl0Espseol92B23/S68OYt+/Djo9CHKbHmndDbKbFjUejd
lDj0rnPM/GehT1Ni2dteC9685xo49L59uPWxewzwftkfPPrEOVj2gWtGeC/4
fMd4d+5IiVmfuuY4nzHnDne+DH2REne+sg9Hvg4tSYlh5BenxI4fQ0tT4s4S
10x17IeU+PS9n985juFP9vP8JiVWfeMecGSZ14UrP9mHF3+H/kqJF7+Efk6J
Nb+Ffk2JJb86d6b3+HlK3PrZa8Gg313DDP9hHyYtd4+xruPZwLh/nGPu/3TN
XO8Ff2+fKzMJs/51Daz5zz78WDnmYKW0uLJa2FXTmiXmZK20+EJ+xbTmbJ20
crCNWKu0+LR6WvWwp03YNdPiXOu0cjCI9cjBL/qskhZX1k1rXXixcdj2afFj
k7R8WLNB2PXTYgl2vbTe723CNtPiC7G2ac0AsUZaPCNGD9jULq214NqmafWA
lex3jbTeR/pvlNbZbZhWDWdJDJ956JpWbxhNHfcJdzqE3Swt7mwZdou0mNIp
LR+udA67VVpsI98xLZ5hN0+LO+SpYQYyYdNpMSwVtiUtHhHDh5tbh+2SFs+w
9GCGsmnVw5582FxaHKmFrabFnmLYJC2WlMOW0uIoe+F+YBP5Qlpcw7IW3OFa
6pn5Slr1sKqeVg9Yz3lw1rCNZ0IODrIX9gcz2EvF78EwMxr2bJvWWfOuHxf2
2LQYtH3Y7dJiyo5hd0hrNnYL2yMtnpHvltbc7J5WDsYRY10Y1D2teriza9hd
0uLTTmnlYBLrkYN39KE3c7xHWuvCjgPC7p8WSw5My4c9e4ftmRaDsHul9c1f
Ia05hGXE9kyLKQeHPSgtnhGjBwzaJ621YFivtHrAVva7c1oso/9+aXFr37Rq
4BkxfDjC+R2TFq+p4z5h0CFp9YZBR4Q9PC2mHJXW/+aJvZ4QtndaPCN/WFr3
0SetHIwjdmhaDDo6rXq4c3xazw8+0Z8cDGI9cvCOPvSGKX29LnM5OHRKWuwY
Yh9+DAwNSIsj2P5p/d5q5X3BrX6hE9NiLfviPld0jB4w6ySvBZ+Guges5zlw
1mu4/8lpsWyQa1o7hs9vC+aSOYQ1w9N6j2/Ez8R7nRG3RoROT4tBI+3DlNGh
UWkxjPxpac3eWaHxaTFolGs2c2xcWvw6MzQ2rRkbZx+GnREakxa3xrjHxr6W
HPM9wT3gyPTQtLTmclbovLSYNTk0KS0mTQmdnRa3iE1Mi1sTvRbcOcfXcRbn
hqamxaoZ7gGPZtpvcU+u6+Jrqc+6P9fBmvO9J+bt5tBNaXFnbmhOWhyaZx+O
zA9dkBa3yM9OiyOXhi5Ji1MXuGYbxxamxaeLQxel9Q1ZaB+WXRhakBarFrgH
HLnM68KVy+3DixtC16fFiytDV6TFmqtDV6XFkqucK3iP3Od2vpa1YNA1rmFW
r7UPk250j05+Jjyn3Xw25Jjv61yzi/dynZ/V16ElafHlFp8pHLotdGtarLrd
Pty5wz5MudM+TLnLPoy52z4cusc+HLzXPsy6zz5zdb995uwB+zDoQfvM6kP2
md2H7cOYR+wzwy+Enk+LHfzvMh9NizuPp/W/1TzcMWrgzhPOwaEn7cPFp+zD
o2dCT6fFINZ+Li1WPevccc5Tc4Lz5Pi28e7wrsCYF70/Zvfj0EdpseqV0Mtp
cedV+zDlNfsw5XX7MOYN+3DoTftw8C37MOtt+zDsHft8R9+1D48W2YdP79mH
Ne/bhz0f2O/vPb6UFnfY+4dpceQT388Ix6iBMZ86B18+sw9vPrcPn74ILU7r
+8a7xvsHz7507kznqYFNXzkHX5bYhz3fpPUe83eX/O7nNz7c+T70XVoc+cE+
fPkxtDStWSH/bVrz9nvot7TYs9Q1sxz7NS0G/RL6OS0m/Woflv0UWpYWw5a5
B3P8h9eFPX/ahyUrxnegVUbc+Tv0V1oc+Se0PC0mLXeO+V81rl0lI6795bVg
z7+u4T37zz4MWymjHjO8X/YHm1bOKMe7uUJGNXCNveBP9nlwpvCLntQwY53C
bpkRg9YI2zojBq2ZkQ9T1grbJiOekV89o2e7Ad+9jBhEnhqeN7H1MmJV24y+
kTCIGD5c45u5dkbcwtIDHrXLaF14tGFGPrzoGHbzjHjUPuxGGTFok7AbZ8Qm
LDmYyx5Xy4hlXMtacGrTjGrg1GYZ+TBoi4x6wGbqeDbwiLMhB8s6ZFQDy9gL
Pn/+YMaYORi0VUZnyju9V9g9M+JRS9itM+JRKiMfvmTCpjNiGfkuGc1kOWwp
I2aRpwbWFMMmGTGpEDafEcOI4cOvXNhsRgzD0oNZr2S0LjyqZuTDi+3CdsuI
R/WwtYwY1AzbyIhNWHKwoHvYHTNiGdeyFpzaJqMaONU1Ix8GbZ9RDxjKftkf
PNohoxws2zajGljGXvDhPefROSNm0ZMaeE+Ms4ZHu4bdJSMe9cjIhy+7h90t
I5aR3zmjGdg37D4ZMYs8NbCG2N4ZMahnRs8PJhHDh188zz0yYhiWHszWfhmt
C3v2z8iHJYeHPSwj7hwY9oCMOHJQ2F4ZMQlLDgazx50y4hrXshbsOTijGmb+
kIx8GHZERj3gNHU8G9h0ZEY5OHFoRjVwjb3gw6yjMroO7hydkQ+HjsnIh0HH
hz0uIwb1zsiHKX1CJ2TEM/LHZjQ3J4UGZsQg8tSs6tiAjLjTP9QvIw4NsA/X
Tgz1zYhbfd1jJV9Ljpke5B6w5PTQaRnN9ujQqIwYNDh0SkZMGRoakhHLiJ2c
EcNO9lqw51RfB6eGh4ZlxLAR7gGPRtpv655ct46vpb6d+3MdvBnjPTFj80MX
ZMSdM0NjM+LOOPtw5KzQ+IwYRv6MjN7xc0JTMuLOeNds5djZGfFpcmhSRtw5
2z4smxiakBGrJrgH8zTV68Kbc+3Djzmh2RmxZnpoWkbsmBmakRGHZjjX3nvk
Plt8LWvBm/Ncw5zPsg/L5oXmZvStGOLnVPbZkIMN57um4L3gfxrqkY25zoo1
C3ym8Oii0IUZ8eli+zBooX0YdIl9+HKpffhymX14c7l9OHWFfdh0pX24c5V9
OHS1febtGvvM37X2mePr7MOe6+0zz/eE7s6IOzeGbsiIIzeHbsqIXze4Bsbc
4hzsudU+bLrNPny6I3R7Rtxh7bsy4tmdzvV0npp9nSfHt413h3cF3tzr/TG7
z4WezYhP94fuy4hBD9iHQQ/ahy8P2YcvD9uHN4/Yh1OP2odNj9mHQf+zD4Me
tw+DnrAPk560D2uesg97nrZ/oPfIPfT23p/JiCPP+36Od4waGPOCc/DlRfvw
5iX78OmV0MsZfet413j/4NmrzvV3nhrY9Jpz8OV1+/DmDftw6E37cOed0NsZ
ceRd+/DlvdCijGaF/FsZzRvz8ElG7FnkmtGOfZwRgz4KfZgRkz62D8s+CL2f
EcPedw/m+DOvC3s+tw9Lvgt9mxF3vggtzogjX4W+zIhJXzrHu94mZnTNrLi2
2GvBniWu4T372j4M+949Rni/7A82/eAc7+Y3rpnsveAzS2tl1Q9+LXUNHFoW
+jEjVv0c+ikjHv1iHx79ah/W/GYf1vxuH/b8YR9m/RX6MyNO/W0fbi23D4/+
sc/78a/96e7Pnnh3/nMONrWKva+QFY9WCrtiVjxaOSsfBq0adpWs+EWeGjhF
jOtg02pZXQf7WI8esKl1/PPqWXH5R58RnFojqxwsI089zOK5keM3ERyCTTBo
7azOmne9GraSVb5t2HWzYtN6WfnwaIOw62dVT36drJiyadhNsuIXeWpgFbGN
s+JR+7AbZcUnYvhwa8Ow7bLiF5YezPlmWa3L3HfIyocdW4ftkhWbOobdPCse
bRl2i6w4hSUHOzJh01lxjWtZC2Z1yqoGZm2VlQ+PWrLqAVvZL/uDTamscnCt
c1Y1cI294MN1zoMzhV/0pIZvIfMNF+BUIWL5rNiUZOXDoxL/fj0rtpHPZcWR
ZthGVvwiTw2sIVbPike1rJ4fPCKGD7d4nuWs+IWlB/vYJqt12VfXrHw4snPY
nbLiVLew22bFoe3DbpcVj7DkYC17zGbFMK5lLbizQ1Y1cGjHrHxYtUtWPWA0
dTwb2Mb3nxyM6J5VDcxgL/j8uZpvA98K+LVbVr8b4NAeYXfPilV7hd0zKx71
zMqHL/uE3TsrlpGnhrk5KGyvrJhFnhpmidiBWXHqgLD7Z8UgYviwar+w+2bF
LCw9YMHBWa0LGw7Jyocdx4U9Nis2HRb20Kx4dETYw7PiFJYcs94ndEJWXONa
1oJZR2ZVA7OODntUVjw6PqseMJf9sj941DurHFw7JqsauMZe8OE458eZwhd6
UsO8jQ+Ny4pH/UP9suLTAPvw5aTQwKy4Rv7ErGbg1NDQrPg10DVrOTYkKyYN
Dp2SFeuH2IdfJ4cGZcWwQe7BbA3zurBnuH1YMjZ0RlbcOT10WlYcGRkakRWT
Rji3ovfYNyuunea1YM8o1zDzo+3DsDPdo5XreDab+mzIwYkxrmnvveCv4fvj
fuDOWT5T3vXrQ9dlxaDJoUlZMehs+zDlnNCUrHhGfmJWc3NeaGZWDJrimoxj
M7LizvTQtKw4NMM+XDs3NDUrbk11D+Z4lteFPefbhyUXhS7MijtzQrOz4si8
0NysmDTXOeb/0tAlWXFttteCPRe4BibNtw/DLnaPFu+X/cGmhc7BtQWuqXkv
+B19HhOy4tclrtncMc4aBl0ZuiIrBl1lH6ZcE7o6K56RvzyrObg5dFNWDLra
Nbs5dmNWrLrBz6+HY/g7+3lemxW3rnUPWHOL14U9t9qHJfeF7s2KO7eHbsuK
I3eG7siKSXc41817vCwrrt3mtWDPXa5h5u+2D8Pud49tXcezgU0POAcn7nHN
Ad4Lfhf/vSz/nQX8etA1cOjh0ENZMeix0KNZMejx0P+yYsqToSey4hn5R7Ka
G/4bsuezYtATrunj2HNZcefZ0DNZceg5+3Dt6dBTWXHrKfdgjl/0urDnJfuw
5O3QW1lx55XQy1lx5LXQq1kx6VXneO9/Df2SFdde9lqw53XXMMNv2Idh77jH
8d4v+4NN7zrH3L/pmsHeCz5z9Zv7wa9FroFD74fey4pVH4Y+yIpHH9mHRx/b
hzWf2Ic1n9qHPZ/Zh1mf24dTi+3DrS/sw6Mv7TMzX9k/3f3ZE/O0xDk49E3o
66y4813o26w49L19uLI09ENWLPvWNec4xnXM+Y++bqLXowec+im0LCsuv+cz
gmE/OzfNeepn+rmR4xvJu8n7Cnd+91kzAx1y8U3LiVV/hf7Mikd/24cv/4SW
Z8Uy8n9kNTMrR91KOTFruWvgDbEVc+JUq7Ar5MQgYviw6r/Qv1kx61/3YBZX
yWldZnrVnHw4sk7YtXPi1OphV8uJQ2uEbZ0Tj7Dk4Mj6YdfLiWFcy1pwZ82c
auBQm5x8WLVuTj1gLvtlf7CtbU45GLZWTjUwjr3gz/Z5cKawjJ7U8HuF+YYL
sGqjiG2YE4/a5+TDl03CbpwTy8i3y+lZbRl2i5yYRZ4anh+xjjlxavOcnh8M
IoYPq3iem+bELCw92EennNZlX1vl5MORfNhcTpzaOmyXnDiUCtuSE4+w5OAr
e9wgJ4Z1zmktuJPOqQYOZXLyYVUhpx5wmTqeDWzjv5klByOyOdXADPaCX+0Q
70dofgfxq5TTf2sLhyphyzlxpBm2kdNM7BB2+5zmc8ecfDhVD1vLaXa755SD
c8SqOfGLNbgOJnUNu01OM8Z62+XEKWL0g4/UsQ84Rb5bTrzYM+weOXGhZ9i9
cmLQrmF3yYlN2J15vjz/fDzfvPhFbKecWEMda8GAfcLunRO/euS0Fpyiz+45
8Qu7W05cw3IdfGQ97hn+ssdtc2I0lvuEL6zNXmHHQWF75fROHxn2iJze8aNy
8mHVgWEPyIkHR+eUg1/E9s+JX6zBdbDpkLAH58Qd1js8J1YRox98pG6/nDhx
YqhvTizpZx8u9LcPb44Le2xOjBjgHDzdN6fzginH53QdbOLaY3LiLn24DsYR
4x5auWefnHgx0Ouu4NgJObGqd07rwghi+HBnUOgkv9OzQ+fn9I7PsQ9rBodO
yYkdQ0NDcpqJkaERObGJ/Mk5zdko51o7Rg/Yc6rr4c3podNy4tcw59b3euTa
uA+9YcxorwszJoYm5MSVSfbhxZmhsTmxB3tG6G5yeb+vjo3Jaf6nhM7OiWtj
3AP2jPNacGeye7T1fofnxCz6n5UTt8a7poNj+Pwm4H05LCcWD/d9wqmpoXNy
Ys2M0PSc2HFeaGZOjLggNC8nNpGfltPczneuxbFzc2LPLNfDmrl+fnk/T3Il
r0cu4z70hgcLvC48uCJ0eU78uNI+7FgYujgn3mAvyukbxbvDO1d37MKcmHuu
77PmGD3g0CVeC8Zd5R6d/Bw4627uf1lOc36pa7Z1DJ/fCJzroTn9VsAyq/Dx
aq8LV24O3ZTTzMCsO3Oaobvtw5obQzfkNMf3OLerY9fnxKSbfB1cuzV0S06z
ynp35MSzW9xvF9ddl9PzfzT0SE78eMw+PPqffXhzf+i+nN7vj0Mf5fQufmIf
1jzg6w70tffmNGNc+2FODLvX93CYez6cEyPZ4+0+L2IP5cSwB73uIY7hMwef
undP192WEysf975hx7OhZ3JizPOh53Ji1VOhJ3NiDfmnc3pHXgu9mhPXnvZ1
cOsF18OsV0Iv58TNF50b6DpyJ7gPveHKG6HXc5rL90Pv5cSOD+zDlHdD7+TE
S/b1RE7cfML3A2PeDr2VE2uwb+bEszfdY6jX4LoRPm967OWz4Z0Y7v6Lcprz
Re49yHt8zc9m07x4xFytFnbVvN7X1mFXz4sdX4a+yIkRP4S+z2mWltqHTYtD
n+c0Zz86N9axz3Li0Re+DlYtCX2V05x9F/o2J1Z95X5nuI5nDzv+DP2REy/+
sg8//rYPO34O/ZTTt/ra0DU5fbOxzCGM+cXXTfe1y3JizT+h5TkxbJnvYbZ7
/p4TC9jjNzkxjNhvOTHuV687yzF8OML5caaTXPd1Tqxc7n3DjpUjv1Jee1wz
7Bp57b1NXj5sWjFsq7xmeK28cjCP2Ap58Yg1uA5W8QxXyeueWY9nCauI0Q8u
UvdfTvO0Yfxzu7zmcqO8fFjC7yl8WLNu2HXy+m11nc8Xhv7rs4NJbfO6DlZx
7dp5sfY/XweHiHEPvKf03CCv7+XXfid4d4mtnxe/1strXXhGDJ/fKMzlSzkx
ZrO83uMDQ/eF7s2LIx3Dbp4XS7YMu0Vec5YK25IXv8h3yGsW03nl4Bkx1oVP
nfKqhzVbh+2SF8+2yivH3LIeOZhFH3rDU67tnBdfMnn1gB3VsJW8mJQLm82L
JYWw+byYgiXHvDbC1vO6b+rKeXGLOtaFTcWwSV58quXVgzPi2lJeDMNyHYzj
WvrxDWCP3A9coA/1sKaZV2940y3stnmxZPuw2+XF5V3D7pIXj8h3zWtue+SV
g2HEtsmLSTvkVc+3YuewO+XFxx3zyvGNYT1yMIs+9IYHu+W1LrO4X9h98+LR
AWH3z4sde4XdMy/eYPfIi0e9/I7AIGK758VU9sV9wipi9IBDPfNaC8ZRd4DP
emZoRl4zTf998np3986rhneZGD4cOSiv3vDmkLAH5zVXY0Kj82LHYWEPzYsd
h+flw5gjwx6RF7PIU88s9Q57fF68IU8Nc0jsuLz4cmzYY/LiDTF8uHl02KPy
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
b7A/FsWjv4p6R851bGlRTP3E9znVMXrAoZ+91hzX/eGzrsX7VS1ppun/a1Hv
7i+uOc8xfDjyt3vDm39Cy4uaq06xxpYlseO/0L9FsWOFknwYs2L8c6uSmPWv
65ml1hFbvSTekKeGOSS2Wkl8WTXsKiXxhhg+3Fw57EolsQ1LD2Z0jZLWhQ1r
luTDjg3Crl8SX9YK26YkjqwTdu2S2IMlx2y3D7tRSXziWtaCPeuWVAOf2pbk
w6d2JfWA4+yX/cG+DUvKwdD1SqqBqewFf6LfnSVFMZGe1FzgM+bcYcdmEdu0
JHZ0KMmHMR3Dbl4Ss8hvUhJHtg7bpSTekKeGbySxziVxcauSnh+/44nhw02e
5xYlsQ1LDzjSUtK6cCVVkg8vSmGLJfEiEzZdEmtyYbMlsQRLDqayx41L4hbX
shYMypdUwwwXSvJhUrmkHnCXOp4NjKuUlGPuk5JqYBV7wZ/gc2UmYRbvOzXw
pl7SDMCPbcN2LYkr24XtVtIs7RJ255L4Qn6bkuZs15JysK0ZtlESn7YvqR72
7BS2e0mc26GkHAxiPXLwiz70his9SloXXuwbdp+S+LFfST6s2TPsHiWxBLt7
SWylP/cDX4jtVtL8Hxj2gJJ4RowesGmvktaCa/uX1ANWst8dS3of6b93SWfX
s6QazpJYT8/D4NApJTGaOu4T9vQqqTccOTTsISWx5PCwh5X0Xh8X9tiS2ET+
4JK4cHxJOZhH7KCS+HRESfUw6JiSvpGw8siScswJ65GDWfShN7zpXdK68OOk
0MCSGDPIPuw4MdS3JA5h+5TEDu7v5JLYROyEkrjLvrhPGEeMHnCon9dq7Tp6
wHqeA2e9qvsPKIkR/V2zimP4MJrvP/cGj4aGhpT07s4PXVASd4aHhpXEkdND
p5U0H2NDZ5TEKfKnljRzZzq3tmOsC4dGuB72jAmNLollI51r7/XItXUfesOb
cV4XfpwTmlISY6bahx0TQxNK4hD2rJL+nQF/JufP0B0cG18SC6aHppXEuPHu
AYcmeS0YdK57bOj9jiqJX/Q/uySGTXZNJ8fwyz6/eSVxeZTvEw7NcG+4c35o
VkkcmROaXdKMXRS6sCROkT+vpPm72LmsYzNL4tBc18OeBX5+JfcnV/N65Aru
Q29Yc0loYUm8uDZ0TUn8uM4+rLkidHlJLMFeVtL3iveF+dzWsUtL4u9M32dX
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
Mi50ZlVzOTE0oSpmjQyNqIpJo0OjquIWsdOr4tbpXgvujPF1nMXY0BlVsWq8
e8Cjs+xv4p5c197XUr+5+3MdrJnkPTFvl4UurYo7U0JnV8Whc+zDkXNDU6vi
FvnJVXHk/NCsqjg11TU5x86rik8zQzOq+oacZx+WTQ9Nq4pV09wDjsz2unBl
jn14sTB0cVW8mBeaWxVr5ocuqIolFzi3pffIfRZ9LWvBoAWuYVYvtA+TLnGP
dn4mPKeuPhtyzPdFrml4Lxf5WX0Qer8qvlzuM4VDV4auqIpVV9mHO1fbhynX
2Icp19qHMdfZh0PX24eDN9iHWTfaZ65uss+c3WwfBt1in1m91T6ze5t9GHO7
fWb40dAjVbHjztAdVXHn7tBdVbHqDtfAnXucg0P32oeL99mHRw+E7q+KQaz9
cFWsetC5Xs5TA/seco5vG+8O7wqMecz7Y3ZfD71WFaseD/2vKu48YR+mPGkf
pjxlH8Y8bR8OPWMfDj5rH2Y9Zx+GPW+f7+gL9uHRi/bh00v2Yc3L9mHPK/aP
9B65h5O891er4sgbvp+BjlEDY950Dr68ZR/evG0fPr0beqeq7xvvGu8fPFvk
3FDnqYFN7zkHX963D3s+rOo9fqQeLGjErDfEnU9CH1fFkU/tw5fPQ59VNSvk
P6pq3r4JfV0Vez5zzUTHllTFoK9CX1bFpCX2YdkXocVVMWyxezDH33pd2POd
fVjya+iXqrjzQ+j7qjjyY2hpVUxa6hzz/2foj6q49r3Xgj3LXMN79pN9GPab
e4z3ftkfbPrdOd7Nn10z03vBH+nz4Exnuyc1zFi7+HZtUBOD/gktr4pB/9qH
KStE/r+qeEb+bz/b1fju1cSg/1zD8ya2Sk2sWrmmbyQMIoYP1/hmtqqJW1h6
wKPVa1oXHrWuyYcX64VtWxOP1gy7Rk0MWitsm5rYhCU3z3v8qyqWcS1rwam1
a6qBU+vU5MOg9WvqMdd1PBt4xNmQg2Xr1lQDy9gLPn/+YMaYORi0YU1nyju9
fdjtauLRJmE3rolHm9bkw5cOYTeriWXk29c0k13Cdq6JWeSpgTXEtqqJWZ3C
blkTw4jhw6+OYTeviWFYejDrW9e0LjxqqcmHF8WwSU08SodN1cSgbNhMTWzC
koMF1bCVmljGtawFp3I11cCpfE0+DCrV1AOGblHT/uBRuaYcLCvUVAPL2As+
vOc8NqqJWfSkBt4T46zhUTNsoyYebVOTD1+2Ddu1JpaRr9c0AzuF7V4Ts8hT
A2uI7VgTg3ao6fnBJGL48Ivn2a0mhmHpwWztXNO6sGeXmnxYsnfYnjVxp0fY
XWviyO5hd6uJSVhyMJg91mriGteyFuzZo6YaZn7PmnwYtk9NPeA0dTwb2LRv
TTk4sVdNNXCNveDDrP1qug7u7F+TD4cOqMmHQQeF7VUTgw6uyYcph4Y9pCae
kT+wprk5JuzRNTGIPDXMErGjauLOkWGPqIlDxPDh2uFhD6uJW1h6wDWuJcdM
H1tTD1gyINS/ptk+OTSoJgb1Dnt8TUzpEzqhJpYRO64mhmFZC/b09XVwql/o
xJoYNtA94NFJ9ld2T65b0ddSv7r7cx28OcV7YsbODU2tiTtDQ0Nq4s6p9uHI
8NCwmhhGfnBN7/iY0OiauDPMNRs6NqomPo0MjaiJO6Psw7LTQ6fVxKrT3IN5
OsPrwpux9uHHlNDZNbFmXOjMmthxVmh8TRwa79ya3iP3uYmvZS14M8E1zPlE
+3DrHPfgW8Ez4Tl18dmQg2WTQ5NqYtnZ9t8MbRO/A5p1sWaazxQezQhNr4lP
M+3DoPPsw6BZ9uHL+fbhy2z78GaOfTg11z5smmcf7lxgHw7Nt8+8LbDP/F1o
nzm+yD7sudg+83x96LqauHNJaGFNHLksdGlN/FroGhhzuXOw5wr7sOlK+/Dp
6tBVNXGHta+tiWfXOLeD89Ts5Dw5vm28O7wr8OYG74/ZfSj0YE18uil0Y00M
utk+DLrFPny51T58uc0+vLndPpy6wz5sutM+DLrLPgy62z4Musc+TLrXPqy5
zz7sud9+D++RezjYe3+gJo487Ps5yDFqYMwjzsGXR+3Dm8fsw6fHQ/+r6VvH
u8b7B8+ecO5I56mBTU86B1+esg9vnrYPh56xD3eeDz1XE0desA9fXgq9WNOs
kH+2pnljHt6oiT0vuuZkx16viUGvhV6tiUmv24dlr4RerolhL7sHc/yW14U9
b9uHJR+HPqqJO++G3qmJI++FFtXEpEXO8a7/F/q3Jq6947Vgz/uu4T37wD4M
+8Q9Bnq/7A82feoc7+aHrhnpveAzSyvU1Q9+feYaOLQ49HlNrPoy9EVNPPrK
PjxaYh/WfBP6uibWfGsf9nxnH2Z9bx9O/WAfbi21D49+tM/7scz+OPdnT7w7
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
vLdTnfvjpFiG/igpxn3kXPDjq5Avk+Ipe3ojKRajX0+K1697D9zj30J+Tepe
/26bvv/DNnz5PmRlUj29Rqy9WUoM+y5kRVK8+zbkm6RYQ75fkuLTD44/3TmI
meU4YuDHminlhQVrpWTDDuqsTooLnBljMPRr73Oa98rZwaS/Qv5Mii9/215k
36qkGPyN4+l7cv+XFEeaR+51U2IBvn+TYuIqnwXc+sd5uce7xtxdUrrXXVOy
+fcN/0vJhhcbht4gpT5oG3rjlPppk5RseLR+6BYp8aBdSmMwC996KTGIHMyD
Wa1Ct0ypr8jXJiU+4aMeXCSO/cCJbUNvkxJLtkvJhgvtU7LhzeahNwvpje37
ul/IHbZhyhYpzYNNzN00JRZ0CL19SozDxx5gEzW3TomRrLF1SvzCt1VKrNoy
pbwwDB82b9uPvjewlbiNUuIXdVg3vNgpdJeUOLF76N1S6uc9UrLhUefQnVLq
2z1TGoNZ+DqmxCByMA9m8T13Tok75ONbwid81IOLxO2YUm+lQidT4kc6JRse
ZVKy4cfeobul9C5xv+h/OLpDSmcHa7qnNA/WMHevlPhLHebBHnzsgT6mZiKl
t4qz4U7Q0/iaUmJTj5Ty0uf4sOe7L39O6vcC+qekfzf43OkNmNUrpV7hTmDT
q/v5jsChauhKSvkOCX1wShwqhy6lxLVi6EJKvUq+fVJiZC2leBhGDmLgF3HE
wI9DU8oLj/qnZLNe6hyUUp9MDDnJd+5k29zBU2zDmwNC90mJQX1TsmEQvv1T
6kNyTEjpDMh9YEpMr6e0Vs4FX7+UuEUcZ8EdxdfX3/6SkItTYhJ77ZkS0xsp
5YI3x4Y+JiUmDQh9REr3YnjIsJS4c3TogSn18ciQESlx56jQR6bEJ3IwD24O
CjnOd4scQ1NiJz7qwUHiqEc/jQ85IaW+PNH2xj4DbJjHug5PiX3ow1J6D9B8
D3gzNmRMSnwaHXJ8SpxCj0qJYaO8h41cc1xKvOZsOJfm3h/739D5yNXKc8f6
O92ZEo/oq0t91kmf90Up9dLskFkp9czptumhObZhzNSQKSkx+uyQs1Ji0OSQ
SSmx7VTfoe2db2ZK3Jrm+C2dg5jNHUcMvDjHeeHHItu7us7ClN7zfOhcSu86
OpvSbxc07IBHZ4bMTYlP82x3su+MlFi2OOTclLhF7gUpcXe617qzffNT4tYZ
Poud7Jvnepf5TNt7rzNSeidOcy7WeEXI5Smt/Urb9PZVtmHMhSEXpPRtbw65
KSUGnR9yXkpsWxay1Hu+3LUT/obE93AOYvZ2HDH00y3OC0tutd1wnRtT+t1U
8Bph5RKf0e4+J74HrLk25JqU2HOd7ZJ9V6fE2qWOrzv3DSm9lzN8LjX7rk+J
WVf7LKr2kZffLPTikJAVIfungxshK+OfDwjdJy2u3Bdyb0p9tjzkkZT671Hb
8OWekLtT6uHHPHaAfXelxKF7PQ9GPhByf0r9Sr6HU2Lb/a7Xx3H0VX+PP+S1
vhDyfEoseSnkxZR483TIUylxB/2k19Il9tE5LWbhe8L7ftG56O9XQl5OiUfP
ONdg13kuJYahn02JW896Htx63HUO9RofTOlteND7HO7crBVmvB3yVkpvwEch
H6bUzx/bhjFvhryRUt9+4rHR9r2eEnfe8jz4+G7IOym9MeT7ICWeveN6xzvu
tZR66NuQb1Lixwrb8Og72/Dj85DPUmLTSo/Byld9XrDmC8+b7LmfpsTU1zxv
kn3sYYZrfp1Sn3/vvKfZ91VKXPjSeafbhw1Xfgz5IaW+ahffc5O0+mzTtGyY
8UvIzynx5reQX1Pqk39C/k6JKYz/lFIP/euxM+2jBiz83fH05V8hf6bEzT88
ttj5GFvgOtSGBf85L+xoHutaNy2WrJeWDUfWDL1GWixBNwu5rRB8L8Z+iuIL
vtUp9e0G8c/rp8Wb1a4Bk9ZKKxe8a5FWjUVe76qUuEn9ddJ6i9ZOK4b3CR/2
Sb4v76f0HqzyPmHGhmnVhhmtQ2+UFm82Dt0mrTdvi9Cbp8UUxlul1bdbpjUG
v/C1TIuFbdOK53f8Zml9P7jJ92SM3/TkYwyGUYfa8GCrtPLCgx1D75AWPzqm
ZcOO7UJvmxZv0Nuk9bb84DsHg/BtnRZTWRf7hFX4qAGH2qeVC8Z1SqsGbwnf
gbOm16nfIa0+3z6tGPoeH/YEn+t7Kf12QdOr8BEmkReu7B56t7R6pkfo7mn1
UFNaNqz5X+iuafVxIq0xOIVv17SYRA7mwbU9Q++RVq+Sb++0eIaPejCSuF3S
+v7F0IW0+FFKy4ZH5bRseJMOnUqLo8TtnNZdPCb00WmxJpPWPNjE3GRa/V8N
XUmLYfjYA2dDzXxajGSN3dI6J3y5tBiWTSsvZ4cv6545LuTYtNhK3F5psZI6
rBuu7Bu6V1rfv1/ovmn1+YFp2fBln9A902LAQWmNwSB8jbQ4RA7mwUreyd5p
3Sfy8V7CNnzUg4nE1dNixJGhB6TFjKPSsuHOwLRs+HFo6EPSYgdnyRjsrKV1
dvCof1rzYA1zD06Lu9RhHmzDxx5gADWPSOut42y4E/Q3vsPTYtlhaeWl5/Fh
w3re//19788ImZPWnT0zZG5a/BgWMjSt/hkTMjqtfhprG9YMCRmcFgPGeWxN
+walxaChngcfR4QMT4s75Ds+LYYNd701HMe3hxGnhpySFjMm2YY7k23DjxND
xoesn418IaOy+h3A/d0pLR5N8LzWnntCWiyYGjIlLbad4D1s6ponp8UD1jgq
rXcI38S0WHaS825iH3Ynnx9n2sJxI9Pi2hSvG37MDpmV1hoXhMxPq+cW2oY1
M0NmpNXHZ3lsO/tOS4tBszxvR3/D071n8s1Li2Gnu962jpueVi+eF7IsLX6c
bxseXWAb3iwKOSetd4lehAVwdJrPDtac63n/89yz02LwdM/rah976OaaS9N6
z0b6Tuxl35K0GLbYefe0D5u/g+M3Ir/d1rQeZI5e6HXDlStDrkirZ24IuT6t
HrrRNny5POSytPr4Jo9l7Ls0LQ5d4Xmw8uqQq9LqVfJdlxbbrnK9tOMuSYtP
jF+bFjvuDrkrLR7dG3JPWhy5LeTWtNiDvoVvmolvGjIzIx7huzktDt3jXPT/
/SH3pcWk252rj+vcmVZvo+9Ii2d3eF5P52PPZa/xmrTegGu8zwOdm7XCkkdD
lqf1/Z8JeTqt/nzWNkx5JOThtHr3OY/1t++htNiz3PPg4+Mhj6V1n8j3VFo8
e8z1DnXcg2n13+shr6XFjDdsw6A3bcOYF0NeSItBb3kMXj7g84IvL3neEM99
Pi3WPuh5g+1jD6Nc89W0uPC2846075W0uPWy846wDxvGvBvyTlq91Cy+5+q0
7ugaGdnw4oOQ99PiykchH6bVM1+GfJEWXxh/L61++spjJ9pHDVj1seNhzOch
n6XFyk88NtX5GJvoOtSGB187L7z4OeSntPjxi23Y8V3IirR4g/42rfef+35x
WgzC901aff57yG9pseob14BDK50Lxv3qGpO93k/TYuePIT+kxbPvHXOGfdi8
n9yXJ9N6Az71PmHMH64NL/4O+Sstrvwb8o/Xunac/VoZ8YXxP72PdTIaW2Tf
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
a4LztrUPG8ZMC5maVy9dFXJlXnf0atvwYkbIaXlxZVbIzLx6Zl7ImXnxhfHp
efXTfI9tYx81OoTMdjyMmRtyRl6sPN1jnZ2PsfauQ214sMB54cXSkCV58WOZ
bdhxTsjZefEGfVZe7z/3vZIXg/AtzKvPLwg5Py9WLXQNOLTIuWDcea7R0eud
kxc7qb84L56d65g97MPm/eS+jMjrDZjjfcKYC10bXlwackleXLk85DKv9bqQ
a/PiC+MX57WP6z2WtO+ivFh1heNhzDX+fnl/T8bKzsdYxnWoDQ9ucF54cGfI
HXnx4y7bsOOWkJvz4g36przeIu4Od65h34158fUi77NuHzXg0K3OBePudo3u
/g6c9X6uf3tefX6bY3rbh93c5zo8r98uaHoVPt7jvHDlkZCH8+oZmPVkXj30
tG1Y81DIg3n18TMeO8S+B/Ji0sOeB9ceDVmeV6+S74m8eLbc9Q523P15ff9X
Q17Jix+v2YZHr9uGN8+HPJfX/f4l5Oe87uKvtmHNC543yHOfzavHmPtTXgx7
1nsY4Zov58VI1vi4zwnfS3kx7EXnHWYfNn3wm2sf6bjH8mLlG1437Hg/5L28
GPNhyAd5sertkLfyYg3j7+Z1R74I+TwvruF7Jy9ufeR4mPVZXv8uE25+7LEp
jmPsJNeh9vSQr0K+zKsvfwj5Pi92/GgbpnwXsiIvXrKuN/Pi5pveD4z5NuSb
vFiD/jovnn3tGrOcg3ln+rypMcBn82he/U39lXn1+UrXnuY1sn/uVteC3k76
asvQWxR0X7cOvVVB7Pgr5M+8GLFG+JoV1EtrFmTDplUhf+TVZ2sVNHa2fb/n
xaM/PQ9W/RPyd159Rr7VebHqb9c7y3F8e9ixYczZoCBetCzIhh+tCrJhx7qh
1ynorb4v5N683mw0fXhZSPOC5sEw5q5dEGtah96oIIbhYw+8N9RcvyAWsMb/
8mIYvhYFMW69gvLCNXzYcITz40yXOe7fvFhJHdYNOzYLvWlBa9w29DYFrX27
gmzY1C70JgX1cPuCxmAevrYF8YgczINVfMPNC9oz+fiWsAof9eAicRsX1E87
he5SUF/uXJANS/g9hQ1rdgjdoaDfVvf7fGFom4LODibtWNA8WMXc7QtiLXWY
B4fwsQfuKTU7F/Re/us7wd3F16kgfnUsKC88w4cNV3YL/b+Q47BDngkZFPKc
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
xmAYdagNC/YpKS/s6Be6b0ksObAkG47sF7p3SSxB71vS313xG3Fz8wVfr5L6
9pDQB5fEG3zUgEn7l5QL3h1UUg04wnorJXGT+geU9Bb1KSmG9wkfNr8vuC9d
SnoPiGOfMOPQkmrDjCNCH14Sb44MPaCkN29QyHElMYXxw0rq28Eeg1/4+pfE
wqNKiud3/LElfT+4yfdkrJnzMQbDqENteDDEeeHBmJDRJfFjrG3YMSJkeEm8
QQ8r6W3h7nDn1rFvaElMZV3sc237qAGHRjoXjBvnGrwlfAfOegPXP76kPh/l
mPXtw+Y3C+fauaTfLmh6FT6e4Lxw5dSQU0rqmdNCppfUQzNsw5qTQyaW1Mcz
PbaJfSeVxKRTPA+uTQ6ZVFKvkm9aSTyb5HptHTehpO8/P2ReSfxYYBseLbQN
b04PmV0SR4k7saS7eEvIzSWxZo7ndfDcWSX1/9khZ5XEsFneQxfXPLMkRrLG
qT4vfHNLYtgZztvJPmz647aQW0tiK3FTSmLlWV43XDkvZFlJ3//SkEtK6vPL
bMOXpSFLSmLA5R7b077FJXFomefBSt7J80u6T+TjvexuH/X2cNy5JTHihpDr
S2LGjbbhzk224cdVIVeWxI6bPQY7z/HZwaOrPS/vuVeUxN1Fnpezjz1UXfO6
kt46zoY7UbHv2pJYdo3zlu3DhvW8//wm4N6/FfJmSXf2nZC3S+LH3SF3ldQ/
D4U8WFI/PWwb1twZckdJDHjEY/vZd3tJDLrL8+DjvSH3lMQd8j1QEsPucb3e
juPbw4hnQp4uiRnP2oY7z9mGH4+FPBpycCXyhdxf0bvN/eX3ATx63POO8Nzl
JbHghZDnS2Lbcu/hGNd8qiQesMb7S3qH8D1ZEsuecN6B9mGP8/lxpgc57r6S
uPa81w0/Xg95zWt8L+Tdknrufduw5tWQV0rq4w88NsK+l0ti0GueN8bf8A3v
+V1/y9H2UW+4414qqRe/DPmiJH58ZRsefW0b3nwc8lFJ7xK9CAvg6Is+O1jz
ieed7LkflsTglzxvon3sYaprfl7Se8bZcCem2PdZSQz71Hkn24e9n3/P8tut
tzW/3WDlN143XPkp5MeSemZVyB8l9epfIX+WxJcfQr4vqY//9tgc+1aWxKEf
PQ9W/hLyc0m9Sr7fS2Lbz653uuO+K4lPjP9WEjvWLsf7VhaP1g29TlkcWR3y
X0nsQf/LN42x10JeLYtH+P4piUPEkYv+Xy9087KY1KysXPQ0ddYsq7fRa5TF
MzTzljgfe17oNf5a0hvwq/cJH8nNWmHJRqFblfX9Nw3drqz+3KwsG6a0DL1h
Wb27eVljcAffBmWxhxzMg49tQrcu6z6Rb5OyeIaPenCQuPXL6r/tQ7cvixkd
yrJh0A5l2TBmq9BblsWgHcsag5ctyjov+LJ1WfPgEXO3KIu11GEe3MLHHuhd
am5XFhc6lpWXO4tv27K4tU1ZebnH+LBhTOfQncrqpV6h9ynrju5blg0vdg69
U1lc2TX0LmX1zF6h9yyLL4x3KaufupU1BsvwUQNWdS0rHsbsEXr3slj5v7LG
6FXyMQarqENteLB3WXnhRTZ0pix+5MqyYUcidFNZvEH3KOv9576vKIlB+LqX
1efF0IWyWIWPGnAoWVYuGJcvqwZMZL27lcVO6qfL4lmqrBh4ig+b95P70ras
N4A49gljSmXVhhe10NWyuNIIXS9rrfuH3q8svjBeKWsffcoag2X4ymWxqmdZ
8TCmd1nfD1byPRn7tqR8jMEq6lAbHhxQVl54cFjo/mXx4/CybNhxUOgDy+IN
ul9ZbxF3hzsHg/D1LYuvrIt9wip81IBDB5eVC8YNCH1EWW8G34Gzptepf2hZ
fX5IWTH0PT5sfpdwrhuX9dsFTa/CxyPLygtXBocMKqtnYNbIsnroeNuw5riQ
Y8vq49Eeg1P4jimLSYM8D64NDRlSVq+Sb0RZPBviejCSuKPL+v4TQ04qix8n
24ZHp9iGN+NCxpZ1v5eFLPVdPM82rDnB81p67piyeoy5S8pi2Bjvoa1rTiiL
kaxxuM8L34llMWy887axD5s+ON+113XcsLJYearXDTumh0wrizEzQk4ri1VT
QiaXxRrGp5Z1R+aGnFEW16Z6Htya6XiYNSfk9LK4OctjHR3H2LauQ224Mi/k
zLL68tyQRWWxY7FtmHJ2yFll8ZJ1TSqLm5O8HxizMGRBWaxBzy+LZ/NdY1fn
YN6ePm9qrOOz4U7s5vrnlNXn57h2Z6+R/XO3Xi/r7aSvHgl5uKz7+ljIo2Wx
45KQi8tixNUhV5XVS9fYhk0XhVxYVp9d67Em+y4oi0cXex6suizk0rL6jHxX
lsWqS12vh+P49rDjtpBby+LF7bbhxx22YccNIdeX9VYPDH1UWW82mj6EMTd6
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
CTd3rWuMu0UcY3CLOtSGK3uF3rOuvkyFTtbFjnRdNkxpCt2jLl6yrh3q4iaa
/cCY7qH3ros16G518QxNDZhFDubBJ86bGrx1nA13gv6mfqKuPkdTG/axxj18
t07220lfDQ4Z5Ps6NGRIXeyoha7WxYjeofetq5f2q8uGTeXQpbr6bP+6xmAe
vmJdPCJHpS5WNULX6+oz8vWqi1X4qAcXiePbw45DQx9SFy/612XDj8PqsmFH
39AH1PVWNw+9bl1vNpo+hDH96poHw5jbpy7WHBH68LoYho898N5Q8+C6WMAa
96mLYfgOqotxB9aVF67hw17L58eZwmvietbFSuqwbthxbOhjvNbhIcPqWvsI
27Dp6NAD6+rhkR6DefiOqotH5GDeGv6Gx3nPw/wtm9lHPbhI3JF19dOJIePr
6ssJtmHJSbZhzeiQ4+v6bbWe1whDB9R1djBpjOet77mj6mItdZjXwj720No1
T6jrveRsuBMb2TeuLn6Ndd5W9mHDlVNDTgm5DbsRnAm5Pf5584Zs+DEtZGpd
vXV6yOy6em6ObVgzJWRyXf1/hse2sG9SXQya6nkw7LSQ6XX1Kvlm1cWw6a63
ueNYH+w4J+TsunixyDb8ONc27JgXcmZdrGRP9CT3786QO+pizHzP6+y5c+vq
4yUhi+ti2FzvoatrnlUXH1njzLoYhm9hXYxb4Ly72IdNT9wdcldd7wFxM+ri
xWKvG5ZcFHJhXVy+MuSKunr1Ktvw6YKQ8+vq46s91t2+8+ri0YWeBx8vCbm4
rjeGfJfXxbCLXW9vxy2rqxdvDbmlLn7cZhse3W4b3lwfcl1dPLrDYzB0qc8O
1tzgeRXPvbYu1i7zPBh2jfewj2veXNfbydlwJ3rad1NdDLvReRv2YWe9p8vq
6qv3Q96ri78fhnxQF1ceCLm/rp55LOTRunrocdvw5b6Qe+vq4yc81s++e+ri
0P2eBysfCnmwrl4l3/K62Pag6/V1HN8eXrwY8kJd/HjJNjx62Ta8eTrkqbr+
7orfiPym29V6odn2jOcd7blP1tX/r4a8UhfDnvQehrjm83UxkjU+UhdD8T1X
F8Oedd5B9mGf5PPjTA9z3MN1sfIVrxuuvBPydl199nHIR3X16ie24ctbIW/W
1cefemyMfW/UxaG3Pe9Ef8N36+rbj/wtx9tHvdGOe72uXlwR8m1d/PjONjxa
aRvefBHyeV1vEb0IC2Dnaz47WPOl503x3M/q4u7rnjfZPvYw0zW/qeu9fNh3
YoZ9X9fFsK+c9zT7sPmzIkyBH/zW4P5eWhcrv/e64crvIb/V1TP83f0/dfXQ
f7bhy68hv9TVx6s9Nt++n+vi0G+eBytXhfxRV6+S7++62PaH681z3E919dZ6
wf7mDfGjRUM2PFq/IRverBl6jYZ6ZqfQXRq6fzs3ZMOatRqaB5uY26yh3mNu
54YYhm+1z4Oa6zbESNb4l88I3zoNMWzthvLCOXzY3P1dGqp9ruP+rIuVGzS0
btixceg2DTFmk9BtG2LVRqFbNcQaxls3dF+2Cr1lQ1zDxzy41a6heFi4RUPv
Jdzk/WSMe0YcY3CLOtSGDdvwrjbUWx1D79hQj3ZqyIYlHUJv3xBDWVfLhri5
YUP7gUntQ2/XEJvQ2zbELTQ14BE5mAerOG9qLPLZrPL9pf4ODd1jNLXhF2tk
/2l/A86bHts/fPs1dF8PCN2nIX7sHnq3hvqqR+juDfVPU0M2rPlf6K4N9Vai
oTG4hm/XhhhEDubBsD1D79EQe8i3d0MMw0c9WEgc3x5uFUMXGmJHqSEblpQb
smFNOnSqoXf+x5Af6nrvf3AfwqRMQ/NgFXOTDfGrGrrSEIfwsQdYSc18Q3xk
jd0a4hm+XEP8yjaUF57hw4ZTnB9nyntA3F4NMZQ6rBt+7Bu6V0Nr7Be6b0Nr
P7AhG9bsE7pnQz18UENjcA1foyEGkYN5MIxv2LuhPZOPbwnD8FEPFhJXb6if
jgw9oKG+PKohG5bw7xWxYc2hoQ9p6LfVTz5fuFlr6OxgUv+G5sEq5h7cEF+p
wzw4hI89cE+peURDbydnw53g7uI7vCF+HdZQXniGD5v/vp3/Lov/RgrGHNfQ
/4/tgwfEHe8bvdFXfTU2ZExDfTbONn1+gm0YMyxkaEN9Pink1IYYNCRkcENs
G+Qa9OfokOMb4tZwx6/tHMSs6ThiYN4Iz4MXk11jM9c5pSF2TAg5ke/IXegZ
37Gn7t9FIRc2xJiTPA/2THGuNo4b3xDDxntvmzr3yQ0xCz2xIa5NdC4YMC1k
akMMZU+jGnoD0CMbehtGeg/wd0HI/IZ6cqFtevQs2zDm9JDZDfXKeSHLGmLV
rJCZDfFsRshpDb0l5JvXEKvmOL6DcxDzf5rOO/7rsfvjSTaVHRmhUKjsUBKJ
72fvVSK0qKSQklIqTVoa9kz23snee+8te9/26neej9fr98d5HOdc1znnuq73
dZ7XR7jvdo4jBk5c6Lxw5yLb+7jOkiZx52KPwcrJ3mdb75Wzg0MLQxY0iTXn
2+5s3/wmsfZsx+/t3IubxIzLQi5t0n3Ft6hJnJvvs9jTPvLSP4+HPNakfnrC
Nv/c/knbsOTqkKua1Cc3hFzfpL650TZMuTLkiib17k0e62Hf5U1iz1WeBx+v
CVnWpP4k33VN4tky1+vuOPYDI+4OuatJzLjHNgy61zaMuTXklpAvQ9IJ3dev
4q8zCdnw5TbPS3ruzU3q+ftD7msSt272HvKueWeTuMgar20SN/Hd0SRu3e68
WfuweVNnNune9Hbc8ibx8T6vG5Y8EvJwkxjxdMhTTernZ2zDlIdCHmxS3z7r
sYZ9K5vEnoc972h/z0eb9L+d/ZS/ZX/7qFd33ANN6q3XQl5tEo/eCHm9STx6
0zb8eCHk+Sa9P9wv+h9ervDZwZoXPW+I5z7XJNY+4HmD7WMPI1zzlSa9kZwN
d2K4fS83iU0vOe8w+7D5HUdfzm7S7wv0rCb9zpjlc6c3YNbnTeqVL23Tq1/Z
hkMfhXzofD+H/NQkDn0Q8n6TuPZeyLtN6lXyrWoSIz92/DjnIOZ0xxEDP/7n
vPDoF9uzXefHJvXJJnE3N07ozm2akM0d3CwhG958G/JNkxj0ne1p9n3dpD4k
R+uEzoDcPzSJ6Z94rTPt+75J3PraZzHDvu/87Q+E8Qkxib1+1iSmf+pc8Obf
kH+axKQ/Qn73vWgRcWsmxJi/Q/5qUh+vHb61EuIOvj+bxKd/PA9urg75r0l3
ixzNE2Lnf6630HHUo59axvhGCfVlq4RsWMIZYM/3un5rEvvQvzbpPfjV3wPe
bBBz10+IT+uFXjchTqHXSYhhaPbAPaXmhgnx+jOfC5xif+wffpGPXNxp5lKD
884mxCP66qCEzpo+6BZ6/4R6qV3o7RPqmR0SsumhHROyYcxWodskxOjdQndK
iEFbht4iIbZtntAdgjfk2y4hbm2dUDycIgcxMJE4YuDF7gnlhR97JGTzNlCn
Y0Lv+TshbzfpXUe/1aTfLmjYAY86xNz2CfFp54RsuIVvp4RY1iV054S4Re5d
E+Ju24TWCrfw7ZIQt4jjLGAZPvJSr3tCZwpb2eu2Cb0T2ySUizUeHLpHQmvv
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
+9gD95SaLdJ6O9/2neDu4lszLX41TysvPMOHzZ/B8duR33EwZsO0+LtFNr5f
yLis+LFx+Fqn1VttQm+ZVs9tlZYNa1qFbplW/2+d1hhcw7dRWgwiB/Ng2Kah
N0mrV8m3RVoMw0c9WEgca4JNjG+eFkd2Cr1jWvzoELp9WvzYLvS2aXEEvU3I
nJCfQ35Ki1v42qbFHeLIRR/vEnrntJi1fVq5+H1PnR3S4ha6XVr8QjMP5pGP
PcN91rhZWu8Bmn3CCHKzVvjROfQeabF4X/6Zc1r9uV9aNkzaPfRuafXu/mmN
wSl8ndJiEDmYBxO7hu6S1rtCvr3T4hY+6sE/4jqm1X+HhO6ZFjN6pWXDoEPT
smHMgaEPSItBh6U1Bjd3Teu84MtBac2DR8ztlhZfqcM8uIWPPdC71Dw4LS70
TisvdxZfj7S41T2tvNxjfNgwpk/ow91Lw0JOTKu3htuGF02hj0yLK8nQibR6
phA6nxZfGD8irX4qpjUGy/BRA1al0oqHMbnQ2bRYmU5rjF4lH2OwijrUhgel
tPLCi/6hj0qLH0enZcOOWuhqWrxBV0LOZez/72tKvnJafX5s6AFpsQofNWBT
I3Q9LcYdk1YNmMh6M2mxk/r90uJZ37Ri4Ck+bH5rcF/2SusNII59wpjj0qoN
LwaHDEqLK0NDhqTFi5EhJ6XFF8YHptW3J3usmX3Hp8WqExzPPw8c4e+3tr8n
Y+s7H2Nrug614cEo54UHZ4SMS4sf423DjtNCTk2LN+hT0nqLuDvcuVb2jU6L
r6yLfba0jxpwaIxzwbgzXYM3g+/AWW/u+mPT6vPTHbOZfdj8puBc90zrtwWa
XoWPE5wXrkwLmZpWz8Cs2Wn10Lm2Yc2UkLPT6uPzPLadfZPTYtJUz4Nr00PO
SatXyTcrLZ6d43rbOm5SWt9/ScjitPix1DY8usA2vJkfMi+t+31PyN1p3cV7
bcOaBZ63u+fOTavHmHtXWgyb6z3s5ZqL0mIka5zp88J3floMW+i8Xe3Dpg/u
c+0OjpuRFisv9Lphx+Uhl6XFmCtDrkiLVZeEXJwWaxi/NK07cl3ItWlx7VLP
g1tXOR5mLQ+5Ji1uXu2x3o5jrIfrUBuu3BByfVp9eUfI7Wmx407bMOXWkFvS
4iXruigtbl7k/cCYm0NuSos16BvT4tmNrpF0Dublfd7UaO+z4U5kXP+2tPr8
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
o0P3L2rtxxRlw6ZK6HJRPTygqDGYh69UFI/IwTxYxTesF7Vn8vEtYRU+6sFF
4opF9dMJIUOL6ssTbcOSYbZhzfGhjyvqt9U/Pl8YWijq7GDSwKLmwSrmHlsU
a6nDPDiEjz20cM0hRb2XnE0P3118g4vi1yDnbW4fNlwZGXJSyDLs+HuX9UOu
ib/esCQbfpwackpRvTU+5Iyieu5M27BmdMioovp/gsc2su/kohh0iufBsDEh
pxXVq+QbVxTDTnO9DR3H+mDHOSHTiuLFdNvwY4Zt2DEp5KyiWMmeRvj+XRuy
vCjGTPa8tp47sag+nhUysyiGTfQednDNqUXxkTWOLYph+KYUxbiznXd7+7Dp
ietDrivqPSDu9KJ4MdPrhiXzQ+YVxeULQpYW1asX2oZPc0POK6qPL/JYJ/vO
LYpH8zwPPi4MWVDUG7MkZHFRDFvgeh0dN6eoXrw65Kqi+LHMNjy6xja8uTTk
kqJ4tNxjMHS2zw7WXOZ5B3juxUWxdo7ndbOPPfR0zSuLejs5G+7EwfZdURTD
LnfeHvZh7+U9LSqqr14KebEo/r4S8nJRXLkl5OaieubukLuK6qF7bMOXm0Ju
LKqP7/XYkfbdUBSHbvY8WHlbyK1F9Sr57iyKbbe63hGO49vDi0dCHi6KH4/a
hkeP2YY3K0LuL+rPrviNyG+6dtZTzLYHPK/iufcV1f9PhDxeFMPu8x76ueZD
RTGSNd5RFEPxPVgUw1Y6b8M+7GE+P84067jbi2Ll4143XHk+5Lmi+uy1kFeL
6tXXbcOXZ0OeKaqP3/DYQPueLopDz3neCf6GLxTVt6/6Ww61j3rHO+6ponrx
w5APiuLHR7bh0ce24c3bIW8V9RbRi7AAdj7ps4M173jeaM99syjuPuV5o+xj
D2Nd8/2i3svbfSdOt++9ohj2rvOOsQ/7Z753SX9OxG8N7u/5RbHyE68brnwd
8lVRPcOfK/1YVA/9bBu+fBnyRVF9/D+PTbbv86I49JXnwcpvQ74pqlfJ90NR
bPvG9SY5blVRvfVPyN9F8ei/kH+L4tFq2/Dmt5Bfi+qZbWNP25R0/7YryYY1
v3veXM/9pajeY27bkhj2i/ewyDX/KoqRrPF7nxG+P4ti2B/Ou9A+bO7+9iXV
nuG474piZbOS1g071o6/Xqskxqwbep2SWLVm6OYlsYbxFiXdl1ahW5bENXzM
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
cceU1UNjQk4rix+n24ZHY23Dj5NDRpbFpnEeg5VHl3VesGaU523guSeVxVTq
MG99+9jDxq55all9fobztrbvlLK4MNp5W9mHDVfODBlfVl9dGXJFWX12lW2Y
cVbIxLJ4MzlkUll9MiNkellMYXxCWT0002Nb2UcNWHi24+nLc0KmlcXNKR7b
yfkY28Z1qA0LZjkv7Dg/ZGFZLFlkG47MDTmvLJagzy3rvxHn36vlv53qaN+c
svp2aciSsngz2zVg0jzngneLXWMHr3dqWdyk/oKy3qL5julsHza/L7gvQ8t6
D6Z6nzDjAteGGZeEXFwWby4LubSsN++akGVlMYXxi8rq2+Ue29++C8ti4eWO
53f81f5+Pfw9GevlfIwd6DrUhgfXOi88uC3k1rL4cbtt2HFjyA1l8QZ9fVlv
C3eHO9fHvuvKYuqF3ufh9lEDDt3kXDDuDtfY29+Bs065/i1l9fnNjknah93C
5zqkrN8uaHoVPt7pvHDlgZAVZfXMYyGPltVDj9uGNfeH3FdWHz/hsbJ995bF
pBWeB9ceDFlZVq+S75GyeLbS9UqOu8ff/8WQF8rix0u24dHLtuHN0yFPlcVR
4u4u6y7+GPJDWax5xvOO89wny+r/V0NeKYthT3oPQ13z+bIYyRof9jnhe64s
hj3rvIPtw6Y//hfyc1lsJe6hslj5itcNV94Jedvf/+OQj8rq809sw5e3Qt4s
iwGfemyUfW+UxaG3PQ9W8k6+W9Z9Ih/v5Wn2Ue9kx71eFiO+DfmmLGZ8Zxvu
fG8bfnwesqosdvzgMdj5ms8OHn3heWd57mdlcfd1z5toH3uY5ppfl/XWcTbc
ian2fVUWy7503in2YcN63n9+E3Dv21Sihyq6s1uH3qoifvwR8ntZ/bM65L+y
+qlZRTas+S3k17IYsEZFY3Pt+6UsBv3uefDxr5A/y+IO+f4ti2F/ut55juPb
w4j1I996FTFjg4psuLNhRTb8aBF6zYr+2QB/T171u8395fcBPFqronmwhrnN
K2JBy9AbVcQ2fOwBZlFz3Yp4wBr/KesdwrdORSxbu6K8sA0fNj3P+XGmix33
d1lcow7rhh+bh96sojVuE7ptRT23bUU2rNk09CYV9fF2FY3BLHwbV8QgcjAP
PvINt6hoz+TjW8IwfNSDl8S1rqgXdwm9c0X82LUiGx51rMiGNzuEblfRW0Uv
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
mxwyqao7fbZt/l4RpsAPfmtwf7tXxcoZXjdcmRcyt6qeWRKyuKoeWmobvpwX
cm5VfXyBxzraN6cqDs31PFi5IGR+Vb1KvkVVsW2+6+3quNlV9daVIVdUxY+r
bMOjq23Dm4tDLqqqZx4NeaSq+/eYbVhzieft77kXVtV7zH24KoZd6D30cM3L
q2IkazzfZ4TvsqoYdqnzHmQfNnf/cdfu6riFVbFymdcNO24Iub4qxtwUcmNV
rLo2ZHlVrGH8uqruy50hd1TFtes8D27d7HhYeHtV7yXcvMVjWccxdqTrUBs2
3B1yV1W99WDIyqp69CHbsGRFyP1V8ZJ1XVMVN6/xfmDSfSH3VsUm9D1Vcese
16g4B/P6+byp0cVnw52ou/4DVd3jB1w77zWyf34Td/d502PfhHxd1X39LuTb
qvjxTMjTVfXVyyEvVdU/r9iGNU+FPFlVb73qsWPte6IqBj3teTDsuZBnq2IP
+V6simHPut4Ax/Ht4dZ7Ie9WxY73bcOSD2zDmjdCXq/qnZ8VMrOq9x5NH8Kk
Nz1vpOe+VhW/Pgr5sCoOveY9nOaa71TFR9b4QlU8w/d2Vfx6y3lPsQ/7HJ8f
ZzrUcc9XxdAPvW748WXIF17jDyHfe+0/2oY1n4esqqqHf/IYXPss5NOqGPSF
5031N/zKe/7e33KKfdSb4LhPquqnv0L+rKov/7YNS/6xDWt+CflfVb+tZnuN
cPNjnx1M+tXzzvXcn6vi6yeeN8c+9rDQNf+o6u3kbLgTC+z7vSp+/ea88+3D
3rF3nG/ItN7i5r9eK6z8zzb8WKsW73NNvbVh6A1q6rmNarJhzZqhm9fU/y1r
GoNr+NaoiUHkYB4MWyf02jX1KvnWr4lh+KgHC4lrVhObGF+vJo5sGXqLmvix
Veg2NfFjk9Ab18QRdOuQSSGfh6yqiVv4WtXEHeLIRR+3Db11TczatKZc/L6n
zuY1cQu9WU38QjMP5pGPPcN91rhuTe8Bmn3CCHKzVvixY+gdamJxx9C71tSf
nWqyYVK70NvX1Lu71TQGp/BtVxODyME8mNg+9E41vSvk26UmbuGjHvwjbtua
+m+f0HvXxIx9a7Jh0H412TCmc+g9amLQ/jWNwc1tajov+NKlpnnwiLm718RX
6jAPbuFjD/QuNfeqiQvdasrLncW3Z03c6lpTXu4xPmwYc2DoA2rqpWNCH13T
fR1Qkw0veoTuXhNXeoY+uKae6RP68Jr4wvhBNfXTETWNwTJ81IBVh9QUD2N6
hz6sJlb2qmmMXiUfY7CKOtSGB0fWlBdeFELna+JHsSYbdqRDp2riDToZMhnb
9xUG4UvU1OeV0OWa+IWvqSYOZWrKBeNKNdWAiaz30JrYSf1cTTzL1hQDT/Fh
81uD+7JzTW8AcewTxlRrqg0v+oZu1MSVo0L3C1kdf3186ONq4gvj9Zr6dmBN
Y7AMX60mVvWvKR6+HFvT94OVfE/GYA/5GINV1KE2PBjkvPDgpJARNfFjpG3Y
cULI0Jp4gx5S01vE3eHOrWnf4Jr4yrrYZ3P7qAGHTnQuGHeya/Bm8B046/Vc
f3hNfT7MMevah81vCs61Q02/LdD0Knwc5bxwZVzI2Jp6BmadVVMPTbYNa04P
GVNTH5/tsU3sO60mJo31PLg2PuSMmnqVfBNr4tkZrrex406t6fvPDplVEz/m
2IZH59qGN9NCptZ0v28Iub6mu3hTyI01seYcz2vnuVNq6jHmXlcTw6Z4Dzu7
5syaGMkaJ/i88M2oiWHTnbe9fdj0wc2uvZXjzqyJled53bDj/JCFNTFmccii
mlg1P2ReTaxhfEFNd+SSkItr4toCz4NbSxwPsy4KubAmbi71WDfHMban61Ab
rlwWcmlNfbk85Jqa2HGtbZhydchVNfGSdc2tiZtzvR8Yc2XIFTWxBn15TTy7
3DV6OgfzDvd5U6ONz4Y7cajrL6upz5e59oFe4yX+Nl/WxCP66rWQV2u6r2+E
vF4TO+4Iub0mRtwfcl9NvbTCNmy6LeTWmvrsAY+l7LulJh7d7nmw6q6QO2vq
M/LdWxOr7nS9pOP49rDjiZDHa+LFk7bhx1O2YcdDIQ/W9FafEjK6pjcbTR/C
mIc9r+G5K2tizTMhT9fEsJXewzGu+VhNLGCN99TEMHyP1sS4R5y3v33YI31+
nGnRcXfXxMqnvW7Y8XLIS17jWyFveu1v24ZNL4a8UFMPv+OxofY9XxOPXvK8
Ef6Gr3jPb/pbDrePekMc91xN/fRpyCc19eVntmHJKtuw5v2Q92r6bXWq1whD
n/XZwaQPPG+M575bE2uf87zT7GMPZ7rmxzW9l5wNd2K8fR/VxK8PnfcM+7D5
jUJfXlATY76q6R63qweLQqbUxZFvQ76piSXfh3xXU5/9GvJLTfxi/OuaevE3
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
u0LuTIpB6Du4G6l4PyFzU2IZvtuT4tADrsVM/y/koaQYdLdrneQ+9ybFKvQ9
SbHqHj830PXYcz+v8YakvgE3eJ9J12at8OKJkMeTYsQLIc8nNdsv2oZPj4Ws
SmruX3IsZ9+jSTHrcT8Hs54KeTIpvlPvuaT49KT7ZZ33SFJceCvkzaQ48bZt
WPOObZjxasgrSfHiXcdg6MM+Lxj0mp8b5mdfToq1j/i5ofaxhzHu+UZSjHjP
dUfbtzopfr3uuqPsw4Y3H4S8n9Rdbx7vc52U7n6LlGzY8XHIR0nx49OQT5Ka
n29Cvk6KR8Q/TGq2vnVskn30gEmfOZ95+irky6T4+Lljs1yP2FT3oTcs+c51
YcTvIb8lxYw/bMOXn0J+TIof6B9CusQe5vu+zrPv+6Rm/u+Qv5Ji2PfuAY9+
di1Y9qd7zPB6v0iKX/T/NSmG/eKcRfZh81uE+/JsUoz+wvuEN/+4N+xYM9a1
Rkr8WDv0WiGXxz+vH3q9lHhE/L+k5naDlGJwDt+/STGpWUr5sGbdlN4ffOR9
EoND1CMGp+hDb3iwYUp14cHmoVunxI82KdmwY5PQG6fEG3TLlL5L7/vOwSB8
G6XE2n+9T1iFjx5waNOUasG4tin1WO73wFkz6/RvldKcb5ZSDnOPD5vfDs+E
PJ3Ubwg0swoft0ipLlzZNvQ2Kc0MzNohpRniTmDDmg6ht05pjndKKQan8G2V
EpOowXNwrWPo7VKaVep1Toln+OgHI8lrn9L73yv0ninxo3tKNjzqkZINb3YJ
3TWl+3186ONSuouDUrJhTbeUnoNNPLtzSjPGs8emxDB87IE7R889UmIka9w+
pXPaPfRuKTFs15Tqcnb4sJmDE1LqDVvJ65QSK/dOad2w44DQ+6fEmINCH5gS
q3qG3jcl1hDfL6U7cmjoQ1LiGj6eg1u9UsqHWX1D90mJmwenFONukUcMbtGH
3nDl8NCHpTSXA0IfkxI7BqZkw5SjQvdPiZesa5+UuIlmPzCmX+gjU2IN+oiU
eIamB8yiBs/BJ86bHnzrOBvuBPNN/6NTmnM0vWEfazzU72ZBSjxirk4LOdX3
dWLIhJTYkQh9SkqMyIfOpTRLhZRs2HRy6JNSmrNiSjGYh+/ElHhEDZ6DVanQ
yZTmjHrZlFiFj35wkTzePewYHNKUEi+G2IYfQ23DjkpIOaVv9Zah26X0zUYz
hzCm6ufW8LOllFgzPGRYSgzDxx6au2cjJRawxkxKDMNXT4lxNddtZh92G58f
ZwqvyUunxMphXjfsGBcy1mudHDIppbVPsQ2bxoSMTmmGpzq2sX2jUuLRWD/X
2u9wvPc8ye+ylX30a+m8kSnN0+yQM1Oayzm2Yclc27Dm9JDpKf22au81wtAR
PjuYdIaf29rPTkuJtSP93Fb2sYdO7jkrpe8lZ8Od6GjfzJT4NcN1t7MPm98o
zGXvlBizMKV7/FhI1/hdu3NaHFkcsiglliwNWZLSnJ0Xcm5K/CJ+VkqzeL5j
Xe2jLsxaHrIsJdacE7IyJZ6tcGxv1yO2q/vQu7ufPTslvlzgHrDjqpArU2LS
RSEXpsSSS0IuTokpFzvGvF4bck1K+ybvipS4daHrwqbLQi5NiU9Xu0dvP3t5
Sgy73M8d5Gfpt5fXyH4OdR/yYc117g1vbgq5MSWW3BJyc0pcvjvkrpR4RPyG
lOb2HseOtO/6lJh0q/P5VtwZckdKfLzNseNdj9hR7kNveHCv6zKLj4Y8khI/
VtmGHQ+GPJASb9D3p8Sjx1O6Iyfbd19KTL3e+zzJPnrAoYdcK++8VT7rteN+
rZXWTNP/4ZTu7v+ck7YPG4484d7w5qmQJ1Oaq+9Cvk2JHc+EPJ0SO561DWOe
D3kuJWY97Xxm6bWQV1PizXPOGW7fKynx5eWQl1LizSu24eaLIS+kxLYX3IMZ
fd11YcNq27Djg5D3U+LLmyFvpMSRt0PeSok9bznGbH8S8nFKfHrDtWDPO86B
T+/ahk8fuscQr5f1wb6PHIOh7zlngteCzXePu3N7Skz82DklnzHnDju+CPk8
JXZ8aRvGfB3yVUrMIv5ZShz5KeTHlHjzlXPm2/dDSlz83u9vnn3Ys/0+v0mJ
bd+4Bxz52XXhyi+24cV/If+mxIvfQn5NiTV/hvyREkt+d2y61/hpStz61bVg
0F/OYYb/tg2T1kirxzTn8W5g3JppxZj7f5yz0mvBHuhzZSZhFvedHHjTLK0Z
gB/rhm6RFlfWD71eWrO0aehN0uIL8eZpzdlmacVgG7510uLTBmnlw56NQ7dM
i3MbphWDQdQjBr/oQ2+40iqtuvBiq9Dt0+LH1mnZsKZt6DZpsQS9eVpspT/7
gS/4Wqc1/9uG3iYtnuGjB2zaIq1acK1DWj1gJevdKK37SP8t0zq7dmnlcJb4
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
dCovjmTysmFJLnQ2L54RJ5+5qoZU8mINcXLWtK+c1yyVQhfzmi182LCyEDqf
F8PQ9GBea64LV+q24cXIkBF58aIppJEXa4aEDM6LJYMdY87HhozJi1sN14JB
Q50Dk4bZhkmj3APOsl7WB+NGOwZHhztnQ68F+8Oc7s5hefFrjHNgOWfMucOa
00JOzYsjE2zDkkkhE/PiGfHxIduEnBFyel6smeicDvZNz4s10/z+trYPe0u/
z8l5MWyye8CRGa4LV2bahhcLQxbkxYszQ2blxZo5IbPzYslsx1p5jePy4tYs
14JBc53DDM+zDZPOco/NnMe7gXGLHGPu5ztnJ68Fm98TnOuheTFrsXNgzRLb
8OPskBV5ceWckJV5zRJzclFefCG+PK85u8SxPexblhefznU+7Lkw5IK8OHee
Y/u7HrHu7kNvuHKp68KL60Ouy4sfN9iGNVeGXJEXS9CX53W/nw15Ji++4Lss
rxnA93RePLvMPWDTVa4F1250j55e7/l53Uf6X+uzuybk6rzO8lrbzMNz7r2v
89gn3Lk55Ka8uHN7yG15MeUO23DlrpA782Ib8Vvz4hn6lry4c6dzmIEHQu7P
i2H3hdybF4/utw037wm5Oy+e3e0ezNCDzoc9/wt5KC+OPBnyRF7seTTkkbxY
8ljIqrw4eov3k3H84by49rBr5fws+cz8486HVU+5R3+fB2dd8TshlvRaWF/R
ayGfP5cwb8wx7HneZ81d/yXk57wY9FLIi3kx5ZWQl/OajbdC3syLZ8RfyGtu
3nasyT7qwqBXnQ933ghZnRefXnNsjOsRG+o+9GaO33Fd2PFpyCd5seQz27Dn
g5D382IQ+r28vvlL85rD0+x7Ny+mfBnyRV48e9c9YNCHrgXDPnePUV7v63mx
jP4f58Wtj5wzxT7shT6/n/Li9eveJwz6yr1h0Hch3+bFlB9Cvvdafw/5LS+e
Ef/G+/jDsTPt+zovBv3ofLjzq9/fAvcnttj1iM11H3rDlD9dl7lcO77VaxXE
jmYF2fDj35B/8uII+u+8fm8t87pW2PdXXqz92vtcbh89YNZ/rgWf+F1AjzP8
Hjhr5pv+axbEsjUKymHm8WHDrxYF/baAN+uFXjekF3bIpQVxZ8PQGxTEkY1D
tyxoxtqE3rwgthFfv6D5a1tQDLbhoy4c2qSgfOaqdehWBXFr04JizBz1iMEv
+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
7iXFYOguJeXAVNaCzXePu7NWSUykJznwmzPm3GHH3qF7lMSOfUqyYUzP0PuW
xCzi3UviyMGhe5XEG+Lk8I3Ed1BJXDywpPfH73h82HCT97lfSWxD0wOO9C6p
LlzpU5INL/qH7lcSLw4J3bck1hwW+tCSWIImBlNZ414lcYtnqQWDDi8phxk+
oiQbJh1VUg+4Sx7vBsYdXVKMuT+ypBxYxVqw+T3Bua5ZErO47+TAm4ElzQD8
GBT6+JK4cmLoE0qapXToVEl8IX5cSXOWKSkG2/AdWxKfTiopH/YkQydK4tzJ
JcVgEPWIwS/60BuuZEuqCy/qIbWS+NGwDWuKoQslsQSdL4mt9Gc/8AVfrqT5
HxIyuCSe4aMHbCqVVAuuNbkHrGS9p5R0H+lf9dlVQsq+o1XbzMOckNklMZo8
9gl7hro3HBkZMqIklowOGVXSvZ4QclpJbCI+vCQuTHRsA/uGlcSnMc6HQaeW
9I2ElWMd29z1iLV0H3rDm0muCz9mhswoiTGzbMOOaSFTS+IQekpJ7GB/Z5bE
JnyTS+LuMO+znX30gEPTXauT8+jRwu+Bs97W/c8oiRGnO2cb+7Bh9DjvDR7N
C5lb0t29JeTmkrizMGRBSRxZFHJWSfNxdsiKkjhFfH5JM7fSsS72URcOLXY+
7Fkesqwkli1xbE/XI9bVfegNb85xXfhxacglJTHmMtuw44KQ80viEPq8kv6d
AX8m58/Q+9h3bkksuDLkipIYd657wKELXQsGXe4eu3u9S0viF/0vLolhFznn
APuwj/L53VQSl5d6n3DoKveGO9eFXFsSR24Iub6kGbs95LaSOEX8mpLm7w7H
DrXv6pI4dKPzYc+tfn/93Z/YANcjdoT70Buu3Om68OKhkAdL4sf/bMOae0Pu
KYkl6LtL+l5xX5jPQfbdVRJ/r/Y+j7ePHrDpPteCaw+7R2+/B8464f4PlDTn
9zvnFPuw+fs4fqvNMyMfcS2486htOPJUyJMlseSZkKdLmqWXQ14qiU1PhDxe
0py94ljBvsdK4tOzzme2Xgx5oSRWPufYENcjVnEfejf52edLYsyr7gE/3gt5
tyR2vB7yWknceSNkdUlcWe0YM/9hyAclcYe8d0ri2Wuuywy/FfJmSVx73z3G
+9m3S5r1t/3cGD9Lv4bXyH4mug/58OYj94Ydn4V8WhI/vgj53O//+5DvSuIR
8U9KmvkfHJtq38clMelL58O8b0O+KYmPXzk2x/WIne4+9IYlP7oujPgr5M+S
mPG3bfjya8gvJfED/XNJ7Pg35J+SmILvp5JY+7H3ucA+esCj31zrbOfR44hy
zE7IdWXxgP5/lDTbvztnqX3YMOU/94Y9a0beGmXd+x1Cdy6LNWuHXqssjjQr
y4YlzUOvUxbPiJPPXG0UesOyWEOcHJiCb4OyZmn90OuVNVv4sGHluqFblMUw
ND2Y15Zl1YUrG5dlw4stQrctixebht6kLNa0Cr1ZWSxBE2POtwrdvixu8Sy1
YFDrsnJg0uZl2TCpXVk94CzrZX0wbsuyYnC0TVk5cI21YJ/pu/N1SfyiJzmw
nDPm3GHNtvHP25TFke3KsmFJp9Ady+IZ8Q4hq+Kfdw69U1msIU4OXMHXpSzW
7FjW+4M1+LBhJe9z+7IYhqYHHOlaVl24sktZNrzYO3SPsnixW+hdy2LNHqF3
L4slaGLwlTVuXRbXeLZbWQzas6wcZnivsmyYtE9ZPWAwebwbGLdvWTHmvntZ
ObCKtWDP8rkykzCrZ1k5sGa/smz40Sv0QWVxpXfog8uaJebk8LL4QvzAsubs
yLJisA3fAWXxqU9Z+bDnsNCHlsW5vmXFYBD1iMEv+tAbrvQrqy68OD70cWXx
Y1BZNqw5JvTRZbEEfZTv96iQkWXxBV9/zwC+EWXxDB89YNOAsmrBtRPK6gEr
We8hZd1H+h9b1tkNLCuHs8Q30PMw2r1hNHnsE+6cFPrEsriTDJ0oiympsmy4
kgmdLottxE8pi2fok8viDnFymIFS6GJZDCuU9e8y4RE+bLjJv9vMlsUzND2Y
oXJZ+bCnGlIpiyPDQoaWxZ5GSL0slgwOaSqLo6yF/TRzvFYW12qu1dzPks/M
D3E+rBruHrCe8+CsN/Q7Ibam18L61vNayOfPJczbKrNnjM+au35eyLllMWh8
yLiymHJayKllzca0kKll8Yz42LLmZrpjm9pHXRg0wflwZ0rI5LL4NNGx9q5H
rLX70Js5Pt11Yce8kLllsWS+bdgzK2RmWQxCzyjrm79/WXO4rX1nlMWUs0IW
lsWzM9wDBp3pWjBsgXu083onlcUy+s8pi1uzndPZPuy9fX7nlMXrSd4nDFoc
sqgsBi0PWVYWU84OWeG1XhhyQVk8I760rH1c5Nhu9i0pi0ErnQ93zvf76+H+
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
XXegfbdVxYVbXXeAfdhw5f6Q+6qaqw9DPqhqzj6yDTMeCnmwKt48HPK/qubk
yZAnqmIK8QeqmqGnHDvFPnrAwkecz1w+HvJYVdx81LGi6xFLuQ+9YcHTrgs7
Xgl5uSqWvGobjjwf8lxVLEE/GzJlSPA95KMh4gu+Z6qa29Uhr1fFm2fcAya9
4Frw7jX3yHu9q6riJv1fqupb9KJzhtiHze8L7svVVX0PVnmfMOMN94YZ74S8
XRVv3gt5t6pv3qchn1TFFOJvVTW3nzk21r43q2Lh+87nd/zHfn8T/T6JTXU9
Yqe6D73hweeuCw9+DPmhKn78ZBt2fBPydVW8QX9V1beFu8Odm2nfl1Ux9U3v
c4Z9X1TFoW9dC8b97B4j/R4463nu/31Vc/6dc+bah32Iz/Wqqn67oJlV+PiL
68KVf0L+rmpmmgV3165phtapyYY1f4X8WdUcN68ptsy+P6pi0t9+Dq79F/Jv
VbNKvbVq4tm/7rfUeb/7/W8c8ZY18WOTmmx4tGlNNrxZL/S6NXGUvN+quou7
h2+3mlizfk3PwSaebVHT/LcKvVlNDMPHHjgbem5UEyNZ45o1nRO+DWti2AY1
1eXs8GEzH3uG3qMmtpK3Rk2spA/rhitbhm5X0/vfLvS2Nc15x5ps+LJF6LY1
MaBTTTEYhK9NTRyiBs/BSr6T7Wu6T9Tjewnb8NEPJpK3eU2M2CV015qY0a0m
G+7sWpMNP3YI3bkmdnCWxGBn65rODh7tWNNzsIZnt6+Ju/ThOdiGjz3AAHru
XNO3jrPhTjDf+HaqiWVdaqrLzOPDhvV8//lNwL0/OfRJNd3ZROhTauLHPqH3
rml+Dgp9YE3z1KsmG9b0CN29JgYcXFMMZuHbqyYGUYPn4GPP0PvWxB3qHVAT
w/DRD16Sx7uHEUeGPqImZvSryYY7/Wuy4Uff0H1CXq9HvUZ8oxr6bnN/+X0A
jw6p6TlYw7O9a2LBMaGProlt+NgDzKLn4TXxgDXuX9N3CN9hNbHs0JrqwjZ8
2Mw858eZwhHy9quJa0fVtG74cULoQTWtMRU6WdPMpWuyYc3xoY+raY4zNcVg
Fr5ja2IQNXgOPvIOT6xpz9TjXcIwfPSDl+QNrGkWqyGVmvhRsw2P6rbhTT50
rqbvErMIC+DogJrODtYUanoONvFstiYG04fnYBg+9rCme5Zr+p5xNtyJNewr
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
aV6p938tnXX4VlWzhhUVTEzsQBELDOzCwMBAMFEQbFHZHT8EFRVFQVRAUbET
u7u79bO7u7tbz9znef6Ya5yZNTNr7b3m3i/oOd9aidiGj37wjzzminkmvmai
vW4WetNELOkXevNEvNko9IaJuIPeINFezg05JxGf8K2f6NzkUYv53jL0Fol4
tHGiWm+OVJ9NEjEM3TcRt9Csg1vruw/fAPbYJ9G3Ac05YQe12SvM2D70dom+
ATuH3inRPO+SyIYx24beJtHc7pooBnfw9U/EHWqwDj7uEHpAom8M9XZMxDN8
9IN55G2daIaGhx6WiB+8e2x4tHciG37sHnpwIjZxJ4jByq0SPS9Ys0eidbCG
tbslYip9WAd78HEG7iY990w05/v6rnFf8Q1NxIUhieoy2/iw4cr+ofdLNFcn
hExMNGeTbMOMESEHJuLNwSEHJZqTMqRIxBTiBySaocox+IWPHrDwEOfDrzwk
S8TNkY7N6XrEOrkPvWFB7bqw4/CQwxKx5AjbcGRUSEcilqDbkLN3j32E/Lu7
+IKvSTS3R4UcmYg3jXvApENdC96NdQ84koYkibhJ/zGJvkWjnbOQfdj8vuC+
DEr0PUh8TphxtHvDjPEhxybizfEhxyX65p0cclIiphA/JtHcTnZsKfvGJWLh
BOfzO/5Ev78efp/EVnQ9Yt3dh97wYIrrwoMzQ6Yn4sdZtmHHtJBTE/EGfUqi
bwt3hzvX276piZg6zufsZR894NBprgXjznaPxfweeNZruv8Zieb8dOf0sQ+b
3yw814GJfrugmVX4eI7rwpVLQi5ONDNXhVyZaIautg1rLgq5MNEcX+PYRvZd
kIhJF3sdXLs0ZEaiWaXeFYl4NsP9NnTe+Yne/60htyTix2224dHttuHN9SHX
JeIoeecluouvhbyaiDU3eN22Xnttovm/M+SORAy71mcY5J43J2Ike7zczwvf
TYkYdqPr7mAfNvPxRsjridhK3mWJWHmH9w1XHgi5P9H7fzzksURz/oRt+HJf
yL2JGPCkY3vYd08iDt3vdbCS7+SDie4T9fheDrOPfrs77+5EjHgp5MVEzHjZ
Ntx5xTb8+F/I04nY8apjsPMuPzt49IzXjfDapxJx926vO9A+zpC55wuJvnU8
G+4E8/18yHOJWPas6460DxvW8/3nNwH3/t+QfxLd2ZnS4FQifrwb8k6i+fkk
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
xJ1/XYs5njniM+Vi1h+uNd19/srELfSfmfj1p9dNdT3OPMl7/DbT9+BbnxNG
UJu9wo/Z45+75GLxvKG75prP+XLZMKlz6Nlyze78uWJwCt+suRhEDdbBxDlD
z5Hru0K9eXJxCx/94B95s+Sav8VDL5aLGUvksmHQkrlsGLNQ6AVzMWipXDG4
2SnX84Iv3XKtg0esXSAXX+nDOriFjzMwu/RcNBcXls5VlzuLb5Fc3Fo4V13u
MT5sGNM99DK5Zmnr0Fvluq/9c9nwokfo5XJxpWfo5XPNzKqhe+fiC/Flc83T
arlisAwfPWDVCrnyYUyv0KvkYuWKuWLMKvWIwSr60BserJ6rLrxYP/R6ufix
QS4bdqwVes1cvEH3CTkY2/cVBuFbI9ecbxx6o1yswkcPOLR2rlowbsNcPWAi
+105Fzvpv24unq2TKwee4sPmtwb3Ze5c34CVcp0TxvTN1RtebB56s1xc2SJ0
v1yc2C70trn4QnzTXHO7fa4YLMO3SS5WbZkrH95sk+v9wUreJzG4Qz1isIo+
9IYHA3LVhQe7hd41Fz8G57Jhx46hB+XiDXpgrm8Rd4c7B4Pw7ZCLr+yLc8Iq
fPSAQzvlqgXjds/Vg28G74FnzazTf5dcc75zrhzmHh82vyl4rnPl+m2BZlbh
4x656sKVfULvnWtmYNaIXDN0sG1Ys1fo4bnm+BDH4BS+YbmYRA3WwbX9Qu+b
a1apd2AunuGjH4wkb89c778OqXLxo7ENj1rb8CYNSXLd72khp/ounmYb1mRe
19lrR+aaMdaekothI32Gud2zzMVI9niAnxe+IhfDcted0z5s5uB094at5O2f
i5Ud3jfsODzksFyMGRtyRC5WjQ45NBdriI/JdUfGhxybi2tjvA5uHel8mHVM
yLhc3DzKsaWdR2wR96E3XDk+5LhcczklZHIudky1DVNODJmUi5fsa1Qubo7y
eWDMCSETc7EGPSEXzya4R0/XYF1vP2968K3j2XAnVnb/k3PN+Unu3d17HO93
82wuHjFXd4Xcmeu+3hNydy52nB1yVi5GXBRyYa5Zutg2bDozZHquObvEsTXt
OyMXj87yOlh1bsg5ueaMehfkYtU57tfHebx72HFNyNW5eHGtbfhxnW3YcVnI
pbm+1UNDD8n1zUYzhzDmcq/bzGtn5GLNDSHX52LYDJ9ha/e8KhcL2OP5uRiG
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
XKt1Hj328HvgWVfu/0qpOX/ZOaV92Af4fE+U4tA7IW+XmoNZ487OUokj74e8
V4olH4Z8UGqWvgz5ohSbiL9bas6+cmyMfdSFTx85n9n6POSzUqz82LHxrkfs
CPehN1z52nXhxS8hP5fix6+2Yc33Id+VYgn621J/p3VHod+AJ9j3Tan5/yPk
91I8+8Y9YNMPrgXXfnOPY7zfT0uxjP4/leLZj86ZbB82HOH5darEa/I+KcWe
P90bjvwb8k8plswUa/8rNWdd4p87V2IT8b9Lzf/slWLT7furFJ9mrpQPg2ar
9P5gJf2JMbfUIwaz/nNvuDJHpbrwYoHQ81fix4KVbFgzT+i5K7EEPVelbxT3
hfmEL/jmrMTdv3xOeIaPHrCpa6VacG2hSj2m+T3wrGED/eerNOfzVsph7vFh
89+Q8t9k8N9r8HuC+8t8wp2FI96tEkeWCL14JZYsFXrJSrPE3yv1qMQm4otV
mrOelWIwD9+ilfi0dKV8Zmu50MtWYuUylWIwiHrEYBZ96A1XVqhUF16sHnq1
SvxYo5INa1YJvXIllqBXqnTXdww9qBJf8K1Yaa7wDazEM3z0gE29KtWCa30q
9YAF7Ld7pVmn/6qVnlfvSjk8P3zYzMBOlXrDa/I4J9xZK/SalbizXuh1KzFl
/Uo2XNkw9AaV2EZ8nUo8Q69diTvEyeHebBZ600oM26TS9xIW4sOGm3w/N6rE
MzQ9uHebV8qHMVuE7ldpRgeE3r4SP7YOvVUlvmwTun8ljrIXzgNfiG9ZiWFo
asEp1pLP3G4XettKbNqhUg9Yz/PgWcMt3gkxeMde2B9zz17I57vL3eTew5ud
Kz1rZmB0yKGVuLNb6F0rcWT30IMr8WKv0MMrsY34LpVmbO9Ksf/nXaW6cGiP
SvnM1bDQe1bi1pBKMWaOesTgF33ozezuU6kuHDkk5OBK7BhpG34cEHr/ShxB
71fp+79IpTmEW/j2rcSXLCStxC189IBZB1aqBZ8S94C57HdoJY7S/6BKLBvh
nE72YS/g5zeq0veAPM4Jd3L3hjt1SFWJI21I470eHnJYJbYRLyud4wjH5rKv
qMShDufzLsf4/c3v/sS6uR6xru5Db5gy1nWZy+NDjqvEjgm24ce4kKMrcQR9
VKXfXIt6X4vbd2QlvhY+52L20QNmHeNa8Gmie3Txe+BZd3f/8ZVYdqxzlrEP
G35NqvR38fDmpJATQ05v4v6F/NGIHaeETK00V2eGTK80Z2fZhk1TQiZX4sHZ
jq1s38mVeDTV62DVtJBTK80Z9c6oxKpT3W8l57GnPo6fXokdl4RcXIkRl4bM
qMSe80POq8Qg9Lkh89TxfkKqWizDd04lDs1wLWb68pDLKjHoAtfq6z4XVWIV
+sJKrLrQ69Z1Pc68hvd4WqVvwGk+5+auzV7hxfUh11VixG0ht1aa7dttw6dr
Qq6uNPd3OLa1fVdVYhY1rq3ErBtDbqjEd+rdUolPN7jfVs67shIXHgx5oBIn
HrINax62DTPuDrmrEi8ecQyGXuHnBYPu8brdvPbOSqy90ut2tY8z7Ome91di
xKOuO9S++yrx617XHWIfNrx5POSxSnf965CvKt39b2zDjqdCnqzEj/+FPF1p
fl4KebESj4g/UWm2XnZsf/voAZOecT7z9ELI85X4+KxjmesRG+E+9IYlr7gu
jHg35J1KzHjPNnx5I+T1SvxAvxbSNe5o4/ta2/dqpZn/MOSDSgx71T3g0Zuu
Bcved4/E+32uEr/o/3Ylhr3lnEPtw+Z3B/fl5kqMfs7nhDcfuTfs+Czk00r8
+CLk80q8+D7ku0o8Iv5Jpbn9wbGj7fu4EpO+dD7c+dbv73i/T2KTXI/Yse5D
b3jwo+vCg79C/qzEj79tw45fQ36pxBv0z5W+S9wd7twU+36qxNqPfc7J9tED
Dv3mWjDuH/c4wu+BZ326+/9Rac5/d85p9mEP9HO9qdJvCDSzCh//dV240jne
+Wy1ZgZmzV1rhrgT2LBm1tCz1JrjeWvF4BS+TrWYRA3WwbXZQ3epNavUm6sW
z/DRD0aSN3Ot979Y6EVr8WPxWjY8WqKWDW8WDL1Arfu9Qej1a93FDWvZsGah
WutgE2vnrzVjrF2vFsPmq3UGng09F6nFSPY4Z63nhG/hWgzrVqsuzw4fNnOw
Ua3esJW8OWqxcsla+4Ydy4VethZjlg/doxarlgm9dC3WEO9e6470Cr1KLa7h
Yx3c6lkrH2atHHqlWtxcoVaMu0UeMbhFH3rDlVVD9641l+uEXrsWO9atZcOU
NUP3qcVL9rVULW6iOQ+MWSP06rVYg16tFs/Q9IBZ1GAdfOJ504NvHc+GO8F8
03+tWnOOpjfsY4+9/G5a84i52if03rXu636h963Fjs1Cb1qLEf1Db11rlrap
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
h/wfZXIFfw==
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztmTHObt1OpH+BiCEmIyEmIO6/x8AQkIiRkEgYACIkYBY9A4JWj6FzGAAR
IiSB4AjpJlvCXNfx83j5ZF9pyS5XeXl5v+eP/vwv/+wvfueXX375k7/+5Zff
/eW//v3rr3/7R3/173/zv/7l1//zx3/3j7//v//fr//wf//gr/75P/7p1/86
8W9/+Hv///f/9O9//TrfFafr/FTeNM+0XzR/p3Sw9E9Xv9H4p3FavVP+pvuB
Fn+rbnae6by0+F/nu+LcHnV71O1R3vPpPu/y0aKP5R05/HR+WZ9qXV/nu+Lc
HsXco2h9lY5v6R/a+a2/O9HmMA238E/ztOgwVdfps3s/ec2XKm73xcLTzuf2
KNd8s/ePPY4Fv3p312u5R1Pnu/Apnvb90PLe0Xy3+Jv25fDTmaDna/rb6037
26UPTecvPl347VHM38csfLr86uJJi2P393R2+WvRc4pnOm9XfIuPNPxLtzRO
u7+0uq7Pd+9LNH+read4WvC0Pqc/U7fzhTln0nGm8Cmd0/wt/TDV/1N+pfvK
Moen6rLMWws+Va9d5zR/uz6W+U97f9M4rQ/TdU3xf+0enY+uvIe79N/KM13X
Vt3sfqXjpHFaP9PqsutGizPlI21eWfgcfxd/Gk7Tk8bHzpNW71ecLpzm41S9
6fNT/dZV11Qc2r2j+Wv53nxNTzufq4upT1pPml9dfL7i2PWs1tWF0/qZ1ieW
OPb7u7Xew134+c58B2k6bNW5mpfWD9W6unDae5eOk/bFog/Nl9fmmKUumg5p
PlP10nTe6i8Nn6q3K281ztf5Kn571I49yv5+peNb5sBr+Ol2+id4dtVl0cfC
/4tPl7/pOF3xafpb7tFUHBr/rf22lac9/lZfXsNPT5du6bxd8b/iVHHae23R
2bL/0HBLXVO+03Sz86fpsJXP1cXUJ61nV/yvOFU8HT+tv6UuWp9Y+n9KB5qP
lvlpz3s4E//x1/WDZW5b8K+6qvhUfPseRauL1v9TeWl1bdXh8Ourn8lnql6a
zlv9pfH8ilONX43TFf+1/dOyR6X5086/hp8+p//LuEX/Ks+uurbqM6V/Fae9
m138LX1Li0PrB9q8ss+fqThp/e3x7X11+OlpxL/8quK0dy3NP12X5V2j6UY7
b4lDmz92PrS67PzTfKbqpelMw6v6pPX8il/FaX2Srisdh9Y/6TgWHew639y+
d+3w892uG80Xe71f8btw2j5g75Mp3dL8LTrb+/Bw5n2vnqfxt/C01EXTjcbn
6/xUXVU+XTy74qf50O4vLQ4tr6UfLHEOZ/b54TvwH39554xdh6l9qavedHya
jxaedj72ui4Os29p8S334vDT879Tb1WHtG5Vnl347VFv8uyqizaXpuqi6bm1
ri4+tLrs/NN8puql6Wz3Nx1nCk/vnxZfaDzT5+360OpK86fpY/Hl8B14l+9d
cSz4lG5pnbv4dOE0/S19QutDiw60vBY8rc/pz8SrvtB8pPG5uph9OHW+C7ff
36m8x3NHvZa60nlpfh0fpg6HM/Eff3nf93T8Lj403Sw623U435n+0nyxx9/6
XTCV9+py4VU90+ctc+brfBWn6ZbW+bU5TMNpOtD4bMW7dN7ql70uGv80n6l6
u/La+dPqsut2/I/nJj40/PQ5fQ737jO0+Hbd0nm36mbRx3IvtvpI88WStyv+
Vt9peFVnmi80PrR33+LvVF12PbviT/l+uGtOdsWh9WE171Yd7Dyn+NB0OHz2
3X9tLnXx7Ip/99e1D1j0P56Hk3Xu4jNVF03P1+r64tnFfyrOlP5VPbvqSvtI
6087H1pdh58vm/CtPtrrovF/jc9UvdW8X+e7+Ffjp/nQ9Lfv4TQ8rVta5/OR
2SfHZ0cfbq0rrc+Ubpa8XbpV46Rxy/5z+OG/if/4653+mao3nfc1Hy14ly80
f6t8vs5Xccv3KW3/uT2KOR+24q/5m+Zpj2+Z21M62HmeL7M6V3G7zul603G6
8t49ctVV5Wmp6/Dz62Wdu/jQ6qLpWdWnGiedl9YPaZ6v+WXH0/1A43n4m/1z
uKsfaLilri6eX3G6cMs8oelp96tLTxpOq4vGx6JD+rwd31pvV120ODR9aHja
ry6cVteUL2k9aXlpvlj65/DDfxP/8RenD9N8qvG7+NB0tvtowas6fJ1P45b7
SNuXaP5a5t5UXYcz557d3zRPiw6nMzMOzZep82nc3re0vaWLj6XP7XPAMn8s
PC11WfAuPc+Xw38T//HXz++rqfNpnKazfY+y+ELzfSrva3OMFv/wHfiPv65P
LDpPxZk634VbdL49ivn/dPb7tXWO0eqy41Ud0uct+Na6ts4BC/9q/K/zXbhF
h6160nSw3FMabqnLwvPw8/1n1tulz2s6W/T8itOF27+/uvJ26Uar13JfLHOS
psNreJfOtDgW3ew6nM4uv6o8v86n8dOZ+bvTlP7H09X/r81nC8/X8PPlTbzq
19T5Km6/F3adp3SjxafhUz7S6rLEOdyl5/E8nIB/+VvFaf1D40nTeapeWv93
+bW1b2l5af1A40nDq7rRdO7is7Wu0435/3R2/dN6Tuk85SNtnqfjWHSm+bsV
79L5Nb9eq5emg13/L/5VnPZ+0fRMv7+0uUrzxcKz2g9pX2j62PG0nha/LDyv
3h36dMX/itOFb9XHsm+kdbboSdPnK28XbunPrfhretr5b9WtK/75O/uda/dl
imc1r4UnLW+a/1f8NE7TbapP0n7Z630Nf82Xrnpf021qbtDeKVr8qs7VvBYd
aHxo/tr7xDKX7H1Fq/c1vKpb+vzhru9imu9TeWnvAi3Oa3jV3zRu6ZM0f9p5
2n1Mx6f1z+E78Cnfv/JW8dfmVVofiw4WPjQdpvB7v3bPJUt8Wt6tPK9e5vfy
zasdexRNZ5o+t0e5fo/aOpfSOlj0t+e145Z+mPL3K2+Vz5QO6bxdOE1/ms40
fWh7eBdO8/e1vWirnoe79Kf528VnSrcqbp9Llj2K9o5Y3jv7vt3VVzR9LN99
af27eNLu6eVl4um6XtOtC7d8D3ad79KHNlct/Kf0se9RaR0s+tvvu92vrXPJ
rrMFn9LtK28Xbnkfu85P6UPrK5ovtHmYxi19MqX/1D5muXe0Prm6mPfiNfxL
tzR+7+Pue73VR8v92qonbW+36G/ZNy6O6x7Z8bQvady+R9F0sPSPxcet3yn2
e3d71A49LXy2xrn493tUQgf7HjV13lKvXbcpnS1+WXy06GmZtxZ9aHFe6wfL
d1YVp/VbWjca/9f2Rkuf0HSmzT2a7+cL06+t/C1+WfLS3scqTus3Wv/QdOvi
adGf9v5a+sTi11Qcmi9TPlr6jcY/rYNdZ9p7ncZp/ZbOa9eNxpO2F9Hu3Wv3
y7JHdelw7yBzP6f1Py0+LS9tbldxWr+l89p1o/G0zMN0P9D6xLL/WH5PsNdr
wS31pnlO6VDN28XzK44Fp80Biy8W/jR/afd9a5/Y96gpfWj4FP/T/3wn5LXg
tHuUzmvXzcLT8o6ndd6qP42n5b3bWtdrfGj3xc7/67wFp+lp2W/tuk3x7Dqf
jkPrB5r+tL6yxLHf3614VYe0blO+0PJO4TQ9p+JM6Wypl9Ynt0cx5z/tPK0/
7Twt+pwOO3T4ik/DaX3SlberXovO6Xpp7+CUL1v7wbIXddVFm3tX75v87Xha
/6/4NJzWn115u+q16Jyu19In6bq64l8/MPtna97Dz69EXWl9vuLTcLvOt0e5
3k2aX2l9aPOH1g+0/qHNpXtnd+g8pWdah6n4NHyr7115X9N5K39LXa/tUbR6
t+al+WXh+ZXX4rvF39ujZn1P1/uazq/xp82r13ykzQ3L+27Hp/y6PWpH3in8
5uHP8WurzrQ4W/lbdOjKS3s3Lf1j1422/3ThW/2l5d3qr2WPSut5Orv4b41j
n+dTPO160uLYv0fS8S3+0vJO4ZY5M3V+Sk/a/KF9P9rnrWUu2fclOz7VDzTf
q3mn4nTFp/lC6/MuX2j+bj0/pSdt/tDeccs7ldbB4tdr/UDDp/qEVm+VfzVO
V3yaL7T4Xb7Q/E3rbPHF8l7b7/XNVebvb7T31NL/tPO09zSNT913Wt9a+meq
T7r6h6Zzut4pPe3vYDo+bc+c8qXr/FT/WPIefnsUYV+i+UJ73y39Y9fZ8j5a
3kFafFo/pH2Z8p0W5/Lufq+7cPu8neqfKf7pfkj3laVP0vVO6Xn3+vYo43lL
/xzOxH/8xbl36fiW+zLFP90PNN8tOm+9RzQ+lnmb1nmq/7eep+m59Z2i+VXF
aXmn/KX53pV3Cj+dmfPh9qhZ32l10e5p+rxlP7HwodVr2Wem8r7mL+33SZq/
tHchrcOUbl157XGmfLfEsdzfi+Py1/I+WvLS+odW1xR+vjB5TvlF89e+R03V
a+9/S18d7tqXqv7S8t69YPaJfe7RfKHpaeFpecfTedP60/LS+Kd1sPC0zNsu
fOpdsPRJV5yp7+Ktfm31ZUpnC0/ae0TTwVLX8XH1Fa1vv85P4fZ5a+k3iy/2
3ytoddF0s/O0fBfT+nCr/hYfj+fs7+dp3D5v7f1meQen9Jw6n46TrsviL+3e
pX2x94l9ntvxKX9pPGn4a/fdEp/mu/37mrZH0eaS5V7Q4qf7pCu+ZY9K+358
dtwvGn7vguv7Ysr3rX2S1i2tv+V9pN1rWl20/rHkfQ236JPuBxpuvxdTfUXT
Z8r3qbyW98uig33eWu5dF06bS1N57TitXpqPX3FouP0edeW9+LdHbdqj7H1l
fy/SuL1/rm+ZeFe96ThpnKanHa/qkD5v4T+lQ5WPhf/dX9d70YXT6qLNn633
YoonTZ8vPmk8/d5Z7hEtDq0PafHTcbpwWp/TfKHVNcWnC6fVRZs/dj6Hv7lH
pc/T8C7+U7ql49D6ocpzqi7aedr9nco71W80fSw8aXxo9VrwL92mcPs7SMO7
6p3S2R6n63wXTquL5tdWvKt/pnzc6u9WPad8+co7pdsUbtmjpuKk+4GGT9VL
y1vFaX2YPm9/d2j9U8Vf078rr6V/aO8CzZev81P47VG7+3bKL5qPX+er+Gv9
Rqt3ypdqn6Rxmj60OWa5jxY+af27+mEKvz3KdR+n8tL4V+N8na/ilros5y39
39U/XTitD2nxLfiUDl95q7g9Po2n5V5vjWPBp+r9ylvFaXW9hqd17uqTNH5z
aUdf0ert4lmNX83bFX+Kp33f2BqHdh9p9X7lreKWfpjSmdZvt0cx+4cWn8bH
co++4nThlnv6Wh/S4lhwe71f/Kv4a32V1mFKZ/t8tvehPf5rfL7Op3Eany6e
lvO0PrTPQ5r+NP40nWlxLPhXvVX8+vn6ilxvlc/X+TRO49PF09Inr/W5pa7T
cwdPO5+pPcqugyX+4T9nnqRxCx/aHmXJa4mzFZ/qE1pdx+fnfA9WcUvfTvm7
Na/d36/zUziNp+XdT/cVLa/lfh2+A6/6Xj1P49N1vopb9Lf0oSUvza8qn6/z
U/gUz9d8f60uCx97/K24Xbcq/67zVZy2R6V9n6qLpgMN7/JlCqftUen+6Yp/
cVxxtsanzTd7Xvve0qVbmr/Fd1q/0XjeHrVjj0qfp/XPa3Es+m/FX+uH1/Yo
mi9dfGh1WfhbdPviOYVPzY2te5Edn/KRFn8rXtXtNZ2n6p3yJZ13a12WOPa8
Fpz2/dUVx97/tDg0PF2XPb4Fr+pA8+XrvIUnLa+FJ+1ebM1Lw6fqot0XSxza
vdgaZ2t8Wl5L/6fPW+btVF57n0/ltfD/im/Bp+4vbV5Z3vd0vfZ7aukHmr9T
eS2/C02d78LtetLei6m8lnt3exTzO4jmrz2O/d5dXUw8rc9X/C789qjboxJ5
7fcxXe9XfAuevi+WPpzqExpP2ryi4Rb97fp8xUnHp5236JDWhzaXtsahxbfg
56/rnbK8gxae1ThT+tDypvlM+UubY136p3Wg8aHlpcWZ0u32qHtfyPxpcSy4
pd4pnl95q3xo52n3q0vnqd+dpvyy5LXEoc03C07rz9f6hBb/dGbiU3V95a3y
ee08bT9Jx6HpScu7NU46Lw2362l/v2h1WfRMn7fgU3V15aX53nU+HcfC09JX
9nthqeu1PYrWD9dXTPx0OP1/G55V/ul6u/ik41h4Wnykfa9Z9KHdry7crjON
D00HWr1pfez6d/G36PDFs4pP6dnFJx3HwnNqzqT7hJbXMpe6zqdx2hx+ra8s
uKVeC8/T4fYo415Bi0Pr/615LXV9nU/jdt1o838rT0u9ND1P/9ujfmac26Nc
v5/Q8tLid+mQxmn9YMEtdVl4ng67+afn5+1Rs+8L7R2h9Y8l7+1RrvlD88vS
V5Z7R8NPHyb+5UvVr7S/aZ7peqt5aTxp/Um7R3YdvuJX81bjpPNa9gFavZa+
teB2f2l87ruDOeen7kVXXZZ5PuUXjY9Fhy6eXbilD9N+WXC7Dl38TwdX3ql3
f2qed9VleV8s/WbBp3Sj+fXFp8qzGied174XTfGcqncrz8OZPlbzdp2n5aXx
odVVjUPrN9o9otVridOFT/WPpU9o/WDnSctLw+06VPmnz98exayLFsd+L2j1
0uZPGrf7OFXXa3sOTYet/O360O5vl55fcaq4fY+izT1aP9DmwGtxpnCLbpa5
Ssu79V5b3n2LDlU+6fM0nl24Rc+0bpZ7QetnO890nCncohsNn6rLrieNP43P
6TD7Llfz0nim67r3Ysd3gaVe2h5Fq/e1frbg9rrOxx36V3Eanymedp1pc4zG
M82HNh9o99TSJ7T4ln6j9cNWXyz9YOnDr/NVnMZniqddZ9o8tNwXy5xP5+3C
7X1Fi3/v5ulJwC390HW+itP4TPG062x/r2n3yxLn9iimnvZ3sKsuiz4WPbfi
Xfp0+VLFaXymeNp1pt13Whzafafx78KvH25/M+J2Pbv4W3RI1zulZ5VPF/+p
8zSdLf1Ju9ev6Z/G7f1g4UPTgdbnr+lJ82Xqu8/ye8jtUT/HR/vcSMe389l6
H+19S8tr4WPXIa3na3591VvVYSpOV/yt89ni480N11yi+fIVpwvf6ns6/vGc
7Z/D790k7yFTPKf6wcLfEuc1/rR+s+hpj/8az8OZc2zqfDqvPU5aN5ovdv60
OLS5YdFha71TelryTvG08LHMva26TelD8+UrThee3mMt+tD4W+LQ+spSr2We
W3w5/E3dttb7VVe13q7z9rxpnKYn7R7Z41v2iimdp+q1zO3X+NB0eI0/DU/r
+RW/itPmMy1vGqf9vkF797feUwufqflD6x+aj7R+2MpnK/8qT0tdU993ln3m
9qgd7y/tvtDydvH8ikPjY+nnqf6h9edWPl15aXoevmNOpvmk86bxqTk/1ScW
Pva6vuJM9QnNLxqfq9fF08Kfxoe2x36d74qT3je2vjuW99dSl/27Y8oXWr00
3+3viKWurX5Z8Nf0rNb7db4rztScfI2/pd8s87/qb5r/lD60eml9Qrtf9npv
Tp7OBLxa79f5rji0vFv50/rK8l5UfUznpfVJlw5d52lx7PfOjlv0sfC086/y
/DpPi/Na3jT/qXfQ0v+0PWqrzmkd0nntvryG2/WZ4t+V187/te9N+7tA04HG
k4Z36TN1Lyw+dvGkxaH1M+0enZ476rXzn3pPq7rRztN0vj2K+d00lZfG37J/
dulj0Zk2306f20MIeFXPr/NT+NY9yqKbfY9K+2jZH+y+0PjT9LHjr9X7mm4W
nrdHMfeoKX0sdd179KaeXfzTOlh8ofllv48W3KKnhSdtblTxrb5M6ZbWx8J/
Kk7a97SeU/2z1Uf79+DhP2dObvVxin9X3i6/0vjWeZ7WZ2tdUzrQfj+x9DmN
T9r3dPx7B134lz5VfKv+r/Hv6oep/kmft9yvKd2m+NDi0PjT5k9az67zU/xp
/ZnmT8O39s9UnKn+oeVN4zQdaLpZ3ima77Q4NB9p7wttT7D3D60/afP55iGz
n7feizRO873r/JQ+lnppvk/FoflIm2NTOmzV074vVXnS+meqr7bGscztNE7z
q+v8lD60emn9T4tD85HGn6aD/V2Y0j8dx94/lv6kxbHM7TRO86vr/JQ+U/W+
do/se5SFf1oHi87nI/PdofWPfR5a6qXhNL+6zk/pM1Wv3UfLfbTzpPk1pTMt
fpe/U3HSeS3nafvbFJ7WbQqn6bB1j7LoQ7t3lvt4PF39b9+XuvRJ60zLS/Pd
PidpcaZwS191ne/Sh3Z/0369xr+rT9L6TPGcqsveh2kfaTrT/LX3j72udJyt
+m/do9JxLL5v5U/zt4sP7b7T+E/51aXPlI9b54M9Pk1/2jyx6DPFs6rzlP5b
41jwdL1pX6rxp+pN62D3a8rftF+0+0s7b8ft9Xb5m9ahi+fWeXX97NoPp3T+
ylvlM3U+ndfSb1360ObSVF/R5pWlPy18qvG/znfx7Ipv8bELt8wNmi/2utJ9
QotDm2O087Q9Ks2flpdW15Rfaf2n6rLMn3R8S100HWjzxD4HLL8PdPVPVxzL
fX9tnlvqteTt8mWrPnY87W86vr0uSz+n/aLVa9mjuuLQfJzSIX2eNq9oewVt
jln6nKbDVjyt21f8Km6Zq1N1We47rW/T/Lv6pMuXKX+n4ryW1xKHNk8s88rC
M10vTc8qn6/zafz2KObcfi0v7TvCskdZ5vlU3q38aX1l4XO+uHToOp/GLXPG
UtcUT9r9tfRD2ke7vxaedj72uux57f1wOry5R11dt0f9NnHSOtN8pPlLm5OW
ODT+NF+24ml9XtP/q94u3OLLlA6085Y4tPjpfkjH39pvdp52Plfvm3jal6n4
XbhFhyl9qnXZz9N8n4qf7od0fMs9pb0XW3GL/sdzBx8a/6/4XTht/k/xTPOx
9D+Nf1d8Wj+k49P65PCf08+0vPb+meJp0ceCf+nZhdPm/xTPNB/aXOrKa5kn
tH5Ix7f0Dy2OnefhzPlzOPPedeG0+T/FM83ntflMq8vSDzR9aHkt/f8abtff
zp+mz9f5rjhT85/WV2md0/i9R8z7a9+jpvS3553ivxWv6mnX38L/NZ7pOFXc
wrOLfzovbf5sjTO1t3f1yVQ/WHyn9Qntu9IS36K/XQcLXtU57ctX/CqerjfN
k3YvaPyndKDdC1rfps/T+mEq71Y9aToc/qaP6bzV+F3nu+pK8+niP1Xv1j6k
9fmU/l04Tbcp/Wn8aXEOZ/abBd9ab7WurvPpvOn36PrHdb9o+n/xmcJvj2Li
Fh0sPGk6bNVta132PunK24Xb94E0z8v75h5l8ctSl0UHi56HM/eE13im837F
r+atxumqa0qfKT1p98LCv+pLF255Z9N+TfXDVF6avxZ97DzPr934l/5VnBbf
vk9ufQfTfG5fcs1bi26v6WDR08LzcKaPXXm/4lTx9P5gf3fSetLuBQ2v6t/l
F83Hqbz37rt0oMV5DX9NN3u9X/yruH1/mKp3SgeL/rQ+p+lmz9vFc6peGk+a
nhZfaL5v1W1rXZb9J61/ut7X9KThaV+m5ifNxyk+6bxT/WD3cSqORefXcIsv
aZ7V+OnzU/sSLb49Dm2PsuhpP2/pKxofWl9Z4tB0puGv+bUVr+rfdT6dl9aH
XfFpcew8affFUtdrcSz4a7pZeB7O9LGa9+t8V5yteWnvaVccGj5VVzrvlO/p
86/FOdx17+x1bdXHXu8Xzyr/rvNb89pxS72v+Ziut0sfWhwaPlUXzRdaHBp+
dTH50+bzVF6a7zSe6ThpnNY/tD6x9I9Fz2oci4803Q7fgVt8T/Osxv863xXn
5htzvlV978Jp/ZD2ncbHEp8W53BXn9Py0vjbdaDhX3pWdaadv766Pcroe5qP
JT7NFztO03OKD02Hw10+fuWt4vY9akp/Gp+ufpjyZWs/2PHX9HytXtr9teNd
OrymJ63eKR/T52n60/KmcZoOU3yu3ou/ic/xZOJXF5P/7TM7vr++8qZxyztI
42Pp/4vvimPpT3v/H/6mX1WetLqm+NN0eG2Psuu/tV6LnqfzDr+Ozw5/7Tqc
/jv6/4tPGn/N96t3h552/HT4n+lA043G5/DzcZNu1fhf57twuz40X2j9TNON
pmc671RdFj523KJnF09LvZZ3IX2epg/Nly6cdu/Svkz5vnXuWfS060OLs9Uv
O5+rt7euar1pfbri0+JY9ij7/kPrQwv+Wr2nDxM/nQ8n4z/+4uxRXXG24l2+
pH2f6h9Lf6brpeXdip+PO3CanseHyf8rTjr+1J5gyTu1n6TjW/qHFt/et6/h
p+fpk9AhrRuNDw3/qreKn78uHy39QOsfGk7Tc+s+TMtr4U/Th8bHgtt16+L/
FacLn5rz6fO0d23KL0s/WObDVF4a3qXD+cjkT/P3/NqBT+nwlbeK0+q16Hl7
1OweReuTy8ucz6/hab+uH04Hgp5d+n/FqeJb7yOt3vNxxxy7vK699zU8rbPF
RwtPC/8uPl9xqvG7znfxmdpD0n2Sjj+1L9l9eY0njb+Fz/Hf0Vc0fbbysczb
qThf56u4pa6t/dzlY1rn85HJx87TroM9/um/472j6Unbfyx71FTe1/qB5q/9
/lp40vQ5HZh8aHhan674U3Fo/C198nU+HSft71ReWpyuvLS6aPxp95c2l65/
mPofzuyHqTg0/hb8q94u/Wn90BXHci9ew6f8tfB5jT/tfbTkfQ2n6dzFZ6qu
Kf7pvF24fW+h8bHHsd+7w5l60nyk8bm6XHOjGp9Wl53/7VGu38Fo/WCZb1v1
sddl5/9aXTQd7PHteJc+r+n8VW8XvnWPSveJJT4tDg2v1vWa76/l3RqHpvNW
vKpP+rzFx3RdaZy2z0z1yRRPmg5373a8C1N1bdXzNR8PZ+I//uLPvWr8dF1p
3L5Hpfvh7gvz3h3OxNM+VuOn+dD0sfPZild1Tvtij3971J3/bfrBHod27yz4
6XO4Ef/xl7dvv/hX67Kft/he9asLv/5h3usunrQ4W+Pf9+mO+2Ln85oOlvjV
OOnzW31P47eHu97BtI+We7H1vbbUS9PNomcXn6110eZwFbe/m5Y4lj1qKj7t
nlp40vrZzjOd16L/6Xz4Czp/8e+qixZnK/+qjxbfafvJVN7X8Cm/LPyr8e16
voZP+UvrfxqfrzhV3HLft/YnbY/q0seuM43nVP/T+mHKrzR/uy80v2g4TQca
H5oOVdxy3y390MWny1+aX7R3wd4/NP52nrR7TbsvtH5O86f1Dw3vqmtKn6+8
Vfzuu6uvpnzf6hetH043Jt7ly1ecavw0n+t/l860emn4V11duKV/pvyl6faa
75a8Fj7HnznHpnRO57XXNcX/8Df3qOp5Sz9P6WDx3RLH3g92fEo3S5wqbpmr
U/pbfL/7ONsPXThNZ1r8KR0svlviHM6cq7S6aN/FND1vDuzuQ0veapyv8104
ba7S/D0dduxRtDg0Hy112fEvnbf6ZeFpuV9b41j2qNf6xN5XU/qfnsy5/Vq9
dv40fdLnp3yc4mnX0x6n63wVt3wfdcWh+WjnY7lfFn1e64fDZ7+LD99xv7ry
2uN0na/it0fN1julJ01/Ox87Txo+pVs1bxfPrzjp+DT97f7a/doa5/Yopp53
T3fMVbvOFl+m6tqqD63erTqnz9v1tPD/4tOFW/oh7QtNt9f6nFYXLY4dr+pA
0z/N36LP1/kqbpnPFl9o95fGp9o/VZzWP7T4UzrY/aL5+xqf187T4ljOp+NY
4tPmQDrvlA5Tcar9U8VpOtvj0+JsfffteFof+3n7vbacT8exxLf3z70vt0cR
/J2ql6aDnb9FtyrP186/lnfqfDqORQda/9DmD41P1/kqbtH5tbyWPS19npaX
xtN+3nIvturZFf8rThW36JDWzR7Hcl++zlfxrXpa5szWemk80z5W8a33Lq3z
9e3P6dt0/9t1oM1bWhzL/Kn2Q5oPzS8aH1q9NJ52faq45b2g8af5btEh3Q9d
8S06vNYnlns0pf9rvmz1i6anhX/X+SpueS9o/C19ZYnf5W86/tbvoK56aXEs
8af8sutG08fSP7TfeWj3aIo/LQ6Nv6WuNJ903qm67HsU7R208JyKc/7u9sWi
s+V9sc/hdF00/vZ7muaTzkvzvcrTwt9yX2hxunxP80/7SPOF1v+0OBb+Xeer
uEUHC39afJrO6bxTfWK/p7T+tNzrLr+mfN8ah9Zvdj2rcdLnb496c87QeE7p
nM47xd9+T2n9SXvX7N8vtPeOVhdtL6LpQPP963w6jsVHmu+0/rH0Ia3/LXuU
pX+OZ+++VM07pSftvKVP0nwsen7F6dJzKg5N//R5+320fxdP5aX151S9lntn
0eH2KGafbMUtfUK7X6/N54v/c+J35a3G6eKTPm/Pa/GRhqf9ovVDl+92X2j3
kebXVJyv81XcUheNJy0+ra4uH7f2g33u0faEtA7pumj3zt6flrz2+WOZGzdn
mHlp8e11fcVJ9wNNn6oONH2m6k37ePeFeZ42b+34lP60vFX8+tB1f2k+dvGp
4q/pY+Ez1Q80nafmlcVfyxymxTl893tkv0dTee04rV6771P8ae9mF57eQ+z4
lL+0e2SJY+dJw8+Xwwk6d+X9ilPFLfp31fWaDmnd0vpPnd/ab/d+Xb3k+37+
vqlDNX66ripOe78s97pL/7QOU3ktc6mrLtocm/Il7S+tfw5n+tWV1x6Hxp+G
f9VVxS3zkFZXl/5pHabyvnav03xo9Z7OzDhf59N8LL5Y8h7O3Cu64k/duzSf
1/Yoi4+0urry0vr2+O94N7/4V+uqxumKv9WX02FHn9PmXrp/uvjb9yja96al
3q1zkuYjzS/au0nbc9LxaX7R+tmiW1qfKf1pczvdP1Pnu3CanjTfu/jTdLPP
N1q9W3X7ilPFafEtetL6ijb3aL6k41h+T7Cc78LtPqbrnYpjf8cP36H/F58u
ntX41bxpnpY49ryWPk/HeY3/1r2C9l0wVS/t9zfaHKPp8FocWv98xaniW32h
5X0N/9K5qn86zmv8b4+arYtWLy2vHZ/S3xKH5ksVp+lmj7+1b6t5v85Xcfse
Yuc/5ftrddnrpc29qbyHM/EvH7twWv+k86Z1oPGn6VDFTwfme2r/vpuqy14v
bZ7T6j18975U7RPaecv9op2n7XtV3K5bV72WfqP5bqmL9rvQlC8WfWjfxbT7
Qqs3jdvvkcXHrTp8xenCaT528aTFoc0x2h47VRdNN/v8oe0Jdp1p72O1H7pw
Wj9s5fmaDl24hT/tHbfrdnvUm/P89iimzrS9busedfsD8ztiyq8u3L4PWOqd
er8sPLv40PrQ0m8Wf9P10vLS8Go/dOG0vqKdt8Sx9y1N/y7+U/V25b336+f8
DtaF0/on7QttD5mKQ+NP0y2N03yhnaf129Z3gfY+TvHvqpem21Qf0n5PS+PX
h679Z+v7QuuHNE7rB9p5Wj/cHsW8d7T+pO1LW/eorv7pwml9lc47VZf9fbHU
1XU+jW/VzdJXtN85t+5RFv7pemn9Q+OTjpPuN1pfdeWlzf/X3pcuPum8X+fT
+FbdaDxpc6+r3i6cpgONP+13nrQOU3ymeFr6LR3fzue198WiWxq37ydTPGn9
Y38vaDpY+NPmj53PFM+pPqHFt/Dp6pPXdJu6j7S6aP02xdOuf5fOad2mdEjr
RuvPtL9duqV9meI51Ve0eUjTgZbXwr/Lx3Q/WHyk+WXhma6ri89UnNujdvT5
7VHM9yLdJ7S8dp4Wf2nzzaLblD6vxae9a7R+qPK310v7TnzNlynd7PNniqdl
nlv4vPaO2H2x9OGUnl2+V3FaH3bVReNvn3tp/Wn3Ip13ax/S5vCUDl398Jr+
Xbqlz9t9sfNM90k6vuW9S/O39A/Nl9vDme8X7T2ixXkNp/me5pPmT9tPLDwt
/XZ71I7+TOtA09/eP1N9Qnuvt/Kn1VXNO3W+Sx+Lzlv7kBb/63wVt+z/afz2
qNl+u/5hzpmLv/udpen5db4rDq0u2h71Gv7lSxWn9XNXXVP8afd6qh9o/dYV
3zJv03XR8tr52/N+xanGT/Oh6WbhY/Flaq+g3Yt0vWn+tD6f6gdav9H6gTZX
u+pK62OPv7Wur/jVvOnzFt1oPGn10t5Hy71I4/Y+n9JhKn46jmUO2Hm+Fn9r
XV3xp/S38LHzpOnTpVta/2r8ar00/jSd0/y78lriWPyi3V/afaThlrq+eNr7
hKb/8XH9nmDhSdOB1oc0f9O+0+Z8+ry9r7bysdfVlbcaJ10vjY9FB5qeXXmr
OI2PXQdaP1v8TfN5bY+i9c/tGzv0t/hOe68tc2BrXZb9oYvPVF5aX9HmyZS/
tP3ntXeTxmfKX5o+V5erHyz8u+LTeH6d78JpPKfeU1pfdeU9f3f7Yq+Xps9r
PGl1VeOnz9O+49L8aX2S1rkLt7yztHpp84G2R6XvC03Prb5vfa/t/O362Ov6
4lnlnz5/++rtUQk9LXOPVteUj1M6TPl1+A490/xp+nTxmaqrmvfrfFccms40
nmm/aP5O6WCfb1NxpvSx+HvvlKvfri6mPjT8PwGy4fHK
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Zellen der Stra\[SZ]e\"", TraditionalForm], None}, {
        FormBox["\"Zeit t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[1], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox["\"NaSch: Grafische Darstellung der Stra\[SZ]e mit 100 Autos und \
p=0.15\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 300.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0.`", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.2\"", ShowStringCharacters -> False], 0.2, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.4\"", ShowStringCharacters -> False], 0.4, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.6\"", ShowStringCharacters -> False], 0.6, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.8\"", ShowStringCharacters -> False], 0.8, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.0\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                   "GraphicsLabel"}, StripOnInput -> False]}, {
                 "GraphicsTicks"}, StripOnInput -> False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             
             TemplateBox[<|"color" -> GrayLevel[1]|>, 
              "GrayLevelColorSwatchTemplate"]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"Max", "[", 
               RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.899887002318115*^9, 3.899887675242776*^9, 3.8998881635333033`*^9, 
   3.8998887388997526`*^9, 3.899890458629571*^9, 3.8998908092108264`*^9, {
   3.8998973794014387`*^9, 3.8998973907501783`*^9}, 3.899924227926824*^9, 
   3.8999709019361105`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"01e99372-b7d8-40a0-bdb6-a6c33a8f1059"]
}, Open  ]],

Cell[TextData[StyleBox["Das Modul densityplot stellt die Stra\[SZ]e \
\[UDoubleDot]ber die Zeit dar. Auf der y-Achse sind die Zellen der Stra\[SZ]e \
mit besetzten Zellen als gelbe Punkte und leere als dunkelrote Punkte. Die \
Entwicklung \[UDoubleDot]ber die Zeit ist in positiver x-Richtung \
aufgetragen. Es l\[ADoubleDot]sst sich beobachten, dass eine Ansammlung von \
Autos bei t=0 in der Grafik in positiver x-Richtung nach unten wandert, indem \
Autos aus den vorderen Zellen der Ansammlung losfahren und die hinteren sich \
stauen bzw neue Autos auf den Stau auffahren.\nZu sehen sind mehrere \
Ansammlungen an Autos zu Beginn der Simulation. Von hinten auffahrende Autos \
werden ausgebremst und Autos am vorderen Ende der Ansammlung beschleunigen, \
weshalb sich die Ansammlungen im Laufe der Zeit in negativer y-Richtung \
verlagern - es bilden sich R\[UDoubleDot]ckstaus. ",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899567950143671*^9, 3.8995680247073193`*^9}, {
  3.8995680975638075`*^9, 3.8995681301280804`*^9}, {3.899568170297575*^9, 
  3.899568291691476*^9}, {3.89999245713467*^9, 
  3.899992485164372*^9}},ExpressionUUID->"01f2a765-3945-4d79-8ce4-\
6c029ef902a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Dichteplot",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"e004bcce-3c9b-40ec-b809-b72bc6c6cfe3"],

Cell[TextData[StyleBox["Das Modul dichteplot, so wie densityplot, stellt die \
Stra\[SZ]e \[UDoubleDot]ber die Zeit dar. Hier werden jedoch jeweils eine \
Anzahl von avCells Zellen betrachtet, die Anzahl an Autos darin aufsummiert, \
und dies als Wert ausgegeben.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899568519778651*^9, 3.8995686300226135`*^9}, {
  3.8999931833331575`*^9, 
  3.8999931946656623`*^9}},ExpressionUUID->"fd1fb932-e995-454a-8485-\
6601910c91b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Dichteplot", " ", "\[UDoubleDot]ber", " ", "Zeit"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"dichteplot", "[", 
    RowBox[{"Modell_", ",", "nCar_", ",", "p_", ",", "q_", ",", "avCells_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "anzahl", ",", "laengen", ",", 
       "iter", ",", "t", ",", "cell", ",", "nasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Daten", " ", "Eingabe"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"p", "==", "0.15"}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"!", 
             RowBox[{"nCar", "==", "100"}]}]}], ",", 
           RowBox[{
            RowBox[{"NaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"p", "==", "0.15"}], " ", "&&", " ", 
            RowBox[{"nCar", "==", "100"}]}], ",", 
           RowBox[{"nasch100", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
         RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
         RowBox[{
          RowBox[{"vdrNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
            "q"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Liste", " ", "Anzahl", " ", "Autos", " ", "innerhalb", " ", 
        "Intervall", " ", "avCells", " ", "und", " ", "das", " ", "pro", " ", 
        "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Anzahl", " ", "der", " ", "Intervalle", " ", "avCells", " ", "in", 
          " ", "nCells"}], "=", "iter"}], ",", " ", 
        RowBox[{
         RowBox[{"Anzahl", " ", "Autos", " ", "innerhalb", " ", "Intervall"}],
          "=", "anzahl"}]}], "*)"}], "\n", 
      RowBox[{"iter", "=", "0"}], ";", 
      RowBox[{"t", "=", "1"}], ";", 
      RowBox[{"anzahl", "=", "0"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"For", "-", 
        RowBox[{
        "Schleife", " ", "f\[UDoubleDot]r", " ", "einzelne", " ", 
         "Intervalle", " ", "mit", " ", "L\[ADoubleDot]nge", " ", 
         "avCells"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cell", "=", 
         RowBox[{"1", "+", "iter"}]}], ",", 
        RowBox[{"cell", "<=", 
         RowBox[{"avCells", "+", "iter"}]}], ",", 
        RowBox[{"cell", "++"}], ",", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Falls", " ", "Auto", " ", "auf", " ", "Zelle"}], ",", " ", 
          RowBox[{"Anzahl", " ", "erh\[ODoubleDot]hen"}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"nasch", "[", 
               RowBox[{"[", "t", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "==", "cell"}], " ", "&"}]}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"anzahl", "=", 
            RowBox[{"anzahl", "+", "1"}]}], ",", 
           RowBox[{"anzahl", "=", "anzahl"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Falls", " ", "letzte", " ", "Zelle", " ", "des", " ", 
            "Intervalls", " ", "betrachtet"}], ",", " ", 
           RowBox[{"Anzahl", " ", "abgespeichert"}], ",", " ", 
           RowBox[{"wieder", " ", "auf", " ", "0"}]}], "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Divisible", "[", 
            RowBox[{"cell", ",", "avCells"}], "]"}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"laengen", ",", "anzahl"}], "]"}], ";", "\n", 
            RowBox[{"anzahl", "=", "0"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Falls", " ", "letzte", " ", "Subliste", " ", "in", " ", 
               "xnasch", " ", "betrachtet"}], ",", " ", 
              RowBox[{
               RowBox[{
               "n\[ADoubleDot]chsten", " ", "Intervall", " ", "betrachten", 
                " ", "ab", " ", "erster", " ", "Subliste", " ", "mit", " ", 
                "t"}], "=", "1"}]}], "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t", "==", "tMax"}], ",", "\n", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"iter", "=", 
                 RowBox[{"iter", "+", "avCells"}]}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"iter", ">", 
                   RowBox[{"nCells", "-", "avCells"}]}], ",", 
                  RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", 
                RowBox[{"t", "=", "1"}], ";"}], ")"}], ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Sonst", ":", " ", 
                RowBox[{
                "n\[ADoubleDot]chste", " ", "Subliste", " ", "betrachten", 
                 " ", "mit", " ", "gleichem", " ", "Intervall"}]}], "*)"}], 
              "\n", 
              RowBox[{
               RowBox[{"t", "=", 
                RowBox[{"t", "+", "1"}]}], ";"}]}], "]"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
             "Betrachten", " ", "erste", " ", "Zelle", " ", "im", " ", 
              "Intervall", " ", "f\[UDoubleDot]r", " ", 
              "n\[ADoubleDot]chsten", " ", "Durchgang"}], "*)"}], "\n", 
            RowBox[{"cell", "=", 
             RowBox[{"1", "+", "iter"}]}], ";"}]}], "\n", "]"}], ";"}]}], 
       "\n", "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Ergebnis", " ", "ist", " ", "Liste", " ", "mit", " ", "Anzahlen", 
          " ", "der", " ", "Autos", " ", "von", " ", "Zelle", " ", "0", " ", 
          "bis", " ", "avCells", " ", "f\[UDoubleDot]r", " ", "t"}], "=", 
         "1"}], ",", "2", ",", "3", ",", "...", ",", " ", 
        RowBox[{
         RowBox[{"dann", " ", "von", " ", "Zelle", " ", "avCells"}], "+", 
         RowBox[{"1", " ", "bis", " ", "2", " ", "avCells", " ", 
          RowBox[{"usw", "."}]}]}]}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Aufteilen", " ", "laengen", " ", "in", " ", "Sublisten", " ", 
        "f\[UDoubleDot]r", " ", "die", " ", "Intervalle"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"laengen", ",", "tMax"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"listdichteplot", "=", 
       RowBox[{"ListDensityPlot", "[", 
        RowBox[{"laengen", ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Intervalle\>\""}], "}"}]}], 
         ",", 
         RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Dichteplot mit Intervalll\[ADoubleDot]nge \>\"", "<>", 
           RowBox[{"ToString", "[", "avCells", "]"}], "<>", "\"\<, p=\>\"", "<>", 
           RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<, und q=\>\"", "<>", 
           RowBox[{"ToString", "[", "q", "]"}]}]}], ",", 
         RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
         RowBox[{"LabelStyle", "->", "White"}], ",", 
         RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}]}], "]"}]}], 
      ";", "\n", 
      RowBox[{"Return", "[", "listdichteplot", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.899569814128667*^9, 3.8995698143757763`*^9}, {
  3.8998878105581565`*^9, 3.8998878291051655`*^9}, {3.8998878694892426`*^9, 
  3.8998879620639925`*^9}, {3.899889272122861*^9, 3.8998892722747355`*^9}, {
  3.8998907123395166`*^9, 3.8998907131431246`*^9}, {3.8998960663403378`*^9, 
  3.8998960804646187`*^9}, {3.899896879015397*^9, 3.8998968799370985`*^9}, {
  3.899896996502166*^9, 3.8998970077710514`*^9}, {3.899897292299657*^9, 
  3.8998973087168207`*^9}, {3.8998981995759296`*^9, 3.8998982487478456`*^9}, {
  3.8999179590761566`*^9, 3.899917973611255*^9}, {3.8999180263771935`*^9, 
  3.8999180274298925`*^9}, {3.8999182082312603`*^9, 3.899918237465418*^9}, {
  3.899971977402166*^9, 
  3.899971977697579*^9}},ExpressionUUID->"a5e40c58-41a7-408c-90c5-\
758337d6a1b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listdichteplot", "=", 
   RowBox[{"dichteplot", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", "100", ",", "0.15", ",", "0", ",", "10"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", "listdichteplot", "]"}]}], "Code",
 CellChangeTimes->{{3.8995699979420195`*^9, 3.8995700068141136`*^9}, {
  3.8998872845981627`*^9, 3.89988728668149*^9}, {3.899888649023316*^9, 
  3.8998886696714044`*^9}, {3.8998889053484073`*^9, 3.89988890700301*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e7dd2a29-8209-4b7f-a429-1b417eff5d2b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJx13clq3AF05WGRlaE3XnjhhRdqYYwwxmieh8rQ3Ul3Z563gazzCvexsryP
lEcIIToH9IG8ER+Hu/UPqar+9T//5d/+5l//4Ojo6N//x9HRf/3873//8fr+
59HhvT/hz/gL/oq/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+
xE/4Gb/gV3x478FHf8iOj/6IHR/9MTs++hN2fPS/2PHR/2bHR/+HHR/9KTs+
+jN2fPR/2fHR/2PHR/+fHR/9OTs++gt2fPSX7Pjor977gAcvPvpr7vHgxUd/
wz0evPjob7nHgxcf/R33ePDio7/nHg9efPQP3OPBi4/+kXs8ePHRP3GPBy8+
+mdsN/z5CX/GX/BX/A0f4xP8Hf/Ap/gn/oV/4zN8ji/wJb7C1/gG3+I7fI8f
8CN+ws/4Bb/iw3sPbj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx
+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+/HR7xl2w5+f8Rf8FX/D
x/gEf8c/8Cn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+PDeg9uP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7k
Hg9e3H7kHg9e3H7kHg9e3H589Hcpf8+wG/78gr/ib/gYn+Dv+Ac+xT/xL/wb
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcfbz7gwYvb
j9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj49ex/DvUv6eYTf8+RV/w8f4BH/HP/Ap/ol/4d/4DJ/jC3yJr/A1vsG3
+A7f4wf8iJ/wM37Br/jw3oPbj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP148wEPXtx+5B4PXtx+5B4PXtx+
5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+xL7u7esY/l3K
3zPshj+/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/g
V3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+
ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8HL24/
co8HL24/co8HL24/co8HL24/co8HL24/Yt8n5evevo7h36X8PcNu+PMYn+Dv
+Ac+xT/xL/wbn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvb
j9zjwYvbj9zjwYvbj4/eV5t++Dq3r1v4dyh/r7ATxx/8PMHf8Q98in/iX/g3
PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3nzAgxe3
H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nH
gxe3H7Gfw0g/Yt8n5evevo7h36X8PcNu+PM7/oFP8U/8C//GZ/gcX+BLfIWv
8Q2+xXf4Hj/gR/yEn/ELfsWH9x7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hmw948OL2I/d48OL2I/d4
8OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/Zze+mH
76P1fVG+zu3rFv4dyt8r7MT3D37+wKf4J/6Ff+MzfI4v8CW+wtf4Bt/iO3yP
H/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuRezx4cfuRezx4cfuRezx4
cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfsR+znv9MPPXfg+Wt8X
5evcvm7h36H8vcJO/Pjg5yn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7EPhck/fBzen7uwvfR+r4oX+f2
dQv/DuXvFXbi9IOfP/Ev/Buf4XN8gS/xFb7GN/gW3+F7/IAf8RN+xi/4FR/e
e3D7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx9vPuDBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPB
i9uP3OPBi9uP3OPBi9uP3OPBi9uP2OdIpR9+rtvP6fm5C99H6/uifJ3b1y38
O5S/V9iJnx/8/IV/4zN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iw3sPbj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7
PHhx+5F7PHhx+5F7PHhx+xH73MH0w+eA+LluP6fn5y58H63vi/J1bl+38O9Q
/l5hJ3598PM3PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/3nzAgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3
H7nHgxe3H7nHgxe3H7HPqU0/fG6UzwHxc91+Ts/PXfg+Wt8X5evcvm7h36H8
vcJO/P7g5xk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
8eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/Yh9rnn6EX/Cn/EX/BX7ub1jfIJ9n5Sve/s6hn+X8vcMu+HP
c3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVH957cPuRHbcf2XH7kR23H9lx+5Ed
tx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H28+4MGL24/c
48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL
24/Y78FIP3wurc8Z9LlRPgfEz3X7OT0/d+H7aH1flK9z+7qFf4fy9wo7cf7B
zwt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/48N6D24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9ePMBD17cfuQe
D17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fsR+b1L64XPMfS6tzxn0uVE+B8TPdfs5PT934ftofV+Ur3P7uoV/h/L3Cjtx
8cHPS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fh/ce3H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftx5sPePDi9iP3
ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi
9iP2e/bSD7/3wueY+1xanzPoc6N8Doif6/Zzen7uwvfR+r4oX+f2dQv/DuXv
FXbi8oOfV/ga3+BbfIfv8QN+xE/4Gb/gV3x478HtR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H68+YAHL24/
co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8H
L24/Yr+XNf2IP+HP+Av+in3u4DE+wX7O28/t+TkM31fr+6R83dvXMfy7lL9n
2A1/XuMbfIvv8D1+wI/4CT/jF/yKD+89uP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bjzcf8ODF7Ufu8eDF
7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufs
93inH36vnt+T5Pde+Bxzn0vrcwZ9bpTPAfFz3X5Oz89d+D5a3xfl69y+buHf
ofy9wk5cf/DzBt/iO3yPH/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuR
ezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4
cfsRpx9+b7ffw+r36vk9SX7vhc8x97m0PmfQ50b5HBA/1+3n9Pzche+j9X1R
vs7t6xb+HcrfK+zEzQc/b/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH78eYD
Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4
/cg9Hry4/YjTj/w/l374vd1+D6vfq+f3JPm9Fz7H3OfS+pxBnxvlc0D8XLef
0/NzF76P1vdF+Tq3r1v4dyh/r7ATtx/8vMP3+AE/4if8jF/wKz689+D2Iztu
P7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj/efMCDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceD
F7cfuceDF7cfuceDF7cfcfqR/9fSj/gT/oy/4K/Y7006xifY59T63EGfI+Vz
Qfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+vMcP+BE/4Wf8gl/x4b0Htx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcf2XH78eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/cg9Hry4/YjTj/w/ln7En/Bn/AV/xX7P3jE+wT7X3OfU+txB
nyPlc0H8nPcZ9nMYvq/W90n5urevY/h3KX/PsBv+fMCP+Ak/4xf8ig/vPbj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7b
j+y4/ciO2483H/Dgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H
7vHgxe1H7vHgxe1H7vHgxe1HnH7k/630I/6EP+Mv+Cv2e1mP8Qn2ezB8rvkp
9rmDPkfK54KcYT+35+cwfF+t75PydW9fx/DvUv6eYTf8+Yif8DN+wa/48N6D
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9ePMBD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fuQeD17cfuQeD17cfuQeD17cfsTpR/6fSj/iT/gz/oK/Yr/H+xifYL83ye/B
OMU+p9bnDvocqTPs57z93J6fw/B9tb5Pyte9fR3Dv0v5e4bd8OcTfsYv+BUf
3ntw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj9zjwYvbj9zjwYvbj9zjwYvbjzj9yP9L6Uf8CX/GX/BX/A0f4xPs9+z5
vUmn2Oea+5xanzt4hn0uiJ/z9nN7fg7D99X6Pilf9/Z1DP8u5e8ZdsOfz/gF
v+LDew9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/bjzQc8eHH7kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7
kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7Eacf+X8o/Yg/4c/4C/6Kv+FjfIK/
Y79n7xT7PRg+19zn1J7hc+xzQfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+
fMGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7E6Uf+30k/4k/4M/6Cv+Jv+Bif
4O/Y72U9xX5vkt+D4XPNz/A5vsA+F+QK+7k9P4fh+2p9n5Sve/s6hn+X8vcM
u+HPV3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8H
L24/co8HL24/co8HL24/co8HL24/co8HL24/Xg7/CZYs0AQ=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
Get3zcQs4tTDmMUz7YP+XjF0hUxc6JnJh83si+cCm5YKXTITd5YJXToTj1Bi
MGjZ0O6ZeNct0xqL+B5zP+AWcerh4BKZ8uAgc+PTz8tlmgvGrBK6cibWoCtl
YhbKXnk3cH/57OEQ51g+E4NWzVQPk1bL5MOMHpnWgFnk4vM9J3y3AH8eCrNW
z1QDb/h+6DUy8Wid0LUzsWbdTD7sWS+TD2s2DN0g03u0d+j6mZhH3VqZ+nnr
0K0ysY049dzFvplicJHcNTOxY6NM88KmzUI3zcSaPpl82LN5Jh/ebJypBk5s
GbpFpvcl+2JPMIj1icER4tTDQebeJFN/9Mu0J/p/YOhumXpxm0wxniPfe39y
Ju70D90uE492CN0+E5NQYjBu20z1cGvHTHmwcqdMPpxgnV0zcZD5qIE1u4Tu
nIlJu2faE6zZI5MPe/bM5MMa5hiQiQV7h+2ViYnMwXqwiTjzwiPi1MN4ngHP
EXbs43pYsq99+LR/2H6ZuDXEPjwaah8eDbNPLx0YNiIT16gb7Ls73Hnc5QPs
544PysSmEY7BiCPDjsjEplFhIzOx6RD7sOZQ+7DnMPvw5uCwgzL190HeE7w4
3HmdPTc+fDnK6/3v3Rk2OlOv8h3NfIc3PBofNi4TX462D2+OsQ9rJoVNzMSk
CWHHZeIadWMzcX2Qn29Xx4/NxMGxXntRz0E9fJnseeHQ1LATM/EI5fujl7Sy
V/r81Ez3FQad5BpYw/2dlolHx3veLj4r5+/uODUw4zTPBW9Ot8/nyXfL8x3z
sOmMsOmZWHWmfRh2ln3YdLZ9+HJ+2HmZ+Dvd88Ksc5wHj861DwuuCrsyE6vO
c2wDj12RiTcXh12UiVOX2IdTl9qHO5fZhzUXhl2QiXkXeE/w6XLn9fbc+PDl
au+DPplhn169I+z2TD10jWP02ANh92fi1PVh12Viz41hN2Ri0A2OwaFrXQ+n
bnIe3LrZ/maegzy4eYtjMOtW+7Dn7rC7MjEIvTMTV+70Xtfyc+L88Oge18CI
+8LuzcQsznRbJvbd5jV2dJwa3v/0Ij22s89KPffpu7BvMzGLf7vp4UzMetQ+
zHrMPgx63D798HTYU5m4SN1DmVj1hPNg05P26efXwl7NxKmnHBvhsVcycer5
TPcVTr1gH069aB8evWQfDnGvn8nUo894T3DqZecd4Lnx4crr3gfP4g379Pqn
YZ/4Ob3p2K4+04OZOPVO2NuZGPRe2LuZ2PSuYzDuLdfDqvedB6c+sH+I5yCP
Hv7QMXr6I/vw5cuwLzJx6vOwzzLx6zPvdYD3xd2FSV+5Bg59E/Z1Jj5xpo8z
cepjrzHBcWom+fOnBsZ8n+lO8B3zfEcz39kMt34K+zETm362D3d+sQ+HfrUP
d/4M+yMT56j7IRPPfnMevPvdPj1dxDp5Ln794Rh9zliWi03/hv2TiU3/2YdB
/A+n+DAoyeXDqr/D/srErL+8J3iU5sqDT8yNT4+VufZBz1W5fPp4ztA5cnGq
zhXjc+K77vnOexjUDm1ycWjm0Jly8QglBtdaueph4Sy58uDUrLl8eMcc5MGs
2XLF4NTsuXxYM3do51xMQufKxSaUvZ7h58T54dE8uWrgzryhXXKxiTN1ysUy
lDXgFHFquCub5DonTJkvVz28WSB0/lysWih0wVwMWziXD6e65vJh0CK5fJi0
aC6fu9stdPFcTEIXy3Wvl8gVg1OMUUMvLpkrBjt6hC7nf3OOf3tuqVycWiaX
D6e65/Lh0bK5fHhEHT68WCF0+VxMQpkXnjEf68FizseZYcyKuWrg1EqhPXOx
aZXQlXOxadVcPgxaLZcPg1bP5b/uHlszF+OoYy5YtUauPLjYK5cPs8jFh01r
56r/33s9155g0Pq5vl8VxqB83yqsQfnOeN4PfG58lnCrd64amEWceWHWBrli
MGvDXD6c4r5v6Dy+qx1GwJVNc90VPvtjwo7OxarNQ/vkYtmWoVvk4tRWuXwY
tHUuH+5sG7pNLsZRt1kuVvXNlQen+uXy6efdQnfNxTDqiMEPxgbk4tQOodvn
4tSOuXw4tVMuHx7tnMuHU/1Dt8vFQpQ9waldcuXBJubGhysDc+2Dfts9l08P
DwsbmqsX98gVo8dGhY3Mxam9w/bKxaB9w/bJxaZ9HINxe+aqh1WDnAcXB9uH
fcxBHvzazzH4tb99ODQi7IBcPEKH5+LNcO8VTvOcOD9sOtA1MOjgsINy8Ysz
DcnFwSFeYxbHqeGdw+fGnZjNZ6X+BL8Hvjer+A7xw3Ix7Aj7cOpI+zDoKPvc
2XFhY3MxjrpDc7FqtPNg0xj7MOKEsONz3fWxjnXz2ORcbDo2132FTcfZh00T
7MOdifZhAPd6fC4WjPee4NMk5y3uufFhxxTvA5acaB8unB12Vi5OTXVsDp/p
kFxsOjlsWi4enRp2Si5uneIYXDvJ9XDrNOfBptPtd/cc5MGI6Y7BjDPsw5rz
ws7NxSb0nFzMOsd77eR9cXfh0fmugUn8jHBBLoZxpjNzsexMr9HLcWr4c1J+
X7G6eXNJLo7wvdp8Ly3ffQt3rgi7PBd3rrQPd66yz926NuyaXO+nGWFX52IZ
dZfl6t07w+7Ixa2rXc/9vsux9ZzLd1NzZ6/zvPDo5rCbcnHnFvtw51b78Ol6
18Ce28Nuy8XBa7ynbb0+sX6OU7+l574xV8/d7T3R80+GPZGLU/c4Rp+9EPZ8
LgbdH3ZfLg49GPZALh494Bhcu9f1sPAh58Gph+3v5XUez8W++1wDpx4NeyQX
h57ynuDO0/bhzjP29/Qcj+VizXNhz+bi4CNebw/HmXew49Rv4WdwQy6OPO96
GPOizwyDXg17JRdfXrMPb163z918O+ytXLx5M+yNXJyj7uVc/fpZ2Ke5ePSG
6+npzx0b7tyXcvXiO54XBn0Q9n4u1nxoH9Z8ZB8mvesaePNJ2Me5euYt72mc
1yc2xnHqYdAX3gf9yvcy873d9Plv9od5XzwXWPNN2Ne5ePNd2Le5uPOtY3Dn
h7Dvc3HtS69BT/4T9ncuFn7venj3lfMmeG58mPWj54Ipf4b9kYs16O+5mPS7
98p/O+H37fx+/SSf4+dc3PnL9dO9Pj7s+8lrTHUuPvz413uFQfyltP/8efLd
8nzHPKxKQ5NCPMoK+bAmL+TDnqKQD29aoXUhtlHHvDCsLJTHzzRVIZ/enjN0
jkKcoo4YjGCsUyE2zRw6UyE2zVLIhzWzFvJhz2yFfHjTDm0KcQdlT/Bi9kJ5
8IO58emNzqFzFeqVuQv59OtioYsWYsk8hWL0WffQZQqxZr7QeQsxaIHQ+Qtx
CCUG17oUqodVCxbKg48LFfLhHXOQB6cWLhSDTV0L+fBlidBuhTiELl6IRyh7
hc08J84Pg5YsVAMnlg5dqhCDONMihfiFsgYcIU4NPx/Qi+/lYgpnpZ73z3++
N3CK90qPQpxaoZAPd1Ys5MOhnoV8+mrV0FUK8Y665QrxaKVCefBp5UI+fb5+
6HqFOEUdMXjB2LqFONWr0H2FU2sW8uHOWoV8OLR2IR/2cK9XK9TrKHuCHesU
yoMlzI0Pb3oX2gfPYoNCPr3bN3TrQs9pw0IxeM+Zli3EnU1CNy7Eo81CNy3E
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
JrE+MZhFnHwYs3tSHfQ3965z/zpcONgaNlMX+wKb9gwbkMSdvcIGJvFooGMw
aJ+wvZN41z9pDX7nedLnYyrHyYeDeySNm8xzo+nnfT0XjDks7NAk1uAPSWLW
Ia6VzwbOL++++TkOSGLQ4c6HSUdYw8f9w/ZLYtYB1nynnGT+whfuhOb3H+7M
5k5b7ruFR8eHHZfEmhOsYc+J1rDm5LDBSZ+jg8JOSmIeeccm9TN/d8LfoXRx
nHzO4nmOzeaxxySxY4jnhU2nh52WxJozrGHPmdbw5hTnwImzw85K+rwc7Jq6
en1iizpO/oKe+9Sk/hjqmuj/K8IuT+rF8x2jt64LuzaJO8PCLkzi0UVhw5OY
NNwxGHeB8+HWxR4HK0dYd/c6lyVx8ELnwJqRvKskJl3pmmDNVdawZ5T1Kp7j
0iQWXBN2dRITL/F6KzvOvGs6Tv4C3gP2cW0/H/mw53o/M6y6KezGJAaNsYZB
N1vTP7eFjU06p7eG3ZLENvJuSOrh+8PuSzrHtzif/n7AsXU9dnRSX97ueeHR
nWHjk/hylzW8udsaxoxzDmy4N+yeJN6NdU1beX1i/Rwn/3+fl66DHuXO62eT
ev55656ui32BL4+GPZLEncfDHktiz2OOwb4nw55IYtxDXoM+fC3s1SRuPeF8
2Pewx+3gudHw6ynPBVdeCnsxiS/4F5L49IJr5bvD0Um9vYef45kk1rzs/P28
/itJ/Hraa/T3WDTMeN21wso3w97w++Tueu6wh09vh72VxK13rOHRf6zh0bvW
1PVh2AdJXHvL88Kt9zwOHr1vTW9/HfaVn+cDx072z75MYtN/wz5JYtOn1rDm
M2vY87k1vPk47KMk7nzkmuDFFx432HOj6Y1vXAe98q01/fpX2J9JLPnOMfps
Mv6nyFms+THshyQG/Rz2UxKHfnIMrn3vfFj1i8fBx1+tz/AcjINTvzkGm363
hi//hP2dxCH8hCQeTXCtx3mfeH4YNNE5cGJS2L9JDOKZ/kji1x9eY4Tj5PBd
gV68I4kpPCv5fC5xRjg3cIrPlSmzONXJ0nAnZWk4lLM0fTV1+JbFO/KmyOJR
yRoHn2qWps9nCz9rFqfIIwYv+NksWZyaPuu8wqkZsjTcmTFLw6GZsjTs4VxP
k9XreGqCHTNnjYMlzI2GN7Nn1cFezJGl6d1Fwi+ctU9zZsXgPc80eRZ35g7f
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
4DeoYhaeWvls4Pzy7uEQz7FuFYM2rMqHSfweg4YZPavWgFmMRZ9gZvD7AXzh
Tmh+/+HO7LV83y082iL05lWs6VelYc+WVRrWbBt+m6rP0a3Db1XFPPI2q+rn
/uF3r2Ib8S19FveoisFFxm5axY7tquaFTTuF37GKNTtXadizS5WGN9tX5cCJ
3cLvWvV5SV3UBINYnxgcIU4+HGTuHar6Y4Brov8PDTukqhf3dIzeOibs6Cru
7B22VxWP9g3bp4pJ+zgG4wY6H27t53Gwcn/rab3OwVUc3Ms5sObAsAOqmHSY
a4I1h1vDniOsp/EcB1Wx4KiwI6uYeIDXm9px5p3JcfJhPHvAPs7i5yMf9hzr
Z4ZVJ3J2qhh0kjUMGmRN/5wSNqTqnJ4cNriKbeQdX9XD54cNrTrHg51Pf1/g
2Bwee1xVX57qeeHRmWFnVPHlLGt4dE7Y2VWMOc05sOG8sHOreDfENS3p9Ykt
7jj58PJC10GPcuf1lVU9P8p6dtfFvsCXi8MuquLOJWEjqtgzwjHYd2nYyCrG
DfMa9OHosOuruDXS+bBvuMd189xo+HWZ54Ir14ZdU8UX/NVVfLratfLdoW9V
b6/m57iiijXXOb+H10fDr8u9xqoei4YZN7hWWHlT2I1+n9xdzx328OnmsDFV
3LrFGh7dag2PxlpT1x1h46q4Nsbzwq3bPA4e3W5Nbz8U9qCfZ5xj2/pnD1Sx
6e6wu6rYdI81rLnXGvbcZw1v7gwbX8Wd8a4JXtzvcdt4bjS98bDroFcesaZf
Xwx7oYoljzpGn70Z9kYVa54Ie7yKQU+FPVnFoScdg2uPOR9WPe1x8PEZ6509
B+Pg1LOOwabnrOHLK2EvV3EI/1IVj15yrZt7n3h+GPSqc+DE62GvVTGIZ3q+
il/Pe439HSeH7wr04ulVTHnD+XwucUY4N3CKz5V3qjj1rjXcec8aDr1vTV99
HPZRFe/Ie7uKRx94HHz60Jo+/zbsmypOfeTYKf7Z11Wc+qzqvMKpz63hzhfW
cOhLa9jDuf6kqtc/cU2w4yuPG+K50fDmO9fBXnxvTe/+E/a39+kHxw7xM71V
xZ1fwn6u4tFvYb9WMelXx2Dcj86HW797HKz8w/psz/FTFb/+dAzW/GUNXyaF
/VvFJ/zEKk5NdK0Huy7OLkziwnZy4MLk3PfexCOeaUIVpyZ4DdhEnJyFvBfs
DRyZoikfrkzZpOFWCZ+beFSbNDxqTZpzNF34aZsYNE34qZs4R15q6t05w8/R
xDPi5HO+52qKwUTGdppYM33TvPBo5vAzNXFnliYNd2Zt0vBphqYc2DN7+Nma
zjd1URPsYH1isIk4+fRZl6Y66N2u4Rdr6vnFmzTvZsfwOzRxZ77w8zaxZ4Hw
8zcxCE8MBi0UfsEmxs3dtAbvYKemueAicfJh3zxN42Afc6Ph18JNc8GXpcIv
2cQd/BJNfMJTKxxnn2ZsYhDPsWgTg5ZuyodByzRpOLhI0xpwjbFozsvOTbXy
OcF87C+MWS78sk3cWjH8Ck1sWqlJw52VmzQcWqVJc2ZXD79aE+fIW76JR92b
xsGnVZs0HCTeremsk0eMPl8//HpNbFq76TsxbFqnScOgHk0aBvVs0rCK785r
NPU3nprg0bpN4+ATc6PhSq+m9WBT7/AbNPXwVuG3bOLRRuE3bOLOxk0a7mzS
pGHN5uE3a2LepuH7NnGNvD5NLOdZ2V+4RZx8OEicteEXc5APp7ZomhcObRt+
myYe4bdu4g2eWvls4L3x7mHTdk05MIhzvX0Tv/o1zfu/7w1Nzw+/iJPD34/w
edzXjNml6azw7i8JG9HErd3D79bEpv5NGu7s0aRhzF5hA5u4s2fYgCbOkbdr
U/8fGnZIE7cGOJ8+P8wxmMhY6pgqbG/PC6f2D9uviVMHWMOdA61hzT7OgREH
hx3UxL6Brmlar09sasfJpx8Odx306uCwQU29e7I1vXRm2BlNnDo67Kgm9hwb
dkwTg45xDD4dH3ZcU88d4TX4bjiV92x2x8mn14/0uJk9NxqenuC54MupYac0
8Qk/pIlTQ1xr9j7t28QgnuOkJj6d5nwYdLo1rDzRa3TxWPQKfv8XN7F8X+8v
XDnLewGrzgs7t4lhQ61h0/nW9MDwsGFN5/XCsAuaGEfeOU19exV708SyC5xP
T49yrKvHnt3UWxd5Xtg0sum8wqZLrWHQZdbL+znIgTtXhF3e1EPDXNNqXp9Y
d8fJhzFXuw76e2zYrU1cuM16MdfFvsCm68Oua+LODWGjm3g02jEYdFPYjU28
u8Zr8DsP55jzsZ7j5MPBaz1uHc+Npp/HeC4Yc0fYuCbW4G9vYtbtrpXPhjP8
7vv4OW5pYtB458OkO61hxs1eo7fHomHK3WF3hf0/jb+oow==
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnc+rV1UUxb8oQhb0jJoYTaToL6ggB96CIGjQoF+goFAQPJokb5azyB6O
MiRqGhREZgklIgZqQRFNgqAypDB4EJn0okmQA4ty+iXOc6+7Put+z5s8OFzO
Pff82Hvttdc+3x3PPP/Ys5tms9mpm2azzf/8v/jwvZf/PLg+bP7wu4+HfReH
o0t3rd/x5bHhk8PPnV/fuj7cvPzLjSdvOT8cfX37hW2H3pzbfviz+95dPnZ5
2PrW7u93rX013LBzzzdHXjlS1r73yqYDPz16afjt13P33/nI2eGP27d8vXTP
/rnPt45/3jyo22f//v0+XD2+c+Xtj9aGJx9648XbVk+U9dPa7pqH1n2o3m+t
7a3jTNmfreOper5q3efZjXntT7z/8u7ld9autR8fPnh69fNbHzyIe76qn9fO
bFv58eoP1+zBbPbf86+WvVc9nqp5o82zej9U7U/Xurv2Q2v/rfZNbf+r/L56
/K39qPFMlX9PwS1VfpkWL9D8lKtdbQ9dflm9Lq7xu/BDCh5L+S4arkvHYy5+
Qx0XV+Eutf9t5eXSeZiqeah63sVL0PaDOp6l+a8UP9XxmHc+U9rV8+mKs1z+
osrf0XCsi1en2W0az0mbB5ofdPHhKTwPrR/aOep4zLufaby9K05X63Cq8kpV
vFBrP63tLjus9i8pfnPRxrlo/i7lvHQ8Nk6c3v3aOPrAqryDej5pOhN13qcq
r6Hmo9R6Epc9cenxXPxbit+h+feOK7LmJ0Wnp9b1Ldp71X6Kpt9Q+01XvUwV
L5SCq126C1p+lpYXpumiXfg2pV1t32h1H1X99HpJLw+g1kO6cJ2rbjrlfKXX
9dDq6dTzPNU6I9p7afkIdV5go+2fLj91cumFn4dvv3j8yvaXTv9vu8pO0vIO
i4bT1Pc8qNed5kdo+SbX/Kfg0nT+jabXVT/vyifS8qru+KgVJ9BxBe3eJNr9
XSl1rDTdgktf5Lq/RT1+Go9Bi8dT6pLUev7OQ3rvfaLde0mzw+r5d+lMaP6d
lp/tPLk3rqf55ZT7eWj6IjUeUOuLxoq76XE0DW+79DYpcTrN76vtRgof6NIj
0XgntT1x1V+k8wyuuN7l79Q8wEZxwvXm/WnxQkp+JyXfl67DSRlPSv0yjSek
6Rlc8UuKHaCdLyr/3+qXV3es/HVg16XhvbsPnV564Jxc16fOR6hxfkp9d2/P
wgMp9wJVjWfeOXLVabrs2FT5NJeOzsWnufJu6fvf5a9d/B7t/o0U3U7KfTW0
9aWtY4pdpemdqvpP17ek5GFpeb2qfaXGCa3P0+L6lPNC4xVdeQQXbnH9volL
P+biaWm4gsaLqnnplDrWKv9Cy+up+ZOUc0fTldH8Wop/p93L6lpH2nql2w31
e2n1TVX+l5bPTa+HTedn1Oco5b7HFL9P86c0P0j7Ltq+dfGZ6Xaepnt05SNo
+eJ+LqYRd9PmIZ3voumf0/cPTXeaYt/S9YEu3aDav6v5/6r57H7Tqx9w4Una
vSLqeab5L/V7afM873mXP6XhAVr+xYVP0uMFmj2n8Qw0/UCKzo3m76r81FT5
H/U60vJcanwyVX7Add/LVHULG42Xx67jVuPzFJ42xb65+EA1r0XTqabw5Cl1
B+o4tEovodb/p+j5F02XQtPttPZD4xlS9IS0dpq+XW2vaLidtr4pdSU0HixF
Z0jjFV12hlbvqcY5NPvswnXq7636rqnqqVx2OMXvu/KGKfhBzQO74ndXvR6t
PeVeiBQ/klJ/SluXjse836vG8y7dY4q+lJan6H5qHLva7fk4/p2G99L3M40X
SsFjKfGyWn9Fyx+l8/Pp9ey08afkBWjjd8VlKd9F258uPE+zn7Q8Gk2/N1bd
rur3kWm8QYo+0JUXUPdThUNS8nS0fmg8Es0/usZTFW+64sGuD/faJVcdYhUe
SNFtLlp86upnqnGo2v7TeEi1XUrHezT/QrtnSR0/9niQGTe58j60c+qKK9X1
/i5/RIvjXHlJmu63NY6g3aszb/wpPH9KftzFJ7twaefxpsGrqM8Frf43Hc+r
/Wl6fOpad9e9wep9Szu/rnxB63tdcZwL/7ueX7R2Na+r1pnQ7mFQ112mx1ku
fE7La7hwlxoPVPEbKX6/Sj+mfn4s3Z1KX0fTY0yV16XlwVP0qy474OIDaXk0
Wj5CrUdy5anV+59Wt5XOb6jn2bW+1XUB14tnpmqfafphmq6elnd21avS8mUp
/bt0kjT7r7bnrvGr9f803sOFD8fCA5TfCVXnkdX2kIYfUvQhrfdfqe2Ji8em
6VHV+S8anqTxCSn8g4vPoeXr1XralP1Ai+8WTY9By1/QvotW7+nq/282ziFN

      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Intervalle\"", TraditionalForm], None}, {
        FormBox["\"Zeit t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[1], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox["\"NaSch: Dichteplot mit Intervalll\[ADoubleDot]nge 10, p=0.15, \
und q=0\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 30.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                   "GraphicsLabel"}, StripOnInput -> False]}, {
                 "GraphicsTicks"}, StripOnInput -> False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             
             TemplateBox[<|"color" -> GrayLevel[1]|>, 
              "GrayLevelColorSwatchTemplate"]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"Max", "[", 
               RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8998870037668962`*^9, 3.8998876761470165`*^9, 3.899888164626534*^9, 
   3.8998887415509033`*^9, 3.899890462026965*^9, 3.899890815536274*^9, {
   3.899897352024807*^9, 3.8998973632894597`*^9}, 3.8998974035921664`*^9, {
   3.899917987881106*^9, 3.8999180086049876`*^9}, 3.8999180392339716`*^9, 
   3.8999182229875565`*^9, 3.8999242296852894`*^9, 3.899970903705757*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"7dba33db-9212-426d-b900-f6603545b0c5"]
}, Open  ]],

Cell[TextData[StyleBox["Der Plot zeigt wie erwartet die Ansammlungen vieler \
Autos aus dem Densityplot oben auch hier als helle, gelbe Punkte (7-8 Autos \
pro Bereich), sowie Bereiche mit einer geringen Autodichte als dunkelrote \
Bereiche (0-1 Autos pro Bereich). Die gelben Bereiche sind wie die starken \
Anstauungen im Dichteplot schr\[ADoubleDot]g angeordnet, je weiter die Zeit \
fortschreitet, desto weiter bilden sich R\[UDoubleDot]ckstaus auf Zellen mit \
niedrigerem Index. Der Gro\[SZ]teil der Punkte ist jedoch \
eingef\[ADoubleDot]rbt in orange, also mit 3-4 Autos im betrachteten Bereich.\
\n\nDas Modul dichteplot2D erstellt nach dem gleichen Schema wie oben einen \
Dichteplot pro Spur f\[UDoubleDot]r die Simulation einer zweispurigen Stra\
\[SZ]e anhand des Moduls twolanesNaSch. Es wird weiter unten f\[UDoubleDot]r \
die Auswertung dieses Moduls verwendet.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899376924567463*^9, 3.8993769444201417`*^9}, {
   3.899919671630472*^9, 3.8999197409557304`*^9}, {3.8999198488675966`*^9, 
   3.899919871628131*^9}, {3.8999924504827385`*^9, 3.8999924527341595`*^9}, {
   3.8999924995897584`*^9, 3.899992499734205*^9}, {3.89999317589482*^9, 
   3.899993246873111*^9}, {3.8999934031476016`*^9, 3.8999934939668727`*^9}, {
   3.8999935731822453`*^9, 3.8999935831328173`*^9}, {3.899993709424436*^9, 
   3.899993719267372*^9}, {3.899994532192354*^9, 3.899994570200329*^9}, {
   3.8999948893132553`*^9, 3.899994897922896*^9}, {3.8999950587973003`*^9, 
   3.899995072883683*^9}, {3.899995147321836*^9, 3.899995327950554*^9}, 
   3.9000047856173506`*^9},ExpressionUUID->"7752114c-3962-4473-8c88-\
ad703be852ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Dichteplot", " ", "\[UDoubleDot]ber", " ", "Zeit", " ", "der", " ", 
    "zwei", " ", "Spuren", " ", "getrennt"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"dichteplot2D", "[", 
    RowBox[{"nCar_", ",", "p_", ",", "avCells_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "anzahl", ",", "laengen", ",", 
       "iter", ",", "t", ",", "k", ",", "cell", ",", "nasch"}], "}"}], ",", 
     "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "150"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Liste", " ", "Plots"}], "*)"}], "\n", 
      RowBox[{"listdichteplot", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Daten", " ", "Eingabe"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"twolanesNaSch", "[", 
        RowBox[{"nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"nasch", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Liste", " ", "Anzahl", " ", "Autos", " ", "innerhalb", " ", 
        "Intervall", " ", "avCells", " ", "und", " ", "das", " ", "pro", " ", 
        "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Index", " ", "f"}], "+", 
        RowBox[{
        "r", " ", "separates", " ", "Betrachten", " ", "der", " ", 
         "Spuren"}]}], "*)"}], "\n", 
      RowBox[{"k", "=", "1"}], ";", "\n", 
      RowBox[{"Do", "[", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Anzahl", " ", "der", " ", "Intervalle", " ", "avCells", " ", "in", 
           " ", "nCells"}], "=", "iter"}], ",", " ", 
         RowBox[{
          RowBox[{
          "Anzahl", " ", "Autos", " ", "innerhalb", " ", "Intervall"}], "=", 
          "anzahl"}]}], "*)"}], "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"iter", "=", "0"}], ";", 
         RowBox[{"t", "=", "1"}], ";", 
         RowBox[{"anzahl", "=", "0"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"For", "-", 
           RowBox[{
           "Schleife", " ", "f\[UDoubleDot]r", " ", "einzelne", " ", 
            "Intervalle", " ", "mit", " ", "L\[ADoubleDot]nge", " ", 
            "avCells"}]}], "*)"}], "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"cell", "=", 
            RowBox[{"1", "+", "iter"}]}], ",", 
           RowBox[{"cell", "<=", 
            RowBox[{"avCells", "+", "iter"}]}], ",", 
           RowBox[{"cell", "++"}], ",", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Falls", " ", "Auto", " ", "auf", " ", "Zelle"}], ",", 
             " ", 
             RowBox[{"Anzahl", " ", "erh\[ODoubleDot]hen"}]}], "*)"}], "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"nasch", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", ",", "t"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "==", "cell"}], " ", "&"}]}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"anzahl", "=", 
               RowBox[{"anzahl", "+", "1"}]}], ",", 
              RowBox[{"anzahl", "=", "anzahl"}]}], "]"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Falls", " ", "letzte", " ", "Zelle", " ", "des", " ", 
               "Intervalls", " ", "betrachtet"}], ",", " ", 
              RowBox[{"Anzahl", " ", "abgespeichert"}], ",", " ", 
              RowBox[{"wieder", " ", "auf", " ", "0"}]}], "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Divisible", "[", 
               RowBox[{"cell", ",", "avCells"}], "]"}], ",", "\n", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"laengen", ",", "anzahl"}], "]"}], ";", "\n", 
               RowBox[{"anzahl", "=", "0"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                 "Falls", " ", "letzte", " ", "Subliste", " ", "in", " ", 
                  "xnasch", " ", "betrachtet"}], ",", " ", 
                 RowBox[{
                  RowBox[{
                  "n\[ADoubleDot]chsten", " ", "Intervall", " ", "betrachten",
                    " ", "ab", " ", "erster", " ", "Subliste", " ", "mit", 
                   " ", "t"}], "=", "0"}]}], "*)"}], "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"t", "==", "tMax"}], ",", "\n", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"iter", "=", 
                    RowBox[{"iter", "+", "avCells"}]}], ";", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"iter", ">", 
                    RowBox[{"nCells", "-", "avCells"}]}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", 
                   RowBox[{"t", "=", "1"}], ";"}], ")"}], ",", "\n", 
                 RowBox[{"(*", 
                  RowBox[{"Sonst", ":", " ", 
                   RowBox[{
                   "n\[ADoubleDot]chste", " ", "Subliste", " ", "betrachten", 
                    " ", "mit", " ", "gleichem", " ", "Intervall"}]}], "*)"}],
                  "\n", 
                 RowBox[{
                  RowBox[{"t", "=", 
                   RowBox[{"t", "+", "1"}]}], ";"}]}], "]"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                "Betrachten", " ", "erste", " ", "Zelle", " ", "im", " ", 
                 "Intervall", " ", "f\[UDoubleDot]r", " ", 
                 "n\[ADoubleDot]chsten", " ", "Durchgang"}], "*)"}], "\n", 
               RowBox[{"cell", "=", 
                RowBox[{"1", "+", "iter"}]}], ";"}]}], "\n", "]"}], ";"}]}], 
          "\n", "]"}], ";", "\n", 
         RowBox[{"k", "=", "2"}], ";"}], ",", "2"}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Ergebnis", " ", "ist", " ", "Liste", " ", "mit", " ", "Anzahlen", 
          " ", "der", " ", "Autos", " ", "von", " ", "Zelle", " ", "0", " ", 
          "bis", " ", "avCells", " ", "f\[UDoubleDot]r", " ", "t"}], "=", 
         "1"}], ",", "2", ",", "3", ",", "...", ",", " ", 
        RowBox[{
         RowBox[{"dann", " ", "von", " ", "Zelle", " ", "avCells"}], "+", 
         RowBox[{"1", " ", "bis", " ", "2", " ", "avCells", " ", 
          RowBox[{"usw", "."}]}]}]}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Aufteilen", " ", "laengen", " ", "in", " ", "abwechselnde", " ", 
        "Sublisten", " ", "der", " ", "Spuren", " ", "f\[UDoubleDot]r", " ", 
        "die", " ", "Intervalle"}], "*)"}], "\n", 
      RowBox[{"laengen", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"laengen", ",", "tMax"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"listdichteplot", ",", 
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"laengen", ",", 
            RowBox[{"nCells", "/", "avCells"}]}], "]"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Intervalle\>\""}], "}"}]}], 
          ",", 
          RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<twolanesNaSch Spur 1: Dichteplot mit \
Intervalll\[ADoubleDot]nge \>\"", "<>", 
            RowBox[{"ToString", "[", "avCells", "]"}], "<>", 
            "\"\<\\n und p=\>\"", "<>", 
            RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
          RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
          RowBox[{"LabelStyle", "->", "White"}], ",", 
          RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}]}], "]"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"listdichteplot", ",", 
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"laengen", ",", 
            RowBox[{"nCells", "/", "avCells"}]}], "]"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Zeit t\>\"", ",", "\"\<Intervalle\>\""}], "}"}]}], 
          ",", 
          RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<twolanesNaSch Spur 2: Dichteplot mit \
Intervalll\[ADoubleDot]nge \>\"", "<>", 
            RowBox[{"ToString", "[", "avCells", "]"}], "<>", 
            "\"\<\\n und p=\>\"", "<>", 
            RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
          RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
          RowBox[{"LabelStyle", "->", "White"}], ",", 
          RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}]}], "]"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"Return", "[", "listdichteplot", "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfeVVA18D31tHZpFVAiD62psrWSD6hfWpUhB9YvqW
KhDNIuxZB6L9pDjbQPQ5FiUwnfTFtBdEp82dPgFEMzzhmwmiFazfzALRd+7u
XACii7cnLwLRZmX/VoDoRRY2G0B0QGrvVhB9Rj5pJ4jeFPrzGNg+kd7jIHqB
78dfIDpvcgVTI5BmeikjBKJV1nuJgegl+1arguiugPmaIDqmMtUHRHu/d/EH
0R/KLSNBtN/q18kg+oaZeD6IdspQ6AXRG8JOzQHRIpvy54HoHwEy20C00Onl
YLr52fy7ILpO/yiYnlL3RKgFSEdEvgTTAFgilTg=
  "],
 CellLabel->"In[9]:=",ExpressionUUID->"15a04ccb-9817-4d90-b556-0154fcf6b2d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Histogramme",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"e5f36a8b-8b9a-4faf-8be1-e5f9ffdb8c9f"],

Cell[TextData[StyleBox["In diesem Modul werden Histogramme der \
Geschwindigkeit und des Abstand f\[UDoubleDot]r die Autoanzahlen in carlist, \
die Zeitpunkte in tlist und die Tr\[ODoubleDot]delwahrscheinlichkeit p und f\
\[UDoubleDot]r das VDR-Modell die zus\[ADoubleDot]tzliche \
Tr\[ODoubleDot]delwahrscheinlichkeit q erstellt. Falls Histogramme f\
\[UDoubleDot]r die oben berechneten Autoanzahlen erstellt werden sollen, wird \
auf diese Daten in der Liste histonasch zugegriffen. \n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8995687665500584`*^9, 3.899568804950272*^9}, {
  3.899568849127343*^9, 
  3.8995689503751855`*^9}},ExpressionUUID->"eabf6e1e-9efb-4db8-a5fe-\
7103953589b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Daten", " ", "NaSch"}], "-", 
      RowBox[{"Modell", " ", "f\[UDoubleDot]r", " ", "nCar"}]}], "=", "60"}], 
    ",", "100", ",", "200"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"histonasch", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NaSch", "[", 
       RowBox[{"60", ",", "300", ",", "100", ",", "5", ",", "0.15"}], "]"}], 
      ",", "nasch100", ",", 
      RowBox[{"NaSch", "[", 
       RowBox[{"200", ",", "300", ",", "100", ",", "5", ",", "0.15"}], 
       "]"}]}], "}"}]}], ";"}]}]], "Code",
 CellChangeTimes->{3.899568737389908*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"ae4289fd-3737-485a-ac1a-684d677e1de5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Falls", " ", "Modell", " ", "NaSch"}], ",", " ", 
    RowBox[{"q", "=", "0"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"vdhisto", "[", 
    RowBox[{"Modell_", ",", "carlist_", ",", "tlist_", ",", "p_", ",", "q_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"tlist", " ", "sind", " ", "Zeitpunkte"}], ",", " ", 
      RowBox[{
       RowBox[{
       "f\[UDoubleDot]r", " ", "die", " ", "Histogramme", " ", "zu", " ", 
        "bestimmen", " ", "sind"}], ";", " ", 
       RowBox[{
       "auch", " ", "einzelnen", " ", "Zeitpunkt", " ", "als", " ", "Liste", 
        " ", "eingeben"}]}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "nCar", ",", "tMax", ",", "vMax", ",", "anzahlt", ",", 
       "anzahlcars", ",", "zeit", ",", "viAutos", ",", "diAutos", ",", "i", 
       ",", "vhisto", ",", "dhisto", ",", "histoplot", ",", "nasch"}], "}"}], 
     ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Listen", " ", "der", " ", "Plots"}], "*)"}], "\n", 
      RowBox[{"histoplot", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"anzahlt", "=", 
       RowBox[{"Length", "[", "tlist", "]"}]}], ";", "\n", 
      RowBox[{"anzahlcars", "=", 
       RowBox[{"Length", "[", "carlist", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "F\[UDoubleDot]r", " ", "betrachtete", " ", "Anzahlen", " ", "Autos"}],
        "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "anzahlcars"}], ",", 
        RowBox[{"k", "++"}], ",", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Anzahl", " ", "Autos"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"nCar", "=", 
          RowBox[{"carlist", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder",
            " ", "vdr"}], "*)"}], "\n", 
         RowBox[{"nasch", "=", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"p", "==", "0.15"}], ",", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", 
                   "nCar"}], "]"}]}], ",", 
                RowBox[{"NaSch", "[", 
                 RowBox[{
                 "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
                 "]"}], ",", 
                RowBox[{"nCar", "==", "60"}], ",", 
                RowBox[{"histonasch", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "100"}], ",", 
                RowBox[{"histonasch", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "200"}], ",", 
                RowBox[{"histonasch", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", 
              RowBox[{"!", 
               RowBox[{"p", "==", "0.15"}]}], ",", 
              RowBox[{"NaSch", "[", 
               RowBox[{
               "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
            RowBox[{"vdrNaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
              "q"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<=", "anzahlt"}], ",", 
           RowBox[{"j", "++"}], ",", "\n", 
           RowBox[{"(*", 
            RowBox[{"Betrachtete", " ", "Zeit"}], "*)"}], "\n", 
           RowBox[{
            RowBox[{"zeit", "=", 
             RowBox[{"tlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{
               "Listen", " ", "Autos", " ", "mit", " ", "Geschwindigkeiten", 
                " ", "v"}], "=", "0"}], ",", "1", ",", "2", ",", "3", ",", 
              "4", ",", "5"}], "*)"}], "\n", 
            RowBox[{"Clear", "[", "viAutos", "]"}], ";", "\n", 
            RowBox[{"viAutos", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "zeit", ",", "n"}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
            "\n", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"Listen", " ", "Abst\[ADoubleDot]nde", " ", "d"}], "=",
                "0"}], ",", "1", ",", "...", ",", "nCar"}], "*)"}], "\n", 
            RowBox[{"Clear", "[", "diAutos", "]"}], ";", "\n", 
            RowBox[{"diAutos", "=", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "zeit", ",", "n"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "zeit"}], "]"}], "]"}], "]"}]}], 
                  "}"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"UnsameQ", "[", 
                 RowBox[{"#", ",", " ", 
                  RowBox[{"{", "}"}]}], "]"}], " ", "&"}]}], "]"}]}], ";", 
            " ", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "L\[ODoubleDot]schen", " ", "der", " ", 
               "Abst\[ADoubleDot]nde"}], ",", " ", 
              RowBox[{"die", " ", "nicht", " ", "vorkommen"}]}], "*)"}], "\n",
             "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"histoplot", ",", 
              RowBox[{"Histogram", "[", 
               RowBox[{"viAutos", ",", 
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"AxesLabel", "->", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"v", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
                RowBox[{"PlotRange", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "5.5"}], "}"}], ",", 
                   "Automatic"}], "}"}]}], ",", 
                RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                RowBox[{"PlotLabel", "->", 
                 RowBox[{
                  RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
                  "\"\<: Histogramm von v\\n mit \>\"", "<>", 
                  RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                  "\"\< Autos, t=\>\"", "<>", 
                  RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                  "\"\<, p=\>\"", "<>", 
                  RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<, q=\>\"", "<>", 
                  RowBox[{"ToString", "[", "q", "]"}]}]}], ",", 
                RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], ";", 
            "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"histoplot", ",", 
              RowBox[{"Histogram", "[", 
               RowBox[{"diAutos", ",", 
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"AxesLabel", "->", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"d", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
                RowBox[{"PlotRange", "->", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                RowBox[{"PlotLabel", "->", 
                 RowBox[{
                  RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
                  "\"\<: Histogramm von d\\n mit \>\"", "<>", 
                  RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                  "\"\< Autos, t=\>\"", "<>", 
                  RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                  "\"\<, p=\>\"", "<>", 
                  RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<, q=\>\"", "<>", 
                  RowBox[{"ToString", "[", "q", "]"}]}]}], ",", 
                RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], 
            ";"}]}], "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Histogramm", " ", "z\[ADoubleDot]hlt"}], ",", " ", 
            RowBox[{
            "wie", " ", "oft", " ", "eine", " ", "Zahl", " ", "in", " ", 
             "einer", " ", "Liste", " ", "und", " ", "den", " ", "Sublisten", 
             " ", "darin", " ", "vorkommt"}]}], "*)"}], "\n", "]"}], ";"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"Return", "[", "histoplot", "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995688394956374`*^9, {3.899569852164028*^9, 3.899569871997429*^9}, {
   3.8998989196149435`*^9, 3.899898938529084*^9}, {3.89991001540347*^9, 
   3.899910062546559*^9}, {3.8999105780589514`*^9, 3.899910666345428*^9}, {
   3.8999106974937315`*^9, 3.899910740086793*^9}, {3.899910784261219*^9, 
   3.899911005092961*^9}, {3.8999110911138*^9, 3.899911134202111*^9}, {
   3.899911392153963*^9, 3.8999114907058625`*^9}, {3.8999122467313576`*^9, 
   3.8999122531063695`*^9}, {3.8999155736672935`*^9, 3.899915575127058*^9}, {
   3.8999158244349833`*^9, 3.899915831493349*^9}, {3.8999727958649893`*^9, 
   3.899972796565342*^9}, {3.8999729921721187`*^9, 3.899973024395294*^9}, {
   3.9000003975042973`*^9, 
   3.900000432265235*^9}},ExpressionUUID->"23c5c7e7-aa96-4062-8106-\
6ea28332da4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"histoplot", "=", 
   RowBox[{"vdhisto", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100"}], "}"}], ",", "0.15", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"histoplot", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"histoplot", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
       RowBox[{"histoplot", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "2"}], "]"}], "]"}], ",", 
       RowBox[{"histoplot", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8995689737053113`*^9, 3.8995689840896273`*^9}, {
  3.8998873022170143`*^9, 3.899887302374037*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3d2b2861-c274-48a0-acb3-ba568f511d5f"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6258028888888889, 0.054322222222222216`, 
                0.010549066666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684816`, 
                  98.60419607176112}, {-72.94964742137361, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176112, 
                  133.36077662283742`}, {-64.62585752747424, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7828637777777778, 0.10864444444444443`, 
                0.0052745333333333345`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283743`, 
                  168.11735717391372`}, {-81.27343731527299, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391373`, 
                  202.87393772499001`}, {-89.59722720917236, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 15}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499003`, 
                  237.6305182760663}, {-139.5399665725686, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 15]& ,
              TagBoxNote->"15"],
             StyleBox["15", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[15, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 15}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760663, 
                  272.3870988271426}, {-139.53996657256863`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 15]& ,
              TagBoxNote->"15"],
             StyleBox["15", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[15, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  77.75024774111532}, {-82.78685365961832, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9819778, 0.48442019999999997`, 0.05144122], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111533, 
                  91.65287996154586}, {-94.13747624220838, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9108294, 0.27453859999999997`, 0.020955220000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.20287996154585, 
                  105.55551218197638`}, {-71.43623107702825, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7508478000000001, 0.10824136000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.10551218197637`, 
                  119.4581444024069}, {-128.18934398997854`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240688`, 
                  133.3607766228374}, {-139.53996657256855`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9819778, 0.48442019999999997`, 0.05144122], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  147.2634088432679}, {-94.13747624220838, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326792`, 
                  161.16604106369846`}, {-60.08560849443821, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.71604106369844`, 
                  175.06867328412898`}, {-37.384363329258086`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{174.61867328412896`, 
                  188.97130550455955`}, {-48.73498591184815, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{188.52130550455954`, 
                  202.87393772499007`}, {-37.384363329258086`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 2}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{202.42393772499005`, 
                  216.7765699454206}, {-37.384363329258086`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{258.0344666067121, 
                  272.3870988271426}, {-26.033740746668073`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.99249075, 0.579217, 0.0682002], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  98.60419607176104}, {-104.8575086813212, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.36077662283742`}, {-97.92101710307173, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  168.11735717391366`}, {-28.556101320576936`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.55708875, 0.03055625, 0.012856675], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391364`, 
                  202.87393772499001`}, {-35.49259289882644, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606625`}, {-97.92101710307173, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760662, 
                  272.3870988271426}, {-139.53996657256863`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 11}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{63.3976155206848, 
                  73.77806710670652}, {-120.33122066357004`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{73.32806710670653, 
                  83.70851869272849}, {-120.33122066357004`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{83.25851869272847, 
                  93.63897027875021}, {-53.10060998207509, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{103.11942186477191`, 
                  113.49987345079387`}, {-53.10060998207509, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{113.04987345079385`, 
                  123.43032503681559`}, {-139.5399665725686, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681557`, 
                  133.3607766228373}, {-62.70498293657436, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228373, 
                  143.29122820885925`}, {-53.10060998207509, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{142.84122820885923`, 
                  153.22167979488097`}, {-53.10060998207509, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{152.77167979488095`, 
                  163.15213138090292`}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{162.7021313809029, 
                  173.08258296692463`}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{172.63258296692462`, 
                  183.01303455294635`}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{19.5, 0.}, {20.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{262.00664724112073`, 
                  272.38709882714267`}, {-24.28749111857728, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.9199999999999999, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 20.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -119.58957682310464},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.581], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068483, 
                  77.75024774111534}, {-82.78685365961832, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9819778, 0.48442019999999997`, 0.05144122], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{77.30024774111536, 
                  91.65287996154589}, {-94.13747624220838, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9108294, 0.27453859999999997`, 0.020955220000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{91.20287996154588, 
                  105.55551218197641`}, {-71.43623107702827, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7508478000000001, 0.10824136000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{105.1055121819764, 
                  119.45814440240693`}, {-128.18934398997854`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{119.00814440240691`, 
                  133.36077662283742`}, {-139.53996657256857`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9819778, 0.48442019999999997`, 0.05144122], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283743`, 
                  147.26340884326794`}, {-94.13747624220838, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{146.81340884326795`, 
                  161.16604106369846`}, {-60.085608494438205`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.581], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{160.71604106369847`, 
                  175.06867328412898`}, {-37.3843633292581, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{174.618673284129, 
                  188.9713055045595}, {-48.73498591184815, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{188.5213055045595, 
                  202.87393772499001`}, {-37.3843633292581, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499003`, 
                  216.77656994542053`}, {-37.3843633292581, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.581], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{13.5, 0.}, {14.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{258.03446660671204`, 
                  272.38709882714255`}, {-26.03374074666806, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.8, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 14.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.99249075, 0.579217, 0.0682002], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-104.8575086813212, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283748`}, {-97.92101710307172, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 2}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-28.556101320576936`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.55708875, 0.03055625, 0.012856675], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499001`}, {-35.49259289882642, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606637`}, {-97.92101710307172, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.3870988271427}, {-139.53996657256857`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  73.77806710670652}, {-120.33122066357001`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{73.32806710670653, 
                  83.70851869272838}, {-120.33122066357001`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{83.25851869272836, 
                  93.63897027875021}, {-53.100609982075085`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{103.11942186477191`, 
                  113.49987345079376`}, {-53.100609982075085`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{113.04987345079374`, 
                  123.43032503681559`}, {-139.53996657256855`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681557`, 
                  133.36077662283742`}, {-62.70498293657436, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  143.29122820885914`}, {-53.100609982075085`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{142.84122820885912`, 
                  153.22167979488097`}, {-53.100609982075085`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{152.77167979488095`, 
                  163.1521313809028}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{162.70213138090278`, 
                  
                  173.08258296692463`}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{172.63258296692462`, 
                  183.01303455294635`}, {-24.287491118577258`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{19.5, 0.}, {20.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{262.00664724112073`, 
                  272.38709882714255`}, {-24.28749111857728, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.9199999999999999, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 20.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 30}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  98.60419607176104}, {-139.5399665725686, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 30]& ,
              TagBoxNote->"30"],
             StyleBox["30", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[30, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 26}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.3607766228373}, {-122.89238678476985`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 26]& ,
              TagBoxNote->"26"],
             StyleBox["26", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[26, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.945324, 0.3337716666666667, 0.027566066666666666`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 17}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228373, 
                  168.11735717391377`}, {-85.43533226222267, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7632311666666667, 0.10185416666666668`, 
                0.005933849999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499001`}, {-60.463962580524544`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606625`}, {-56.30206763357486, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760662, 
                  272.3870988271425}, {-39.65448784577613, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 100 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -358.76873046931394},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.99249075, 0.579217, 0.0682002], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  98.60419607176115}, {-104.85750868132118`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283742`}, {-97.92101710307172, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283743`, 
                  168.11735717391372`}, {-28.55610132057692, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.55708875, 0.03055625, 0.012856675], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391373`, 
                  202.87393772499001`}, {-35.49259289882642, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9849815, 0.511505, 0.0562295], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499003`, 
                  237.6305182760663}, {-97.92101710307172, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760663, 
                  272.3870988271426}, {-139.53996657256857`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  73.77806710670663}, {-120.33122066357001`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{73.32806710670664, 
                  83.70851869272843}, {-120.33122066357, -14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{83.25851869272842, 
                  93.63897027875026}, {-53.10060998207508, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{103.11942186477202`, 
                  113.49987345079387`}, {-53.10060998207508, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{113.04987345079385`, 
                  123.43032503681565`}, {-139.53996657256855`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.871407, 0.20684366666666665`, 0.013399966666666667`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681563`, 
                  133.36077662283742`}, {-62.704982936574346`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  143.29122820885925`}, {-53.10060998207508, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{142.84122820885923`, 
                  153.22167979488103`}, {-53.10060998207508, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{152.771679794881, 
                  163.15213138090286`}, {-24.28749111857727, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{162.70213138090284`, 
                  173.08258296692463`}, {-24.28749111857727, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{172.63258296692462`, 
                  183.01303455294646`}, {-24.28749111857727, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{19.5, 0.}, {20.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{262.00664724112073`, 
                  272.38709882714255`}, {-24.287491118577293`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.9199999999999999, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 20.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 30}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  98.60419607176104}, {-139.53996657256857`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 30]& ,
              TagBoxNote->"30"],
             StyleBox["30", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[30, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 26}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176105, 
                  133.36077662283742`}, {-122.89238678476984`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 26]& ,
              TagBoxNote->"26"],
             StyleBox["26", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[26, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.945324, 0.3337716666666667, 0.027566066666666666`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 17}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228374, 
                  168.11735717391366`}, {-85.43533226222267, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7632311666666667, 0.10185416666666668`, 
                0.005933849999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391364`, 
                  202.87393772499001`}, {-60.463962580524516`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  237.63051827606625`}, {-56.30206763357484, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.1805182760662, 
                  272.3870988271426}, {-39.654487845776146`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von v mit 100 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.623], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 26}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  87.01866922140229}, {-139.5399665725685, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 26]& ,
              TagBoxNote->"26"],
             StyleBox["26", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[26, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.76470364, 0.11198408800000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{86.5686692214023, 
                  110.18972292211981`}, {-129.93559361806925`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.65385692, 0.082042264], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 20}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{109.7397229221198, 
                  133.36077662283728`}, {-110.7268477090707, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 20]& ,
              TagBoxNote->"20"],
             StyleBox["20", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[20, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9108294, 0.27453859999999997`, 0.020955220000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228373, 
                  156.531830323555}, {-67.50716941382397, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.69490968, 0.078224, 0.008228272], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{156.081830323555, 
                  179.70288402427252`}, {-38.69405055032613, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.69490968, 0.078224, 0.008228272], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{179.2528840242725, 
                  202.87393772499001`}, {-38.69405055032613, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499, 
                  226.0449914257075}, {-43.49623702757581, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.623], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.52528392, 0.019556, 0.013924768], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{225.5949914257075, 
                  249.216045126425}, {-24.28749111857727, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.623], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{248.76604512642496`, 
                  272.3870988271425}, {-19.485304641327616`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.6799999999999999, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907663`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"NaSch: Histogramm von d mit 100 Autos,\\n t=50, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 8.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -597.9478841155233},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.899887005282089*^9, 3.8998876789070454`*^9, 
  3.8998881673391314`*^9, 3.8998887444800196`*^9, 3.899890472346527*^9, 
  3.899890820772911*^9, 3.899924232566784*^9, 3.899970906518715*^9},
 CellLabel->"Out[13]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWuMbcd1Hrjvefbr8l6Sl5IoUuKVKIkW+5KKZYeURLVFeiw7nvg1P/LD
r5FleSaWH23Z8Ux+ZCa4QeIkQuAZDFpOxnICj2IJmORPpqMkfpu0xKg9zEMQ
A8STDjwGBgQCyi1f5FcQGMGerlq1qr619qp99uk+fXqf03WA3n1O7dpVq9ar
1lq1qvZ3fvRnf/S/+8mP/uzHP/bR29/2Mx/9xI9+/GN/4fa3/tTPnBYNr1XV
5LWqGj55uxqdfq+rqvvlq1V1CZV+3F+HJ3X6VHeo7Pj0+4H77T7vprIDrDfw
1+Eh13GfJ/x1tAf1XNtP0eOu6pFscoRdu/v/nIr3odg98k1UfATFDsAPJriO
ueEhVT1QDb+PbjJoWPVYdfasgRU/Wl8/jPsEx/2S3eeu0eeTucafbA7xIOHO
/dzjNr7OX8eIpHj/Xxvtv1/CkfokMsdhhHqu3Tg8KhsdKhx9oEk+19Q3U0M/
RgAeBTy4Hwfc6K7BX08ag9xNbTB8R6EX5lHBUHdSG/tc9kVqA9s9ZpieT3BE
HqZRSX4a+OtEEPH0cxLgf9ag8STRIA7xTxsgjwg8RMUhd/1Se7dPGt0+aXRB
WJzsQxf8jCsDpCnEDyPB3OdfthD0/QZB96hMcNL7EigoPEyAcDvSWN1+gX4S
Z00EwAEt+wktFnOJfp82yrxUjQ2xsBr9AsFxoKDlBp83SNHCXKJewO1xO3Mh
KapnDAgHxrOhTGDvd9pBsBjNEuGnjbInEhb4Q50T5iOC3230QRyXJfT7jZEA
I8rugLUOoC0eMtw+NG4Hzvt4Hp/WXCnKrInAK/aB64CeGCN4kRp35JMebV+0
KcZ1nqdHTupuik0Pm1m4hfdqHNuz7c0MEzSR5r/T/ojFcgEP4hGFG88HNDV6
tYlKhu/DxBFv/wujO4uw7zdGQqwzPgBSRJ3i6w9cE9BaBP7ZBCj3yoy7txim
u2M861Ebpn4UBTTH9gKYR5EUwkJy43uZgM9xIGl/YTO475a1dgYmDFabNpSI
xcUUFUmxICYMtph4JGCexwomjuAKpisjWpvI/6ojoT9gjOR9CSEHodzdJ371
1sWR6i00IwxW17Uw3+aaZJ8yyqxpIgyfYZR85qvGYZErkJ1iPZMNXAPkHJx7
Yh0m6kZwnyMcop0Qnwn1BZbOMJkGzAlTZNcoA1Fksrl2YO6MVb/cTj8alDRO
YD6Vht0gSa5pjIKymtfqf3dq9VC1epBGJhxMP1/uphs1j8FioC8RPIiGqII7
cc88Nr/FPe9LCOEmIkKoiwXb/nZXgGftA+wxOsOcgOzC5pvBWq2OAMJABAtK
i/1VrCwmb2JM00PYT2xGQQvheu4xVlqmNu3BBoyhIo6AhKnzpG4ELMbHqr7n
NpoPRdTC1SPWGh+qRzziPpCQxdWDPyi0MsQjRPRllOiAHz9wX5/s7JEgKBd/
we7nSaOfO6ktyRxkaIlZ2H2/I9uAKa+BaU/if20T8/1NhLoqH0xIUwGKRjDE
Y8IIXkCUom69LDzY9t2BAAef+UzEor//Uu7Gi3PfoD6qb6NxI3Ecfka5xyAM
ENXt36Q2dExrnGvD4h4vjn+DGkLyH7c1tCsb8iz0SSoTUa0ZDTQk1UvyY1Tv
W/1V2BaoiYa5pj2igpIRLuzPUYM5lZ3FPGktD9oIoXAP/fU06NiXr5ptTaHO
ywjR0dbYMxoa19A1C5FCoZjRK4rRHTIKa9fy4+6yE3qqk/VSEWNkjaVRbOHt
7rLdXjsQQM8djM/U2OOpsREjghsNEEW2AyruN8cUIBL0qWi6cg2/VeBJ1+Iu
Q0z5tLmg0l995rHh3f9ycD//eeJsum9EKC6vJh3Lpv46xjL3d+/+zWvV6O6f
/JXrof7pN/9r0rFs2rHewF/H995QXbv7F6sh//lxbbhvoX4oP223WTbpWDbw
1/G9N1+7dvfnp0P+Czg8/Rbqh/LTNrqVTf11jGXu796m46Il4vDrn5jcrb/y
GP8FHJ5+C/VD+Wm7zbJJx7IBlX22gg8HDlFRbJEMsbCwt0taK+tXWyontO6U
/N368290f6dYddcAWSgb0vW1tz40bK0Xyl57Zlrd/cpj19zf6bP+6utx2YjK
PokjtVT/COBTz4r2Qh+vPTysIjZHBoZD2Wvvv37t7h98w9D9VeHq63HZiMq6
jsP32xU+lpiRIUWh7LXHksTy9Tz1BJ4tPtg6R9n2gtsL8L38DhibhatwdfXi
s/f561QbA8LX+WvUvuF2yoiCL/PzQ+BMJ5daVmfK9Pn1wanuefuIJcz9BZ3a
lL7JOcoGVHbv/u1rd//jn5u6v9Myd6V6XDY5Rxldx1jm/u7dHDtd/rsPs9Sc
fvO/JkbZtGM9q2zgr+N7bx9Vdz//4DX+C/g8/Rbqh/LTNs5eNqCye9vXKjVH
nm1+zc/NYyxzf68+fCoReSkfI+fHsA1ZcbPDoNZ8BJo78u6Owc/XseyLj7g/
V+/02lL2uQfdn3v29CrLdqDsP3x47P5O67mrLNuBssNT+pz+ndY7jDTjsh2j
bFa9F994zf2dlrmrLLsOZT83HLq/03ruKsuuQxnTdseg9/VUpjRewzjniFYx
hYspvP6msIg0x0BwcEyLPVzs4atqD9/w18lhLVfyODhWTOFiChdTGASjLqbw
6prCpOzGmPzJa1OVtINbQ+c2RdEirm4ZFm4ocxZttJhuGVbUQ1SGluhpveYI
QxlakadlTaswlDkrsFO/YL2d1mty5i3D8rpPSoSfF2CeiKj8q4Te1nWFBVpc
24Z1tWVYUlvQh6p3Jgtpy7CGtgzLZ8uwcrbPYdFsGdbLroHTsMJ/JovhJj0r
Mkd9Kh3ZCu3LPDZthbHwUJ7lcHJ3ZQ0euGVMzLeMyTWUuck0TngPGZPgLSrD
SfC0rDmB3TImsBaR9ZMOfzIWGC/FBR9FWFuVWveyFdKXn/v6aZcp5mvf8MQ4
Tid0HX7twRuDLtPJ1x7cGcSp41GaOr72wClWO0wJX7s+SPUehbIO08TXnNLj
KeFRmhK+9ibg5pYp4ZdROoibG5sl5Gwwz1q0NRvsGpr/jqHldw2Nvmto7zuG
pt41tPIvEvjzrHxb2nZrCZp1ewladKujxvzzBLPQjluGJrwV8AeoDRNcx8QA
S/3dMVTdrqHWdg0VdsdQV7uGato11NCn/bV7LoKlZB7tqFAe7ag8Hu2oKB7t
qBQeNRTAgzQOkZb2KP0zUnVyYtMnqSdKNlLIrJycIu1zS/txU9obGeMtqO6F
rP8Sga0z+66AmIs8ySDmVvJfn+T5V/LcVAS3g+B6/GVjk5clgxZV10XY3rtC
goWMUcSpqzj1eHL7lQjeiojTvz8F8pfDX/UWd/3GFZKfMjGttySt5hQlpqP/
pohTEaciThchTjjPFiEqQlSEqMxJRZyKOBVxKuJUQnlFiErYrkV0HGt79t72
Vy8msWwrX9YUnfvcjc8ZdOvdXNPnwNyX30p/1aP+urrCsT4zzMsf2kz9+pW7
/2oVuLz/k4Hg7U8U3i68XXi78Hbh7cLbhbfPxtvFLS0cvV4cXbT1hfH2WdbN
/vC08mfDX7Xrr4WjC0f3hKPPp60FL4Yda6++tQQMV56j+xrvW1k+Ljq66OjC
24W3C28X3u4Vb5f4x9XhaNpYrs6A8Fe5kdY6AGf9OL9o9SssA+JwhWnh98Lv
a8rvdKyAPApwEkFeKy4Pr2DTLx/u+7b+EnBZMMvTOQnyXW9rdoxGk/nD+4HF
G5Ktg456x/krrPbPshzU5PynX/Vpi2di9b9rsPqanQ+VZXVx/rOnwsiP2X9l
/q6eKrx92fr9e+lZT5J5Gfzv0bPiYK4WtbZWDF4XXX7l+D2c/bdfy4Ns6zr/
vsG1Yv1gw+vD2/puw4fD2zCyljtRrAjFGX1YwRS5F2euoTDINyBP8oPuhST4
CTt7dGZh/pIGs+K8rWJpyfEYXBxvf/ndI/9XPeqvno+tspXk7fXX4PZLxft+
tHDg9uMaDv23vJAL0ulffuZmgoXeY+/5ufB4z3j80tIIYlb1HXelUFin85ML
xxaOvUTN++q7Rgmg36N+D1DLWnZQ4dnCs4VnF8Oz5163KZy6Upw6PlD291HO
/u4rxxYte/V49yt5whf+vFKxskvxsJq8eJE5Sk0OvO2Y7Wd6ymNFB663DvxX
he8K3xW+K3xX+K7wXeG7i+Y7emHreF+56Xsz3PTCk4UnL4wnv526im9The77
w4vF1111X1dym9iW2DtuK5rvKmm+w4bmwzSnwoGFAy/YHuz0guaiEAs7Locd
/eQcFWLLevfSeTHsAhR5qWu/U6TwZ+HP3vPn5Tsyl82VY5zEeSLvVVAnnAhz
AjDyqUhRmoA715xji0Z1nz4Fwj1/DvxOdw9CVKPjCOOcbOiyoj4Z/qptd91x
36773/5uF0YTrWylZ2XLnrM+3DfOWnZ4p0/8FHZTOhbibcbHi9lNKVTZO/DZ
2dwknvVM84N9Y5qijoB9eFrvLft8FzVgRFRFXGEG7IXTLo/TwjlOB0CpRZzj
tCw2k4eWZLdEX2VGu9REfO+VDlZGdxFAE3HU0+mH63jKXtABSOIVJn6z3b/p
AfP0REstIBC8LOaRERj2ZznRAsuWoKAEEus8Qa8kP51lXb9wUR27vcq8sxq6
qH0iKyoIui9s1FcjuzDQijDQd1IDuA80rEHYSQaLXLd59cmJ/6vu+GthmlVh
mgsKQL76jQ9ckx29jRo9rpvnfYpVqcs6y6QwS8+ZhToa44nIMW+5Zan1SjLN
RbtWL3/zDf9XbflrP1llIvy10w+bURd+nF0/Y4FLVCdNfvix5fLDRPBDlTyv
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
sAdl3L1dSw8E2PatNnyNn0i4iY1ZUptpaB8QYN5TNhFqRm4f7T9hHGzO2a7F
QQE2HVTfjwj4hMQazMsj9PZcubFrF0xRofjU/sc6DvF69zYsHh/akPmbP5uG
X3M7xMtiu1IKIYtm0oqVg420wpgTf7CvwB4tD1vyNrQB+d+J0v/MoOaOJAy0
IhL7MCQ2aL+9KVvEVVJ8JJA/28yGAZgyunW8LsnbjxkPX0+EU1HyG6KBqhmj
ar1P453qcKp4ZlMCbrazkYVvquERKyu+5KciWwS0iuBAldJAIPGlVreP09PH
qkOuvt3+dCB9c40zD48v+AvGc6Ad0CsaJOdrIhY8qrRVLgzixIDyRGLIejoM
QsjVoAWYv0PfSbjGQrgC5ojJm/EclZfQpDyszcSbSQEoQUNAsSkHAQEQfVu+
ndrKS5vUllaZv36chm8tl9HwrSPU8z00slJxoUvwSV5sRtjuUcTCcGaT01Z6
JKQpyfNVAqaZS9yv/UjiMf90P1IojboTnJOXJMmY1J0IH7W2u5FvF2Ezy/yV
vJgRNrAXUWuHAzP5Rtx26EpwTl4GI0h7kbNSBLatSRr5VDRpQyox9repXte5
s4WltVAi/wleA2HUomJhyRJQ0d7UeNbicRDkjlNnEggNRu4GiGsrzButrVjQ
T416NFvGpm4QIZAHIodbu3VAWjQbCgkKhIhtQT3R3tR41nrzAkiarBwGgDIQ
udFyVjZS410Am9meBezUqPcL/jqf0CCxJaflbswlJ9lWLk46TD07RgaN988t
KrZOvwChsXjkTEKjwq3Z9hYkNHG9RK5pn0teDK9pAfJydhvyXCIUe+xmQ/L6
SFeRAs6NQ7fcwnNbk4uSOQV5mzXZ2mTWmqymIjWjshzZduuS4zqGU2fkxeSk
NBqPHQzMM0lrAE8kS1TJqfQF5ALOsivdp65FUGGMflxkmBnCnbN9waiMMdZs
e5ZwQ2wEbXKGUfiKUvUFfxcXjOs6Y1zRwM9iT9ZczxK9rvbkuBVUXBg2I67Z
iXRbttv0Us9gaca4jObgFJfJtjBugSeZHThOEVhV82hY9TtqPGZNHJYo0oBi
bAZXf91nu2MztL6UbF6tvJoA+udC3NOI0XhfHUOOmH/T0USNwRqcXlzZZsdm
IEMNc3Rw6cAEM4RG/ylVMVcBCIQYieVI7WKiNpBSIU+k22xtfmLDBAuwsSH/
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
sCyWNxtlsMbL9DiPADxldPHuhMOauYdI6d2FgzqtTVGTDev05Y6Uea6JUr9q
b6N0XgkY2MB9gFrXJiw3B0vXkVt+x8BcVyFocX/0ahJh0wc/uWpEV8C0dq7+
awJ+ho30dgOG2wk7rCOSBMh3kZDLO8bW4zSyICMIUjOitrLYH8J97GS4e4Hz
57F/njJ63DXKnkwjiFMCtBfrfamdBB9MJIggfJP9yLymDyRaRWg+2CRZfMaS
ROLwueweS3VYRiX4+jzPHSSaoNKv/iz1OttRFY5FvBfYXKz03U54j0ikehOB
2Iq4xbW1QEdVeBvegbIqqwNnUZefwVtt9kkUEKnjEWcwR9ez2dumyV5qQ/H2
OZxXi6up3s4B1LMWG7Q7ewZv1ksCqhImTMAlWuzRlgnNiYXTFjansGNDpb8t
Ik5Fl96WUKqteh0d86Ohe2L+c32R09uYfNIZmaR3M4kg4rmTfG2VuesBgrxJ
/oAmEKkEu3Znu02UuRbupBbUHNvAjOeNf25jnvi4kfPpAfqAjTXjANEUR8yg
0IYpPKKT/4bNYtfS79r9Pmn3C9Ybf9K02GCQgE2RshFME8QYo4DN8br1svCg
/XcTlPXBZz5T8cfffyl348W5b1Af1bc10eewOso9FkKEeiXe89HfoLYQ55Bc
nWnL5xV9kp7UweX2J8MSgQgW/Rw9IaLs7a0oZiBFVH2rv2anqGF7k2Jz7AE8
R+A1ZmeuPgPrUft6Ffk301Cl5s+2EmRCJ3d4Cvx1/9WeA2eAJcjmvt8WOMwZ
rh6HtWv0cXfZbq8dMJeLV45iY293F1r3jjtvGEc0yKwlmBrxEKnEAcJVQEUN
U95fo1ZFWZVsUnOc4n3wJw2c5dxci++g7O5/+sjU/VUTf82X/ee/dN39VVN/
lWUTKPsPHx67v9Myd82X1S8+4v5O23NXWTbBsq885v5c2elVlk2hzILFKvt3
u9fc32mZu8qyKZT90vY193daz13zZS++8Zr7Oy1zV1k2hbKu7bWVTVNZpOXE
oK9VNu1Yb0bZ3b9YDd3fKSzuKssmqSw+S5kxjfgCM3EQUhFfqJLTZ+mRIFCf
Pb3c/S8H97u/auCvBA2XTTqWTbP1xljm/u7dv3mtGt39k7/C3HT6zf+aGGXT
jvWssoG/ju+9obrG2HV/Hg+b7Zifu2xAZfdOOeTuz0+H7u+0zF2pHpdNOpZN
s/XGWOb+7rkMpGXi8+ufmLD2cH8Bn03NYmmbvAYaY5n7e/XZO1NzDqQJYsRT
Fse2aJaZHVEbGE2GMmcP3a0//0b3d4pSdw2gyrLXXnh6EsuGLfWemVZ3v/LY
Nfd3Ws9ffT0uG1HZyx/ajKCYQx4CfOpZq73XXnhmGtE7NFA+orLX3n/92t0/
+Iah+6vC1dfjshGVvfbmSXu/YWyvPTzsBt9jSST5KsRpRGWd650qSF0m6oXr
y++orrXieatj2fY5nu3aHtJ83rHd8NeGVceGGZlOs4PptPfI9RZW9p1MLlT2
rbIBld37+rePokANDCGbnKNs6q9jLHN/9+7fdkz6H/8cW2yn3/yvSceyacd6
A38d33vnuLr7uw9f47+Az9NvoX4oP23j7GUDKru3M6jufv7Ba+7vtMxdqR6X
Tc5RNvXXMZa5v3un6DSZ1ppDZ1hDHebf8Wcr+fH43LG4PSVjnMP4f+WFhwdd
jP/X37RxLRrSN8mQfv1P37zWxdB//Q2nupeN+ptk1L/+3J+adphSh6+/79Fh
7PdG6PdNO9e6GPCvv+NUl7PRfIOM5tdvXKu6GOvZZzsY5p9C+j1s4P5NVPYp
1IstrCPaA72otyztRb14bkP6lmEMhzJn/EaD6iHDyLpFZWi0npY1R3fLMDhv
GUZjKHNGYqd+wbg7LWtyVijzxpnEqljJiDH2EBlaulW2ZVhgW4a1tQV9cL3t
c1hRW4bFtGVYR9uGJbR1Dqtny7AC7hg4fR+M94xWRW4zxlxWha1Q0b5oYz9h
G9wyWCKUufk8zrm3jHn4ISrDefi0XnMOvWXMobeMeTCUuXkvovKhvPiK+eo+
iV4u5nVxWkPsFN4rs9VazFa06U2cOBBnrjBVtQZmy1SVmaoap2hyukrAamuk
ukxSvZ6kgtDoNa06GSPtSwZlYspNTHoBi1EsJ6Z51u6sielGx0noRscJ52bH
yeVmx4nkZsdJ46YxQXwjjVdMBjcNxR9OYBBq6K8SeudZw7QU/q6h3O8YinzX
UNq7hoK+YyjjXUPxfppg6bZsaunU7SXoz60l6MqtjnrxzwPMbfVuUT2RokW8
0n1V2VJyu4ZC2zWU1x1DUe0aSmnXUEB3DGXzXvpnJEjk2LxoEVuLBM6om5zR
SGC2cjX6pz0auUktYBfd0V13iFQeMoEbiWyjiOkeKgsrcatoBVsr/EpeZnoh
6h6+ATBakeQOkmxRta+CilqkiOcqimeZcq+EoJYZtSoiW0S2iOx6iiwamUVQ
i6AWQe2poJa5tSoiW0S2iGwR2b6IbIkEF0EtgroCglrm1iKyZfFmLkF1bzL8
ZPirtvx1dtm2u37cfbvPfftckb0ie2W6PIcUfhJx79MTvnmFZOrqrnHeckWW
+iuyUmTFlJUrPv98rchKD2SlBDSKhBQJKbPJWsjKWVe2X32Y/qpdfy0SUiRk
TSXkfLOJQO0uPFtiaEVCioQsRULKbFJkpchKkZUiK0VWiqysS6TrSq6b9F0u
fpHaE68ZDC+WlW+GuRLyU+aaIlMXcx6KdWx8kZ8iP0V+svIjjkPy8jPyIHty
sdBUO6sqMPSe+cY75a1zT4ocFTk6gxz93QAfHom3ZkdyNcXKv8oye/pYkaQi
SWeQpL8X4ENJsg49XD9JUsd7dz1G85Jlis6rHOLpusGrHYt3ZFbhNQJh0r1a
8naWTIKmlD3ti4Z/WJ1drMSZ/FdFrPhY4jRob90OeitMQg9Y7myZtM43aX0v
PHs2l0m85zoeJ772Jl/wpLocfNnDuYpOQ5VK0IOO+qBvQvXKu+mvuuGvWaGy
6sWym1TWc6ESfJV7he4aypN8l3qLwu+TMP0ZAkm8OmFFzhU2XmZEG9eUWIl6
foQP5hly6TKz9uusKywc304gCeFYkaP710g41i/9k0RijPMk22BtyreHoiGW
HIpolHljDfJz4saPO7TxI+/ijw8hvhnfCFPMpyIGa5Mm8Oq7Rgmgj9K/8DoS
fCvCfvvyUeH7wverz/crsvBYGLwweGHwPIOfexmvsPUKsnVfk+nXSFuvX6Cm
r8y89jq6T2y99tp62UGWwtaSlQpbF71dGLwweGHwwuCFwQuDFwYvDF4Y/AIY
fIvG5zfri/d8t+TQF85fb59z1eKCr7x34v+qm/5qcPkOVebUnL0ZKe0lVlgU
eo9Y3eOSsmzkgRDDOJaimQsL956Fv56A3O+1Fi7MXJi5CzO/x38VGV977Rt7
Cj8Xfu47P3v7Im5vbzlwaunMHA4iEdn1a78rtTB4YfD1Z/DeBD5Wl63HaIf0
0rgOh4QeAYwh7jjSx6mc4Yg2x9Geq7fddSextLwxH0vHZ7fCs6csrdsrOvsi
mft9vWPg8X6djjCJunoB2/kFI72Tnn35Oz602YVZX/7mG9ck4n6wp0y4EqHl
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
tw7+jnKPQawtstffpDZ0LHuca8PiO0/xv0ENId2O2xralQ155vsklYkg04wG
GprCaxKaFKtv9desVh7mmvaIshYwfo4azM1AWcyT1vSgjRAK99BfT4OOfeGW
h5mo86JBdLRnjhkNiTSJmDUlUZgz6TwKa9fy4+4CGW3RKSfGyJqmo9jC291l
u712IEAugJgaezw1FlN9udEAUWQ7oOJ+c0wBopwx/1aBp5wTFxI8T5sLeyRf
fXxQ3f3l69f4zxNn030jQnF5NelYNvXXMZa5v3tb104xcPcvnupVqn/6zf+a
dCybdqw38NfxvXeNq7tHj1zjPz+uDfct1A/lp+02yyYdywb+Or735Oa1u3/w
DUP+Czg8/Rbqh/LTNrqVTf11jGXu7959Q4fD+iuPhfqn3/yvSceyacd6A38d
3/v6JyZc5v4CDs/ebr6v4Wcr+HC2PSoKSrAZsbCwU0BaKxtCsVQOtH73P31k
6v5OIXNXWTaFsv/8l667v9N67pov+w8fHru/0zJ3lWVTKKtffMT9OYycXlvK
OmK4K3z/bvea+zttz11l2QTKfmn7mvs7LXPXfNmLb7zm/k7bc1dZNoGyru1x
2bS9XqTlxKDv1Ciz6nUtg/a6aq347H3Ugp6oRTz6r1H7IgYA+032RJnX3cFg
cDJz978c3O/+TuXIXQkiLpsYZdOO9awy6mN870+9aXD3T/7Kdf4L+u70W6gf
yk/bOHvZgMru3b9xTen2s80f+TlljGXu756j+Ojuz0+5/uk3/2tilE071rPK
Bv66fHwq3bvguWSMZe7v1WfvTE3jLyRUIufHkBNZWLOXKqy5IsjHy9/xzCmU
n3+j+zulrL8SbKFsRGWvvfD0RJeJeuHZ19760PDuVx675v5O67kr1eOyIV1f
/tBmBMUcdyhz9fSzor3Qx2svPDONOB4aeA82wWtvfTjaCqdlTbsiXF9786Rq
HQf3+8y0G3yPVUlGh4acBbvvtVNtqMtEvWHHeqHskxV8LCdqyyjb7liva1nX
9gJ8Dua5x0azSMMZ4YzgYvoX03/9Tf8xGkMxrSI44sX+L/Y/f/pk/9+gVsV+
jioF6orpX0z/YvqDYNTF9C+mfzH904cmEPHGgZjfIO3+1qURGyL0AKpbhkUf
ypwFH6G8ZUD+EJWh5X1ar2k1hzK0mk/LmtwaypzVGzn9lsH9D1EZWqtmvVuG
pUlOlXnEUo2o/KuE3tZ1I9vC/JQjeAcL8/X3PTqM1toNstZef9POtS7W5OvP
7U6i5XiDLMfXH35g2MVyzPbbwUp8/R2npGHL7AZZZq/fOGWTDhZh9tkO1t8r
7x4mEj5s4D6UvYKKqcUocPXis7T7WL2U/Tjaae3LfTYPCEPtIcOwukVlaAic
ljUn8VuGUWSJYihzhkw0Nh4yDJBbVDZXvx1EzE/4/MlYv7wkG3w3YelWav1z
gdP7ljGVbxnTdlDrYoreOsd0vGVMvdvGNLtlTKlb55g+t43pZNfAaUjoOtP0
RBLTOCpMzkzz5D1YM9OuMQvdMWacXWN22TVmkjvGrLFrzBC/SODPk2Vhaf6b
HbX8zY4a/WZH7X2zo6a+2VEr3zQ0MO0rkNr2hqFZw/kziMYwsXZMOLHU6R1D
de4aanLXUIl3DPW3a6i6XUOtfdpfu+e4WEprawkKamsJysgqsxTPf08wCyVj
1XuQ6omsPdozZ6WZ5cSwT1qEuKWRFWjlkxXt0ao9jpvao7F7pAWtvdAdv0Rg
6wzUojYWojZEtnFQG1YibJ/0w6/kObYoAqUIWnDVC+m24Cti3F2M31tEtojs
JYjsEJbWiqCumaDiumkRz1UUzzKjXglBLTNqd5HNJoMUQS2CWgS1P4Ja5tYr
IbLoQRRBLYJaBLWnglrm1iKyRWSLyBaRLSK7hpFgd0rbJ8NfteWvs8t23PVH
3bcb7ts3Ftkrslemy3NIoZjKvrJC4nR110oedPLyuSImRUzKrDNLYL5WxKSI
SRGTIiZFTIqYFDEpYlLEZElicta0D1fXY3TXX4d/WJWgWRGJtRCJ880crz7z
yCA+uwvPlpmjiEkRkyImCxSTkiNUhKMIR0Y4+j6HXMmVkSIcRTjKHLLyYuKP
oKC3j8q3ZHc9QbHIT5Gfqy4/6pWH1knBRXSK6BTRMc67kYd8+TN6Rg7kQRGY
IjBFYFBg/i61J07zXbPToVZRdOgsSHU0LFnUxhtmi4idaaWyKVjvoeXKM0nS
3zMkaVgkqSeSJE5VtV7ZcSWlZoET0/cFmp+WnVV0xNsZiuhcuuh82iDLJILc
U4FxTO4Z/Ya/ZgXGqhfL7nfXez2SEDgDmIviMefFXLt0SQlupziwf0VO3P0U
juMGwKdkRtTzI3wwP8BLkg9xPG+dOZ63iMZSRSM4mEI0VuQo+/UQjfVOmexd
kkuwZUUE0rJlC79fJL8XnX/5Prd/fxFGq+ogE0X9F3G4SuIQjFN8k8jh6ryS
o4hBEYOrtBxY+L3we+H3zvx+7oW3wuWrz+V9zVYvurxwedHlK8nvaxuxLFxe
uDyH7MLvhd8Lvxd+L/weP4XfC78Xfi/87j+F3682v2/5r6Pj7i+3L2JwVRJv
1p75r1Plk1kbTErY5iqq/dUJwd/6FHN0YH+x0d0Pwe/Wpa/MxtVTRXlfGWZe
MTXuOfe9AfBeq+fC24W3z8Db7/FfRQbbQbG7C3uvFXt7OySqbuvAnUveHztz
T0Hh98Lvhd8Lvxd+jx/g9zGaL9FMb9mMsnS+D2dVHOCpL96hqEbi1Jfq7OdZ
Od72PL/trj6kdN3/novDZSvE4bFsi8oKhy+Rw9/XIy4OZxXUwLFRky/grAJX
Lz77Tn72Q5tdePflb75xLT57Qv++lcDdV8phbwa4/eHXlYj89ZVL9+Fwkz5z
6bdTEwe4jb7FJOoPdxZtej4+paNFRhwjZx7tL4uKk7YKi14BFg1HfJwEwvdc
hR42VCja0oUrz82Vl7ojDI6b6TMvktEpzis6yQTUi7pcM3W5gJWKi2FHP3VH
1dhy4nzhxbXixbPk7BQOjHONOB9zFc+26SdX9lFDjvUBgyerECUqfHp1+LTv
EfawxHECMsQH2zdfFdWXc4Zd354T74+pix8obLjybDjwSacerKgbe3go1ysv
3B5GWDzz/dnCfKvMfOE8uOMQn2DeK6xXWG9JrMdmbGG9PvvNjsE8k2276x+v
BoeFo/A5h2XFJtVVP82sK3u5sljvP68GZ3k3dlDU1YpyVpcNow4xnuZ3wou4
rlgAuXDR4vSTK4ufO6He7uQKJGMVLlp1LipaqfBT4afCT4Wf1oSfLjJUULjo
qnBR0UqFnwo/FX4qEcvCRWuplcJmF8wOWfJml5Vls7MGnmJuy01/XWPmorXP
CZ42xuug7v8CDhhYeyY7ny4T7HGTnn3lW947XWt2i1vhwoc38DV2Hl3CQsx7
HFKeLszTP+ahNMkp5mm4AtRXizgRZdEK64cKL/WVl+K+3CNIuT2sdcpt4SdA
ReGn/MTm07X3OmzVKbxTeEfzziFuRSm8U3hnzpMw8NPD4MDS2OcsTv+SmOby
45J9WHNbGicURbLSUevCJ4VPCp8UPil8Uvik8Enhk0vnE9+7546nw1aMBW9B
xEOOF7Snp3DJJWuT/yUM509tLfKwiJE4UdJh/Cjj9veOXz5IjRpHYoqj32bw
/9V1ny+EofyxDwG14kycYQTA330wJET0jHPkaxFmyUJRSxemlhzmT7qopYeo
zBG5H4xElJ7sqwFwncJOl6CUHPP4dz1YE0FPOUiqT14/xnVBX7bCb3NcCd4h
OhwxzqdGv6vNQEUXuc8y+OnTiQTRxLDWZ3vKT2VK6xMbNU7L9OlGK2EhrY6p
vY5umiUhl8oiz1Gj4sVcxAmdjnAvmubqsEoJES6f/j7X5A2F6v2huu/d0/pp
R+oi3Bf2ArPONtYlC/5vAZoKHyx+n9FJnba1eThr2GdUWMF91jTZERhgHxjA
hVUOCgNcQV0wxqga+yU0J1zKhsNC/WUmyA85Qd5TveWNYoX+a0Z/Q/r36tnv
qFlZPkhu34OOMA/MT1/3mKfpTXf1GPvO/hH0EFd3KlLpa0lQ1d4H5iNo811B
P9gjWobdS8fKVStkXC0yXnJw5QWqjmeYcEIZ7ovLHZpTSNu35RSLoGEtU8/j
7pM7qKYQdrVkNpCYfXR+gut46Lyv9pu9JGyXeIcjlSfhHXf9AVf3af97lQmm
gyxsmq2jTAqA/pkxmEK6QrrLV5MX4lU+VwhWTJeLJt2ybc3nqTqfrgkrhcJ5
OFhT52EVZWwd/fNCh0KHvtAhbEbVZwpZqyaFPMsnD21vmHDeJRfz8WHWLHUx
Du6rzzw2dH/OmT29FuJI4hwDcTgFfxR7uxDJ+eoKId33fn41NWYX9hAsNXMh
6PIx3oe09AVMDJhdd7DMiWGV2HvhaB9jrOao34y+brhX2+9ya5QF8QvXNfuX
ZYR2RfsvUD0RjYONUvy5CjlHvaMDORJjDMYd1Guc+7Ma9JgIZVr14e0PqxMu
nw/9jUUCNt2GWeoUiejmB/9RIcSlE2LJqqmQpMzeQI9zBzB6RwXfWngLCiqr
QArxCrq9jA9UpGJx9Fgzl66f+F31oFxPDM7Cq7Px+13UgHXyJabAH2XiHIUU
F0uKcKbTiRHKKXRYPh2a+fw+NvB6wf4ysF8XKejFxKCT0M49MSR757rHq8e4
++Z/bbvrE1cKxcMjZHXrYL/zsPqHCy4vFZeL8dIXY1+HbbTGiWljnWyVXdwt
vChxumifpeCo4OhMOPKPri1m5lrz6CHP0LCMVxvIl64cZiysy2ev/qMzLKHo
F5OwO70SCTP9Ras+74LrFLSeC60iyFBlE3UfoNeevIq9L3chbORlaojneJsL
xSuKagXCd1DZpy4P3yr+ZLky/UX1PMriUlENmXJxG7Kff32o71t6i+B5JrlL
RfAoX3b5rvUBPcu+73HyeYVRllsPuVTEjo0yK0zaQ49gfrydIePJxJZhfq8h
ti4mB4arHUpJ6R/+PLN857KwBjkrY5GzUlGSXZV9f1QfcHVZvNbriMVysVC4
ouDj4vDxAlU3zgMZ660tezmlXvAn8QfGxEmbMVHwZuLNWrYreJuNt8MGv6XD
6N7jkTD8w9PLZ8NfdcddP+e+JYvo1qd4nB+JN/4oNvC5CL6H+r5Pnl7+JA9X
yMrt8rIl/8BLuRsvzn3ju2dBNdxDbFnRk6sD0vN0XxwxRHLXeFFJNrn9gkCz
pusV6cqXd+9gEKvP39/ykVW3Xr5aKs1T6S/7q8zrRCrgYWziBlto6YmX3MW/
89D/fFvpoGMHb6Xq1hnNx6GM7bmgrY+x6tg3t7lXp3M+6lqe+RHjIsG8xrHE
71Zof2j0FwIKR6FNbscPP2yQ2YO2uewQ6w0JZjxeU8BSpSWQANcUYcDv0O9k
T7XHb1yHULok4UfSjQgLVd6sQ5nui0lNWUi+3/s5bsfTmPvPkVtrXLXRHuPf
gCW+XvcgjXXTOuOorlMMcT/hOdLjMD2/JVbLNCxVOu50INFhVYvdBtQhGzI6
Gl34kh9K41NvcN7Cyjn8+cMm/I8RhwG5z8GxGCWD776jc8StDbOAjBAQ1yHg
H3HI9D6CXqjB0A6msR3HLneElqjSWaUaYVwPxDR2R1aR36GpVxFj2wHVRph5
i9WDRVtkbY/qwX7EwZgJfQTwEdq8kqP2jxhK6xXeBMEG9sTbPfgFZZEJgyLB
c15C2QjPkzqJ8I0QGREqAmMjN1D+DuLoPgdxPIHhDgCMjEYXRnVQvehhRhYK
91DVMGoDbTdQLeh6CdxWzW6As2OCE77X0Jbsxm/Z1m8Ygb3AxrLguEW3b+R0
O/ca3DbB80AfU6eLV9yH0SJcOb3OmEtHPd/El4RbVWep9kEWoo0cRCwEQfti
L9xyQ50Rp2zlttPbin2Dm8oNjFrdROD2AYKMTh+k45Y3cMXdQhenatTNOCCi
RyqYBLjAQaVUOsAxycExSJbVJjbKDTW0RFC3+oBwOZ6Njooce6SWg/LSYPgf
H6WHTurGPLXD4LRp8QO4N2yCiVUFmJY6H2ZBGWlQBr6CN1RxegQVMBERpCoJ
Q+hFBOYSSPTwdm641nh4FV3Pu4NkwcQhok5/jADBzYhMKT0mUJI4A0lrdANf
wGkRoU2jD7sBA82gVoiCkDnZgaGBeSOSbtiEah5tHvMVAkcJZeWvH/Pt+7Fs
HBitNBXrrbq27R4eE37voq+HCYQpgqA1ME5tqInAFp5q3PK8vg/4P4eGTi/u
aeSQcSsJq4mUvpicg+l+3YIZxQJgTozRAVEY6aabZ4ODKhANJQtZGlT/SxnL
4Ged1e4W9BylsogNf+dH6AY6QkE+N3KGhLI7o/2XhrHBLrfgs6q7qjbAGWlw
AoZxroxdZd6uwPdpwo0a7iwKGmO8FiEF9v317QQDaedNfbZsXRt8aAVRCHVx
FMSLo/lV8kwIMAzTopO3xEgryZ6s9pPwn18fV1PsgfEemwXjQ5w6oxTFpF1T
W3rkBqaz4ag7BU2GM0Ean1FzRyXDzwBvLkZjb6JfgZA3beqPNoeinUcTXUHw
0WBnG00HaTpq7lE3SM6guUXiKHeXMnMXqLCjwcMemWFiX9dprG3+YlRjsNNT
edpTtNVslyavuTe7AFPNVt0N3xC1FTNEPMH1zAqcFEpjnmCgGwHw20QbpAqY
0QcAFzeD+cQw3ICuHW1O17VU2NrkGbUB0FDpLWp7MxcY4e97ET9+oqyuMxWs
EWpKx84IwQ2t54FEc08oGCDnmJkR9RvPuwzNfirbQfJzREyQvDLf29Paf0Yn
7yCBsrGOKvEuISOKCGP/SD1KXSRHVOvkaqyAlJ65v/4wQW8GbUD5NbATMMus
CDPXjpbs2hght+U+o24gZPSvIGQ2vlFp22DCVRvhKf/sqFYt5lWvQH3cEA88
u8OsoXUs/9YQBtyewC2Oa1v4Q/bg0QxSOxuzup+tZDdzoQz+7odMiL2Bnklu
hJo2Ws/mZiP/43GC4TbRgEcdVTGhi8UqrQ+Bjcwfjr9zF1A21V3zsNDeFpHa
YRs805zGtda0YI1RxPu9IPviic595qHSSNO3NOZD2VljYVHhDx0z1BQxEFaH
/2otk5UFUxmkaYiRSl5z1cscsB44Nm2T0UwwGlq4Eisrw7blRBq8K1P+PKwz
bvLEVAOOEEarM2ARcfpDnF19LXKyRzwobjAMjvHDH5woGcfC3YF1bQahljiO
az7c3XgmBA09HJiHR5xdLcTQCCxhC0UcMLxXNzkJjWXob4qja3ALqG0ZkyOT
eMRiqUIV0qmjcYlFuoBtNM71toT9ZhsjnCaShs5AMdUTKWvPvYjZ2UuHrmkV
RuUPGefxmM/jMJYwDG4Y1TR3KrSPcnW4KSaBrxhCGrebjOC+P0Rti55gDtQa
Vj++mR6PQ3zUKPPXn6QbLEaegd+Q7WtoqB757FZ6dl91Lso2ZHsJoI8lSBl1
DFCNDShpQSSJZ7fSs3sKIFGG2BArwg/lOhok60k+sZnwcqy6FOZyqCeiuug0
+X8+YvWGNLBWjhjFJ95Fd48bbf90Gnu88ZDRlEXwsfHsO4x61432YM6U6mRO
4opn32nUw1GKEGsnQoon3mmgfYfK0E0RRKtbL5eTAvj/5tD0Um4wX6QbTfYJ
TwjS/gb18vvpmYo/o1zPv56v3ITGJ5kPXPkkB9ev0Y1o1bkPyGYGVlF9Fqxx
qmmF9bfyA8tCHY2kGVD/ZmonigApkcZ2GghYN9KscX1RiJ3CANptaHcHndq9
XUuchy1w+xo/m/AQGwsd63jyPgxWNwgBUVOZMQXRZBPzeQbB2XYtzhi2wO1r
fEJiyD+4Y3CNcSyiqzuyi2FRKPIj7NyO+Yt+2Ne7t2HxM6Sz4uP+5k8klNTc
jjVHGG2k6HCjOC1BkVYYc04P9h+w2PKwJW8BkBP1UNiv8xsG1YlLoomqo1uw
GiJy+LD+puQBXPHER4IQZJvZkM34X4MO0PmSnzEepv5u6FjSfltjlYo9BfTo
MKh4RqHQbGcjcZKOvrfC50t+KtI8MF9zfZCyVOLQK3Ikkg+SvR2IcqyA4Orb
7U9v5uERgYcqpZj4gh83nrMEC9rSYasUDc3eDmM7MYA/SbdzT29m4RnpULq3
XOlYjCBkYyFkAaHE+ySAal1mjHoqckkSdiVjCAzylGuFOokuKt9ObeUFTWpL
qwyM1LFoIOCVhpjWjFKvKTqHy1GCA/JCMkIgjuIgZzc5zTWpoFNy9v9XdzU7
kuREuOiprqquntmdXZAWGBBP0hIHQOLOBW4cOdCceJClJc4sPMEcOMIB0DZo
OYPUD8Cp3yFR2o7wF58/u7K6qhY2DzNdmU47HI7/CDtTkzJGcLe7Cfpcz40K
WGVYH6YmNAFiRnUb6S+DFAJBNdgm+t31+53b3I/upX9/kdHPSb2CmmBcqZ0M
oDnuoW0Mxncf77s9OqR3TnM1xGrPStNAphkh2+FaKUT+JrdTGvSDdO+a2RBJ
MpAfsB9ReQQVwiHMkqG/rXhXkT2wbmz8oRrI2YMeAI8OodoNe1HwbUW7rBC9
q776U+Qc6g78uSJTYBMmtDDWTXes2N9WvLsV7YDFlC4ckynUgjQFHcqZ2VUA
lgB/sD81oa1o92mGvc86JJ2BZl7ON91ezsQtQV/70p3MMJq2z8c6YavafCmK
shVVFPAitqGYabe/M7HNhtkmJqg9JxJvn8QsIkJwBmYZGZFrqwax15XHtYSX
vP9l5qRlPJbyFpC6T1SBeoRhmXeFIV7Y9TKiOMCPBOTIyByyeNfIXG2HkB5n
dF6Md32sBRbni3i4mHmhDmJVfcx0I3uERxiaZ+bynj0BBqZHXdMv1Z/icrBx
cVHN6wxeo3QKMIfKGXVD4xJjc7J2iv2WGpslrYwZ6/mCpAuBGpeuq1X39R53
EJOUY7vUAzVMrzVQ0+2Bphb85gWQkb5NE7qqFicLkEA3L7NXPWiDKd75uu0O
obJufRg9ZONzTu+VqGhgcQhws78r/amXGa8eykFtNN+76Q6hEgUazALSE0x6
Kn+XM2VLQkXnDyBc5DShQuo1+kAxHaibiOL/ZthLjiF7nNjiyJBl9Y7SXzk9
odMCe/ES5KZZMoyCN90czG5hf4UdsXqkZgzEvLJUadIAlAUxHQRkfs7AzQSz
DqVIJUY8HOr6IKgJu9Fk+mVc/mnCsK4nboyogdDPEJSJM74dv7c5CFGiCcfO
b/PrSjHuK9IpZ5pGty4wa/Bu/Jh83jSptRgl/fvr/CDor9uKFUq1NsmLYHR/
a0EbMqufAbgwXvo3JUKSYChpOGMIIKNmR6vIFajH78aPd90BE+zCMyWWh8Sh
L1SBmLMJIgOgHn97/HjXHTDuiD9Mi27LTlNTkmeXKrp613tAFJl/dccSpghl
ZtOv27hCCCyy7DwolaWlKxNro/5SG1BmlD1Ww8V+qyDDKF8oLyqJTZw65I/5
9nf17X2vY/WVhvRXP8igjhBvzlER6e359nf07b3omHQOojBUanwKQHf/+T8+
7OtLbvTH9K8+xy+1+1NuwFbSkzf4c27wSA0euIcnapAI/z8IxcbNpXKZfP19
+hXXOf31SX5vmmI8wKTcH3rvlYo1U8GY7HDY5+t38z+pbCn9/ma66aEM6zLo
rAJrqEv6fm5XqpCC1PxMNE//ZhUTpVbpO5Qx1cZJZHRR9a4+cFR9VgF6JFh/
LmCFbawcvcCqc0cFFN7btaJaXERh6UMXyXfUm41FR8MCuOHYovlCy3P+v2wj
bmqJ64SspQF4R03Bwvf6APREvVpltVPOBgZdcGuTCMyRJ3tMYzqep2LoVQUc
V8Maqd0TW9FXqetTeflpirY+ZMG9OdFKgqa4ASyb6tsdB/Q6goIuhRdMleup
Lp0b5FgOgxttmt24nXo1DEGFJfiLQBHsuOKgGO7+x7n0t/00lJkjGrkbrsYp
9iTGPXHdCYkVWKA6Dy3OP1KYOQ/FtDRCYvENcDYcKsZI1Z4r8HoRbwiQozXD
Lm1svh02h9JVR8mIDlVODhbP1zv3u8GZmVP43ldiG6IeK9I6sGWTw3Yrohdg
kYZ0wVPRcREoufQplfiEgWzwlaNCQlMgPwCtU7HYFFtiPV1YmL86kajtsVcV
Gt8+8SS6Si2USSmgnK9+pdC143kFUemNQ3ldWxn30GppawlGJHyEQsfKLRum
SwNGBUELx3AABRewVQz7kDJYxd01bfNNr/kmrkXeyKPJAK01FTxD5K9Uv1l9
NUc/Ge/T9h8pKVRkS+yF8/c7Vb8gUVwalFnb8JhgsGENiUjFQXMCyYcMic3D
nqEZ5h3+rQJFXuc1S2Yw2zyvj1yKMkRGdKGMEPFSg7q0084AhoCvArS73Rby
C80aHYtIWJGteS6D7OANsyjqGtcRhVDmvw+ZTKOmZI0l0EWIYL74HKBow29b
hLkNVfQWh3JjDG3POWxsjsqAwvd2dUrHywSDOCmcY52ikY9y3deJRC2GQ23N
OXL1XJ9F5k8IzGf3S9+p0IDhzmRWsFFXrc35KmhViFer2C0Q9/uJUknKjFfV
KOXUm57TdA/DrWg8wzWoMbfW0I3C30aMReaqPB54TzhxgwqbX9x7sgExaeK/
y4W/FzpSodvzOFIBetp4BwSxCHpwsBW/4SvvIxibR+gCF5TKV2x0/I2GvbKa
Pxd4Ap9mgra2vKSV0DoOQY3iDAxzEbQklP8PkKoyc3al3BgUMSltTkKKQqEw
P95ZttAec964K/jBzPGSp0v7Vnm4NyovyPKONchKIb54TixkDUUQZFjiXYXj
dbG9yF1+yFpv6Tygj2jI0lZxu39Vucl9ABsT1nbPdIC/UagDOziff+6dZSCc
MRxBq5pJMuYJZhQMgrmscfYtHF7JtT0BN7XEOmOue0CazbrwDhNGzG834Wj7
DXlhnt1TfBspOboX7hcrXwk3UpzPt0I/akXRlJF+rgpYulah20Wu1U1PUITl
qu7yIkkXFSvFAeBeo3NwGQ0wWMb5571oDqLZ3naeIj2TpvmY7wXMFFJALwlJ
sXogNT6GRq2Dtig1HL//1ZX7agMOsT0TR+4QcMYxH+s8P/4YcdZbAZ6ncqxA
tHE+Al+JqvlcrpWN8gwLMKTQLsbB8UFpk5ThIhdry8omhnUq0N3TrsFaQ3ls
IKkPyGVu+gRf6ek06RSL9vwbaSqy8g8yfMrRIpQ8Ta2zZcuFXSKvFrsWydv/
Vomm43yrTc+3wiO35z9VAJdExzUSDZUZbgKRraQzxbUOeO9yzhQd7h6Vgyoe
Dyt1yKfa6N4v5VbBxwvCzjf/u9mnHiZYJA3rXdR7vXXsx3CVmxZDpcp5EoYJ
OlAg6K5REvjaMP16nEWlkpRHt8RPklWsyBkcFxXoCREL768QA9uESmwD1zc2
5AV9pOtKK2aKAh2oPMQgxKg8pe4mCKKlc3tLiYF5kaT4VTubFX13FHI08NcP
9LhLZyqzUCnz0f/KvJ4VBXbg8MLmlPfwDNgkvOd/gwYepjvYE9I5piwLgwZQ
UVlKBN6VJmjxsO1FFcIC3vDKpfNJvotminAdUqVDb7PTdcfEerHrU8LMdoHo
MkhI4cvDcYL4g/1CfXv6pldjE0CE4lAHE8IWzjmfdxG+tZAbooMKoUPky5da
nO+OfzdnBC/0b7pJIzq82B4P8DIKXXQrLqqXABsw2Ik5b4JobTi1uSy1Kbro
VbU3yi4sVeonOzZgj5NNpQUpueYAizrwKrj3hNeb3jqKNVeuU2TXgx7N2rg2
mn++EYhj3XJbI2GMV+hUD6bECTAihH48x9tHGt8XQywmIXdnoUa2ML4sT8a/
+dKjAiFflnkx17Lnvj19aoZI6UW03Zisgx2YwCobRJE6jnFm4lL4y0WSYaBs
fvFxjIjUZGo+Thm+GDNDnym9McogPXAJ3wUsfrsaAh9jRcsJJkIsnjN120s/
X955MaTZyI3SQwwucVmUqhLuwdldFjVuNHfrpOTZe5hEKfsuRscZaWcld4bw
KQ+JephKz9VvIdefmRQqKDwXaNxSIv5ISY0xdjbHBcSUo04YxtTey1RJHvfU
WO7xFhfIeu45L2fO2JCOzjQKguSQ9hz6L93Oz+jBKLFJBzPMP3x8tbebzoJO
/RQ+McIQSzB0Xxgv4X3gHB/v75kUFErsPcRFzthMU5D45DgG38ARxNmuk50W
2Bc5TcH2GtlSpFFqTEMLm0L1qJebfPDq7BkYKl6+m2B78CGNOf9JBWDSgRFR
aOU0nM2BEUHh5WcClLU2OzgNWL6AbWQRl2A78l2C5hIcHGnqh3li2XFphAOm
h5zU4IMXeG18Yu0hO6c7LcN9QInv0sgbVMHzZQtzTr+l0A6uF7a7uL+Ck1Cx
85f7K7Lny/orfh9WKHq8XWflQPHTyW5LHgUVWMLXP/IUWDaojxvDDq24KZfK
gezqG8DncWHCjp+EgNQ07B47Aj/LHZhS2IPKGdtc3HEJdSBI5V9V34WwHiJd
lK5QpwM1Z3CJiF+jHE0+AQV0/Jdw/FWVznHzQPVfct2RddOxLpuNJCCcdsik
SjGe14+58hfzt5dWcJ3RkSnF3CwkvjQHJsSOWJ6fwYfR/V/OjYGYjJcksHIc
eDIC31v2Vk70aBrhqU6vyGGzIDFshh1z8xrZwxcCvklsVxMrf6lfs+tG1Fd4
LMeNG62HcXOkb1NsJfRt5uuyPg3OkkPmOLWvjE8zRbickAJi1AmCfaslJNDa
pVjs2wQDrJJU3NcT8jJBaCDLzA996aguFiBv9p1BqlPUL8CHO5F/8ci0EERM
uibbSLw2SA5lldmoMCYUyccllWVzm61+TIUqCjGqucwbKl4o+TimS8lLovQP
wa1sVbRIr9N+nvNcOZiMgtSa9kwOfRoN8vOEwm6ZU7Okcio9/yI9C3KB69ma
0tkoh0qwgk0h2NK9RpYDJzSoDvJgUqeZKcLxHvOdcthjgHFRdnNUPNYUgxkp
iyD5fMN47AivBaL1w+bwHUZs0/8ARdiMcQjR1+IekLTyXyYB6am5l6wd8zKj
qbfAf2nEny0V1MiMXZd+Ts+rVsI8vyD8P01RzIWOijnA5nXWF2nCMRzQB8ZD
aUEM6ON/QwAxM8628V2gKxX1IWvn6OoxyCmpZIsL6WWuSm1+wFUJ9DdfiB+i
p6ZUDCuixDI2roi1gcePBNmJnkqVbvVQGBVGDmQ+gBZq5471UA6VRqVn/2wX
oVelZkRnYCHW7NCRUH6gp75mGa2mB/6JXcYXyi9xNACIS9GAolhZsHM/2/Zx
K6k79sf6mNaFJ5A6mAq5Ug/Ziy04JcNVOBKdA3RGkBpPTbBUEao8oAETK2Tc
d7oBndbzRGjNQ6m24+/HeVLZ+wgfQZim4Fc1Rosta3lskt0eP01ose85cobz
s7/JMmSjS1gfb0cpF0QxG6Ix53LkIQK+Ve6eHoO18T0WuQ/0zmPnN8c37l7S
vmxEHIZ+VrzTUH4tsLcmEJnpjlBsM4OMBQomjLHvwy4Mm/ocLw2Wl7AgfLQj
HZYDG0Qbk26aoAwmGiqO616kGuwKYyXr9nlCm38fNDJRAuK+G0w+kJF5bZ0z
+TCJHoWsW0zc2qywt0f8nd/5WFlY+M5T5zdGuysI+6XNM7F/3IsK4bKxfGOj
tbcQcEgAo3SySVMbtNCmKejDG57FyNdp/a5uYZmwOnykI92aZiuo/QZhpKQ3
pGReheXvlJ6AlNkGxoNFSfBmbvpAgYUJA7Woc7/1gxcHTgiIqqc5oSCWiJ10
QsAVVBWIMNLO5AiiGH9DmdFOGRqdtjERSZFxSn6v3iKNHFK/Cu+y1ozWYjGj
Fxoa+T/CUTj89Q+RTHLrXKYO8ur2nB5gcnajGrDB8HUyy/rIM6AmaUkHavdl
G5hmRYZNYiLYVB0MVDZhHAVwGjclaRrXVObvFqHrLIcCjEth9vjKyOwR8YXD
zaMBRtVTKAIRj66EIQLoUA/WJEvDNYsfODJg/0xdPVNXMchAwV7wm0SC6PDX
ZUQ2i+Mkwl/6aOQvHVLhRG6xOilkcdYoIWtELEBrI1jBKepMRxWch/2e3+uc
ZZ2NyvRsEwJ4q5PPsp5fhVNOjVz4tDq415zC/QjQBa+p4BcKMez2MwzRZili
xuvelld9DefY9qoqoIQ0OIBVTrhG8HA94FBN712dwKQC4UTMsLyplh8zESjv
Y8xBYSM/CXqhm8VNqCsHNdrTIHnYkQrHaaac3+TPmlQ/yq47epZQmmukPZtq
cW0eVB0GGijQAMJz5ZDvMKbJtgbyVc/jPfpE64fJOQqlzOogtiARbRf7QmXQ
3Dt6/Oq00Rp/zs/uprpz1rFE5IlYlu2pKOW+Ar7mUJc4Ih4Rr85MXnSmtfpG
Vpo4v8ahAxCx9FW83C4I/0HpVuDlsiXW2hkMombWiGMqv+tSrtk5SUBSKsSu
NHLhHoPYlkeUD1uXRgU4lAsFdfDVVR0CL5AxNRdV18C6drwdc371lgfDsLFt
JWLPqQyugvdlznulAG0otN2L2mbjAcREWnu7H/ZsLGuszkS6iuuMi2OF7biY
iXeefOJRA6y7/asPCCxne6J8ZSLgWP5emlleW2aFYKmAafpQxod4hfCjIrMq
ZVjoPZgXq8ALEfR8XmHqcjs/vu/BChY5XihxAsGpzdxgc9jlZnUJHKJN8xCe
vfgE6+aY5KsjkZc98fTs1phIuVMT3E/9rn20l5s9B9vDsTAksoOX7kB1T2Ru
kQ+bfe3y5AgdKj0BmPMDtk05mIC2qsrOB1VbFKT/hnWZHEw3RwykvvPkcR2l
G5VLYteTP/tRvkFekoGgIo43dZ1YSAWDR+WI3oh76iif8qm2sO7lk24BeVCn
j8RuaIGQnMpy7WqPrgxfC2j+lZGDFHs3obGbP3dbK0m8qCL9UhH9N+JetUsV
ED/L94Lj+XWBTvIka0YjBjc4rYK+wzYSg2HztcP37zjLJ1jGsDxEAhCUfhWW
TH0V9Y2Ppo7qgC9Oulb6Vb4XiKZEG9kSV3kSCIwEGVSwYcAZGK8FVJlQvHSg
1v3oEoOQJlKGSI1gf1B7Zj809Kyg+mnFy2T3vuE9F5nEyeIYfz3wDclgyc5w
3ArQfpLfpNNO3gPthPXvflpyL/ruy5VuZR99sTf9yt92boopDZtbx636WMzg
O5YhpNeXME4Q1VdLS5Sx2XxkJIG9j2+mX2PhonK4WwGTEjhvM4J6+auSjJIR
g1f6WQKBSm4qJStpU6dDk0ioKB+zDApviXjRjg181trXNROJzkiUgAwHCNDP
xmfzO1TUnQB8I2YHssXpVUkAYo+EDvWZ1LppqS9bugbpjQBQiZmPBP4wciU9
xoIofAZjhqj8a4GAImem4T//mw9vrr72X5hnAJI=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"5634ba40-2f0e-4a58-abe7-b78996c25066"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "histoplot", "]"}], ";"}]], "Code",
 CellChangeTimes->{3.8995690010086737`*^9, 3.899569345820819*^9, 
  3.8995694773735733`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"55fa524d-842a-45cb-86c7-a06bf0db0fbe"],

Cell[TextData[StyleBox["Aus den Histogrammen der Abst\[ADoubleDot]nde l\
\[ADoubleDot]sst sich beobachte, dass je gr\[ODoubleDot]\[SZ]er der Abstand \
zwischen den Autos ist, desto weniger mit diesem Abstand vorhanden sind \
aufgrund der festen Anzahl der Zellen. Dieser Effekt wird umso \
st\[ADoubleDot]rker, je h\[ODoubleDot]her die Anzahl der Autos ist. Bei 60 \
Autos haben hingegen ein Drittel der Autos einen Abstand, der gr\[ODoubleDot]\
\[SZ]er als die Maximalgeschwindigkeit 5 ist.\nDie Histogramme der \
Geschwindigkeiten best\[ADoubleDot]tigen dies. Mit steigender Autoanzahl \
steigt der Anteil der Autos, die die Geschwindigkeit 1 oder 0 besitzen, stark \
an, w\[ADoubleDot]hrend bei 60 Autos bei der H\[ADoubleDot]lfte der gesamten \
Laufzeit (t=50) circa die H\[ADoubleDot]lfte der Autos die Geschwindigkeit 4 \
oder 5 haben.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8995690211008515`*^9, 3.899569279667104*^9}, {
  3.8999959113877335`*^9, 
  3.8999960457409716`*^9}},ExpressionUUID->"b34803e0-89b9-4ed8-a613-\
7d0d4a62345e"],

Cell[TextData[StyleBox["In diesem Modul werden Histogramme f\[UDoubleDot]r \
die zweispurige Simulation erstellt. Hierbei werden die Spuren getrennt \
betrachtet. Es wird f\[UDoubleDot]r das Betrachten des Moduls twolanesNaSch \
weiter unten verwendet.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8999116067496195`*^9, 3.8999116571690817`*^9}, {
  3.899915904836564*^9, 3.89991595004805*^9}, {3.899996066595893*^9, 
  3.8999960885379*^9}},ExpressionUUID->"c9da176a-3619-45eb-b38a-0c50956619f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Histogramme", " ", "f\[UDoubleDot]r", " ", "beide", " ", "Spuren", " ", 
    "getrennt"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"vdhisto2D", "[", 
    RowBox[{"carlist_", ",", "tlist_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"tlist", " ", "sind", " ", "Zeitpunkte"}], ",", " ", 
      RowBox[{
       RowBox[{
       "f\[UDoubleDot]r", " ", "die", " ", "Histogramme", " ", "zu", " ", 
        "bestimmen", " ", "sind"}], ";", " ", 
       RowBox[{
       "auch", " ", "einzelnen", " ", "Zeitpunkt", " ", "als", " ", "Liste", 
        " ", "eingeben"}]}]}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "nCar", ",", "tMax", ",", "vMax", ",", "anzahlt", ",", 
       "anzahlcars", ",", "zeit", ",", "viAutos", ",", "diAutos", ",", "i", 
       ",", "l", ",", "vhisto", ",", "dhisto", ",", "histoplot", ",", 
       "nasch"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "150"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Listen", " ", "der", " ", "Plots"}], "*)"}], "\n", 
      RowBox[{"histoplot", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"anzahlt", "=", 
       RowBox[{"Length", "[", "tlist", "]"}]}], ";", "\n", 
      RowBox[{"anzahlcars", "=", 
       RowBox[{"Length", "[", "carlist", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "F\[UDoubleDot]r", " ", "betrachtete", " ", "Anzahlen", " ", "Autos"}],
        "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "anzahlcars"}], ",", 
        RowBox[{"k", "++"}], ",", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Anzahl", " ", "Autos"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"nCar", "=", 
          RowBox[{"carlist", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder",
            " ", "vdr"}], "*)"}], "\n", 
         RowBox[{"nasch", "=", 
          RowBox[{"twolanesNaSch", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
           "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Nur", " ", "Geschwindigkeiten", " ", "und", " ", 
           "Abst\[ADoubleDot]nde", " ", "aus", " ", "Ausgabe", " ", 
           "ausw\[ADoubleDot]hlen"}], "*)"}], "\n", 
         RowBox[{"nasch", "=", 
          RowBox[{"Delete", "[", 
           RowBox[{"nasch", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "7", "}"}], ",", 
              RowBox[{"{", "8", "}"}], ",", 
              RowBox[{"{", "9", "}"}], ",", 
              RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Schleife", " ", "f\[UDoubleDot]r", " ", "zwei", " ", "Spuren"}], 
          "*)"}], "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"l", "=", "0"}], ",", 
           RowBox[{"l", "<=", "1"}], ",", 
           RowBox[{"l", "++"}], ",", "\n", 
           RowBox[{"(*", 
            RowBox[{
            "Schleife", " ", "f\[UDoubleDot]r", " ", "verschiedene", " ", 
             "Zeitpunkte"}], "*)"}], "\n", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "<=", "anzahlt"}], ",", 
              RowBox[{"j", "++"}], ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Betrachtete", " ", "Zeit"}], "*)"}], "\n", 
              RowBox[{
               RowBox[{"zeit", "=", 
                RowBox[{"tlist", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Histogramm", " ", "erstellen"}], ",", " ", 
                 RowBox[{"falls", " ", "Spur", " ", "nicht", " ", "leer"}]}], 
                "*)"}], "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nasch", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "+", "l"}], ",", "zeit"}], "]"}], "]"}], "==", 
                  RowBox[{"{", "0.5", "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<Spur \>\"", ",", 
                    RowBox[{"l", "+", "1"}], ",", 
                    "\"\< ist leer f\[UDoubleDot]r t=\>\"", ",", 
                    RowBox[{"tlist", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}],
                   ";"}], ",", "\n", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Anzahl", " ", "Autos", " ", "auf", " ", "Spur", " ", "bei",
                    " ", "Zeit", " ", "t"}], "*)"}], "\n", 
                 RowBox[{
                  RowBox[{"nCar", "=", 
                   RowBox[{"Length", "[", 
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "+", "l"}], ",", "zeit"}], "]"}], "]"}], 
                    "]"}]}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Listen", " ", "Autos", " ", "mit", " ", 
                    "Geschwindigkeiten", " ", "v"}], "=", "0"}], ",", "1", 
                    ",", "2", ",", "3", ",", "4", ",", "5"}], "*)"}], "\n", 
                  RowBox[{"Clear", "[", "viAutos", "]"}], ";", "\n", 
                  RowBox[{"viAutos", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "+", "l"}], ",", "zeit", ",", "n"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
                  "\n", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Listen", " ", "Abst\[ADoubleDot]nde", " ", "d"}],
                     "=", "0"}], ",", "1", ",", "...", ",", "nCar"}], "*)"}], 
                  "\n", 
                  RowBox[{"Clear", "[", "diAutos", "]"}], ";", "\n", 
                  RowBox[{"diAutos", "=", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"3", "+", "l"}], ",", "zeit", ",", "n"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", "1", ",", "nCar"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "==", "i"}], " ", "&"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"nasch", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"3", "+", "l"}], ",", "zeit"}], "]"}], "]"}], 
                    "]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"UnsameQ", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"{", "}"}]}], "]"}], " ", "&"}]}], "]"}]}], ";", 
                  " ", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "L\[ODoubleDot]schen", " ", "der", " ", 
                    "Abst\[ADoubleDot]nde"}], ",", " ", 
                    RowBox[{"die", " ", "nicht", " ", "vorkommen"}]}], "*)"}],
                   "\n", "\n", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"histoplot", ",", 
                    RowBox[{"Histogram", "[", 
                    RowBox[{"viAutos", ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"v", ",", 
                    RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"v", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], 
                    ",", 
                    RowBox[{"PlotRange", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "5.5"}], "}"}], ",", 
                    "Automatic"}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"\"\<twolanesNaSch Spur \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"l", "+", "1"}], "]"}], "<>", 
                    "\"\<: Histogramm von v\\n mit \>\"", "<>", 
                    RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                    "\"\< Autos, t=\>\"", "<>", 
                    RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                    "\"\<, p=\>\"", "<>", 
                    RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
                    RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], 
                  ";", "\n", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"histoplot", ",", 
                    RowBox[{"Histogram", "[", 
                    RowBox[{"diAutos", ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", 
                    RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
                    RowBox[{"Indexed", "[", 
                    RowBox[{"d", ",", "\"\<i\>\""}], "]"}]}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], 
                    ",", 
                    RowBox[{"PlotRange", "->", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}], ",", "\n", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"\"\<twolanesNaSch Spur \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"l", "+", "1"}], "]"}], "<>", 
                    "\"\<: Histogramm von d\\n mit \>\"", "<>", 
                    RowBox[{"ToString", "[", "nCar", "]"}], "<>", 
                    "\"\< Autos, t=\>\"", "<>", 
                    RowBox[{"ToString", "[", "zeit", "]"}], "<>", 
                    "\"\<, p=\>\"", "<>", 
                    RowBox[{"ToString", "[", "p", "]"}]}]}], ",", 
                    RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], "]"}], 
                  ";"}]}], "\n", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Histogramm", " ", "z\[ADoubleDot]hlt"}], ",", " ", 
                  RowBox[{
                  "wie", " ", "oft", " ", "eine", " ", "Zahl", " ", "in", " ",
                    "einer", " ", "Liste", " ", "und", " ", "den", " ", 
                   "Sublisten", " ", "darin", " ", "vorkommt"}]}], "*)"}], 
                "\n", "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}], 
      ";", "\n", 
      RowBox[{"Return", "[", "histoplot", "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8999116907123213`*^9, 3.899911711817655*^9}, {
   3.8999117446182256`*^9, 3.89991215788585*^9}, {3.899912213944965*^9, 
   3.8999122305965815`*^9}, {3.8999125118785815`*^9, 3.899912537447246*^9}, {
   3.899912594091264*^9, 3.8999128226358767`*^9}, {3.8999134532486696`*^9, 
   3.899913480984167*^9}, {3.8999145082157087`*^9, 3.8999145101503468`*^9}, {
   3.8999146806202693`*^9, 3.8999147253716087`*^9}, {3.89991502866759*^9, 
   3.8999150535305896`*^9}, {3.8999155504806213`*^9, 
   3.8999155652265124`*^9}, {3.8999157937684536`*^9, 3.8999158061347723`*^9}, 
   3.8999747135203323`*^9, {3.8999750872787294`*^9, 3.8999750875594864`*^9}, {
   3.8999751598491793`*^9, 3.8999751629811373`*^9}, {3.9000005206304245`*^9, 
   3.900000619941402*^9}},ExpressionUUID->"9f9e371d-94c3-4c9b-89d1-\
eb7a74f5a5e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Meanvarfluss",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"913f1fca-27e4-474f-8a8f-c011b5503bfb"],

Cell[TextData[StyleBox["Hier werden: die mittlere Geschwindigkeit der Autos, \
die Varianz des Abstands zwischen jedem Auto und der Verkehrsfluss f\
\[UDoubleDot]r jede Runde berechnet.\nDer Verkehrsfluss ist die Anzahl an \
Autos, die \[UDoubleDot]ber die letzte Zelle hinaus wieder an den Anfang der \
Stra\[SZ]e fahren. Pro Zeitschritt kann er auf einer Spur also entweder 0 \
oder 1 sein.\nAnschlie\[SZ]end werden Geschwindigkeit und Varianz korreliert. \
Der Fluss pro Zeitschritt wird auch dargestellt.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899569363363302*^9, 3.8995694364052324`*^9}, 
   3.899996139905529*^9, {3.899996342379342*^9, 
   3.8999964044319515`*^9}},ExpressionUUID->"f06690dd-af44-410c-94bf-\
91b1ec8df352"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Berechnung", " ", "mittlere", " ", "v", " ", "\[UDoubleDot]ber", " ", 
     "t"}], ",", " ", 
    RowBox[{
    "Varianz", " ", "des", " ", "mittleren", " ", "Abstands", " ", "und", " ",
      "des", " ", "Verkehrsflusses", " ", "\[UDoubleDot]ber", " ", "t"}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Falls", " ", "Modell", " ", "NaSch"}], ",", " ", 
    RowBox[{"q", "=", "0"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Meanvarfluss", "[", 
    RowBox[{"Modell_", ",", "nCar_", ",", "p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
     "betrachtete", " ", "Zelle", " ", "f\[UDoubleDot]r", " ", "den", " ", 
      "Fluss", " ", "ist", " ", "die", " ", "letzte", " ", "Zelle", " ", 
      "der", " ", "Stra\[SZ]e"}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "tMax", ",", "vMax", ",", "vMittel", ",", "dVar", ",", 
       "nasch", ",", "savefluss", ",", "savexAutos", ",", "m", ",", 
       "meanvarflussplot", ",", "meanvarkorrplot"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"nCells", "=", "300"}], ";", "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Liste", " ", "f\[UDoubleDot]r", " ", "Fluss", " ", "pro", " ", 
        "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"savefluss", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"dVar", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"vMittel", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Daten", " ", "aus", " ", "Berechnungen", " ", "nasch", " ", "oder", 
        " ", "vdr"}], "*)"}], "\n", 
      RowBox[{"nasch", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"p", "==", "0.15"}], ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", "nCar"}],
                "]"}]}], ",", 
             RowBox[{
              RowBox[{"NaSch", "[", 
               RowBox[{
               "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"nCar", "==", "60"}], ",", 
             RowBox[{"histonasch", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"nCar", "==", "100"}], ",", 
             RowBox[{"histonasch", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"nCar", "==", "200"}], ",", 
             RowBox[{"histonasch", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{"!", 
            RowBox[{"p", "==", "0.15"}]}], ",", 
           RowBox[{"NaSch", "[", 
            RowBox[{
            "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
         RowBox[{"vdrNaSch", "[", 
          RowBox[{
          "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
           "q"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Erstes", " ", "Auto"}], ",", " ", 
        RowBox[{
        "das", " ", "die", " ", "letzte", " ", "Zelle", " ", "passiert"}], 
        ",", " ", 
        RowBox[{
        "ist", " ", "das", " ", "mit", " ", "h\[ODoubleDot]chster", " ", 
         "Position"}]}], "*)"}], "\n", 
      RowBox[{"m", "=", "nCar"}], ";", "\n", "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "1"}], ",", 
        RowBox[{"t", "<=", "tMax"}], ",", 
        RowBox[{"t", "++"}], ",", "\n", 
        RowBox[{"(*", 
         RowBox[{"Verkehrsfluss", " ", "durch", " ", "letzte", " ", "Zelle"}],
          "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{"\[CapitalUDoubleDot]berpr\[UDoubleDot]ft", ",", " ", 
          RowBox[{
          "ob", " ", "Auto", " ", "mit", " ", "h\[ODoubleDot]chster", " ", 
           "Position", " ", "\[UDoubleDot]ber", " ", "Stra\[SZ]enende", " ", 
           "hinaus", " ", "auf", " ", "den", " ", "Anfang", " ", 
           "zur\[UDoubleDot]ck", " ", "gefahren", " ", "ist", " ", "\n", 
           RowBox[{"ja", ":", " ", 
            RowBox[{
             RowBox[{
             "n\[ADoubleDot]chst", " ", "niedrigeres", " ", "Auto", " ", 
              "wird", " ", "betrachtet"}], " ", "+", " ", 
             RowBox[{"fluss", " ", "1", " ", "hinzuf\[UDoubleDot]gen"}]}]}]}],
           ",", " ", "\n", 
          RowBox[{"nein", ":", " ", 
           RowBox[{
            RowBox[{"Auto", " ", "wird", " ", "weiter", " ", "betrachtet"}], 
            " ", "+", " ", 
            RowBox[{
            "fluss", " ", "0", " ", "hinzuf\[UDoubleDot]gen", "\n", "Index", 
             " ", "m", " ", "geht", " ", "Autos", " ", "vom", " ", "letzten", 
             " ", "Element", " ", "bis", " ", "zum", " ", "ersten", " ", 
             "durch"}]}]}], ",", " ", 
          RowBox[{
          "danach", " ", "wieder", " ", "Start", " ", "bei", " ", 
           "letztem"}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t", "<", "tMax"}], ",", "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"m", "==", "0"}], ",", 
              RowBox[{"m", "=", "nCar"}], ",", 
              RowBox[{"m", "=", "m"}]}], "]"}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nasch", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", 
                  RowBox[{"t", "+", "1"}], ",", "m"}], "]"}], "]"}], "<", 
               RowBox[{"nasch", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "t", ",", "m"}], "]"}], "]"}]}], ",", "\n", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"savefluss", ",", "1"}], "]"}], ";", "\n", 
               RowBox[{"m", "=", 
                RowBox[{"m", "-", "1"}]}], ";"}], ",", "\n", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"savefluss", ",", "0"}], "]"}], ";"}]}], "\n", "]"}], 
            ";"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"mittlere", " ", "Geschwindigkeit"}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vMittel", ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"nasch", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "t"}], "]"}], "]"}], "]"}], ",", "6"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Varianz", " ", "dAutos"}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dVar", ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Variance", "[", 
              RowBox[{"nasch", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "t"}], "]"}], "]"}], "]"}], ",", "6"}], 
            "]"}]}], "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"meanvarflussplot", "=", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<PlotGrid\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"{", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"vMittel", ",", 
              RowBox[{"ImageSize", "->", "Automatic"}], ",", 
              RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"\"\<mittlere Geschwindigkeit \>\"", 
                  RowBox[{"OverBar", "[", "v", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "->", "White"}]}], "]"}], "}"}], ",", 
           "\n", 
           RowBox[{"{", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"dVar", ",", 
              RowBox[{"ImageSize", "->", "Automatic"}], ",", 
              RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", "\"\<Varianz des Abstands d\>\""}], 
                "}"}]}], ",", 
              RowBox[{"LabelStyle", "->", "White"}]}], "]"}], "}"}], ",", 
           "\n", 
           RowBox[{"{", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"savefluss", ",", 
              RowBox[{"ImageSize", "->", "Automatic"}], ",", 
              RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", "\"\<Fluss pro Zeitschritt\>\""}], 
                "}"}]}], ",", 
              RowBox[{"LabelStyle", "->", "White"}]}], "]"}], "}"}]}], "\n", 
          "}"}], ",", "\n", 
         RowBox[{"ImageSize", "->", "Large"}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Zeit t\>\"", ",", "None"}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "->", "White"}]}], "\n", "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Korrelation", " ", "mittlere", " ", "Geschwindigkeit", " ", "und", 
        " ", "Varianz", " ", "des", " ", "Abstands"}], "*)"}], "\n", 
      RowBox[{"meanvarkorrplot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{"dVar", ",", "vMittel"}], "}"}], "]"}], ",", 
         RowBox[{"ImageSize", "->", "Large"}], ",", 
         RowBox[{"ColorFunction", "->", "\"\<SolarColors\>\""}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Varianz des Abstands d\>\"", ",", 
            RowBox[{"\"\<mittlere Geschwindigkeit \>\"", " ", 
             RowBox[{"OverBar", "[", "v", "]"}]}]}], "}"}]}], ",", "\n", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Korrelation Varianz von d und mittlere v\>\""}]}], ",", 
         RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"meanvarflussplot", ",", "meanvarkorrplot"}], "}"}], 
       "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995693081660175`*^9, {3.899569881915573*^9, 3.8995699061585865`*^9}, {
   3.8998889320591745`*^9, 3.89988893926921*^9}, {3.8998961124843907`*^9, 
   3.8998961131416087`*^9}, {3.8998989872461324`*^9, 
   3.8998990056490135`*^9}, {3.899910170996438*^9, 3.899910183583789*^9}, {
   3.899910223266879*^9, 3.8999105098435783`*^9}, 3.8999105460612483`*^9, {
   3.8999246656386456`*^9, 3.899924667202299*^9}, {3.8999722849942646`*^9, 
   3.899972301335168*^9}, 3.899975309934761*^9, {3.899975364867091*^9, 
   3.899975369903722*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e52da848-53d4-4183-8c61-af7f47c94bf1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanvarfluss", "=", 
   RowBox[{"Meanvarfluss", "[", 
    RowBox[{"\"\<NaSch\>\"", ",", "100", ",", "0.15", ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"meanvarfluss", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"meanvarfluss", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{
  3.899569325164426*^9, {3.8998873170612793`*^9, 3.8998873305080867`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"16f2bf36-0d23-4d3a-8a8b-c564ac482e43"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{
      TagBox[InsetBox[
        GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztVTtPVFEQvrEiVBZbWBAUY8xCDEF5Cbrux3NBXnvvPkkIhYlaqi0UnIaa
ShNpoaamvMGKBGtrai1IFPAREvacnTGZL+Ef3JNsNt+d9zdzzvS8epe8vhVF
0XHr5//b56y4vnN0nl+7KsoH5A5Kpxu5C8Ed+FDo/Lb3/lzwbWwGhV+CcyS/
gxZofbkU3IUgLvwVfA+7n/35I/i+xFP5AwR4oPYPkRx2b3+PfwvOYzAclfch
iA8130cI4TpV3i/5qv0A+XuMtVC/6j+h/Aex7+Ge6g/hR+wdaP7DhEdw16fT
rXgUF3kfQe2fEh7D1xN/FI9Tfs/QGxJU/JzyLcCzVTrV+l8QP0WqB9a/g/RP
850Qf9IPN0H1TVo+3CTFmxJ9mQc3hUDHtsqnKf409WvGYjcjfOp8zdp4bpbs
S7ZeV6L+zdl6HOFo3s6jm8dcIETlLy12hKMF21+3gPZ3jb9o+XCEoyU7z26J
+rtM9S1T/StW363QPJXt/UYZYZx2VL9s/aVl6m9s60FM/Yht/9PY+o8S6x+J
vA8aP7H5pQnxV7HzjwrZV6x+SvpR1fKHKs1rVd4nzb9K969m+QRhV7P3P61R
f+vEf534r9v3L63T+9Cw+aBh769r2HrTBt6Eo/w3rX808cWHP1L7pp3ntEnv
1ep//x9/vh3b+vSP9sdZsd2PDulDtk+yfZLtk2yfZPukbZ/tk5v2yTWaA7uJ

           "], 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.009166666666666668], AbsoluteThickness[1.6], 
            PointBox[{102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
             113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
             126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
             139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
             152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
             165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
             178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
             191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201},
             VertexColors->Automatic]},
           VertexColors->CompressedData["
1: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
Z4dx3dW6fPLKHbzl/l7YtCZK6tyg+PwPH6lLTQ==
            "]], {{}, {}}},
         AspectRatio->Full,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0., 1.2491666666666696`},
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{
            FormBox[
             TagBox[
              RowBox[{"\"mittlere Geschwindigkeit \"", " ", 
                OverscriptBox["v", "_"]}], HoldForm], TraditionalForm], 
            None}, {None, None}},
         FrameTicks->
          FrontEndValueCache[{{ResourceFunction["PlotGrid"]["CustomTicks"][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
             "CustomTicksNoLabels"][
              SlotSequence[1]]& }, {ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 160.0284495021344, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 160.0284495021344, "CustomTicksNoLabels"]][
              SlotSequence[1]]& }}, {{{{1.3, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.3\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.3`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.4, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.4\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.4`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.5, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.5\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.5`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.6, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.6\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.6`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.7, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.7\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.7`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.8, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.8\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.8`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}}, {1.22, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.24, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.26, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.28, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.32, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.34, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.36, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.38, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.42, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.44, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.46, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.48, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.52, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.54, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.56, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.58, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.62, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.64, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.66, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.68, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.72, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.74, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.76, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.78, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.82, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.84, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}, {1.86, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}}}, {{1.3, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.4, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.6, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.7, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.8, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1.22, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.24, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.26, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.28, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.32, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.34, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.36, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.38, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.42, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.44, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.46, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.48, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.52, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.54, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.56, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.58, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.62, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.64, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.66, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.68, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.72, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.74, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.76, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.78, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.82, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.84, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.86, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}}}}, {{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"20\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"40\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"80\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}}}],
         FrameTicksStyle->{{None, None}, {
            Directive[FontSize -> 0, FontOpacity -> 0, None], None}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{35.0732416510582, 3.999999999999943}, {
          3.9999999999999147`, 4.000000000000085}},
         LabelStyle->GrayLevel[1],
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{-2.0833333333333335`, 102.08333333333333`}, {
          1.2166203703703735`, 1.8675462962962965`}},
         PlotRangeClipping->True,
         PlotRangePadding->None,
         Ticks->{Automatic, Automatic}], 
        Offset[{0, 0.}, {0, 0.6666666666666666}], Scaled[{0, 0}], 
        Offset[{39.07324165105814, 8.}, {1., 0.33333333333333337}]],
       Annotation[#, {
        "PlotGridItem", {1, 1}, {0, 0}, {0, 0.6666666666666666}, {0, 0.}, {1.,
          0.33333333333333337`}, {0., 0.}}]& ], 
      TagBox[InsetBox[
        GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztVetL01EYHpYopmk285JgilimrJZlM0sf7/My3X1LCEEKQQwJQijEfhEE
YYghQSCFGEFfogjECKEVRRdECKSIYBiGFBEMpBAh6Jyz9w1+51N/wGQynj3v
9Tnve05x/7D3TJLFYnkj/uV3/C9WXzQae55SVAj6ARdrm/qjS1mEU/HIev9X
RXI24Sx8nx23Pf3G2Iotc2P38CCTcB7K3T9CactphAtxV5rPbiO8B9GlyVvz
VVsJl2B582bS3Fgy4VK8SFEVES7D3umhx2/L2H8f/nRc7n3m5fr240lV6drP
9B2EK7V6bP/qjn8fxA2RvXQtg7AduafOv2/JZXwIl4R3XznbVyFHtj/I/GFc
l+2Mbyd8RBqLjlmPagw4Fz/nZ+8kfFTTy0F6MF9DelgJH0P8PBjX4qzofnqI
/Y/jTrF9eMDJ/AkUvj4nPozrtHz1kNFGY6wPzNgAUlVC1qsBBdnrI1dfphPf
AFXOKOvRaJ4HoxHd1Z9OT7l2Ed9E8XKJbyK9c4hvNmOjmeLnEd+Cr46JVcfE
buJbKF8B8a2YcsmE7N+KmQ8PhQXr2QY1vpNUr9GGA/K4bKyHE7K7hdvcvxMZ
1y4IFz7Pdki22E56GO2Q1aw6mO/Q+A5k1W2sXMlkvhMK1nH+TtSoAKxfl5a/
S5sHF+T0rI+QnoYLap02Wb9uvJLph1nfbqjjWmC+x6yH0QMx3GLCmXdDrdM0
zQvcEMsjFGB7N+0j2Ufc6JTrNsPn68G7MhmBMDxojS8Q+XtoP4iPeJCmArK/
l/Rify/pz/168VGWX8H5vaQ/+/ug1rsvn/x95noMH1S4KOf3afX76Xxo3uCn
+4Lr99N9Q3pE/Nr+BczzjwAqkwfFlcT7EMAXEX1jhf0DWv9BKPNeyocgwsqA
5zlovg8iQe38Q1r+EN23nD+knV9I2/+wef4QNt9XRhi/K2SFxEfCKJHXzSLP
50ltnhLvR+L9SLwfifcj8X7E/RPvx/++H38BtOQt2Q==
           "], 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.009166666666666668], AbsoluteThickness[1.6], 
            PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
             112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
             125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
             138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
             151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
             164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
             177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
             190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200},
             VertexColors->Automatic]},
           VertexColors->CompressedData["
1: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
jq/m+GqOr+b4ao6v/r989V/Vsi2A
            "]], {{}, {}}},
         AspectRatio->Full,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0., 0},
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{
            FormBox[
             TagBox["\"Varianz des Abstands d\"", HoldForm], TraditionalForm],
             None}, {None, None}},
         FrameTicks->FrontEndValueCache[{{ResourceFunction["PlotGrid"][
              "HideOuterLabels"[{1, 1}, {388.3281572999747, 240.}, {
                DirectedInfinity[-1], 10}, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
             "CustomTicksNoLabels"][
              SlotSequence[1]]& }, {ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 13.779633620689655`, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 13.779633620689655`, 
               "CustomTicksNoLabels"]][
              SlotSequence[1]]& }}, {{{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {2., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {4., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"4\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {6., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"6\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.01, 0.}, {}}, {0.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {1., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {1.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {2.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {3., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {3.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {4.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {5.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {6.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {7., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              2., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              4., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              6., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              2.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              3., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              3.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              4.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              5.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              6.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              7., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}}}}, {{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"20\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"40\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"80\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}}}],
         FrameTicksStyle->{{None, None}, {
            Directive[FontSize -> 0, FontOpacity -> 0, None], 
            Directive[FontSize -> 0, FontOpacity -> 0, None]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{26.73339819908142, 4.}, {4., 4.}},
         LabelStyle->GrayLevel[1],
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{-2.0833333333333335`, 
          102.08333333333333`}, {-0.15118931247963507`, 7.408276311502118}},
         PlotRangeClipping->True,
         PlotRangePadding->None,
         Ticks->{Automatic, Automatic}], 
        Offset[{0, 0.}, {0, 0.3333333333333333}], Scaled[{0, 0}], 
        Offset[{30.73339819908142, 8.}, {1., 0.3333333333333333}]],
       Annotation[#, {
        "PlotGridItem", {2, 1}, {0, 0}, {0, 0.3333333333333333}, {0, 0.}, {1.,
          0.3333333333333333}, {0., 0.}}]& ], 
      TagBox[InsetBox[
        GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1TlOA0EQRuESESEBAQEBIIQQQoh9B7cXbIM3PDa2YyRirlBHq4jzcASD
UAf/OwLqkSzrzVc1M1lvv39WHytm9vXz+/3/u75rplfS+6tJeQ29jvkN+CZ8
C74D30XvYX4ffgA/hB/Bj+En6FPMn6HPMX8Bv0Rfoa/RN3jeLfwOfg9/QD+i
a9hP6o62us57Hd6AN+BNeBPegrfgT/i+3Pn729hv67x14B14F96FP+P9aHuB
o62H5/fgfXgfPoAP4EP4ED6Cj+Cv2il3nkcH5m2snsbqDg+4Vdiv1B0ecJtg
H+0TnQ+4TdXTVN3hAbc3vB/t6Midrxn20T7T+YDbHN8/V3d0oG2B/YW6owNd
zgt0OS9kvpwX8HJeiJfzAvv/97xYAikrCH8=
           "], 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.011000000000000001`], AbsoluteThickness[1.6], 
            PointBox[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
             111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
             124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 
             137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 
             150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 
             163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 
             176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
             189, 190, 191, 192, 193, 194, 195, 196, 197, 198},
             VertexColors->Automatic]},
           VertexColors->CompressedData["
1:eJxTTMoPSmViYGA4BsTMQDxln0DRvf937Rmg4JMU6yV+kwlQ/gf7NsWiX1V2
r+xXq3Xs4nc4YI9LPbXMoZb6gbKX1u6kdXwNtvgdqHAYKumHWv4aKu4fKul2
sKkf6ulhoNQPdXfS2l9Dxb+DzfyhUl4NlL2j7ajRdtRgUD/U88tQT7eDTf1Q
Tw8DpX6ou5PW/hoq/qW1+QBBE00f
            "]], {{}, {}}},
         AspectRatio->Full,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0., 0},
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{
            FormBox[
             TagBox["\"Fluss pro Zeitschritt\"", HoldForm], TraditionalForm], 
            None}, {None, None}},
         FrameTicks->FrontEndValueCache[{{ResourceFunction["PlotGrid"][
              "HideOuterLabels"[{1, 1}, {388.3281572999747, 240.}, {
                DirectedInfinity[-1], 10}, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
             "CustomTicksNoLabels"][
              SlotSequence[1]]& }, {ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 95.90625, "CustomTicks"]][
              SlotSequence[1]]& , ResourceFunction["PlotGrid"][
              "ScaleFrameTicksV2"[
              1.6180339887498945`, 95.90625, "CustomTicksNoLabels"]][
              SlotSequence[1]]& }}, {{{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.0\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.2, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.2\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.2`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.4, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.4\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.4`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.6, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.6\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.6`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.8, 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"0.8\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 0.8`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {1., 
               FormBox[
               "\"\\!\\(\\*FormBox[TagBox[InterpretationBox[StyleBox[\\\"\\\\\
\\\"1.0\\\\\\\"\\\", Rule[ShowStringCharacters, False]], 1.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
List[DirectedInfinity[1], 1]]]], TraditionalForm]\\)\"", TraditionalForm], {
               0.01, 0.}, {}}, {0.05, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.1, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.15, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.25, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.3, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.35, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.45, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.5, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.55, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.65, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.7, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.75, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.85, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.9, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {0.95, 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
               0.}, {}}, {1.05, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.2, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.4, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.6, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.8, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              1., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.01, 0.}}, {
              0.05, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.1, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.15, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.25, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.3, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.35, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.45, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.5, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.55, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.65, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.7, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.75, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.85, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.9, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              0.95, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 0.}}, {
              1.05, 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.005, 
               0.}}}}, {{{0., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"20\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"40\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"80\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
               "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
                TraditionalForm], {0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}, {{0., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {20., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {40., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {60., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {80., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {100., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.016180339887498944`, 0.}, {}}, {5., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {10., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {15., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {25., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {30., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {35., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {45., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {50., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {55., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {65., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {70., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {75., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {85., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {90., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}, {95., 
               FormBox[
                TemplateBox[{0}, "Spacer1"], TraditionalForm], {
               0.008090169943749472, 0.}, {}}}}}],
         FrameTicksStyle->{{None, None}, {None, 
            Directive[FontSize -> 0, FontOpacity -> 0, None]}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{35.073241651058204`, 5.741234753028152}, {15.171875, 
          4.000000000000028}},
         LabelStyle->GrayLevel[1],
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{-2.0625, 101.0625}, {-0.021505376344086027`, 
          1.053763440860215}},
         PlotRangeClipping->True,
         PlotRangePadding->None,
         Ticks->{Automatic, Automatic}], Offset[{0, 0}, {0, 0}], 
        Scaled[{0, 0}], 
        Offset[{40.814476404086356, 19.17187500000003}, \
{1., 0.3333333333333333}]],
       Annotation[#, {
        "PlotGridItem", {3, 1}, {0, 0}, {0, 0}, {0, 0}, {1., 
         0.3333333333333333}, {0., 0.}}]& ]},
     AspectRatio->Full,
     ImagePadding->{{34.073241651058204`, 4.741234753028152}, {14.171875, 
      3.0000000000000853`}},
     PlotRange->{{0, 1}, {0, 1}}], Offset[{-34.073241651058204, -14.171875}, 
    Scaled[{0, 0}]], ImageScaled[{0, 0}], Offset[{38.814476404086356, 17.171875000000085},
     Scaled[{1, 1}]]], {{}, InsetBox[
     PaneBox["\<\"Zeit t\"\>",
      BaseStyle->{"GraphicsLabel", "GraphicsFrame", None}], Offset[{0., -19.171875},
      Scaled[{0.5, 0.}]], 
     ImageScaled[{0.5, 1.}]]}, {{}, {}, {}}, {{{}, {}, {}, {}}, {{}, {}, {}, \
{}}, {{}, {}, {}, {}}}},
  AspectRatio->1.8541019662496847`,
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     If[$VersionNumber == 12.3, 
      "Not supported in Mathematica 12.3 due to Front-End crash", If[
        Or[True, 
         Not[
          ListQ[
          FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData]]\
], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData = {
          MousePosition["GraphicsImageScaled"], 
          MousePosition["GraphicsAbsolute"]}]; 
      With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$ = 
         FirstCase[{{{1, 1}, {0, 0}, {0, 0.6666666666666666}, {0, 0.}, {1., 
             0.33333333333333337`}, {0., 0.}}, {{2, 1}, {0, 0}, {
             0, 0.3333333333333333}, {0, 0.}, {1., 0.3333333333333333}, {0., 
             0.}}, {{3, 1}, {0, 0}, {0, 0}, {0, 0}, {1., 
             0.3333333333333333}, {0., 0.}}}, {
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
              Blank[]], 
             Blank[], 
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`posOff, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`sizeOff, 
              Blank[]]} :> 
           With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor = \
# Part[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData, 2],
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
posOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
sizeOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData]}, 
             
             Condition[{
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize}, 
              Apply[And, 
               Thread[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
                 FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize]\
]]], {0, 0}]}, 
        With[{
         FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$ = 
          First[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$\
]}, 
         If[
          And[
           FreeQ[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 0],
            Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
             1.2166203703703735`, 
             1.8675462962962965`}}}, {{{-2.0833333333333335`, 
             102.08333333333333`}, {-0.15118931247963507`, 
             7.408276311502118}}}, {{{-2.0625, 
             101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$] =!= 
           Null], 
          (Column[{
            Row[{"Plot: ", #}], #2}]& )[
          FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 
           (If[# =!= None, #, Nothing& ]& )[
            Extract[{{{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]][
            MapThread[Rescale, {
              Part[
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
               2], 
              Transpose[
               Part[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
                Span[3, All]]], 
              
              Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
               1.2166203703703735`, 
               1.8675462962962965`}}}, {{{-2.0833333333333335`, 
               102.08333333333333`}, {-0.15118931247963507`, 
               7.408276311502118}}}, {{{-2.0625, 
               101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]}]]], 
          "Not inside a plot"]]]]& ), 
    "CopiedValueFunction" -> (
     If[$VersionNumber == 12.3, 
      "Not supported in Mathematica 12.3 due to Front-End crash", If[
        Or[False, 
         Not[
          ListQ[
          FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData]]\
], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData = {
          MousePosition["GraphicsImageScaled"], 
          MousePosition["GraphicsAbsolute"]}]; 
      With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$ = 
         FirstCase[{{{1, 1}, {0, 0}, {0, 0.6666666666666666}, {0, 0.}, {1., 
             0.33333333333333337`}, {0., 0.}}, {{2, 1}, {0, 0}, {
             0, 0.3333333333333333}, {0, 0.}, {1., 0.3333333333333333}, {0., 
             0.}}, {{3, 1}, {0, 0}, {0, 0}, {0, 0}, {1., 
             0.3333333333333333}, {0., 0.}}}, {
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
              Blank[]], 
             Blank[], 
             Pattern[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`posOff, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size, 
              Blank[]], 
             Pattern[
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`sizeOff, 
              Blank[]]} :> 
           With[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor = \
# Part[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotScaleData, 2],
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
posOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`pos} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData], FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize = 
              Total[{FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
sizeOff, FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`size} 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`\
plotScaleData]}, 
             Condition[{
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`idx, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize}, 
              Apply[And, 
               Thread[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`cursor < 
                FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effPos + 
                 FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`effSize]\
]]], {0, 0}]}, 
        With[{
         FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$ = 
          First[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$\
]}, 
         If[
          And[
           FreeQ[FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 0],
            Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
             1.2166203703703735`, 
             1.8675462962962965`}}}, {{{-2.0833333333333335`, 
             102.08333333333333`}, {-0.15118931247963507`, 
             7.408276311502118}}}, {{{-2.0625, 
             101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$] =!= 
           Null], {FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$, 
           (If[# =!= None, #, Nothing& ]& )[
            Extract[{{{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }, {{
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& }}, 
             FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]][
            MapThread[Rescale, {
              Part[
              FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
               2], 
              Transpose[
               Part[
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`plotData$, 
                Span[3, All]]], 
              
              Extract[{{{{-2.0833333333333335`, 102.08333333333333`}, {
               1.2166203703703735`, 
               1.8675462962962965`}}}, {{{-2.0833333333333335`, 
               102.08333333333333`}, {-0.15118931247963507`, 
               7.408276311502118}}}, {{{-2.0625, 
               101.0625}, {-0.021505376344086027`, 1.053763440860215}}}}, 
               FunctionRepository`$e7a621c6e03241f09b4b93a58e6083fa`id$]}]]}, 
          Missing["OutsidePlot"]]]]]& )},
  Epilog->{},
  ImagePadding->Automatic,
  ImageSize->Large,
  LabelStyle->GrayLevel[1],
  Method->{},
  PlotRange->Automatic,
  PlotRangePadding->None,
  Prolog->{}]], "Output",
 CellChangeTimes->{3.89988700543023*^9, 3.89988768828115*^9, 
  3.8998881733470764`*^9, 3.899888747944192*^9, 3.89989050276495*^9, 
  3.899890827766015*^9, 3.899924237773157*^9, 3.899970910480403*^9, 
  3.8999757082007837`*^9},
 CellLabel->"Out[66]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQmYJEdxdU9XVffMzu7OntrVPSt0rU5OGQSWGoGFkLDAyBgwYAYEWIAs
QEhc5hiMkc0hWUggkAQ0MjcyAhtLYBkxgM1hbHP5B4w5msM2xgf3YS7PXy8y
IysyO7KqurtWOyu6vq9qeqoiMyJeREZmZWZl/vqjLjrvsb/3qIsef+6jFu9z
4aOefN7jz33q4ulPujC/lcy0WsknWq3O+xdbaf57tdUquXy61ZrerXX327jM
L/1448ZWsnjDl7/c4qNN1w7u4Wn/lk9+EufyZ775zd4dzz47pccJfuIxJc3o
XorfTIpn8+Y258K3if3bQ1Faycqfvfe9q1dedx3O1ixdOySfOMB28Jq3vz2j
x138lI/BAk/wt2Ukzfgen5Rmnf4MIrRi8kGHQj7DQiKH320jNoPFt/Eb9xKT
kydmUuDNudN9m3Su/PGQsN8xLKCl02idDzAUac1FRUmYFyG1vrC3u0eM3jnE
NGUinPg9q6RdF+fr0QV8C8tIvt81fKVlIHzXpCVnCzBohu/3FJC7PgPjCDXc
dEIhPNCRYcdXnvIjhAoHoHtxXxxDlu8bWaTySJD5DkVopEp+jcryA0PEyhJR
x79HZdMyYOeRTJsUZMhABpRZmR/HC+aLe6kiSrvIUfp828jpBUujsQu+nKtG
SsJeL37/sNSaUp+WCXhUEjjgqSC2fbBNqiJtILZfF1g6Ajkq84/8hJSpLZJc
lZGAxKCNW0bMlJ9yKiKfHX6GnBM15P6oIGaZoef2cf3m277YZKuMrl6kQybG
iGRO5GWICh7OzOuVe8TrHTrfoB72/WW9Yl/K4EMiM6oS1pmC5rUv1hdc8JSe
DaVeCy2k6d01fPeRdO0sbtu2rX/WWWcNtm7dinPluOOO6+3atevV9DhZuumm
m5YvuuginHmrDNcEj1t8pHo2oMS9a002SIJblLRbnuSVJgl+4hYEarVBkBcY
8OejUysbcOTHMhuQ1MnmCh8HUmBOT8LQmdCXIQluyRwtt9bvFDqu5ocRDsRt
/BtAfLUhxuNVe+TtIqLzAEkKUaszfZUhRgZ4KoSrmcGVdJ2FCiDkBAwI/z9G
nh0WSuYpkiCv8ZT+Ex9Jymh2FFMYb59lAaVw/D8yMmStR5g0DBFOsGwXt1lL
MLnGCIL8cIv8vkPcE+esOILkzNO2D5DA6XGNYuSsfvKXF6SsIbJI/FxJ0HTk
XOU9oJL4OTAqSf2MX6ZYtzuSCdJh0QQzRWFrYud+MB43H7x71+gM1ykip74f
kNGujhqyOu2VvjgkvU3LBZX8KxktP75H6mXKvbr5XR41WzWsqZ+WSkuq5Jd4
1vLISXQq66KuckDNDdutKOBOFooUVFN0CcqUDQUhcUdx7lg2V8ZkLGAjlRQX
rsjSS54pPj1CliVGi6DLL4GyxGaKSa2pHm4eSVm4fmKvJabX+rqRHrMKq44T
JAinf+IDQRSzhh3JYw+ZWTSvy8UDr94IQib5vRbCynMOTChirgzPI+V7qWLH
Tk3otbAYWNRw9Cw6LFfA/tWKRbsKq0AkwvtlPnvikZoIxTzwF3eiKsTz9UoG
0gchWJq1MssrFDgMUlnYpiL6uvlqbZxOTei5j2E4tA8FhbZnVA/wIGdC5TVx
ujKNSKor/PxMk8jPj3ikNfNTjAnadPg2WNXAnXI1QTaT1Sy/wnDJc28BOOrm
W2LPStTbyr0iFMxAvhn8OzOaMV+r0AX1CblOFCZ6D6thwmguxoQdaSv5BtY2
DRpOQtgmNbM2zVNXVshywn4uetbNbw/aDzKOY7++4no1Cg8VvCt9eES7YeTC
WIRBUWWyoK3EXCkhH3VjoLFhN3yP5L+mjVYzrwbsN3o89bxPi9SvK2Drei2N
/PBa+rLm9wiv8DHiuKQZsV6Gpoky64GXHxwEkQnuZaPkacr5nGxOsKDc7HEG
TUbJuKTdU4l93Kp+m0m+dGhtr8hL6Ov87E2fmyJawJKc8Cq615FVpTRoWjMb
7YVhXc20L/cRk+IznXw9rMwv+qYxAqRBgJItVaX9Fb4myjdXT7TrFFUtnVcK
tGJkLSXzk5bKamajvdzP10z7cp/OQKfcS2rmV+OdMApl6iyqNSR8u3h1j/a2
f03BwHlGpHtJ00OQyoJkOpQz6bDO6lpQi2QToE5orhs5Od8Skc91cvF9LSBG
ci0xXSXaWp+O0mtXdObZ3u9Z+UaGp1xTcArzak/Bn1vOTIa/skYP4zR5Tdu8
KXieZDrSUtmXjud1k7/CiCR9IBQL/8sqoWaeQ/2htg2rvV1XZnkZ0XUYUJyy
TTpbD39ReXZYSwl8UaPYwSTnA5RGazRfU/iUCzGpQicqgrBB6A15BEMjchSj
Mu0r4rJ4jc5ktPz8rg9Ft7RmfpcWdE4+bQSkWxP7LJ6f92JqTbpk/gE52HHz
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
P8B8tHVfJlvQybYD5FwXFr7o3PNfBuzkHW/2idIQdcsxtYli1nsTbJlaQXYm
B+0A0nQywxmMXT85d+tym0fOjPQaOnZulTYzUtvVwht/5c2UZUu0iemGftc3
3bNzDT1nQH6r3lxDD8/Mz0tirPTr+/NAG9UiOvVQ6/zf309bvtwWb1Yrt1Op
UMeN6mot53NJifgkSrPEWiFNxvZgVyFAR5x0KJvl4QZkDWw5o706tH0uYSx1
WYw0D9R062XhdFgxVVadFT2JWm1kaLeSCndgIb4H+AqU70HeWsf35NqG3HPP
z5DHZKGqmNt/UDW+BJlJmEqRKYoWJnPxrJFVwEbYPs8LfqJAO1NP9v1CMS2y
ZNMmr6xvnoifiB5aK8PBbC1XOaF+3sk/mVyiwnT96GKWjCMP6utwPyd2bDy3
0wbZgEQ62VKJlpEMK8idPqKQjSNvRruReFbOy+DVu2RktEsNhmRtE5K5j0pI
M1nl5a3OCUaRUmD8ILpDVLBMYOhODohG61s5iO45o/n0yC+eW/x7FDUnK7Il
g+1eJdR8z1kw2N7cxAHtddHj3MiQPn+xQv/xFu1yhuQva/fVvrDOiHhncBXF
mRPlGLyOUY6NzSVzEX+NziXzvhaZsC+MsvWDrmlpmdpxuHdphE519Yut5t3K
m8rWNXWe19CejMu+GxqES6NiMW97jXcO36qzVHnSB1eW3caXQ/mljiz8zWgD
Oe7dIR3vW9T5WCxby0M6nrTz5uvR20hUC6ZEN+BsxaxLr7ug+cWAwi5D5Z1t
sqa70UROxjea0Lti425Wowm/Z0d8hmcYj9K+4BEB+s/K7X16O5kt1qaX87Sc
wjeUJs++6eWdkvWvbks+PmnjRPN7797e9Ptp6mnqaep9JHX1d5xU7a5pHaap
p6mnqW9jqc08KPdax/2S1K5S5qmLlRj82a7m1d8tIoejiV1/vC89i5nm/myr
yLpxdmqTnGnEXa8iJ+8tr/E99WjU0aTwxrNL99Src1uMfk8krT8ZJlhih7Ap
dtYLpiTJ6UcNTtwZYaO9db5AcvKKN3enCYFGmw3k4RFM0SLcGhGpcs7GOiem
8tGsszBlWms9t7o70xnDeGtD4Qa/o2ufak1W9OoKpm3NqE2taGQGS11pvK/3
TY+nuqPjZNJE1wBUJnemUiSymJnLzbGzcK6mShWJEkyvoXvzCpZiDmVDsxds
MJTLqqn7/1lptCk3XLzlN22TSePNGAsW+5T+462yqS0KOpk0diUyb75mq/js
irExEzbmZNGSy+d5s5T32IaAbtIdjmAF9JDO+f1k8NgNAXk+HPcPmVlMXn+5
6zqabG7LvtvYnKaept6HUk/Xl5imnqaepp6mnqYePfV0O8Fp6mnqaepp6l/a
1NMXiGnqaepp6r2WukdXbwQXvZ4bJsrUdHj6YyjdghF3tRYfLEY/PSxdL+NQ
XNqL255z4k73a0H55T64e86JLu3G2L0gbUfhsVuhW6wpy4JC1ymlu2PN/Orm
vKkRNEbPpUjbLZWvq9zTnpan1WxuP3Od0GODSQM8hu+vblm9HsrBhYD9sxaO
XF391CIcP7/mjv/VXU7wLczu3GNWjvvh4aDACZrli25/lGkidHq7bj4x/pi4
8GPLJcNjFgbP6f+kkMA9t0O1+B/3IxLgZ4mAMfnbhYD4N4QBegkYNEUSwOdg
vd1EcB0U54L/Q6OMqXPcKIk0Co86VeospNEMVBfiuYbpjltTIAm6sLxppp3U
XxsCc20Vwgphkb1Gh2fjKBUXq+OJ1cIav0Yz8ViLb8lISg1xYSdLRvNDz7/i
fjjEjq15aypVWS04I2tNxJLalOpAs73FbLg+lJxLgmfBl580r0JrAIpwzb6D
vS0gqtSQK35GgijSwjaOzk3NOveYkI58uCadg62j+In7OKqeLJPIzH5H9J04
Lh5+gR5Esath/HaW83UybmoGg3HtW4lLhXygo3w17DsFD459qu8KOhdXLJ0r
ijh2l8uy17HS6MYoq3UxLcVK0LnomK2NsjqObnVl9tpDFTJrsoRYjS9zGxB0
Rvcml7ug00rPJJJq+bHF+B57toysnhW0zS5LKseN7BiiwhPbGZZO03NrfBXt
Oqm2oxNv545OEz2L03kOJOgcZMKkYVoPbjcF++YhHhqdJotXoEvoPFzsPa9X
YENcD0/fQyeXxctvx+R2q8u3aft6dBsVW25UirYtYtzoLfKzvSNeVNQMddQa
B6IzuUGHC05dcLI43ZoteSPKPJZuG2PAjgi2R5xNYP0SupGE9CruEi09hLSX
qOpqSVuH19tjW6uWDlQcoxsPv546RKc1luQDz8wL8XKruaFG50lQl25BKRIb
FPk0zQ8ZWfOdNXPWMK2rURTi8ge6BB72GlZu4bBhL9HCjGZLL6Yftdc1L9Go
0kYaQnU1H9Hbb/VSsYfk8+gWa/JdiNttLPvujPE9QBF8vBjsvQYEg6bFJ5X0
Jd72uCZanPIaZNLVhx/oUGim96q8EpN6LUSNLiqQFvGtRsOBM6gGD5lU8+01
GWlhsJyR9lpegv1YEowYiIfDzJyC/VF7XdWSElzp9wujqOrezIdbW3vH7/eI
pIsxSLY0bKOdCqOSKOsp2DaaF3PloiFUG5cPxhmiX4IfWFM7zbNKDF6v5Tdi
RNXo6gpUWSQmCbAjAbFzzyBel07jO0n41YAdbi3MVQQhraW7ZjVvAKF6QDQQ
jfdomSmRb5JY7fHdq7G60ZbuJGGaesJnFVO57vXhfh0NWq1zbLgPZ3OsGOuM
NJ/Q6DSf0OoDz1QbY5of2rDmO8aAuFKjEQUa7lWuK5DoJnPwaf1xJZ2LWljw
6I5aa0CMhJDmXHU1L6FbE4Xk1tBjsWZ+0QGSqAWDmmFHnJHnyhrdXonLQStP
G7peUOQvGfytS+cBL6YDhPe0gWgP85LpDzFZwukPMTo3YK2FAG1KhDatYbFh
/HbW5Ftht7oYjGvfSeVzg/taELJlzwu/JcM/2vQWz5a71zhWnTjdKGU1xHQs
rEro1lJZravbsCzd0YXUnDWcDzSpAdy81JKZMnUdSSs4k8gcK4h18vNwHm+G
Tlk3fHTVvoMVyLTp0JsLszh1Sib3ei6i5TcX5ZtJOjcxSisLs+UyjUwXlz2V
s4uhqxZmN9eE8rCGoTygJt8KE9aAQZ1JX8m3Ll1cvlTKB/5a1LdW9gqhNhm+
hM6L8G6dtjUKV0OwsrsJrx4LLlHI3EykSQpjQ4VWUc8rtCXqxcQZU72IE6cy
1CFJ2oRtUmkbpEkVzxjR07z3kkisJrbpsL5jaCDNVGiQSo4iV88I2gqF9etP
uQd2Zf1pRhMynq6NEziRKGYkNg2fbRjptt01lWcO48Tv0TKJ3E514cnttpco
duRIXPY4RBtGZ1Cm+fqSZ1YC/C+tceKeViMi07gqRtTYsJd8rRFxyhikjckU
yWlc240hWJl7RrLLdF1G/ObchklvyXXXrdfYer0lnL3VlsW2ng0tzKtxdl0J
Rj/SWWxvLWeaNrEqcCY3tXJCbKJnXblxNxhzfVXskj4pd15pQy75a9uPGW+W
wPuf0+Ta6VLA09R7MzVHMCxUyMdbboV7nV8aMY9W7h1Vk67uvWl+9dNOTXqb
y29q0ttcflOT3ubyq2dSf9nkeSWfta7nL1t+Q8tYbyETExFZFP8drdw7qiZd
3XvT/Oqn7eJasgKtFlDrOolG13TatSTL3kpb0vs0Nem+mXZq0ttc2qlJb3Np
S0x6T/MI/cDoBqe96LS19KZmXvtpS8x8qnnk7dxZd2HrqenXftoS059i/pHD
ZhjJgcnlHpdU8uua/0017715grQlKv0qXVO5oaayUCeNZe1TGvl7twZLrpXv
0/pohR89+OlYgpQtslPswawJUmtkJ+BSvoxEy+9nob1IAlZDGz8Tg0m+EhlR
l19aVg1sDm6dYazJWCNzKZvLEF09amQu3owCN0WjCMD4PRmjUxTREx+0aPwb
lcus3HQAHJGznJsw2VQE0zbpyNkVsqKazjiYpp6mnqaepp6mnm53Ok09TT1N
PU09TT1NPU39y5V62mSZpp6mnqaepp6mnqaept4HUk+bLNPU09TT1NPU09TT
1PVSbzWPMMDOE7Vad28gx45caoBH1zHqbpYNSvh7f5psQcTmnstttgm1wJBn
KOSEbgqi47TL0MmpAFgyD3Q0o6EZafYzjzDZhDnJCZEO+EMLukIa6DDZnAe3
57ABg+aJaGDYxfrYcjQ3ZtNEnN1OaLoZiAMOs8ZcKqd+ABBt6lh95nZhIF5p
wlvzwqzLm8qpM/i9cSKGB/vaklMLMzvyA33mrK2YCe1asl2lJXsusRQt2QMK
vkDUFCbDF78dyofoKE8252WHz5xKTeBcNJnwMJ35ZJ693Uc8LFgQhgrWkcOI
I81k85WMQbtsaulfjrFd5c9b4KUJrinnyAY+3qRocDqWDaFuoj6OE3wu0d3p
Ry2k7pMAAo0KZxu3xGw2nrE3+Vo4bitBoZhZdKcjGcm4YErYnAwXHLQBPieh
Uj6ZR+8ohHMxWKwIJDm1iyLuctnfN5BWIEjnRoR0lUmB4CzDwUFHCo3fdkF0
z96TRV0Spg0UEv9XUa2Tysc3ySWIrO3ingOkAX5F4BBcul7N2TIQczjlEjoR
1y7jBk48BdOV9zb+a+PRiRPx2ulrSFp2ldryuIm42ALB1RPhlporuy97yGQG
sy1JGKEhF9ibrwUiDDnYqGwHE7QnM47l4rW+Zxt3AcMllSuMgccs/pmsuLhd
AowjUUP6pCYQ4TcAyvFXmsjRCyRrLce9/wKc8bp07N30d52Z6S6D7YS+aLl5
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
r2vaPmHZL9qj8KnmtN7y5qf+pI4W/gOBiNY1\
\>", "ImageResolution" -> \
192.],ExpressionUUID->"83b66825-b562-4989-8283-a5e8702fc288"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztVd9LFFEUXixRVldnZ2dm1UQxxBTDECGM0HshSimM9KFCLEEqQwwTQsgW
Q8IgDDUkqKQQLegli0BaQoi0CMOEQJIIRDGkUEGwnZ1dELo/5pz70Et/wF4U
Od4z3/nOd37cgpaOhotJHo9nlv3yv/mhrfcp+bn0/OB0pLhph3QfPtKyNK9R
Y6JmpduwySvjeaQ0WaedVd7F8asR8nusv+ztL53eEA5/yK7Jnmf0RSbel5xa
P+Nd8FJmsP9EyTh3H0uj4roqTpbmhx68qdhNHz3kJ0YW4veTJnuS3XhxMp0i
GFFhTkTJvpH217NFabQhnNe3Xu+QneO9je8aNFohTpSEKwrXNtP9VFyHbeQj
wnmjxCOO5vJ1yD0WvXDNh3jBc9e+Hg36aJPIP0pusq+bSzTkb/L023z0KTfH
HXKXp9OfQTfqOUCMMGeWsY52a+3cj2w9QPM5nbwY6mUX8wiOq0cAbamHQb/M
8eMQWQ8D+V1h2Y+067REEHTIk4LyjtZaA/nmfupkPwblatWs2BgP9OFooS0/
5gM24KeKgFC/GMnRt7tuf0h38eJE0AlpmB/0A+hx8uD3C8N1FsaTeEHXP+Lq
bVIhR18UbYgv8bOwXj8rB1YrB/agLePluHpGyHAdD2hivNFvL5lHAP1F+w6p
+h3g5SpTfHl2U4/9mI/vznX2iaonvy0oz8R+5GxWKzNorRBE3YOtVTvLtzLV
vTCrNazvIQGgUdmHKj7oAf0ANu+e7S4L+1mMU9zE+n7k4TuCmJ8o15SJ+YMe
4M+am3W40luM04iB882GhykQoKKdBm13HhXeCT5uo6q+n4s4goX5HJMDhPdy
Piysv1cAWogv9bIQX+pvufvBJoucfqmJ/KT+Kp4Y7+Zs7H/gA98LuCXlD/zB
X9YnC/WT+0L1q9w3AXc/Rf6ZP+h/0HN/chtbScpeYejOspp/yB/qK9wbg5jf
WeFgoj6wD2D/Qf1hP0B84CP3rY7zC/WDfGHeL4ljY/8BPuyrGR5+OkbsUs7Q
j/28l6+bObWvoJ8A//TG5cXezQC+H/CeyHqk0sR7knhPEu9J4j1JvCeJ9+R/
3pO/vurASA==
    "], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     PointBox[{102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
      114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
      142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
      156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 
      170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
      184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 
      198, 199, 200, 201},
      VertexColors->Automatic]},
    VertexColors->CompressedData["
1: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
Z4dx3dW6fPLKHbzl/l7YtCZK6tyg+PwPH6lLTQ==
     "]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.4313973063973116`, 1.2491666666666696`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       RowBox[{"\"mittlere Geschwindigkeit \"", " ", 
         OverscriptBox["v", "_"]}], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Varianz des Abstands d\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->GrayLevel[1],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"NaSch: Korrelation Varianz von d und mittlere v\"", TraditionalForm],
  PlotRange->{{2.4313973063973116`, 7.03030303030303}, {1.2491666666666696`, 
   1.8350000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89988700543023*^9, 3.89988768828115*^9, 
  3.8998881733470764`*^9, 3.899888747944192*^9, 3.89989050276495*^9, 
  3.899890827766015*^9, 3.899924237773157*^9, 3.899970910480403*^9, 
  3.8999757096077633`*^9},
 CellLabel->"Out[67]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
9P8BuHo6dw==\
\>", "ImageResolution" -> \
192.],ExpressionUUID->"5f0581e4-3185-4a2c-98df-3ea2c0980870"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "meanvarfluss", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8995693386843224`*^9, 3.8995693410118384`*^9}, 
   3.8995694727573533`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"67dc683d-91d4-4dca-b956-b9af4ab66b20"],

Cell[TextData[StyleBox["Am Plot der mittleren Geschwindigkeit \
l\[ADoubleDot]sst sich erkennen, dass sich diese f\[UDoubleDot]r fast alle \
Zeitschritte mit wenigen Ausrei\[SZ]ern in einem Bereich von \
\[CapitalDelta]v=0.4 Zellen/Zeitschritt befindet. Die Varianz des Abstands \
ist stets in einem Intervall von \[CapitalDelta]d=5 Zellen. Eine niedrige \
Varianz ergibt sich entweder, wenn der Verkehr ohne viele Staus flie\[SZ]t \
oder wenn sich mehrere Staus auf der Stra\[SZ]e ausgebildet haben. Eine hohe \
Varianz dagegen kann von einem Stau auf der Stra\[SZ]e, dessen voranfahrende \
Autos wieder beschleunigen und den Abstand erh\[ODoubleDot]hen, hervorgerufen \
werden. Die meisten Punkte befinden sich um die Varianz herum die in der \
Mitte zwischen der niedrigsten und der h\[ODoubleDot]chsten Varianz liegt.\n\
Die Grafik des Flusses zeigt, wie dieser nur 1 oder 0 sein kann, weil nur \
eine Spur simuliert wird. Da ein Auto nur bis zu einer Zelle vor dem n\
\[ADoubleDot]chsten fahren kann (R2: Abbremsen, falls v \
gr\[ODoubleDot]\[SZ]er als d), kann eine Zelle in einer Runde nur von einem \
Auto durchquert werden.\nAus der Korrelation der Geschwindigkeit und der \
Varianz des Abstands ist zu sehen, wie die mittlere Geschwindigkeit linear \
abnimmt mit der Zunahme der Varianz des Abstands.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8999690467600317`*^9, 3.899969074402276*^9}, {
  3.8999691203677063`*^9, 3.899969200396897*^9}, {3.899969278949769*^9, 
  3.8999693111053877`*^9}, {3.899997093893508*^9, 3.899997290824128*^9}, {
  3.89999747392486*^9, 3.8999974869261365`*^9}, {3.8999975170832853`*^9, 
  3.8999975284410443`*^9}, {3.8999976295444756`*^9, 
  3.8999978191414046`*^9}},ExpressionUUID->"9a12740d-e703-404e-b25c-\
aece55b23138"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fundamentalplot",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"431ebe87-5ae3-4e3f-80ff-\
d9a73d6b2de5"],

Cell[TextData[StyleBox["Unter dem Fundamentalplot versteht man die \
Korrelation zwischen dem Verkehrsfluss und der Dichte \[UDoubleDot]ber die \
gesamte Stra\[SZ]e. In diesem Teil wird ein Modul daf\[UDoubleDot]r \
hergestellt und anschlie\[SZ]end das dargestellt.\nDanach wird es f\
\[UDoubleDot]r unterschiedliche Tr\[ODoubleDot]delwahrscheinlichkeiten p \
geschrieben und geplottet.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899570247486517*^9, 
  3.899570287528245*^9}},ExpressionUUID->"28c43677-f09d-40f1-9ccb-\
06263446373d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Daten", " ", "f\[UDoubleDot]r", " ", "Fundamentalplots", " ", "aus", " ", 
    "histonasch"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"fundnasch60", "=", 
     RowBox[{"histonasch", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fundnasch100", "=", 
     RowBox[{"histonasch", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fundnasch200", "=", 
     RowBox[{"histonasch", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{3.899569465133962*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"9f9f0c00-035f-495d-8220-11ba5455f2af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Fundamentalplot", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Eingabe", ":", " ", 
     RowBox[{"Falls", " ", "Modell", " ", "NaSch", " ", "q"}]}], "=", "0"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"FundamentalD", "[", 
    RowBox[{"Modell_", ",", "p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
     "Fluss", " ", "wird", " ", "f\[UDoubleDot]r", " ", "Dichten", " ", "0", 
      " ", "bis", " ", "1", " ", "berechnet"}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nCells", ",", "nCar", ",", "tMax", ",", "vMax", ",", "anzahlp", ",", 
       "density", ",", "addfluss", ",", "addfluss1", ",", "addfluss2", ",", 
       "m", ",", "m1", ",", "m2", ",", "fluss", ",", "funddata", ",", 
       "fundplot", ",", "nasch", ",", "nasch1", ",", "nasch2", ",", "\n", 
       "tnasch", ",", "tnasch1", ",", "tnasch2", ",", "nexttnasch1", ",", 
       "nexttnasch2", ",", "nexttnasch", ",", "mlist1", ",", "mlist2", ",", 
       "mdiff1", ",", "mdiff2", ",", "range", ",", "nichts", ",", "indexfl1", 
       ",", "indexfl2", ",", "nextindexfl1", ",", "nextindexfl2", ",", 
       "Zellen", ",", "\n", "max1", ",", "max2", ",", "wechselvon1", ",", 
       "wechselzu1", ",", "wechselvon2", ",", "wechselzu2", ",", "index1", 
       ",", "nextindex1", ",", "index2", ",", "nextindex2", ",", "vornasch1", 
       ",", "vornasch2", ",", "vormax1", ",", "vormax2", ",", "posvormax1", 
       ",", "posvormax2"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Variablen", " ", "aus", " ", "vorherigem", " ", "NaSch"}], 
       "-", "Aufruf"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", 
        RowBox[{"nCells", "=", "300"}], ",", 
        RowBox[{"nCells", "=", "150"}]}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "F\[UDoubleDot]r", " ", "geringere", " ", "Laufzeit", " ", "auf", " ", 
        "zwei", " ", "Spuren", " ", "insgesamt", " ", "300", " ", "Zellen"}], 
       "*)"}], "\n", 
      RowBox[{"tMax", "=", "100"}], ";", "\n", 
      RowBox[{"vMax", "=", "5"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Erstes", " ", "Element", " ", "in", " ", "Subliste", " ", "ist", " ",
          "Dichte"}], ",", " ", 
        RowBox[{"zweites", " ", "Fluss"}]}], "*)"}], "\n", 
      RowBox[{"funddata", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Anzahl", " ", "Zellen", " ", "f\[UDoubleDot]r", " ", "Modell"}], 
       "*)"}], "\n", 
      RowBox[{"Zellen", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", "nCells", 
         ",", 
         RowBox[{"Modell", "==", "\"\<twolanesNaSch\>\""}], ",", 
         RowBox[{"2", " ", "nCells"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Schleife", " ", "f\[UDoubleDot]r", " ", "ansteigende", " ", 
        RowBox[{"Dichte", "/", "Anzahlen"}], " ", "an", " ", "Autos"}], 
       "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"nCar", "=", "1"}], ",", 
        RowBox[{"nCar", "<", "Zellen"}], ",", 
        RowBox[{"nCar", "++"}], ",", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Berechnen", " ", "NaSch"}], "-", "Modell"}], ",", " ", 
          RowBox[{"VDR", "-", 
           RowBox[{
           "Modell", " ", "oder", " ", "Abrufen", " ", "berechnete", " ", 
            "Daten", " ", "aus", " ", "histonasch"}]}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"nasch", "=", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"Modell", "==", "\"\<NaSch\>\""}], ",", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"p", "==", "0.15"}], ",", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"60", ",", "100", ",", "200"}], "}"}], ",", 
                   "nCar"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"NaSch", "[", 
                  RowBox[{
                  "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}],
                   "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"nCar", "==", "60"}], ",", "fundnasch60", ",", 
                RowBox[{"nCar", "==", "100"}], ",", "fundnasch100", ",", 
                RowBox[{"nCar", "==", "200"}], ",", "fundnasch200"}], "]"}], 
              ",", "\n", 
              RowBox[{"!", 
               RowBox[{"p", "==", "0.15"}]}], ",", 
              RowBox[{
               RowBox[{"NaSch", "[", 
                RowBox[{
                "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Modell", "==", "\"\<vdrNaSch\>\""}], ",", 
            RowBox[{
             RowBox[{"vdrNaSch", "[", 
              RowBox[{
              "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p", ",", 
               "q"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Modell", "==", "\"\<twolanesNaSch\>\""}], ",", 
            RowBox[{"twolanesNaSch", "[", 
             RowBox[{
             "nCar", ",", "nCells", ",", "tMax", ",", "vMax", ",", "p"}], 
             "]"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Falls", " ", "twolanesNaSch"}], ",", " ", 
           RowBox[{
           "extrahieren", " ", "xAutos", " ", "und", " ", "mlisten"}]}], 
          "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Modell", "==", "\"\<twolanesNaSch\>\""}], ",", 
           RowBox[{
            RowBox[{"nasch1", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"nasch2", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ";", 
            RowBox[{"wechselvon1", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], ";", 
            RowBox[{"wechselzu1", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], ";", 
            RowBox[{"wechselvon2", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}], ";", 
            RowBox[{"wechselzu2", "=", 
             RowBox[{"nasch", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], ";", 
            RowBox[{"Clear", "[", "nasch", "]"}], ";"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Index", " ", "zum", " ", 
            "\[CapitalUDoubleDot]berpr\[UDoubleDot]fen", " ", "der", " ", 
            "Positionen"}], ",", " ", 
           RowBox[{
            RowBox[{
            "startet", " ", "von", " ", "der", " ", 
             "\[UDoubleDot]berpr\[UDoubleDot]ften", " ", "Zelle", " ", 
             "nCells"}], ";", " ", 
            RowBox[{
            "Fluss", " ", "als", " ", "Durchfluss", " ", "von", " ", 
             "Position", " ", "nCells", " ", "zu", " ", "1"}]}]}], "*)"}], 
         "\n", 
         RowBox[{"m", "=", "nCar"}], ";", "\n", 
         RowBox[{"addfluss", "=", "0"}], ";", "\n", 
         RowBox[{"addfluss1", "=", "0"}], ";", "\n", 
         RowBox[{"addfluss2", "=", "0"}], ";", "\n", 
         RowBox[{"m1", "=", "0"}], ";", "\n", 
         RowBox[{"m2", "=", "0"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Schleife", " ", "\[UDoubleDot]ber", " ", "Zeit", " ", 
           "f\[UDoubleDot]r", " ", "Berechnung", " ", "des", " ", "Flusses"}],
           "*)"}], "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "1"}], ",", 
           RowBox[{"t", "<", "tMax"}], ",", 
           RowBox[{"t", "++"}], ",", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Vergleich", " ", "mit", " ", "Zeitschritt", " ", "danach"}], 
             ",", " ", 
             RowBox[{
              RowBox[{"also", " ", "bis", " ", "tMax"}], "-", "1"}]}], "*)"}],
            "\n", "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Eine", " ", "Spur"}], "*)"}], "\n", 
              RowBox[{"(", 
               RowBox[{"(*", 
                RowBox[{
                "Abspeichern", " ", "zu", " ", "betrachtende", " ", 
                 "Listen"}], "*)"}], "\n", 
               RowBox[{
                RowBox[{"tnasch", "=", 
                 RowBox[{"nasch", "[", 
                  RowBox[{"[", "t", "]"}], "]"}]}], ";", "\n", 
                RowBox[{"nexttnasch", "=", 
                 RowBox[{"nasch", "[", 
                  RowBox[{"[", 
                   RowBox[{"t", "+", "1"}], "]"}], "]"}]}], ";", "\n", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"m", "==", "0"}], ",", 
                  RowBox[{"m", "=", "nCar"}], ",", 
                  RowBox[{"m", "=", "m"}]}], "]"}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"nexttnasch", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "<", 
                   RowBox[{"tnasch", "[", 
                    RowBox[{"[", "m", "]"}], "]"}]}], ",", "\n", 
                  RowBox[{
                   RowBox[{"addfluss", "=", 
                    RowBox[{"addfluss", "+", "1"}]}], ";", "\n", 
                   RowBox[{"m", "=", 
                    RowBox[{"m", "-", "1"}]}], ";"}]}], "]"}], ";"}], ")"}], 
              ",", "\n", 
              RowBox[{"(*", 
               RowBox[{"Zwei", " ", "Spuren"}], "*)"}], "\n", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"t", ">", "1"}], ",", "\n", 
                 RowBox[{
                  RowBox[{"vornasch1", "=", 
                   RowBox[{"nasch1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"vornasch2", "=", 
                   RowBox[{"nasch2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"tnasch1", "=", 
                   RowBox[{"nasch1", "[", 
                    RowBox[{"[", "t", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"nexttnasch1", "=", 
                   RowBox[{"nasch1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "+", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"tnasch2", "=", 
                   RowBox[{"nasch2", "[", 
                    RowBox[{"[", "t", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"nexttnasch2", "=", 
                   RowBox[{"nasch2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "+", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "Falls", " ", "eine", " ", "der", " ", "beiden", " ", 
                    "Listen", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "0.5", " ", "in", " ", "zwei", " ", "Spuren", " ", 
                    "angeh\[ADoubleDot]ngt"}], ",", " ", 
                    RowBox[{"falls", " ", "Spur", " ", "leer"}]}], "*)"}], 
                  "\n", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tnasch1", "==", 
                    RowBox[{"{", "0.5", "}"}]}], "||", 
                    RowBox[{"nexttnasch1", "==", 
                    RowBox[{"{", "0.5", "}"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"addfluss1", "=", "addfluss1"}], ";"}], ",", "\n", 
                    RowBox[{"tnasch1", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"vormax1", ":", " ", 
                    RowBox[{
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], "-", 
                    "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"falls", " ", "zuvor", " ", "leer", " ", "0"}], 
                    ";", " ", 
                    RowBox[{"posvormax1", ":", " ", 
                    RowBox[{
                    RowBox[{"Maximum", " ", "von", " ", "t"}], "-", "1"}]}]}],
                     ",", " ", 
                    RowBox[{
                    RowBox[{
                    "falls", " ", "zuvor", " ", "leer", " ", "nCells"}], "+", 
                    "1"}], ",", " ", 
                    RowBox[{
                    "sodass", " ", "jeder", " ", "Wechsel", " ", "Index", " ",
                     "erh\[ODoubleDot]ht"}]}], "*)"}], "\n", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"vornasch1", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"vormax1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"vornasch1", ",", 
                    RowBox[{"Max", "[", "vornasch1", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    RowBox[{"posvormax1", "=", 
                    RowBox[{"vornasch1", "[", 
                    RowBox[{"[", "vormax1", "]"}], "]"}]}], ";"}], ")"}], ",", 
                    RowBox[{"vornasch1", "==", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"posvormax1", "=", 
                    RowBox[{"nCells", "+", "1"}]}], ";", 
                    RowBox[{"vormax1", "=", "0"}], ";"}], ")"}]}], "]"}], ";",
                     "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Index", " ", "Maximum", " ", "von", " ", "t"}], 
                    "-", 
                    RowBox[{
                    "1", " ", "mit", " ", "Wechseln", " ", "aus", " ", 
                    "Schritt", " ", "von", " ", "t"}], "-", 
                    RowBox[{"1", " ", "bis", " ", "t"}]}], "*)"}], "\n", 
                    RowBox[{"index1", "=", 
                    RowBox[{"vormax1", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax1"}], "&"}]}], "]"}], "]"}], 
                    "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon1", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax1"}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], 
                    "*)"}], "\n", 
                    RowBox[{"max1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"tnasch1", ",", 
                    RowBox[{"Max", "[", "tnasch1", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "Maximum", " ", "von", " ", "t", " ", "mit",
                     " ", "Wechseln", " ", "aus", " ", "Schritt", " ", "von", 
                    " ", "t", " ", "bis", " ", "t"}], "+", "1"}], "*)"}], 
                    "\n", 
                    RowBox[{"nextindex1", "=", 
                    RowBox[{"max1", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu1", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch1", "[", 
                    RowBox[{"[", "max1", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon1", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch1", "[", 
                    RowBox[{"[", "max1", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Indizes", " ", "anpassen", " ", "falls", " ", "Fluss", 
                    " ", "durch", " ", "letzte", " ", "Zelle"}], ",", " ", 
                    RowBox[{
                    "zyklisch", " ", "durch", " ", "Anzahl", " ", "Autos", 
                    " ", "auf", " ", "Spur"}]}], "*)"}], "\n", 
                    RowBox[{"indexfl1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index1", "-", "m1"}], ">", "0"}], ",", 
                    RowBox[{"index1", "-", "m1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index1", "-", "m1"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index1", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m1", ",", 
                    RowBox[{"Length", "[", "tnasch1", "]"}]}], "]"}], "+", 
                    "index1"}], ",", 
                    RowBox[{"Length", "[", "tnasch1", "]"}]}], "]"}], ",", 
                    "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index1", "-", "m1"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index1", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "index1"}], "+", "m1"}], ",", 
                    RowBox[{"Length", "[", "tnasch1", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", "\n", 
                    RowBox[{"nextindexfl1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex1", "-", "m1"}], ">", "0"}], ",", 
                    RowBox[{"nextindex1", "-", "m1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex1", "-", "m1"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex1", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m1", ",", 
                    RowBox[{"Length", "[", "nexttnasch1", "]"}]}], "]"}], "+",
                     "nextindex1"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch1", "]"}]}], "]"}], ",",
                     "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex1", "-", "m1"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex1", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch1", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "nextindex1"}], "+", "m1"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch1", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", "\n", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nexttnasch1", "[", 
                    RowBox[{"[", "nextindexfl1", "]"}], "]"}], "<", 
                    RowBox[{"tnasch1", "[", 
                    RowBox[{"[", "indexfl1", "]"}], "]"}]}], ",", "\n", 
                    RowBox[{
                    RowBox[{"addfluss1", "=", 
                    RowBox[{"addfluss1", "+", "1"}]}], ";", "\n", 
                    RowBox[{"m1", "=", 
                    RowBox[{"m1", "+", "1"}]}], ";"}]}], "\n", "]"}], ";"}]}],
                    "\n", "]"}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "Falls", " ", "eine", " ", "der", " ", "beiden", " ", 
                    "Listen", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "0.5", " ", "in", " ", "zwei", " ", "Spuren", " ", 
                    "angeh\[ADoubleDot]ngt"}], ",", " ", 
                    RowBox[{"falls", " ", "Spur", " ", "leer"}]}], "*)"}], 
                  "\n", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tnasch2", "==", 
                    RowBox[{"{", "0.5", "}"}]}], "||", 
                    RowBox[{"nexttnasch2", "==", 
                    RowBox[{"{", "0.5", "}"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"addfluss2", "=", "addfluss2"}], ";"}], ",", "\n", 
                    RowBox[{"tnasch2", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"vormax1", ":", " ", 
                    RowBox[{
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], "-", 
                    "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"falls", " ", "zuvor", " ", "leer", " ", "0"}], 
                    ";", " ", 
                    RowBox[{"posvormax1", ":", " ", 
                    RowBox[{
                    RowBox[{"Maximum", " ", "von", " ", "t"}], "-", "1"}]}]}],
                     ",", " ", 
                    RowBox[{
                    RowBox[{
                    "falls", " ", "zuvor", " ", "leer", " ", "nCells"}], "+", 
                    "1"}], ",", " ", 
                    RowBox[{
                    "sodass", " ", "jeder", " ", "Wechsel", " ", "Index", " ",
                     "erh\[ODoubleDot]ht"}]}], "*)"}], "\n", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"vornasch2", "!=", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"vormax2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"vornasch2", ",", 
                    RowBox[{"Max", "[", "vornasch2", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    RowBox[{"posvormax2", "=", 
                    RowBox[{"vornasch2", "[", 
                    RowBox[{"[", "vormax2", "]"}], "]"}]}], ";"}], ")"}], ",", 
                    RowBox[{"vornasch2", "==", 
                    RowBox[{"{", "0.5", "}"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"posvormax2", "=", 
                    RowBox[{"nCells", "+", "1"}]}], ";", 
                    RowBox[{"vormax2", "=", "0"}], ";"}], ")"}]}], "]"}], ";",
                     "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Index", " ", "Maximum", " ", "von", " ", "t"}], 
                    "-", 
                    RowBox[{
                    "1", " ", "mit", " ", "Wechseln", " ", "aus", " ", 
                    "Schritt", " ", "von", " ", "t"}], "-", 
                    RowBox[{"1", " ", "bis", " ", "t"}]}], "*)"}], "\n", 
                    RowBox[{"index2", "=", 
                    RowBox[{"vormax2", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax2"}], "&"}]}], "]"}], "]"}], 
                    "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon2", "[", 
                    RowBox[{"[", 
                    RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", "posvormax2"}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Position", " ", "Maximum", " ", "von", " ", "t"}], " ", 
                    "*)"}], "\n", 
                    RowBox[{"max2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"tnasch2", ",", 
                    RowBox[{"Max", "[", "tnasch2", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "Maximum", " ", "von", " ", "t", " ", "mit",
                     " ", "Wechseln", " ", "aus", " ", "Schritt", " ", "von", 
                    " ", "t", " ", "bis", " ", "t"}], "+", "1"}], "*)"}], 
                    "\n", 
                    RowBox[{"nextindex2", "=", 
                    RowBox[{"max2", "+", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselzu2", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch2", "[", 
                    RowBox[{"[", "max2", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}], "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"wechselvon2", "[", 
                    RowBox[{"[", "t", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "<=", 
                    RowBox[{"tnasch2", "[", 
                    RowBox[{"[", "max2", "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}]}]}], ";", "\n", "\n", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Indizes", " ", "anpassen", " ", "falls", " ", "Fluss", 
                    " ", "durch", " ", "letzte", " ", "Zelle"}], ",", " ", 
                    RowBox[{
                    "zyklisch", " ", "durch", " ", "Anzahl", " ", "Autos", 
                    " ", "auf", " ", "Spur"}]}], "*)"}], "\n", 
                    RowBox[{"indexfl2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index2", "-", "m2"}], ">", "0"}], ",", 
                    RowBox[{"index2", "-", "m2"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index2", "-", "m2"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index2", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m2", ",", 
                    RowBox[{"Length", "[", "tnasch2", "]"}]}], "]"}], "+", 
                    "index2"}], ",", 
                    RowBox[{"Length", "[", "tnasch2", "]"}]}], "]"}], ",", 
                    "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index2", "-", "m2"}], "<=", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{"index2", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "tnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "index2"}], "+", "m2"}], ",", 
                    RowBox[{"Length", "[", "tnasch2", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", 
                    RowBox[{"nextindexfl2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex2", "-", "m2"}], ">", "0"}], ",", 
                    RowBox[{"nextindex2", "-", "m2"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex2", "-", "m2"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex2", ">", "0"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"m2", ",", 
                    RowBox[{"Length", "[", "nexttnasch2", "]"}]}], "]"}], "+",
                     "nextindex2"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch2", "]"}]}], "]"}], ",",
                     "\n", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nextindex2", "-", "m2"}], "<=", "0"}], " ", "&&",
                     " ", 
                    RowBox[{"nextindex2", "<=", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "nexttnasch2", "]"}], "-", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "nextindex2"}], "+", "m2"}], ",", 
                    RowBox[{"Length", "[", "nexttnasch2", "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\n", "\n", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nexttnasch2", "[", 
                    RowBox[{"[", "nextindexfl2", "]"}], "]"}], "<", 
                    RowBox[{"tnasch2", "[", 
                    RowBox[{"[", "indexfl2", "]"}], "]"}]}], ",", "\n", 
                    RowBox[{
                    RowBox[{"addfluss2", "=", 
                    RowBox[{"addfluss2", "+", "1"}]}], ";", "\n", 
                    RowBox[{"m2", "=", 
                    RowBox[{"m2", "+", "1"}]}], ";"}]}], "\n", "]"}], ";"}]}],
                    "]"}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], 
            ";"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"Clear", "[", 
          RowBox[{
          "nasch", ",", "nasch1", ",", "nasch2", ",", "tnasch", ",", 
           "nexttnasch", ",", "tnasch1", ",", "tnasch2", ",", "nexttnasch1", 
           ",", "nexttnasch2"}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"Dichte", " ", "und", " ", "Verkehrsfluss"}], "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"funddata", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nCar", "/", "Zellen"}], ",", "addfluss"}], "}"}]}], 
             "]"}], ";"}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"funddata", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nCar", "/", "Zellen"}], ",", 
                RowBox[{"addfluss1", "+", "addfluss2"}]}], "}"}]}], "]"}], 
            ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"funddata", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Gesamtfluss", " ", "durch", " ", "Zeit", " ", "teilen"}], 
       "*)"}], "\n", 
      RowBox[{"funddata", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"funddata", "[", 
            RowBox[{"[", 
             RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"funddata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}], "/", "tMax"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "funddata", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"PlotRange", " ", "f\[UDoubleDot]r", " ", "fundplot"}], "*)"}],
       "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Modell", "!=", "\"\<twolanesNaSch\>\""}], ",", 
        RowBox[{"range", "=", "0.9"}], ",", 
        RowBox[{"range", "=", "1.5"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Fundamentalplot", " ", "mit", " ", "density", " ", "und", " ", 
        "addfluss"}], "*)"}], "\n", 
      RowBox[{"fundplot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"funddata", ",", 
         RowBox[{"ImageSize", "->", "Medium"}], ",", 
         RowBox[{"PlotRange", "->", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "range"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Dichte \[Rho]\>\"", ",", 
            "\"\<Zeitliches Mittel des Flusses\>\""}], "}"}]}], ",", "\n", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Orange", ",", "Yellow"}], "}"}], "]"}]}], 
         ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{
           RowBox[{"ToString", "[", "Modell", "]"}], "<>", 
           "\"\<: Fundamentalplot mit p=\>\"", "<>", 
           RowBox[{"ToString", "[", "p", "]"}]}]}], ",", "\n", 
         RowBox[{"LabelStyle", "->", "White"}]}], "]"}]}], ";", " ", "\n", 
      "\n", 
      RowBox[{"Return", "[", "fundplot", "]"}]}]}], "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8995695063052354`*^9, 3.899569525205841*^9}, {
   3.8995699175539665`*^9, 3.8995699296681376`*^9}, {3.899899237293138*^9, 
   3.899899250841441*^9}, {3.8998995164675903`*^9, 3.8998995280537086`*^9}, {
   3.89989974498818*^9, 3.89989979712537*^9}, {3.8998999435001626`*^9, 
   3.8998999497126837`*^9}, {3.899900212405254*^9, 3.899900220688544*^9}, {
   3.8999038843638983`*^9, 3.899903887116536*^9}, {3.8999042748613787`*^9, 
   3.8999042960879498`*^9}, {3.899906492158068*^9, 3.8999065053977814`*^9}, {
   3.8999065523304653`*^9, 3.899906557637895*^9}, {3.89990659659137*^9, 
   3.899906600936808*^9}, {3.8999066503529058`*^9, 3.899906663208034*^9}, {
   3.899906703036118*^9, 3.8999067254352665`*^9}, {3.8999074266834555`*^9, 
   3.899907512756282*^9}, {3.8999076341314454`*^9, 3.899907638097982*^9}, {
   3.8999076796585484`*^9, 3.899907759937767*^9}, {3.899907804642826*^9, 
   3.8999078114748955`*^9}, {3.899907946183217*^9, 3.8999079516345234`*^9}, {
   3.89992007756532*^9, 3.8999200808687496`*^9}, 3.8999246947641497`*^9, {
   3.8999247252197495`*^9, 3.899924805125222*^9}, {3.899924907598276*^9, 
   3.899925037744503*^9}, {3.899925074784424*^9, 3.8999250759123154`*^9}, {
   3.8999779949394083`*^9, 3.8999780089779367`*^9}, {3.9000020387403984`*^9, 
   3.900002046148573*^9}, {3.900002077309924*^9, 3.9000020932048435`*^9}, 
   3.9000021828977413`*^9},ExpressionUUID->"a5b60d5a-5222-4cce-94d6-\
a55faf45c974"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fundplot", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.1", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.15", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.2", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.25", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.3", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.5", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fundplot", ",", 
    RowBox[{"FundamentalD", "[", 
     RowBox[{"\"\<NaSch\>\"", ",", "0.75", ",", "0"}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"fundplot", ",", 
     RowBox[{"FundamentalD", "[", 
      RowBox[{"\"\<NaSch\>\"", ",", "1", ",", "0"}], "]"}]}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"fundplot", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "9", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"m", "+", "2"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8995695429472656`*^9, 3.8995695469690742`*^9}, {
  3.8998873619177823`*^9, 3.8998873793171015`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1ab7f740-9d76-4563-b25f-b4771fd68594"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlWH1olWUUvyUYCAWBUDAwCowCoyAwEMZjEBQIhUJgEBiLggqpQAgUBCOh
MJAsjIqFpTRKGq1mrtTmnNvc3PRu98673bvd3e/vjxAMBIPu8/zO+R24Pf+8
nPc8z/k+v/O878N97+564+5IJPLEXZGIf3avl3oqw4defMcd2Dj4fHb/Fw70
AaFPyfMj0uAfcV9/5deP7v6wPnMbEiff691wlnIaO0c2Ha4PueIDOw4OFb50
nto58pec/4Y0nt+6p8MaF3nfufFbj7169NKEmzy2Z8vtie9F3zTtUPqp43f6
pp/8wWX3e8aM6BsQuddop9LQf9q93+stnnPr+rdG31r3s+iPyb5B0s90uP1b
f3HBvURM7BsSO+L08yF/bNOi2PurxCPhTsTWb9t74jfycW7YBfW9SfdyWGfE
zmXx53cXth9OMa7h2Ma0+HdW7Ey70d03j2weHXGdYHUitiZy/iC9L7l94N59
f7pd4UBG/D8ndmfd42HjefcCAijxuCDxzLn0ql8XuF/zBvtz7nPv7rFR7ke8
LpI+5aNw8qLoKUj8xtzcrF8F13Gm49GY+FcSPWOS/6J7xbu3+5LoLUl8jda6
QZzKEu9x8b/s7gsBuEwa8b8s8ag4H42eitHIx4TYXWEdwq6q5GeS/BCu/kmH
bqqIHVOkPwhryv3jxdyqSP6mqA/PK5SHfF7heR/dPVumeV7rXs/f0/E2tn6G
+5HvGcZT+0LlI/9XGa/z5/y6yvggT7OUF9w9Psv9qI856tc+Uj7qZY76doQE
X5P6qrIPg3mDZfdocPi6ezOsktTTddoDO6KUj/qKSh4Lbm9IeJT2Qm+U9RHC
kTQa9TdPfbBrnnzU4zzjd8aXx/A89aMOjH4krAXKQ70usH6DG0cXuB/1a/x/
fXjvLLA/FHdU/9sh4DHBn7zUd0zwpEhcUv2o9zjlPxdWnP2muKX2BHeH4pLH
ovRDnPIVt1Qe+mOR/E83+wQu0l7sW2T/h/K9vUj96J8bPA+7bzCf6Cfjx4O7
xldc1Xg969O7PcH4oN8S3I86Swie5qX/EsSv0A49S5SHul6SPsu6Tz72a0ny
mJP+XJI85aUvl+gv+nWZ9rzu09u3THsU53Eu41DOy7QP/Zzkfp0Tai/6O0n9
p3/yK0n9eBr9YGjAFPWh/1PSJxnOGcV/4EGKeB/K+Waqa16sUP5rweEVngde
rHA/8r7Cc8CPVZ4P7m5bpX+oQ6NDegdWu+bRKu3XuajxBt6k6e+Hvn0PGa1z
U+dhu+VXWvAjI3i0Rvk6R9U/4NMa34f0Tq/RbpWjfqO+MuQDv4xWO1Qe8CxD
Oai/DPPa7Tfq0c6jPEy/+q3ngX9Z1hXq1Wj1U+sC9Wt5Bz5mu+4bth94aXlH
fZt8rQvte9R7jvKBpzn6p3WgfQN8NRr9YOe1T5VGf+RoH/DX6kzrSu0DHlsf
oX/yrBvtO7Uf/ZTnfuB1njiofa04Afw2PvrN+FrHKh/9Z/uB7wX6o7ilNPDe
cBL9abjWjUPo1wLlYx4YrbitcwDzocC5jH4uUp/its4x9LfxMT+KlK9zR2nM
E5s76H+bczqHdA4DD4qca5g3xte5pPcOzJ8S9wMvSrRP56jygR8l6sd8KvHe
o/cGnfOYVyX6D3wp/e8eo/cU4E2Z9xDMszL16T1I7cd8s/PAozLveXqv0nsc
8Mn2Y/4ZrfcmPQ+8snsU8KrCeOq9T+/FwKsK7QNeGV/vgcoHXhkNvDJ93fdc
4FWV93zgVZX79V6p8QVe2T0TeFXt+h6s0j7gldHAK9On936lgVc1xgt4VeN5
4IjxgVc1fncAr4xG3dRYT8Ar4wOvTD7k1mgP8KrGeAGv6uTjWed3HvCqzu8s
4JXxgSN16gdeGR94Ved3Keq0zu9C4JXtB141aA/eN6gfeNXgdxPwqsHzsKNB
+cAro4FXDX73Aq/sPMq5wf8AwKsmzwNnmuQDr5r8zwC8atJf5KnJ73jgVZP/
AYBXth95a/K/AvDK9gOvjA+8avG/CPCqRXuAVy3uB17ZfuBVi/4Ar4yPp50H
XhkNvGrxPw78aFM/8Mpo4FWb+4FXbeoDXhkfeNXmfyXgVdvp/yjglfGBV8bH
+pv0fxbyR8M=
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {193.5, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
nwKvTMb4m/L/4bJRyQ==
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.1\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {580.5, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlmHuI1UUUx7cEA6EgEAoEo8AoMAoCA0HGICgQCoXAQDCMggqpQAgUBCOh
MJAsjArDUpKSpC1NS23d9bnq6q77uLt3X/f93rshGAgG7cxnzndomz92mTtn
zmvO+czv93t40zvrXr+7o6Pjibs6Ovz/+eOlJbWjO158221bfOT5/NYPHfNt
cX5Qv9uc9V2utfbE0p3NTnd/GJ9qjtznblHmwLurFh135QfWbO8sfeG++tKP
3+P+r6N8t/N/1574Ju47F/V9q/mFPRuX3z7/nebmB/ovuqf23tnU++T3Uc+1
aO+Qe2+Vl+iLdn/QOvYPuxfyW+c0DbgF+1b0v7ngJ82RO+KC+syge2Zudd+K
n93TYQxG/zrd7p5bj23YfUNxe68WH8lEf3+Jfg65/YMLV27e/6s768V7huPv
R926YGjUvRzGMc2J5zf3+AZvYUJ5/NtvvzUa4zvuQnirsq5r/c1dy7pOSN7y
bPMt2dWH7t3yR8zHZIz/pAvLG6aj3CnNycfpaC/npib9OB3zk4/5+TPaL7jP
fLh7uiRPvs7EvOTdQZ/GA2di/ooxf93aPxfMXETd0Y+S6oL8FtwrPrz1PbJP
fnskj96z0ke+z2r/fSEB5xzbC6ojW/fZWFI753xUS3cW43mcj3nMx3M7L/uc
zwXFG9K174LWrS6pn6J7P4yLygfnd1H+cu6X5B/neUn2fXY3Lu9V/vi9N+7L
uXvmoh1ceFn6Oe/Lige9lxUv539F/p466ccVxUNer8q/EO7eq/KH+uhTfNZn
5g/10if5NeGAr0mf9aH592gI+LrsU0/XlQ8o1a859dUv/ZvDgfcrHuqtX/pC
OrJpTv0NqN6t722dehxQPMd8eRwdiHpzMc8Dsv9IGDfUb9RrmhsnLP/U7w3p
+8en906aG2dM/1sh4WlOfQ9K3jhl8VDvQ7L/XBhDyr9xibzmXAi3c0j76Ych
2XsoHNRwPLep2B/Dsv/JMn+Aw+KLcc7WQ/neTvvpnxEX3Fg85d4IY8T1XfVj
IvbTiM5zKIQ7Iv30V0bn86w/3tUZ+U+/ZWTPuGz/6b+M4g/tsGRU/hiHzd7H
H/kxGut1PPbnqPJrXLb6oV/HxOfX/PFuGtN+8jomfynnMflDP2eVP9NDOrKx
v7Py7/CPfmQVr8mZXw+GBkx26f9x7Te/LP/wIK2Hcr45Lv0Wt/n3agh4Quvw
YkL67L/FAT8m9XsId+Wk1uefczjeQ8lP+JLk7dzML3gzpfg/8O27Y0ry5qfl
Y7btR5rDo2ntt3Myf+DTtPwJx9s7Lft2jraf+sppP/zKqe6tjq3u4FlOfUr9
pfl8TlCPST/lkftfXVp88C+vPqVe8+oP6zuTp37z0g8fk7xxwvyBl0me+k7r
dk+Zf9R7QRyDpwXZN24Zp+Fr4hj9UJA946yt0x9JP/wtKP92r1g+4HGSp3+K
urfsHrZ7hn4q6l6A10XFa/ecrcPvouzTb2nd7lW7N+i/ovyB7yXl47/PQYOR
9yXJ058l+U9eSoqXfk37uQ9K8oc+LSmf3A8l+Uc/l6Wf+6Ks5wj6uyz93B9l
+Ue/p/3cJ2XFR/+ndfwuyz48SPa4b8p6boAPFc25fyp6boEXFT1XcS4VnS/8
qMge91Nax6+kj/uqIn/gS0X5pE6rkoc3VT0Hcp9VtR/+VJU/7rckD4+q0k9f
Jv3wqarnQO6/quIlLzXFA69q0g+vavOe82p6TodXNfkLr2qyh960H17VZB9e
1fTcDBdqeq6HV3U9h8OruuqBOqnLPrxKc3hVl37s1uU/vKrrvQBeJXnk6nqP
gVcNycOrhvyDVw29J8GrJA+vGtJHXTWUD3jVkH/wKs3Ja0P5gVcNvSfCq6bm
yDUlD6+aeu+DV035B6/SOrxqyl941Zz3ntxUvPAqycOrlvxBb0v74VVL9uBV
S/7iV0vv8fCqpfdceNXSdwF4ldYp55beu+HVjN7b4dWM9sOrGcnDqxn5Sx3P
yB94ldbhVdJPXczoOwq8SvLwKtmHV23ph1dpDq/a+m4Cr9IcXqU5vGrLHv/b
+k4Dr9qyD6/a876zzEoeXqU5vEpzeDWreOHVrPyBV2kdXs06+x4Fr9IcXiV5
fv1L6/8CnepXKw==
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.15\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {967.5, -119.58957682310464}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdmHuIVVUUxqcEA6EgEAoEo8AwMAoCA0G2QWAgFAqBgWAYBRVSgRAkBEZC
YSBZGBWGpSQlSVOalpo6PkcdnafznrnPmXvnPiYEA8GgOfu317fw7n8u6+z1
/PZa3z7nPrrpnXWv39vW1vbkPW1t2W/remlR5fC2F98OWxceWp3/4OOAvDUc
W7y9tvbYd3qOfCjt7wj1tdmT9vBgXJ+HBYP73l254GjS/1Jy+aE1H7aXvkrP
Dyf7b8MzcZ1VHJPx9304e2vphp0d58OFXRuX3T7/g2T87E/+L4and9/Z1PnU
j2FddHQpxTsQvvk6W53p96dAtd0p/sHwxJy3W0uvhnl7lne/Oe+XVE+P6uT3
Wnh2bnfP8l9Tfn0pv/aUR79wsH3y/S3lOxD29s1fsXnv75INB/IfDC/HdSRk
TxceGkz1/BEyaXV+RDiaPvUdTfmPhVPrb+5YcupYiG4XTqR6/0y/w2HLyKoD
92/5K0T1DZOp/uOy5/eE9sHjZMIrFybGs3Uy7M+i78slXP4O/2bl3MqFL7Jy
d52SPnidTueRS3anZQ9+ZyTPFTNX0Rn5A88zKc5EeCUrb32H9MG3Q/vWNxYf
vM+GlRGwQnggAnAu4ZFP+J+TvwyNRZVz4b1oMJ7O43zKI6++M3+czwXtR7j2
XJA/60vz935cF5Uf53dR9ta3Vj/neSm8QAOEDN2NyzpVr/U1dRfDfXPV9s2/
rPw478vCHzeX1R+c/xX5P3E8W1eUv82FybHc3VeVH/3RpX3q7JJ/+qVL+a6J
B3xN9jZXtv94LPi68KGfrqsfbW7v7i+XN8cD7xbe5OX7EY6RbvU7/dcjfXDo
UTz6sUf1Hcna43CP6jOesHoei6tX+vSry9Htzl7Z07+9yu+/DN47vcrPeMTy
eSsC3tfS333iB2ihT/7p937V93xc/ak/RsRbXVezNRZiue2+zzz0K/9HsmNa
PNAyHwPK97Ml2QEOKD/jOeOf2L633Z75uZHwGwpvxOUy83RD9fXHcm8oX+NB
q/e57HhXDYo/mbdBxbPnd/PnoPKP47BoKM2L/5r/Tz/J1lCIMGwfTfM5JLws
b8uXeR2W/Fp2vJuGlb/hYvnQzsPyzzyPSN/i2C/z7XEP/pytEeFocU3/4TiA
ozpH5n9U+hbXcIIPRpVfbOebo8rHcDP/r8aCx4Q3fDEm/2ZnMvzh5xLLXTEu
XFrPLR7vgXH1Ffwyrvh2ToYHfDOhPv8oG99tE9I33rFznm1ma0Lx4aNJ7dsc
Gn7w06Tyi8fbOak5tDkwfforp3zgL+cF42nDGz5zffovJ/xa55J+zKk+2iPX
Mlc58Rz8l1c8+jUv/OxesHroX5fhx7zyt3vV4sGXLtPfbn/3vTeU+r2gfODT
gvTtXjPehV8Lis88FMSbPHd75qPQ8n5WEB6U6/7h44LuNeanKNnuXdNnnorK
B74uyj/zVVQ+8HdR9xrzVlR/o+f6zJ/7h99LukeZx5Luefi+pHuQ+XSZvirJ
P/NaEj7cByXVx/y6PvdDSfUxz2XJ9GVZ8Zjvsuy5P8p67wFX1+c+cX/Mv++D
k9vDB2XhwX1T1nsS/DCl8+P+mZI9fDGl86BvXR/+mJJ/7ifX57nrc19N6b0R
fvF9+nxa763wzbT0uc+mdZ7wz7Tw4H6b1nssfOT68JL7h59cn/vPZeqoCA/4
qiL84KuK3gvRcxm+qsgffFVpec92Gb6qqF74yuPBQxV9N8BXVX13wFdV1Qsu
VX0nwVdV2cNXVeFBnKrqha9cH76qKj/mwOPDVzP6boKvXIavZvQdA1/5Pnw1
IzyY6xnFh6/cHr6a0Xcddbs/+Mrt4aua8qfumvbhq5rs4aua8IOvXB++qql+
+MrtmeuavrPhK5fhq7q+e7Gr6zsbvqrrOxq+chm7uvKDr+qKD1/5PnxVF160
s+/DVw3Fh68aigdfuQxfuT5z3FA98JXrw1cNxeccGvrfAr5qCB/4qqH/TeCr
puLBV03tw1dN/W8CXzXlH77yffiq2fI/TlPx4Su3h6/cHtxmZQ9fzWofvppV
fvDVbLD/l+Ar34ev3B985TJ85fbwlcusfyT/D1w5KV4=
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.2\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {193.5, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlmHuI1UUUx7cEA6EgEAoEo8AwMAoCA0HGICgQCoXAQDCMggrJQAgUBEOh
MJAsjArDSpKSJEvLUvP9WHV133fd533v3b37CMFAMGhnPnO+B7b553fPnZkz
5/mZ+7uPrn939Rv3trS0PHlPS0t8zh4vL2gc2fbSO2HL/EMvlDZvD8hbwrGF
O5qrjn2t73nuz/M7JT+YxidZPpKfn4V5he82Lp/3e6g9tHLr4ernktn/Vdb/
l86ZWBU/ncn6vpF8cfe6JXcufBueSeOczj13e/HaXWcvhKf33F3f+tT3obQ5
TlzJ5x0I7y2PJ7aFL7+I4wfNc/7B8GL6oiPM2bu0/a05P4X9G+OG9mzPoZDM
LXSFZ2dm9y79OZ/bne07rHnsdBl7fwlvptEb9nXNXbZh369hdVLcpzgRj0J4
JY2jIX47/1Ah+/ObZItbcmd5f/bP5VNrbu1cdOpY9q8/+/tHeGImOrcXD4ZN
/SsO3L/pz5DEtSPZ/+M5PkN53YlsXzHH42SIUVi4YyAMD8VxMvwTw327qLyZ
vk+ju7tPaT/xOp3tKOW4ntY88Tuj/TPOzHh0JuejpLybfa9G99aczXqKOb5n
Qwrj/GHVhekj3ueyncPhgRSA89pP/M9rf4zGgobPk48L0md1ZjL5uaj4pnDt
vSh/ydcl6X8/jUuBbivm/F0KbdfiGMxxuZz9LuV8XtZ5MbrrlrTKH85p1fx9
M952zb2i+JLvK5q3urf95P+q5k8cj+Oq6gm/rikeyd0911Rf1Eeb8mV9ZvPU
S5vqZWVK8HX5jx3XFb/Hk8M3NE893ZB9fN+ueFFf7Vq/ISXc562PTU7h6G+X
f9RfR47jTXHA7KEeO7T/aCyPIx3yjzx1SN9jaXRqP/XaKfvTY5fPU7+d0vdv
DO/dTvUb9dyV49cX3k4B75K91LfPG3dMpt671T/Pp9Et/cYx41Fy93C37KMf
usWfR9LGHp1Pf/TI/48XxQT2yB/6xden8r3j6+mfXp1vnDT76adere9O7vaK
l/a0/c/F9K4oaD39VtD55of5T/8VdF5qhwV9Wm96Tf7owzj6tJ/+7JO/psfq
hX69qf2vx/Sudztmn0M535Rf9HO/ZPPL4kp/9+v7gz/G4evNLpMfTg04oDjT
/wP/i4vlGR74+lTOtwZ0vtWJPV9LDg+qzuHFoPRaXEw//BiSvuTusiHZa3Vr
56f0HnAZvgzJf+OszcObYXHjg9i+23zeOGh5m56KY1j2w6MR9aH1sXELPo3I
n5Te1hHpMy5Zn1FfRXEDfhVln3Hb7INnRfU19VdUvIzLZh/16OspD19vHDZ7
4V9J+6nXkuw1rptM/ZYUH/jo8ux7D176PPVdEmftnrPzqfey7hF4WtZ68lzW
evhalr/0g8ucW5b99Ifvh79l5QN3y8ovPC4rP/RPRfagp6J5+qmiewdeVxQP
+qCifMDvis6j3yq6d/HD5+m/iu5x+F7V+eyr6ncBvK+qn+jPqvQRF99Pv1YV
P+6DquJD/1Z1PveDz9PPNcWHOqvJH/q7pvxyf9QUL76vyR7uk5ryR//XdD5x
rMkfeOAy943rhw912cP9U5c+eFHX70L6sC574UddvwO5n+r63ca5LnNf+Xr4
Ulc98BxVvODNqPLHfTYqe+CPy9xvLsMjl+H6qM6HT6Oyj/tvVL/LiXtDMrxq
yH941VC80NNQPOFVQ/7Bq4beQ9DbkD3wqiF74VVD7xXwqjHrfXBM8/BqTPYS
xzH5B69chldjsoen74dXY3qPgFdjei/CDpfh1bhkeDUuffBqXO+F8MrXwyuX
4ZXvh1fjeu+DV76ePIzLH3jl58GrpmT8aire8Kqp+MKrps6DV03ZA69cH7zy
9XCjqfdaeOUyvJqQjB8T2g+vJuQPvJrQezj7fD288vXwyvXDK5cpZ9cHryb1
vwC8mtT/FvBqUv8zwKtJ7acvXIZXvh5eTcpe6t7Pg1e+H175PLyakgyvprQe
Xk3pPHg1pf9R4JXPw6sp+cc61w+vfD+8chk/pqUPXpm8PfNqWuvhlc/DK5fh
lcvwajrY/1Hwyufhlcus+lvr/wOQ00lV
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.25\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {580.5, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
vgRfuQxf+Xn4yvfhK5fhK5dZf0v+D4AgRS0=
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.3\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {967.5, -358.76873046931394}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdmH1olVUcx1eCgVAQDAoGRoFhYBQEBoIcg6BAKBQCg4GxKKiQDIRAITAS
CgPJwqhYWEqjpNFq5kptbnObm5tu7uXufbt3997dl+0uhAWCQTvn85zvj+75
59nv+b2/fc999mjDu3vfuLempubJe2pq/LP6vFxXaD360jvuSG3zC+nDHzno
Iwn9hd63bT5W3tP2bcI/ntDN7sFwPnObUmcO7tx0oUqv1eUe2v1BS/ZL8dH/
JtH/S3aX9/i/OhJ737lnwulyPSf3b7vT/b3bGwSvJXbPin761N2Gvqd+EI2/
Jpc+7AX73ddf+fOje6L+ROfa1oHE/zl3dj2a1Jkht6Fx+9BbG36WfMyL5w33
7Dq3cfsvjmoNJfG1JPEOJ88W92IwMJzE+6vrWtu67nHMnR7ZuOPA6d9Ex7rw
HHWvhHNeNPn87ny09SduqW5Rn/wuuPA6NeLa990+vqW9Tf7J9w/3Zjjj7tDU
rqb7D/0pefK/KD51uST71ONyUv8RNzfrz2XFE/sW5T/36Z5slzz1uqL68ryi
+Khfh+q3nsx6Rh3uEW9285jmIPp71ae3r1P1ob6dSV1SmpMoT727lN8DoQBX
q+p/VfH5atQVjE8/umWf992Kj/70uPe8+sFBF8rV2KP6otcr+ffD6RWf/vUq
3v/P9WjSz2uql6/u/m190qe/fdK/bz3bkY39oul3v+zFuY79of/XJX/poj/X
VY+4J1E+pHtqQPaYj0HtQ6xD3BfmZVDyu0ODb6jfUS76fzwkfFN85snoaj/M
15DeHwgNNzrmEeVDOaaGquZvWPHF97G+zOOw/J/349E6rHjj++jnsXDsPfN6
S/yoF+vJ/Br9ry/vXZOP72Od3g4FH1G8zPeI5GPc0T/zPir958OxPKvzDum2
2JywD6OqX5zjOKfsx5jkP93iGzgmf3GPYlxhfO+MqQ7sz7jmLO5plGefjB4N
6Y4r3riXMf/nfHt3pRQv+2Z8n21tc0r1Yf9SijesQ92EaPI0+pOP/ZmQf/Zz
QvH/49Ndm6ja10nhwOu+vQ2TVfeR0YzzpOaXfZ4SHdLaOSXcYr+Nf+4nf6Zk
j+eU/D8cFnBa8uz/tPIL7T02LVwBD0w+jPNtkyfvGc3DayHhGdUfvJiR/OCA
PzOqF/gxq36EdHfMio+dWeUT2ttkfPDF6FCW2jn1G7yZUz4f+vU9OiccJy7j
r1b8MRo8mpf98KifVz3Ap3nVN7S3z+SRWxCf+VqQffBrQfWijsYHz0yf+VvQ
PUeeps88LlTh3YLmhfk0GvxLyz7zmlb8zHFa/WV+05pv8NH4xJ1WfcHLtO59
5tvk6bvJM+8Z5Q+eZhQv85/R7xTw1eTZh4zsgTMZ+WM/TB78NT7pZlQP8Dij
3yHsz6LioQ9Gs0+Lyhe8XpQ/9mtR9sBv02ffjAbeFtUP9s/44HtW+SJnNHif
VTzsZ1b6PLPKl33Nqr7cB6bP/po+90NWvwPZ55zmk/siJz77nVP+3B852Wdu
c/LPfZKTP/bfaPI0f+CB2eO+MX/gQ17y3D95yYMXef3O5j7Kyx/4kdfvau6n
vOIlT7PHfWV88CWvePCzJBq8WZI899mS6gf+GM39tqTvDvDI7HHfLSlf8Mlo
7j/zB14VFD94VdB3CnhVUP7sjdHgVUHxgFcF2ceu2QOvzB94VVB+4JXpg1dF
2QevirIHLhkfvDI+eFVUvDyL6jd4VVR9wCvjY7eo70jwqiQ+eGU0eFWqwquS
/INXJX1nglcl5Q9eleQPvCopH/DK/IFXJeUPXpXFJ6+y4gGvyvqOBq/Kige8
Kss/eFWWf/DK9MEro8ErswdeLVd9hy+LD14ZH7wyGrvL+r8CeLUsf+CV2QOv
TJ9xNnnwakV88GpF/4cAr1b0fw/wyvjglemDVyYPXpk8eLWi+MGrFcULXq0o
PvCqIhq8qkgfvKrIPnhlNHhVcfH/O+BVRfEhV5F/8Mrsg1dGM0ersgderYoP
XhkNXpk8eLUq/+CV8cEro8Ero8Erozl/i/4Pg0Yddw==
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.5\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {193.5, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdmH1o1lUUx1eCgVAQDAoGRoFhYBQEBsL4GQQFQqEQGAyMRUGFZCAECoKR
UBhIFkbFwmo0ShqtZq7U5t7d3HTbs+2Ze3n2vG7P9jybISwQDNq9n9/9Hvrd
f36cnZd7zr3nfO62Rxvf3ffGvTU1NU/eU1Pjvsn1cl25/fhL70RHa1tfyB35
PEI+GsvN8fdDyehPRl996daP0YN+fRpV93ZsPVFpUxy+7VHpoT3H2opfxPZ/
xP5fR080nOpe334pcl57O76Jv3/F8b6N/Xuj/tMHdtzp+y6O36U8nvGrJ3r6
zN3Gwad+kD37tUgOeeaOuB8Mxfufi3rWt29k0Bdtato5+tamnxWPPFqj9+q3
pL8/NBI9u6Ft2vmL9ie/NsUPdYd45Pur9GdTm3cdPPtb5KLVbxnQuezzG12N
XvHrfKKe32XP90LUfMgldCWu74Lid+6/fXJbZ4f2D+cc6j08s7vl/sN/yp76
L8o+3EOIz3lcVn6Zebcuyz/cU/D/zJV7ulMy53VF9YS4Qeb8uuI8B6ONYjYq
6kqcZ5fyf9WVt79b/pxvt84n/Dzky3n3KN4D/gB6lUf4eZDdadSVexP30ac8
Ql3Bj/vp18/9cTX1J+5rQPbv+2V5cn8D2i98/3+fV7W/O90DOwYlh3MLfvdt
VJvaPCSZ+x5SvHCOoV7u/5ryvHTRrWuypx+GJftyzwwn+mNE9YQ5CfnRLyPy
3+Mv+Lr86Z/r8n/cF3wj0U83pIdSo/Knv0Zlf9Bf+Kjqx25Ufe2PY2Y0Mb9j
yu9Ff0Am049j2v+8a4/2MZ0XccYU/zG/xuVPv45rTpxVw6nxBM9M/tcd791x
zS37prT/2/7AU6qX/k5pf59WOqX66PcJ2T/v14T24zuh+L7cNrNnHibEnUdc
GVsnZc98TGq/T7a5C5xU/sQxe9++dyYT8zOl+3zTr6nEPE2JqxO+3Cn5k1da
/s+5692d1nkwb2nl77xqW9OKz/yZvx+Humn500cmf/yRW9Oqh/mcVv3/uLDr
09qPeb2p+K+76200mXO6qf6gnU3PPM9I78erfkbxmW/Tn/vJrRn5M+8mP+wH
cFb2zP+s8vfXe2JW9vBgVvv5dr49q/PgOyf9a77gOcWDF6YfGXZrTvvDj3n1
iy9317zeRXgyL3t/vS3zOn/4Yv7erTaj/eBNRvoP3Pgez6ifiJtRvbfW3Mqo
v+DRgur1n4YF5QefFrSfv95Bs4dXWenpr6zqgV9Z5Ue/ZeUPz7KJ/jN78rZ4
9GM2wTuT6U+T4V9O9dCvJsPDnPKnf02GjzmdJ3nllB+8zGk/+tvs+Zo9/Z5X
fHiaVz70f17+8DWv3xuZh7x+b4O3ef3ex3yYHv7afpSbVz7wOK/zZX4KsqcP
C4rPPBWUL7wuaD/mq6D48Lugepg3iwfeCjo/5s/2h+9FydgVZQ/vTWY+i8qH
PIvKl3k1Pe9BUfkxv6bnfTA981ySzHthMvNdUj68H6Zn3ks6b94T0zP/pcT7
Ynp4UFI9vDclnQ98WNT58v4syh9eLKo+3iOT4Yf58z6ZjN2i/u7hvTJ/+GL7
kdeS7OHNkuLxni3JH/6YzPu2pP6HR6bnvQvxm2M+WXzeP9PDq7Lyg1dlnR+8
KsseXpUVD16ZP7wqJ/5uKStfeGX+8Mr84ZXZw6tl7Q+vllUvvFrWecKrZcWD
V+bPvsuKD69MhlcWnzgWH16tKH94taL48Mr08Mr08GpF+8Erk+GV+cMr08Or
FeUDryw+vKro73Z4VZEeXlXkD69MD69MD68qygdeVZQPvDJ/eGX+8KoqfzhQ
lR5emQyvqsqfb1Xx4ZXp4VVV+cArs6edzR5ercoeXq1qf3i1Knt4ZTK8Mhle
mT+8MhlemT28Wo3C/1/glenh1ZpkeGUyvFqTP7wyPbwyPbwyPXWbDK/WlC+8
Mj1zfEvx4JXJ8MpkeGUyvDIZXpkMr0yGVybDK5NZf0v+Dyo5F6s=
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=0.75\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {580.5, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlln9o1VUYh28JBkJBMCgYGAWGgVEQGAhyDYICoVAIDAbGoqBCMhACBcFI
KAwkC6NiYTkaJY1WM1dqc7/d3HJzm3dubu7apitNQ1ggGHTPebbPB9/OP1+e
+57v+Z4f7/uc+2DtmxtfubNQKDx6R6GQnrE9Xz3XvOu5N4q3847ijqrGZ8rb
39Xz9viehd8/Lt6b24fFluW7r2xoadTvPOuLs/et39k084mY9z9f6P/F/56M
96X6d+/bvOpm11dhPvXix/ffqu197OvwvYYFbi5+9mlq32h+fP+Q5rmkbvXg
a0u+Ey/2W1Y6uHXtsiPFJyvRutXfazzm16T+VzekN5o0H+b7g+ZzYHjpmi0H
fgzzb1b8hdwOazzW85Pii/NYfLK+I4q3brqxZ0Vri9bJ82etY9v4uoa7t/2i
8Vn/Uc37kZq97fMrj2n/2Y/j4qnJ1I7re/z+q+bzUVruvlb1Z79O6Hv1lV6l
gyfC+bZpfpXFVFbUpjjzatN+vZiWt6ldcfa3XfEncutQfrLfHep/T96AzpCX
nXo/7Ub1XGc4jy5xx/zKyg51aXzOp1uct6uuW+OxLz2Kv51bj+KcX4/mszFP
9KTinOdJzT/t7uZVvZoP59ur8e+qrHZ4aZ/G47z7lA/l7SnQF87/lPLw2NHU
Tmk88qFf88nL3d+vOPkxoPhb6Xi3msmXAc13fT7g3xRnXeaH84JPi8mn0/oe
bVBx8su8JR+4mXwz5+0YH9T6yb8hjf9s3qAhzZd8dPxwSo/mIY1Hfjr+UG5n
Qr6e0ffSbtbsNZO/7v9v2t5bjpPPw4q/njd8WPlAfjue061kJt9HxE/nZuZp
zsttGtF6qAfHH0ifXT6qOPUxqvgHK9IBjmr+1Iv75/S96f7Uz1n1fzU3M/V0
Vv1H8nLN1FdJ4z+VjnddSftDvTme3qpqLIX6czyXQ/WY3qcex9T//fdSG1N/
6tPxf9Jy5x2nXs+JX07HW2umLs/pfdLZTD2Pq38ur7XjilPf5kPfpub+1Lv5
/lyAE+H+Nufj3W3GBxMaP6fzjYngh/OKv5QXfF5xfGEe6E/N/fHHpOJ5uWsm
g08cz8fb4Dh+mVS+5EfVlPrjG/M7qXx3TQX/mK9fS82Mjy7o/bzcGjN+Mufj
7b2g+fDrdMgvM/4yk2/TwWeOk3+O4zcz+Tit75Mefp/8NOO/cshXMz4sh/w1
48eyvk8+O44vyyG/HcefZvL9ovrj04sh/8341Uw9+H186zj1Yca/7s9yHcfH
ZurndzF+NlNPZnxtpr7M+NtMvZnRm5n6M+P3mVCPM8H3jlOfjvN0nHp1nPvA
cerXzP1gpp5nw30xG+rbzP1hpt7N3Cdm6t/M/WLGB2buGzN+uBT+v5nxhZn7
yIw/Lml93E+O4xMz95UZv5i5vy6L8Y2Z+8yMf8zcb5fD/yXHue8cx0+Oc/+Z
aXPBV2Z8ZcZXZnxlxldmfGXGV2Z8ZcZXZnz1R/CVGV+Z8ZUZX5nxlRlfmfGV
GV+Z8dWf4f+fGV+Z8ZUZX5nxlRlfmfGVGV+Z8ZUZX10JvjLjKzO+MuMrM74y
4yszvjLjKzO+uhp8ZcZXZnxlJo/N+MqMr8z4ykw6m/HVX2J8ZcZXZnxlxldm
fGXGV2Z8ZcZXZnxlxlfXgq/M+MqMr8z4yoyvzPjKjK/M+MqMr64HX5nxlRlf
mfGVGV+Z8ZUZX5nxlZn2t/g/bUmNrg==
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{37.3924153248469, 0.6761167146721618}, {
        36.99251302083333, 0.5}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"NaSch: Fundamentalplot mit p=1\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {967.5, -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8998870062270575`*^9, 3.8998880119385614`*^9, 
  3.8998884621419916`*^9, 3.899889050358941*^9, 3.8999245026384077`*^9, 
  3.899971198392664*^9, 3.9000011983923426`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3f5d4551-24ab-47d0-8f46-ce2119ae1f9f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fundplot", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fundnasch60", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fundnasch100", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fundnasch200", "]"}], ";"}]}], "Code",
 CellChangeTimes->{3.899569567056322*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"51aa0a0c-0d53-462f-9044-f6caf6c78fb1"],

Cell[TextData[{
 StyleBox["An den Fundamentalplots l\[ADoubleDot]sst sich erkennen, dass, je \
h\[ODoubleDot]her die Tr\[ODoubleDot]delwarscheinlichkeit ist, desto geringer \
ist der H\[ODoubleDot]chstwert des Flusses.\nDie Diagramme zeigen, dass die H\
\[ODoubleDot]he der Peaks f\[UDoubleDot]r p=0.1 am h\[ODoubleDot]chsten ist \
und zwar fast bis 0.7. F\[UDoubleDot]r p=1 ist der h\[ODoubleDot]chste Wert \
des Flusses circa 0.012. \nMit einem Unterschied von \[CapitalDelta]p=0.05 \
zwischen den Plots unterscheiden sich die jeweiligen Peaks um 0.5 und mit \
\[CapitalDelta]p=0.1 ist der Unterschied auch ungef\[ADoubleDot]hr 0.1.\nEs l\
\[ADoubleDot]sst sich beobachten, dass der Fluss circa bis zur Dichte \
\[Rho]=0.125 linear ansteigt, weil die Anzahl der Autos f\[UDoubleDot]r die \
Entwicklung von Staus nicht gro\[SZ] genug ist. \[CapitalUDoubleDot]ber \
dieser Dichte entwickeln sich mehrere Staus und der Fluss f\[ADoubleDot]llt \
linear ab. Der Fluss ist 0 ungef\[ADoubleDot]hr etwas vor der Dichte \
\[Rho]=1.\nEine Ausnahme bildet p=1, wof\[UDoubleDot]r der Fluss fast sofort \
abf\[ADoubleDot]llt ab einer Dichte nahe 0.\n",
  FontColor->RGBColor[
   0.9568627450980393, 0.6470588235294118, 0.06666666666666667]],
 "\n"
}], "Text",
 CellChangeTimes->{{3.8995705289619255`*^9, 3.8995705400771027`*^9}, {
  3.8999765496448784`*^9, 3.8999765627696724`*^9}, {3.899976704736772*^9, 
  3.8999769373286214`*^9}, {3.8999770024537773`*^9, 3.8999770516055794`*^9}, {
  3.8999772654512243`*^9, 3.8999773610781956`*^9}, {3.89997739446277*^9, 
  3.899977403986769*^9}, {3.899977435404686*^9, 3.899977460833913*^9}, {
  3.8999775001258526`*^9, 3.899977522574977*^9}, {3.8999776658219748`*^9, 
  3.899977855468464*^9}, {3.8999980648218813`*^9, 3.8999980760597095`*^9}, {
  3.8999999311513147`*^9, 3.900000007503399*^9}, {3.9000000621082735`*^9, 
  3.900000072322072*^9}},ExpressionUUID->"a701f714-de62-4c3c-a86b-\
81330ddfdfbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["VDR",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"550726d6-f6e8-4b8b-9f6f-15bcb1c1f336"],

Cell[TextData[StyleBox["In diesem Modul wird das NaSch-Modell in mit der \
Velocity Dependent Randomization umgeschrieben. Dies bewirkt, dass die Tr\
\[ODoubleDot]delwahrscheinlichkeit abh\[ADoubleDot]ngig von der \
Geschwindigkeit ist. Sie ist f\[UDoubleDot]r stehende Autos um q h\
\[ODoubleDot]her als sonst f\[UDoubleDot]r fahrende. Dies soll ein Tr\
\[ODoubleDot]deln beim Anfahren simulieren. ",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.899569946867188*^9, 3.899569947188489*^9}, {
  3.8995700340922203`*^9, 3.899570162607607*^9}, {3.9000001926320724`*^9, 
  3.9000002007011476`*^9}},ExpressionUUID->"b0d6d391-94d1-47a9-8c74-\
499ffbd0b667"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Fundamentalplots", " ", "des", " ", "Velocity"}], "-", 
    "Dependent", "-", 
    RowBox[{"Randomization", " ", "Modells"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"vdrNaSch", "[", 
    RowBox[{
    "nCar_", ",", "nCells_", ",", "tMax_", ",", "vMax_", ",", "p_", ",", 
     "q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{
     "q", " ", "ist", " ", "zus\[ADoubleDot]tzliche", " ", 
      "Wahrscheinlichkeit", " ", "zum", " ", "Tr\[ODoubleDot]deln", " ", 
      "beim", " ", "Anfahren"}], "*)"}], "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos", ",", "vAutos", ",", "dAutos", ",", "xvdr", ",", "vvdr", ",", 
       "dvdr", ",", "minAuto", ",", "maxAuto"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Erzeugen", " ", "Listen", " ", "f\[UDoubleDot]r", " ", "x"}], 
       ",", " ", 
       RowBox[{
       "v", " ", "und", " ", "d", " ", "f\[UDoubleDot]r", " ", "jeden", " ", 
        "Zeitschritt"}]}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"xvdr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"vvdr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"dvdr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Autos", " ", "haben", " ", "Position", " ", "x", " ", "und", " ", 
        "Geschwindigkeit", " ", "v", " ", "zum", " ", "vorderen", " ", 
        "Auto"}], "*)"}], "\n", 
      RowBox[{"xAutos", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "[", "nCells", "]"}], ",", "nCar"}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"vAutos", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", "nCar"}], "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "Anfangsaufstellung"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xvdr", ",", "xAutos"}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vvdr", ",", "vAutos"}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Verkehrsregeln", " ", "aus", " ", "NaSch"}], "-", 
        RowBox[{"Modell", " ", "implementieren"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", "tMax"}], ",", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Anfangszustand", " ", "ist", " ", "i"}], "=", "0"}], ",", 
          " ", 
          RowBox[{"insgesamt", " ", "tMax", " ", "Schritte"}]}], "*)"}], "\n",
         "\n", 
        RowBox[{"(*", 
         RowBox[{"Oft", " ", "verwendete", " ", "Variablen"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"minAuto", "=", 
          RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto", "=", 
          RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Freie", " ", "Zellen", " ", "d", " ", "vor", " ", "dem", " ", 
           "Auto", " ", "bis", " ", "zum", " ", "vorderen"}], "*)"}], "\n", 
         RowBox[{"dAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
              RowBox[{"nCells", "-", 
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dAutos", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
             RowBox[{
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
             RowBox[{"nCells", "-", 
              RowBox[{"xAutos", "[", 
               RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", 
              "1"}]}], "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R1", ":", " ", "Beschleunigen"}], ",", " ", 
           RowBox[{
           "falls", " ", "vMax", " ", "noch", " ", "nicht", " ", 
            "erreicht"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R2", ":", " ", "Abbremsen"}], ",", " ", 
           RowBox[{
           "falls", " ", "v", " ", "gr\[ODoubleDot]\[SZ]er", " ", "als", " ", 
            "Abstand", " ", "d"}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"dAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}], ",", 
              RowBox[{"vAutos", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", " ", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{"R3", ":", " ", 
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "mit", " ", "Wahrscheinlichkeit", " ", 
            "p"}]}], "*)"}], 
         RowBox[{"(*", 
          RowBox[{"Randomization", ",", " ", 
           RowBox[{"q", "=", 
            RowBox[{"p0", "-", "p"}]}], ",", " ", 
           RowBox[{
            RowBox[{"p", "+", 
             RowBox[{
             "q", " ", "wahrscheinlichkeit", " ", "dass", " ", "sie", " ", 
              "tr\[ODoubleDot]deln", " ", "falls", " ", "die", " ", "vorher", 
              " ", "v"}]}], "=", 
            RowBox[{"0", " ", "hatten"}]}], ",", " ", 
           RowBox[{"p", "=", 
            RowBox[{
             RowBox[{"wahrsch", ".", " ", "v"}], ">", "0"}]}]}], "*)"}], "\n", 
         RowBox[{"vAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "==", "0"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", 
                 RowBox[{"p", "+", "q"}]}], ",", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], ",", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
                RowBox[{
                 RowBox[{"vAutos", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"vAutos", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "-", "1"}]}], ",", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Wenn", " ", "Auto", " ", "steht", " ", "ist", " ", "p", " ", "um", 
           " ", "q", " ", "erh\[ODoubleDot]ht"}], "*)"}], "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{"R4", ":", " ", 
           RowBox[{"Fahren", " ", "um", " ", "vAutos", " ", "Zellen"}]}], 
          "*)"}], "\n", 
         RowBox[{"xAutos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"xAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "+", 
                RowBox[{"vAutos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Abspeichern", " ", "in", " ", "ausgegebene", " ", "Variablen"}], 
          "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xvdr", ",", "xAutos"}], "]"}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vvdr", ",", "vAutos"}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Letzter", " ", "Durchlauf", " ", "der", " ", "Schleife", " ", 
            "speichert", " ", "vorletzten", " ", "Abstand", " ", "ab"}], ",", 
           " ", 
           RowBox[{
           "deshalb", " ", "au\[SZ]erhalb", " ", "Schleife", " ", "letztes", 
            " ", "Element", " ", "abspeichern"}]}], "*)"}], "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dvdr", ",", "dAutos"}], "]"}], ";"}]}], "\n", "]"}], ";", 
      "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Erneute", " ", "Berechnung", " ", "f\[UDoubleDot]r", " ", 
        "Endposition"}], "*)"}], "\n", 
      RowBox[{"minAuto", "=", 
       RowBox[{"Min", "[", "xAutos", "]"}]}], ";", "\n", 
      RowBox[{"maxAuto", "=", 
       RowBox[{"Max", "[", "xAutos", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Berechnen", " ", "Abst\[ADoubleDot]nde", " ", "im", " ", "letzten", 
        " ", "Zeitschritt"}], "*)"}], "\n", 
      RowBox[{"dAutos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto"}], ",", 
           RowBox[{
            RowBox[{"xAutos", "[", 
             RowBox[{"[", 
              RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
           RowBox[{"nCells", "-", 
            RowBox[{"xAutos", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"nCar", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dAutos", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "<", "maxAuto"}], ",", 
          RowBox[{
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"nCells", "-", 
           RowBox[{"xAutos", "[", 
            RowBox[{"[", "nCar", "]"}], "]"}], "+", "minAuto", "-", "1"}]}], 
         "]"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "in", " ", "dvdr"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dvdr", ",", "dAutos"}], "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"xvdr", ",", "vvdr", ",", "dvdr"}], "}"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995695911552515`*^9, {3.899896560776352*^9, 3.8998966815259285`*^9}, 
   3.899896798367898*^9, 3.8999000032860374`*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"a2d3b72e-b94a-4d30-b74d-64de6106ab33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plots", " ", "zum", " ", "Untersuchen", " ", "des", " ", "VDR"}],
     "-", "Modells"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"vdrplots", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"vdhisto", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"60", ",", "100"}], "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.15", ",", "0.2"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"vdhisto", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"60", ",", "100"}], "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.15", ",", "0.4"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"dichteplot", "[", 
       RowBox[{
       "\"\<vdrNaSch\>\"", ",", "100", ",", "0.15", ",", "0.2", ",", "10"}], 
       "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"dichteplot", "[", 
       RowBox[{
       "\"\<vdrNaSch\>\"", ",", "100", ",", "0.15", ",", "0.4", ",", "10"}], 
       "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", "0.15", ",", "0.2"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"vdrplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<vdrNaSch\>\"", ",", "0.3", ",", "0.2"}], "]"}]}], "]"}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995696009221945`*^9, {3.89988870722795*^9, 3.899888716473089*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"79664507-1a56-43e4-892e-d2ce0d5bd172"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vdrplots", "=", 
   RowBox[{"Flatten", "[", "vdrplots", "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"vdrplots", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"m", "+", "3"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}], "\n", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"vdrplots", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "9", ",", "11", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"m", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{3.8995696130179033`*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"d83d6a56-0933-4cad-a803-84898e4902c5"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684845`, 
                  98.60419607176115}, {-66.09476162639766, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6100968, 0.04889, 0.01107652], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176115, 
                  133.36077662283748`}, {-73.43928212101476, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8516958, 0.1729962, 0.00962234], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-88.12832311024894, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499007`}, {-66.09476162639766, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9108294, 0.27453859999999997`, 0.020955220000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499008`, 
                  237.63051827606637`}, {-95.47284360486603, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 17}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606635`, 
                  272.3870988271427}, {-139.53996657256863`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8854864285714286, 0.23102042857142857`, 0.01609827142857143], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  75.4331423710436}, {-64.62585752747424, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8432481428571429, 0.15849014285714286`, 
                0.008003357142857142], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{74.98314237104361, 
                  87.01866922140243}, {-56.30206763357486, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.987127, 0.5308512857142857, 0.0596497], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{86.56866922140242, 
                  98.60419607176118}, {-97.92101710307173, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8854864285714286, 0.23102042857142857`, 0.01609827142857143], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  110.18972292211993`}, {-64.62585752747424, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8854864285714286, 0.23102042857142857`, 0.01609827142857143], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{109.73972292211991`, 
                  121.77524977247873`}, {-64.62585752747424, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 15}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{121.32524977247871`, 
                  133.36077662283745`}, {-139.5399665725686, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 15]& ,
              TagBoxNote->"15"],
             StyleBox["15", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[15, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7716451428571429, 0.10476428571428571`, 
                0.005651285714285715], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  144.94630347319622`}, {-47.978277739675484`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[
           0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6706774285714285, 0.06984285714285714, 0.009042057142857144], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{144.4963034731962, 
                  156.53183032355503`}, {-39.65448784577611, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{156.081830323555, 
                  168.11735717391377`}, {-23.006908057977363`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5697097142857143, 0.03492142857142857, 
                0.012432828571428571`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  179.70288402427258`}, {-31.330697951876736`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{179.25288402427256`, 
                  191.28841087463132`}, {-23.006908057977363`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{16.5, 0.}, {17.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{260.3515719767839, 
                  272.3870988271426}, {-23.006908057977384`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.86, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 17.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 38}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-139.53996657256855`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 38]& ,
              TagBoxNote->"38"],
             StyleBox["38", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[38, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9757766129032258, 0.42850319354838706`, 0.04155573870967742], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-93.54007505365098, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7423319354838709, 0.0946258064516129, 0.006635703225806451], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  168.11735717391377`}, {-57.397303145930024`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5599386451612903, 0.031541935483870964`, 
                0.012760967741935483`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-44.25447699766786, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-37.68306392353678, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5599386451612903, 0.031541935483870964`, 
                0.012760967741935483`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.3870988271427}, {-44.25447699766788, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.595], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 31}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  79.88911423656631}, {-139.5399665725686, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 31]& ,
              TagBoxNote->"31"],
             StyleBox["31", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[31, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7046616666666666, 0.0957656], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 26}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{79.43911423656633, 
                  95.93061295244763}, {-119.40176521636045`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 26]& ,
              TagBoxNote->"26"],
             StyleBox["26", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[26, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9108294, 0.27453859999999997`, 0.020955220000000004`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{95.48061295244761, 
                  111.97211166832892`}, {-67.04244169021922, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8319846, 0.13914873333333333`, 0.005844713333333334], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{111.5221116683289, 
                  128.01361038421044`}, {-50.93188060525268, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7514516, 0.09778, 0.006329439999999999], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{127.56361038421042`, 
                  144.05510910009173`}, {-42.87660006276942, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6572150666666666, 0.06518666666666667, 0.009494160000000001], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{143.6051091000917, 
                  160.09660781597302`}, {-34.82131952028615, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6572150666666666, 0.06518666666666667, 0.009494160000000001], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{159.646607815973, 
                  176.13810653185453`}, {-34.82131952028615, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.595], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{191.7296052477358, 
                  208.2211039636171}, {-18.710758435319622`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5158602666666666, 0.016296666666666668`, 0.01424124], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{207.7711039636171, 
                  224.26260267949863`}, {-22.738398706561256`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{11.5, 0.}, {12.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{255.89560011126116`, 
                  272.3870988271427}, {-18.710758435319644`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.76, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 12.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -118.66252583997979},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8610326842105264, 0.18902921052631577`, 
                0.011411742105263158`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  98.60419607176115}, {-65.76091978573328, -14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9731247894736842, 0.40459131578947366`, 0.0373283947368421], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283748`}, {-88.46216495091336, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.766331052631579, 0.10292631578947369`, 0.005829747368421054], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.9107766228375, 
                  168.11735717391377`}, {-54.410297203143195`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391379`, 
                  202.87393772499007`}, {-31.70905203796307, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6919337894736842, 0.07719473684210526, 0.00832821052631579], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499008`, 
                  237.63051827606637`}, {-48.73498591184816, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 22}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606635`, 
                  272.3870988271427}, {-139.53996657256863`, \
-14.233118164077979`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 22]& ,
              TagBoxNote->"22"],
             StyleBox["22", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[22, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.595], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9863468181818182, 0.5238162727272727, 0.058405990909090905`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  79.8891142365662}, {-97.92101710307173, -14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 12}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{79.43911423656621, 
                  95.93061295244758}, {-139.53996657256857`, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 12]& ,
              TagBoxNote->"12"],
             StyleBox["12", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[12, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8893262727272727, 0.23761409090909089`, 0.01683417272727273], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{95.48061295244756, 
                  111.97211166832898`}, {-66.70680500094907, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9754242727272727, 0.4253260909090909, 0.04099406363636364], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{111.52211166832896`, 
                  128.0136103842103}, {-87.51627973569752, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5972463636363636, 0.044445454545454545`, 
                0.011508072727272728`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{127.5636103842103, 
                  144.05510910009167`}, {-35.49259289882642, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9863468181818182, 0.5238162727272727, 0.058405990909090905`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{143.60510910009165`, 
                  160.09660781597304`}, {-97.92101710307173, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7257507272727273, 0.08889090909090909, 0.007192545454545455], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{159.64660781597306`, 
                  176.13810653185448`}, {-45.89733026620065, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.595], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9754242727272727, 0.4253260909090909, 0.04099406363636364], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{175.68810653185446`, 
                  192.17960524773574`}, {-87.51627973569752, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{191.72960524773575`, 
                  208.22110396361717`}, {-25.087855531452227`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5972463636363636, 0.044445454545454545`, 
                0.011508072727272728`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{207.77110396361715`, 
                  224.26260267949857`}, {-35.49259289882642, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.915, 0.3325, 0.2125], Opacity[0.5], EdgeForm[{Opacity[
           0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{223.81260267949855`, 
                  240.30410139537997`}, {-25.087855531452227`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], Opacity[
           0.5], EdgeForm[{Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5972463636363636, 0.044445454545454545`, 
                0.011508072727272728`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10.5, 0.}, {11.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{239.85410139537993`, 
                  256.34560011126126`}, {-35.492592898826445`, \
-14.233118164077979`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           Opacity[0.5], EdgeForm[{Opacity[0.595], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5972463636363636, 0.044445454545454545`, 
                0.011508072727272728`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{11.5, 0.}, {12.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{255.89560011126122`, 
                  272.38709882714267`}, {-35.492592898826445`, \
-14.233118164077979`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.76, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 60 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 12.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 33}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 33]& ,
              TagBoxNote->"33"],
             StyleBox["33", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[33, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9968927241379311, 0.6189102413793104, 0.07521750689655173], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 25}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-109.27163968566175`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 25]& ,
              TagBoxNote->"25"],
             StyleBox["25", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[25, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9927496896551724, 0.5815518965517241, 0.06861298275862068], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  
                  168.11735717391377`}, {-105.4880988247984, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6637141379310345, 0.06743448275862068, 0.009275903448275863], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-44.95144505098478, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5662280689655173, 0.03371724137931034, 
                0.012549751724137932`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-37.38436332925807, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.644], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{237.18051827606632`, 
                  272.3870988271427}, {-29.817281607531413`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0.},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von v mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.588], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 27}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  78.7432928997176}, {-139.53996657256857`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 27]& ,
              TagBoxNote->"27"],
             StyleBox["27", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[27, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7401894615384615, 0.10536233846153847`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 24}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{78.29329289971761, 
                  93.63897027875021}, {-125.66698341606964`, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 24]& ,
              TagBoxNote->"24"],
             StyleBox["24", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[24, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7135436153846154, 0.09816478461538462], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 23}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{93.18897027875019, 
                  108.53464765778301`}, {-121.04265569723665`, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 23]& ,
              TagBoxNote->"23"],
             StyleBox["23", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[23, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9017319230769231, 0.2589166923076923, 0.019211699999999998`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{108.084647657783, 
                  123.43032503681559`}, {-65.55072307124082, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7405781538461539, 0.09401923076923077, 0.0066946], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681557`, 
                  138.3260024158484}, {-42.429084477075925`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5231092307692308, 0.018803846153846154`, 0.0139978], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{137.87600241584838`, 
                  153.22167979488097`}, {-23.931773601743977`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5774764615384615, 0.03760769230769231, 0.012172], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  183.01303455294658`}, {-28.55610132057695, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.588], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{8.5, 0.}, {9.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{197.45871193197914`, 
                  212.80438931101196`}, {-19.307445882910976`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5231092307692308, 0.018803846153846154`, 0.0139978], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{212.35438931101194`, 
                  227.70006669004454`}, {-23.931773601743977`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.588], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{12.5, 0.}, {13.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{257.0414214481099, 
                  272.38709882714267`}, {-19.307445882910997`, \
-14.233118164077979`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.78, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349448`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"vdrNaSch: Histogramm von d mit 100 Autos,\\n t=100, p=0.15\"", 
         TraditionalForm],
       PlotRange->{{-0.5, 13.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -355.98757751993935},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8998881099526567`*^9, 3.8998885344838753`*^9, 
  3.899889128765687*^9, 3.899897510631221*^9, 3.8998981231230636`*^9, 
  3.8999245685312953`*^9, 3.8999712711043034`*^9},
 CellLabel->"Out[49]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXusrclVH/jd/d7nntvd99WN3bb79tvd93bbEGOHwAm2mZghCRjNP8Eo
I+w40WCMD4RByh8hyZ0hBKIossiJPOb1h2NHE0OEOQEHSIZpS8Y+Ie4g0Rk0
ykEjAjNxpJsr9R+jGRShzDe7Hqvqt1atqv3t1zl7n1tbOt/Zu776Vq1ar1pr
1eP79g/98Pf+lY996Ic/8uEP3frWH/rQD37vRz7839963w/80Kyof6lpRv9X
0/Ru3GoGs+9t03S/3Guaba30UXvt32/jp7njyk5n34/Mb/N5wZUdYb2evfaP
qY75PG+vgwOoZ2C/5B43VU84yAE2be7/VgrBYPJchCARCEiaj6934qFB2eAU
nj0KIIeHLf9YcM8oNOgrtHrKwTDfDwAN+33g0DtF9L7oUEE6GjRvO9DUafvr
RaU522N3Y3AicPY0Zqi8Ve+ivf+vdFSejj2XhMYeNk9H9A6p/KmUd+bzTEp/
89iTDsKh/wk0TpB6iyI/vY6I/ln37/scKVAwjqjl2wq3X1TIeTvCIOjmu+Xw
HQXFOxFGoNGJQreeeeJZRQY8YkyaXb0Ra2j2oUb87Rb6QiAPOHtDV3sF0jyp
kKGnwPiya5ZhP/vc93VeVDr3okIx1+HRoYK9KQOCCqb0A8YdsHkqPhK0860K
X7x2Y1loxsv6MTZLrLzlYDHJ7pVRerNCjJ6C5vvdY06aR4wQHtphJLcm0Ayp
l5UyS4ihUyRmuzSgX478QipQL59TeuDL0Eg4jjo5D805SR3dF12k5kHONQrk
5Tz7yC33CLvdV8q+5MBIBaROaqKuGZiXlTI3fPJRztPmEJqi4Zi18eUyWp4g
zJQ8Hdkjm2OD6hMO9CGysYlcfqrcsqerpg25RzRt6Csd+A732EcUcmhG6gWl
TBt67VBqNdk9YU0jPRGQusOftAw6iRQ9FZgwGXpWoYn3R07baG1CZ909K7ro
b1G7DtyQUCOULApu9B2xTgPz+gpNnlAwHrgyZh9/04E+EVhRrzRNuKNwURDS
NunMsTWXaFjoPoy20ujnsHkmPhJkyinAsIXqoYNeqo8QqyYOAPDogQcZpOCW
wt1eGTtN4gdK2be7x1aR+DvKs5ZVmj8NXvqBR/0ksJa5dKYnzqecL/7PKQTy
XjqhRIR6LtIZPV5LkOdj71pq0o8Lq4r70JUxcf9imYWauHunnD3yQmRr2zIP
dHgErA7oeBbImOpflbF5NrYShMf7M2jHhbgH1lmsvECwocc5hAMMKcx3zZlf
QuSHStmfd48t4fK8pJRpQ/ELsU/3WynkfTTIjQtPsw6P5y0TG8eJAVGWCzaH
7uM17H5glhaSLuHRaBT2gr2IR+NJy+hwWykDQ4GWFByYUPW3ylho8ZEzwgMi
KfX7KQU62BGiRSD9LQXxJTyUoYIhE97u0aejz+ig5apD0QKYELrl/JXb8UZL
qGli/K9dWS4KZQGY+bS+ore4ZInBN+EB2FvT/gZu5AV54RCUBQwW/9+MhGvb
lHD5OHQouWzbBj5o0bQlt5Z0eD62I+W7HJRa3SdQZGTJXaRckGUZRDhBDp7R
myD39ZZ7ZD1xqY6p909cXpEl9w6I/AU3AwOfaIGHMqFkW70TaSJyisNTUd/S
y+e75DDqM5boWxgsvIbRT/vrudjvBJvn0g6bDj6d63BPJ5BzRdjoaor7abF5
0nm8LFsG4xYL6+6E7ghJfWvaf/P9DocBjkjCDStKSjbRgHkm7WaMV/qHUNQo
VWPcygCbKreiXAYcBjoOXoRPoYiqSry89LbFy9qT8C6n02+PPvWpwBZ7/wu5
G68sfMPnjb7V9ftE9HuQewwSbkENfsLBkDnaYQ6GJo5WJX7cAZKp/iyg2xyQ
lcm/68pYlnwOgMQ8WIlwmte8z15HGMGgwe/nQFtCaf7yjzmAOfuapbwzlVFY
CYB56O/ETvPROwtNkM6qi+OjPubOATRsoWnSQUFCGYFRO5aErYH8tLns+5ba
6CA2TjCyvtcgQHjKXC6Xa3sG5Dz2COzpCGxAhCCgHqMgdsDFw7RPHiPGnyam
Lt/C6CRrUZMWZs+Ac8wYvva2vebu773tEv1Z5kzNN8coKm9GHcvG9jrEMvP3
+kOzpgd3/+i/m/r6s2/216hj2bhjvZ69Dl9/dtjc/eIbLtGf7dfEfPP1ffkM
blo26ljWs9fh6482l+7+taZPf56Gs2++vi+fwehWNrbXIZaZv9fHRorufu46
4TH7Zn+NOpaNO9br2evw9a99fnS3/Z0n6M/TcPbN1/flM7hp2ahjWc+VfaaB
D2V30FDsOR0iZaGkhrNa2XSAZnIA+t0//rEr5m/WK3PlZWMoI2y13mPZH3xj
3/zNysyVl42h7I8+OjV/s3rmmi/7ny5fMn+zZ82Vl02grGs/fv3mJfM3q2eu
+bISfmMoI4mdKFKMZV37UYI3VuBN5sDr2G6QjYfsdSwHVpZF/ttOfubmI3vB
1voB3si4lPu5+rG6bg1ff/ubB3f/y89dpz9vn2bffH1fPoOxfFnPlb1+de/S
3f9ydNX8mbLZ1dfzZaMVysb2OsQy8/f61emlmV387FXi8Oyb/TVSysYd62ll
PXsdvv74pUt3Pz7u05+n5+ybr+/LZzCWL+u5stenM5khDeitPKZo9ZJx5rU3
NJdUZ83Z4CFKfkgAOY9o/uSBZtvBAS7KPSv7l28wf0buZ1deNsayz7/B/Jmy
z5fK/sN7+uZvVmau+bJ/+dgl8zcrM9d82Y/1++ZvVmau2bJAg7FCFyi7ezTt
m7/Zs+aaLQvPjubAK8kFlq25H5372xG/8Kyz3InDfuxldQH3WBdOdJSbG4rj
68uMoxuc0RuKg3rTlaGDOquXOpe+DJ3LWVlKDF9mnMPgwN1QnLqbrgydulm9
VMluKA7Zw/bK8txh9tqHQkt4YJ+cXbp4LvcenY3YhN51h969r7tyqYu3de/G
jMzkuVx3nsu9J3tNF8/g3kOXIn7XAJcOXtS9dz7WC+1e8+3enEZWFjwmht81
j8sbm/KzXifuzWx0ePa6f7Zjf199ridZPjpu+fIMSjEs5ATp7Gfu0M28JKL7
MitLXY8biutxQ3EffJlxF8KQflMZ5m+4MhzmZ2XpEH1DGaILGmqHVaFRR4K8
7ZqG0q+8952TLkPpvW94cRiGzUfcsHnvsau9LsPmvcce6YUh8qobIu/dGDVd
hsh7b5nRloaRq24Y+QRanMLw8JVne5fC0HfVDX3s2cLQZ+oFvlwFlekwzH3l
6UuRf48X8HsCVNW3wfDzvL8PvAxTHXycKqa76jiVjFPOCeCLfsAqBVL+qCNv
MRdYx6ydG7MecTzi6/lPw2hVTtfWQSozSCU+AKXUvefHxvtG5K/r8LRzw5PT
omTOlI9Mi8xlaSPTbWUUuqOMOLeV0eW2MpLcUUaN28oI8VMO/UVmzjTLf62j
lb/W0aJf62i9r3e01Nc7WuVrHS3wNcXa3vC0AjL6gbXjJKJmYu8o5vS2Yjpv
K2byjmISbyvm77Zi6n7aXrvPW2qG7GpHo3W1o4G62tEYXfW4zDM8fnica2Su
KgbFL66Yazyuu3psWcqb3D9lmUBO5bbJYjjJSBaAaOsBqqUoWorT1FIkK6cs
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"2879e960-7c41-4539-8655-6a381d587ec1"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13clq3AF05WGRlaE3XnjhhRdqYYwwxmieh8rQ3Ul3Z563gazzCvexsryP
lEcIIToH9IG8ER+Hu/UPqar+9T//5d/+5l//4Ojo6N//x9HRf/3873//8fr+
59HhvT/hz/gL/oq/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+
xE/4Gb/gV3x478FHf8iOj/6IHR/9MTs++hN2fPS/2PHR/2bHR/+HHR/9KTs+
+jN2fPR/2fHR/2PHR/+fHR/9OTs++gt2fPSX7Pjor977gAcvPvpr7vHgxUd/
wz0evPjob7nHgxcf/R33ePDio7/nHg9efPQP3OPBi4/+kXs8ePHRP3GPBy8+
+mdsN/z5CX/GX/BX/A0f4xP8Hf/Ap/gn/oV/4zN8ji/wJb7C1/gG3+I7fI8f
8CN+ws/4Bb/iw3sPbj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx
+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+/HR7xl2w5+f8Rf8FX/D
x/gEf8c/8Cn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+PDeg9uP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7k
Hg9e3H7kHg9e3H7kHg9e3H589Hcpf8+wG/78gr/ib/gYn+Dv+Ac+xT/xL/wb
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcfbz7gwYvb
j9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj49ex/DvUv6eYTf8+RV/w8f4BH/HP/Ap/ol/4d/4DJ/jC3yJr/A1vsG3
+A7f4wf8iJ/wM37Br/jw3oPbj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP148wEPXtx+5B4PXtx+5B4PXtx+
5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+xL7u7esY/l3K
3zPshj+/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/g
V3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+
ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8HL24/
co8HL24/co8HL24/co8HL24/co8HL24/Yt8n5evevo7h36X8PcNu+PMYn+Dv
+Ac+xT/xL/wbn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvb
j9zjwYvbj9zjwYvbj4/eV5t++Dq3r1v4dyh/r7ATxx/8PMHf8Q98in/iX/g3
PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3nzAgxe3
H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nH
gxe3H7Gfw0g/Yt8n5evevo7h36X8PcNu+PM7/oFP8U/8C//GZ/gcX+BLfIWv
8Q2+xXf4Hj/gR/yEn/ELfsWH9x7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hmw948OL2I/d48OL2I/d4
8OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/Zze+mH
76P1fVG+zu3rFv4dyt8r7MT3D37+wKf4J/6Ff+MzfI4v8CW+wtf4Bt/iO3yP
H/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuRezx4cfuRezx4cfuRezx4
cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfsR+znv9MPPXfg+Wt8X
5evcvm7h36H8vcJO/Pjg5yn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7EPhck/fBzen7uwvfR+r4oX+f2
dQv/DuXvFXbi9IOfP/Ev/Buf4XN8gS/xFb7GN/gW3+F7/IAf8RN+xi/4FR/e
e3D7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx9vPuDBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPB
i9uP3OPBi9uP3OPBi9uP3OPBi9uP2OdIpR9+rtvP6fm5C99H6/uifJ3b1y38
O5S/V9iJnx/8/IV/4zN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iw3sPbj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7
PHhx+5F7PHhx+5F7PHhx+xH73MH0w+eA+LluP6fn5y58H63vi/J1bl+38O9Q
/l5hJ3598PM3PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/3nzAgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3
H7nHgxe3H7nHgxe3H7HPqU0/fG6UzwHxc91+Ts/PXfg+Wt8X5evcvm7h36H8
vcJO/P7g5xk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
8eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/Yh9rnn6EX/Cn/EX/BX7ub1jfIJ9n5Sve/s6hn+X8vcMu+HP
c3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVH957cPuRHbcf2XH7kR23H9lx+5Ed
tx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H28+4MGL24/c
48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL
24/Y78FIP3wurc8Z9LlRPgfEz3X7OT0/d+H7aH1flK9z+7qFf4fy9wo7cf7B
zwt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/48N6D24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9ePMBD17cfuQe
D17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fsR+b1L64XPMfS6tzxn0uVE+B8TPdfs5PT934ftofV+Ur3P7uoV/h/L3Cjtx
8cHPS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fh/ce3H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftx5sPePDi9iP3
ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi
9iP2e/bSD7/3wueY+1xanzPoc6N8Doif6/Zzen7uwvfR+r4oX+f2dQv/DuXv
FXbi8oOfV/ga3+BbfIfv8QN+xE/4Gb/gV3x478HtR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H68+YAHL24/
co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8H
L24/Yr+XNf2IP+HP+Av+in3u4DE+wX7O28/t+TkM31fr+6R83dvXMfy7lL9n
2A1/XuMbfIvv8D1+wI/4CT/jF/yKD+89uP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bjzcf8ODF7Ufu8eDF
7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufs
93inH36vnt+T5Pde+Bxzn0vrcwZ9bpTPAfFz3X5Oz89d+D5a3xfl69y+buHf
ofy9wk5cf/DzBt/iO3yPH/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuR
ezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4
cfsRpx9+b7ffw+r36vk9SX7vhc8x97m0PmfQ50b5HBA/1+3n9Pzche+j9X1R
vs7t6xb+HcrfK+zEzQc/b/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH78eYD
Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4
/cg9Hry4/YjTj/w/l374vd1+D6vfq+f3JPm9Fz7H3OfS+pxBnxvlc0D8XLef
0/NzF76P1vdF+Tq3r1v4dyh/r7ATtx/8vMP3+AE/4if8jF/wKz689+D2Iztu
P7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj/efMCDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceD
F7cfuceDF7cfuceDF7cfcfqR/9fSj/gT/oy/4K/Y7006xifY59T63EGfI+Vz
Qfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+vMcP+BE/4Wf8gl/x4b0Htx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcf2XH78eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/cg9Hry4/YjTj/w/ln7En/Bn/AV/xX7P3jE+wT7X3OfU+txB
nyPlc0H8nPcZ9nMYvq/W90n5urevY/h3KX/PsBv+fMCP+Ak/4xf8ig/vPbj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7b
j+y4/ciO2483H/Dgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H
7vHgxe1H7vHgxe1H7vHgxe1HnH7k/630I/6EP+Mv+Cv2e1mP8Qn2ezB8rvkp
9rmDPkfK54KcYT+35+cwfF+t75PydW9fx/DvUv6eYTf8+Yif8DN+wa/48N6D
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9ePMBD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fuQeD17cfuQeD17cfuQeD17cfsTpR/6fSj/iT/gz/oK/Yr/H+xifYL83ye/B
OMU+p9bnDvocqTPs57z93J6fw/B9tb5Pyte9fR3Dv0v5e4bd8OcTfsYv+BUf
3ntw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj9zjwYvbj9zjwYvbj9zjwYvbjzj9yP9L6Uf8CX/GX/BX/A0f4xPs9+z5
vUmn2Oea+5xanzt4hn0uiJ/z9nN7fg7D99X6Pilf9/Z1DP8u5e8ZdsOfz/gF
v+LDew9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/bjzQc8eHH7kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7
kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7Eacf+X8o/Yg/4c/4C/6Kv+FjfIK/
Y79n7xT7PRg+19zn1J7hc+xzQfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+
fMGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7E6Uf+30k/4k/4M/6Cv+Jv+Bif
4O/Y72U9xX5vkt+D4XPNz/A5vsA+F+QK+7k9P4fh+2p9n5Sve/s6hn+X8vcM
u+HPV3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8H
L24/co8HL24/co8HL24/co8HL24/co8HL24/Xg7/CZYs0AQ=
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
Get3zcQs4tTDmMUz7YP+XjF0hUxc6JnJh83si+cCm5YKXTITd5YJXToTj1Bi
MGjZ0O6ZeNct0xqL+B5zP+AWcerh4BKZ8uAgc+PTz8tlmgvGrBK6cibWoCtl
YhbKXnk3cH/57OEQ51g+E4NWzVQPk1bL5MOMHpnWgFnk4vM9J3y3AH8eCrNW
z1QDb/h+6DUy8Wid0LUzsWbdTD7sWS+TD2s2DN0g03u0d+j6mZhH3VqZ+nnr
0K0ysY049dzFvplicJHcNTOxY6NM88KmzUI3zcSaPpl82LN5Jh/ebJypBk5s
GbpFpvcl+2JPMIj1icER4tTDQebeJFN/9Mu0J/p/YOhumXpxm0wxniPfe39y
Ju70D90uE492CN0+E5NQYjBu20z1cGvHTHmwcqdMPpxgnV0zcZD5qIE1u4Tu
nIlJu2faE6zZI5MPe/bM5MMa5hiQiQV7h+2ViYnMwXqwiTjzwiPi1MN4ngHP
EXbs43pYsq99+LR/2H6ZuDXEPjwaah8eDbNPLx0YNiIT16gb7Ls73Hnc5QPs
544PysSmEY7BiCPDjsjEplFhIzOx6RD7sOZQ+7DnMPvw5uCwgzL190HeE7w4
3HmdPTc+fDnK6/3v3Rk2OlOv8h3NfIc3PBofNi4TX462D2+OsQ9rJoVNzMSk
CWHHZeIadWMzcX2Qn29Xx4/NxMGxXntRz0E9fJnseeHQ1LATM/EI5fujl7Sy
V/r81Ez3FQad5BpYw/2dlolHx3veLj4r5+/uODUw4zTPBW9Ot8/nyXfL8x3z
sOmMsOmZWHWmfRh2ln3YdLZ9+HJ+2HmZ+Dvd88Ksc5wHj861DwuuCrsyE6vO
c2wDj12RiTcXh12UiVOX2IdTl9qHO5fZhzUXhl2QiXkXeE/w6XLn9fbc+PDl
au+DPplhn169I+z2TD10jWP02ANh92fi1PVh12Viz41hN2Ri0A2OwaFrXQ+n
bnIe3LrZ/maegzy4eYtjMOtW+7Dn7rC7MjEIvTMTV+70Xtfyc+L88Oge18CI
+8LuzcQsznRbJvbd5jV2dJwa3v/0Ij22s89KPffpu7BvMzGLf7vp4UzMetQ+
zHrMPgx63D798HTYU5m4SN1DmVj1hPNg05P26efXwl7NxKmnHBvhsVcycer5
TPcVTr1gH069aB8evWQfDnGvn8nUo894T3DqZecd4Lnx4crr3gfP4g379Pqn
YZ/4Ob3p2K4+04OZOPVO2NuZGPRe2LuZ2PSuYzDuLdfDqvedB6c+sH+I5yCP
Hv7QMXr6I/vw5cuwLzJx6vOwzzLx6zPvdYD3xd2FSV+5Bg59E/Z1Jj5xpo8z
cepjrzHBcWom+fOnBsZ8n+lO8B3zfEcz39kMt34K+zETm362D3d+sQ+HfrUP
d/4M+yMT56j7IRPPfnMevPvdPj1dxDp5Ln794Rh9zliWi03/hv2TiU3/2YdB
/A+n+DAoyeXDqr/D/srErL+8J3iU5sqDT8yNT4+VufZBz1W5fPp4ztA5cnGq
zhXjc+K77vnOexjUDm1ycWjm0Jly8QglBtdaueph4Sy58uDUrLl8eMcc5MGs
2XLF4NTsuXxYM3do51xMQufKxSaUvZ7h58T54dE8uWrgzryhXXKxiTN1ysUy
lDXgFHFquCub5DonTJkvVz28WSB0/lysWih0wVwMWziXD6e65vJh0CK5fJi0
aC6fu9stdPFcTEIXy3Wvl8gVg1OMUUMvLpkrBjt6hC7nf3OOf3tuqVycWiaX
D6e65/Lh0bK5fHhEHT68WCF0+VxMQpkXnjEf68FizseZYcyKuWrg1EqhPXOx
aZXQlXOxadVcPgxaLZcPg1bP5b/uHlszF+OoYy5YtUauPLjYK5cPs8jFh01r
56r/33s9155g0Pq5vl8VxqB83yqsQfnOeN4PfG58lnCrd64amEWceWHWBrli
MGvDXD6c4r5v6Dy+qx1GwJVNc90VPvtjwo7OxarNQ/vkYtmWoVvk4tRWuXwY
tHUuH+5sG7pNLsZRt1kuVvXNlQen+uXy6efdQnfNxTDqiMEPxgbk4tQOodvn
4tSOuXw4tVMuHx7tnMuHU/1Dt8vFQpQ9waldcuXBJubGhysDc+2Dfts9l08P
DwsbmqsX98gVo8dGhY3Mxam9w/bKxaB9w/bJxaZ9HINxe+aqh1WDnAcXB9uH
fcxBHvzazzH4tb99ODQi7IBcPEKH5+LNcO8VTvOcOD9sOtA1MOjgsINy8Ysz
DcnFwSFeYxbHqeGdw+fGnZjNZ6X+BL8Hvjer+A7xw3Ix7Aj7cOpI+zDoKPvc
2XFhY3MxjrpDc7FqtPNg0xj7MOKEsONz3fWxjnXz2ORcbDo2132FTcfZh00T
7MOdifZhAPd6fC4WjPee4NMk5y3uufFhxxTvA5acaB8unB12Vi5OTXVsDp/p
kFxsOjlsWi4enRp2Si5uneIYXDvJ9XDrNOfBptPtd/cc5MGI6Y7BjDPsw5rz
ws7NxSb0nFzMOsd77eR9cXfh0fmugUn8jHBBLoZxpjNzsexMr9HLcWr4c1J+
X7G6eXNJLo7wvdp8Ly3ffQt3rgi7PBd3rrQPd66yz926NuyaXO+nGWFX52IZ
dZfl6t07w+7Ixa2rXc/9vsux9ZzLd1NzZ6/zvPDo5rCbcnHnFvtw51b78Ol6
18Ce28Nuy8XBa7ynbb0+sX6OU7+l574xV8/d7T3R80+GPZGLU/c4Rp+9EPZ8
LgbdH3ZfLg49GPZALh494Bhcu9f1sPAh58Gph+3v5XUez8W++1wDpx4NeyQX
h57ynuDO0/bhzjP29/Qcj+VizXNhz+bi4CNebw/HmXew49Rv4WdwQy6OPO96
GPOizwyDXg17JRdfXrMPb163z918O+ytXLx5M+yNXJyj7uVc/fpZ2Ke5ePSG
6+npzx0b7tyXcvXiO54XBn0Q9n4u1nxoH9Z8ZB8mvesaePNJ2Me5euYt72mc
1yc2xnHqYdAX3gf9yvcy873d9Plv9od5XzwXWPNN2Ne5ePNd2Le5uPOtY3Dn
h7Dvc3HtS69BT/4T9ncuFn7venj3lfMmeG58mPWj54Ipf4b9kYs16O+5mPS7
98p/O+H37fx+/SSf4+dc3PnL9dO9Pj7s+8lrTHUuPvz413uFQfyltP/8efLd
8nzHPKxKQ5NCPMoK+bAmL+TDnqKQD29aoXUhtlHHvDCsLJTHzzRVIZ/enjN0
jkKcoo4YjGCsUyE2zRw6UyE2zVLIhzWzFvJhz2yFfHjTDm0KcQdlT/Bi9kJ5
8IO58emNzqFzFeqVuQv59OtioYsWYsk8hWL0WffQZQqxZr7QeQsxaIHQ+Qtx
CCUG17oUqodVCxbKg48LFfLhHXOQB6cWLhSDTV0L+fBlidBuhTiELl6IRyh7
hc08J84Pg5YsVAMnlg5dqhCDONMihfiFsgYcIU4NPx/Qi+/lYgpnpZ73z3++
N3CK90qPQpxaoZAPd1Ys5MOhnoV8+mrV0FUK8Y665QrxaKVCefBp5UI+fb5+
6HqFOEUdMXjB2LqFONWr0H2FU2sW8uHOWoV8OLR2IR/2cK9XK9TrKHuCHesU
yoMlzI0Pb3oX2gfPYoNCPr3bN3TrQs9pw0IxeM+Zli3EnU1CNy7Eo81CNy3E
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
JrE+MZhFnHwYs3tSHfQ3965z/zpcONgaNlMX+wKb9gwbkMSdvcIGJvFooGMw
aJ+wvZN41z9pDX7nedLnYyrHyYeDeySNm8xzo+nnfT0XjDks7NAk1uAPSWLW
Ia6VzwbOL++++TkOSGLQ4c6HSUdYw8f9w/ZLYtYB1nynnGT+whfuhOb3H+7M
5k5b7ruFR8eHHZfEmhOsYc+J1rDm5LDBSZ+jg8JOSmIeeccm9TN/d8LfoXRx
nHzO4nmOzeaxxySxY4jnhU2nh52WxJozrGHPmdbw5hTnwImzw85K+rwc7Jq6
en1iizpO/oKe+9Sk/hjqmuj/K8IuT+rF8x2jt64LuzaJO8PCLkzi0UVhw5OY
NNwxGHeB8+HWxR4HK0dYd/c6lyVx8ELnwJqRvKskJl3pmmDNVdawZ5T1Kp7j
0iQWXBN2dRITL/F6KzvOvGs6Tv4C3gP2cW0/H/mw53o/M6y6KezGJAaNsYZB
N1vTP7eFjU06p7eG3ZLENvJuSOrh+8PuSzrHtzif/n7AsXU9dnRSX97ueeHR
nWHjk/hylzW8udsaxoxzDmy4N+yeJN6NdU1beX1i/Rwn/3+fl66DHuXO62eT
ev55656ui32BL4+GPZLEncfDHktiz2OOwb4nw55IYtxDXoM+fC3s1SRuPeF8
2Pewx+3gudHw6ynPBVdeCnsxiS/4F5L49IJr5bvD0Um9vYef45kk1rzs/P28
/itJ/Hraa/T3WDTMeN21wso3w97w++Tueu6wh09vh72VxK13rOHRf6zh0bvW
1PVh2AdJXHvL88Kt9zwOHr1vTW9/HfaVn+cDx072z75MYtN/wz5JYtOn1rDm
M2vY87k1vPk47KMk7nzkmuDFFx432HOj6Y1vXAe98q01/fpX2J9JLPnOMfps
Mv6nyFms+THshyQG/Rz2UxKHfnIMrn3vfFj1i8fBx1+tz/AcjINTvzkGm363
hi//hP2dxCH8hCQeTXCtx3mfeH4YNNE5cGJS2L9JDOKZ/kji1x9eY4Tj5PBd
gV68I4kpPCv5fC5xRjg3cIrPlSmzONXJ0nAnZWk4lLM0fTV1+JbFO/KmyOJR
yRoHn2qWps9nCz9rFqfIIwYv+NksWZyaPuu8wqkZsjTcmTFLw6GZsjTs4VxP
k9XreGqCHTNnjYMlzI2GN7Nn1cFezJGl6d1Fwi+ctU9zZsXgPc80eRZ35g7f
JYtH84afJ4tJeGIwbq6sfLg1X9Y4WDl/loZ9zME4+LVAVgzWLJil4UvX8Itl
8Qm/aBan8NTKZwh1cXZh0uJZOXBhyfBLZPGIZ1ooi1N41oBNxMnp63PB3sCR
pbLy4crSWRpuLR++WxaPVsjS8Gil8CtmnaNVw3fPYtAq4VfO4hx5y2X17nrh
183iGXHyOd/rZ8VgImOXzWLNalnzwqO1wq+ZxZ21szTcWSdLw6fVs3JgT8/w
PbLON3VRE+xgfWKwiTj59FmvrDro3X7ht8jq+S2zNO+GO+658x7ubBi+TxZ7
Ng6/URaD8MRgUN/wm2QxboOsNXgHp3kuuEicfNjXO2sc7GNuNPzaNGsu+LJN
+K2zuIPfKotPeGqF4+zTGlkM4jk2z2LQtln5MGi7LA0HN8taA64xdjOfm9Nd
K58TzMf+wpgdwm+fxa1dwu+cxaZdszTc2S1Lw6HdszRnds+wAVmcI2+nLB71
zxoHn/bI0nCQ+I4+6wMco88PCjswi037ZH0nhk37WsOg/axh0P7WsIrvzgOz
+nuga4JHB3hc89xouHKw14NNh4YdktXD3EV4QhaPjgg7PIs7R1rDnaOsYc1x
YcdmMe+YsKOzuEbeYVks51nZ31kcJ396x1l7Ns9BPpw63vPCocFhg7J4hOee
xC721MpnA++Ndw+bTnYODOJcD8ni1wmed1o/K88/n+Pk8PcjfB4fbcac4bPC
u38i7PEsbp0ddlYWm86xhjvnWsOYC8LOz+LO0LDzsjhH3plZ/c9d99x5v4Tj
5NPnVzq2iMdSxzJhF3peOHVx2EVZnLokbEQWd0Zaw5phzoERl4VdmsW+811T
d69PbGXHyacfrnId9OotYTdn9e6t1vTSnWHjszh1bdg1Wey5Puy6LAZd5xh8
uiFsdFbPjfIafDdcxnvW03Hy6fWrPW4tz42Gpzd6Lvhye9htWXzCj83i1FjX
2s37NDyLQTzHmCw+jXM+DLrDGlbe5DV6eSx6Z7//x7JYPtz7C1fu8l7AKu6W
5455GHa/NWx6wJoeeCTs4azz+lDYg1mMI++erL59Puy5LJY96Hx6+gXH+nns
3Vm99ajnhU1PZp1X2PSUNQx62nonPwc5cOfZsGeyeuhh1zTA6xPr7zj5MOZF
10F/c+8696/Dhfest3Bd7AtsejXslSzuvB72WhaPXnMMBr0Z9kYW717yGvzO
wznmfBzoOPlw8GWP29dzo+nntzwXjPkw7IMs1uDfz2LW+66Vz4bxfveH+Tne
yWLQR86HSR9bw4y3vcahHovm34rx3yb576Uw6xPn8L9+2fP/dC8BPPoy7Iss
1nxlDXu+toY134d9l/U5+m3YN1nMI+/zrH7mrmnunD7FcfI5ixMcO8ljuVcW
dvzgeWHTL2E/Z7HmV2vY85s1vPnROXDij7Dfsz4vv3NNF3h9YkMdJ/9sz/1T
Vn/87Zro/1ri86qoF/9xjN6aIX42fRF3uOxlUhaPJo8/T1bEJDwxGPdv2MQs
bk1RNA5WTlmk4QTr5CIOTnIOrOnEz6YqYlIrqgnWTF2kYc80RRrWMEcqYsF0
4actYiJzsB5sIs688Ig4+Wd5D9hH2MHzkQ97Zix6Zlg1a/hZihg0W5GGQbMX
afqnS/i5is7pnOHnKGIbeTMX9fCi4RcpOsfEyae/FyuKwUHGzlTUl3MXzQuP
5g8/XxFfFijS8GbBIg1j5inKgQ0Lh1+oiHfURU1wh/WJwQ7i5MPLrkV10KPc
eb1iUc9z9zWazxLqYl/gy1LhlyzizjLhly5iD54Y7Fsu/LJFjFu8aA36cI3w
qxdxizj5sG+JonGwj7nR8Ktb0VxwZdXw3Yv4gl+liE94auVeZ+4+5Q5UWMNz
rFDEmtWK8uEC66Ph1/JFa8ApxqJhxppFtcLKtcOv5XPA3fXcYQ+feoRfp4hb
PYs0PFq3SMOj9Yr0p/Hn3uE3KOIaecwLg9YvGgeTehVpertf+C2K/hsOecRg
BD/bvIhNG4ffqIhNmxRpWNO3SMOeTYs0vNkwfJ8i7uCpCV5sVjQOfjA3mt7Y
sqgOemWrIk2/9g+/exFLti6K0Wf7hu1TxJrtwm9bxKAdwm9fxCE8Mbi2TVE+
rNqxaBx83KlIwzvmYByc2rkoBpt2KdLwZc+wAUUcwu9RxCM8tcJm9onnh0ED
nQMn9g7bq4hBPNNuRfzC71rEkb2cw3cFenHeIqbs43w+lzgjnBs4xb//O6CI
UwdZw52DreHQIdb01RFhhxfxjrz9i3h0qMfBp8Os6fNBYScVcepwx7r4ZycW
ceqYovMKp461hjvHWcOh461hD+f6yKJeP9I1wY4TPG4uz42GN4NdB3txsjW9
OzTsvKJ9GuJY8TPtV8Sd08JOLeLRGWGnFzHpdMdg3CnOh1tnehysPMt6Ac/B
OPh1tmOw5hxr+HJh2AVFfMKfX8Sp811rdl2cXZg0zDlw4aKw4UU84pnOLeLU
uV5jOcfJ4bvhvN4bOHKx8+HKCGu4dXnYZUU8usIaHl1pzTm6JuzqIgaNCruq
iHPkXVrUu7eG3VLEs6ucz/ke69jKHjuyiDXXel54dEPY6CLu3GgNd26yhk/X
OQf23Bw2puh8X+2aent9Yr0cJ58+u8110LsPhj1Q1PMPWfNuuOOeO+/hzviw
O4rYc1fYnUUMutMxGHRP2N1FjLvda/AOfvFcWzhOPuwb53F9PTcaft3rueDL
o2GPFHEH/3ARnx52rT29T9cXMYjnuL+IQY85HwY9bg0H7/MaW3ssmvPyq2vt
4fnYXxjzVNiTRdx6LuzZIjY9bw13XrCGQy9ac2ZfDXuliHPkPVPEo5c8Dj69
bN3f8aeLzvorjtHn74W9W8SmN4v+7TJsessaBr1tDYPesYZV/Bvn14r6+zXX
BI/+43GHe240XHnf68GmD8M+KOph7k7nPlN49EnYx0Xc+a813PnUGtbwef9F
EfM+D/usiGvkfVTE8qe9vyc6Tv4xjrP2IM9BPpz6yvPCoe/DviviEf7bIt58
61p39Xt7oohNPzgHBnGufyzi19ee9yg/K89/puPk8PcjfB7zHQHG/FZ0Vnj3
y8Z3mWWquPVn2B9FbPrLGu5MsIYx/4ZNLOLOP2F/F3GOvN+L+p+77rnzfrjj
5NPntSo21GOp45KwSZ4XTk0R8cmrODVllYY7U1VpWMMFjOTAiBR/7lSxb6Jr
gh+sTwxuESeffmhVddCrs4efrap356jS9NJ84eet4tR04aetYs8M4aevYhCe
GHyaKfyMVT03ddUaK/rZ2DP4RZx8en2aqnEwkbnR8HTmqrngS5fwc1XxCT9n
Fafw1Aqn2afJqhjEc8xaxae5q/Jh0DxVGlbOUrUGXGMsmp7m/S9dxXLmY3/h
yvxVewGruFueO+Zh2CJVGjYtWqXpgSXDL1F1XhcP37WKceQtWNW3K4dfqYpl
i1Xl09OrVMVgN2MXqOqtparmhU3LVZ1X2NStSsOg5as07OE5yIE7K4ZfoaqH
qIuaYBLrE4NZxMmHMd2r6qC/uXed+9fhQq8qDZupi32BTWuEX72KO2uFX7OK
R3hiMGid8GtX8W7VqjX4nWekzwfcIk4+HFytahwcZG40/dyjai4Y0yd87yrW
4DeoYhaeWvls4Pzy7uEQz7FuFYM2rMqHSfweg4YZPavWgFmMRZ9gZvD7AXzh
Tmh+/+HO7LV83y082iL05lWs6VelYc+WVRrWbBt+m6rP0a3Db1XFPPI2q+rn
/uF3r2Ib8S19FveoisFFxm5axY7tquaFTTuF37GKNTtXadizS5WGN9tX5cCJ
3cLvWvV5SV3UBINYnxgcIU4+HGTuHar6Y4Brov8PDTukqhf3dIzeOibs6Cru
7B22VxWP9g3bp4pJ+zgG4wY6H27t53Gwcn/rab3OwVUc3Ms5sObAsAOqmHSY
a4I1h1vDniOsp/EcB1Wx4KiwI6uYeIDXm9px5p3JcfJhPHvAPs7i5yMf9hzr
Z4ZVJ3J2qhh0kjUMGmRN/5wSNqTqnJ4cNriKbeQdX9XD54cNrTrHg51Pf1/g
2Bwee1xVX57qeeHRmWFnVPHlLGt4dE7Y2VWMOc05sOG8sHOreDfENS3p9Ykt
7jj58PJC10GPcuf1lVU9P8p6dtfFvsCXi8MuquLOJWEjqtgzwjHYd2nYyCrG
DfMa9OHosOuruDXS+bBvuMd189xo+HWZ54Ir14ZdU8UX/NVVfLratfLdoW9V
b6/m57iiijXXOb+H10fDr8u9xqoei4YZN7hWWHlT2I1+n9xdzx328OnmsDFV
3LrFGh7dag2PxlpT1x1h46q4Nsbzwq3bPA4e3W5Nbz8U9qCfZ5xj2/pnD1Sx
6e6wu6rYdI81rLnXGvbcZw1v7gwbX8Wd8a4JXtzvcdt4bjS98bDroFcesaZf
Xwx7oYoljzpGn70Z9kYVa54Ie7yKQU+FPVnFoScdg2uPOR9WPe1x8PEZ6509
B+Pg1LOOwabnrOHLK2EvV3EI/1IVj15yrZt7n3h+GPSqc+DE62GvVTGIZ3q+
il/Pe439HSeH7wr04ulVTHnD+XwucUY4N3CKz5V3qjj1rjXcec8aDr1vTV99
HPZRFe/Ie7uKRx94HHz60Jo+/zbsmypOfeTYKf7Z11Wc+qzqvMKpz63hzhfW
cOhLa9jDuf6kqtc/cU2w4yuPG+K50fDmO9fBXnxvTe/+E/a39+kHxw7xM71V
xZ1fwn6u4tFvYb9WMelXx2Dcj86HW797HKz8w/psz/FTFb/+dAzW/GUNXyaF
/VvFJ/zEKk5NdK0Huy7OLkziwnZy4MLk3PfexCOeaUIVpyZ4DdhEnJyFvBfs
DRyZoikfrkzZpOFWCZ+beFSbNDxqTZpzNF34aZsYNE34qZs4R15q6t05w8/R
xDPi5HO+52qKwUTGdppYM33TvPBo5vAzNXFnliYNd2Zt0vBphqYc2DN7+Nma
zjd1URPsYH1isIk4+fRZl6Y66N2u4Rdr6vnFmzTvZsfwOzRxZ77w8zaxZ4Hw
8zcxCE8MBi0UfsEmxs3dtAbvYKemueAicfJh3zxN42Afc6Ph18JNc8GXpcIv
2cQd/BJNfMJTKxxnn2ZsYhDPsWgTg5ZuyodByzRpOLhI0xpwjbFozsvOTbXy
OcF87C+MWS78sk3cWjH8Ck1sWqlJw52VmzQcWqVJc2ZXD79aE+fIW76JR92b
xsGnVZs0HCTeremsk0eMPl8//HpNbFq76TsxbFqnScOgHk0aBvVs0rCK785r
NPU3nprg0bpN4+ATc6PhSq+m9WBT7/AbNPXwVuG3bOLRRuE3bOLOxk0a7mzS
pGHN5uE3a2LepuH7NnGNvD5NLOdZ2V+4RZx8OEicteEXc5APp7ZomhcObRt+
myYe4bdu4g2eWvls4L3x7mHTdk05MIhzvX0Tv/o1zfu/7w1Nzw+/iJPD34/w
edzXjNml6azw7i8JG9HErd3D79bEpv5NGu7s0aRhzF5hA5u4s2fYgCbOkbdr
U/8fGnZIE7cGOJ8+P8wxmMhY6pgqbG/PC6f2D9uviVMHWMOdA61hzT7OgREH
hx3UxL6Brmlar09sasfJpx8Odx306uCwQU29e7I1vXRm2BlNnDo67Kgm9hwb
dkwTg45xDD4dH3ZcU88d4TX4bjiV92x2x8mn14/0uJk9NxqenuC54MupYac0
8Qk/pIlTQ1xr9j7t28QgnuOkJj6d5nwYdLo1rDzRa3TxWPQKfv8XN7F8X+8v
XDnLewGrzgs7t4lhQ61h0/nW9MDwsGFN5/XCsAuaGEfeOU19exV708SyC5xP
T49yrKvHnt3UWxd5Xtg0sum8wqZLrWHQZdbL+znIgTtXhF3e1EPDXNNqXp9Y
d8fJhzFXuw76e2zYrU1cuM16MdfFvsCm68Oua+LODWGjm3g02jEYdFPYjU28
u8Zr8DsP55jzsZ7j5MPBaz1uHc+Npp/HeC4Yc0fYuCbW4G9vYtbtrpXPhjP8
7vv4OW5pYtB458OkO61hxs1eo7fHomHK3WF3hf0/jb+oow==
                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnc+LlXUYxS9KkAleozYTbsTwLyghF74FgeCihZZgoGAQXNoos9NdaIOr
DIncCgXiaAkVQ0zgjwFjaBMEmRHGBAOSSRNtgmZhi2wTXPSdnnPP57z33uWX
l/d+7/fHc85znh936xtH9r65rtfrfbGx11vf+/fze3P/8s7pjz5bbl57+ezb
T8983gwbX9r9/L0/T6406z/9/svm0FIz2392ZcvXl3DPXz/91q2VDSvNpsEv
T8w9eauZ/WDqx82nzrUeH/b+tuNt17lqvGr+Vet5+saOC4NL95oNHx74Ydfy
N83jO1//7sy7Z1o/nzJ+cHXd8Z9fudv89uu1F7btudr88cxj3/afO1r2vHqe
VeOvfvzOgcH55Qfjl5tPDs989dRLJ8vG1d+r3pcqu7RWu7Ew2D/XP3anubm4
b3XqxLzN/qjtfIr9qbp3rvOpPs9qnKXhZtV81ONt71EVPrrwRY2P6u9V25Oq
/XLxEPV+uXjCqPyXR+UVap5QZa/SeT4N313jVTzT5S9X8caq91T5Ta575MJx
F95N3j+a71WfB5r+oMZrtZ+i9u+qeIgaR2jnSq2Duc6tmse6eAhNV3fxcBo/
cfFD2j62fb7qXqTcR7XfN6q4hsq/o9ln9b6oz6ea/9DWWX1+1HaM5n+l6Pwu
HcalS6j3kabDtJ1/Ck+m8YqUcVqeFS2u5OKTKflsrng6zQ912fmq59+/snn6
p/u3H/glvd4/z79nw510XT2dp7nmQ5s/LV8iZVzN91z+uMsvVsdZaHluLr8y
hSek5Fe48ttdOn+KTkjzC1x56bT30OyMK3/G5Y/Q+GFKfFY9HzW+uMZpdqDt
vaPVzbnssxpHaLqryx9JwcH05114mmI/XfFBWtyzq/oejSdU8WFa/N2lR1Xx
WJpfT9NvU+xASp8H2jyr3kPzO9L3JSW/yKVLUOuR/zuesu80PdxVV5WSj91V
HZ6mP6fgBQ13aPyBxk9c/n7KuCuuoc5freIVtP4kapwatr+0enB1vL6r9TiT
+H4WXtP4GC3/OT0uQMNrNb67dAZXPbIaH2m4Q9O1UnBhmF2t8qfU70+xnym4
71r/lHtK+70uvuTyx116b0ofUZqerD5vKXHPdHtCW88UHHHFfVw4MhnvBj90
2XNa34kUPzpF/1TnDbp4tdpOTux57fq7znNK/qq6307VOO18qvm2K+9u3PKo
XX60i+er/Tsa7tB0v6p50uJrat7usgPp/0fT1fGq85OOC1V4oV5n2r126d4u
fSZFN3DVr9Hq7mn8mdYXl1Znkb4Oat6YnueZ0j8nfZ1peiNNt1E/r/abaHYv
fZ1T8IWGv+l1FrT8B/U8XXk7KbqiK2+Qhr+uPCVXvLJKB3D1o6PhKS0fw8VP
XHhNW2d1vm5X+0vQ8nxo8VMXP+lq3lRK/kZK/nmVnUwZp+WFuuLFw56n8ZkU
nTmFr070E2b9Dg3X0n8XjXe5/HeXPkD7n/eHjS8M9s/1j91pbi7uW506Mb/m
cfU8R91vipY3TuONKXlNKeMp8esU/zEFl1Per/YXXHpsSn8kN16Pmg+4eRGl
H6MLl6vuC63/Ce2cVH0vzT6nxB9p+ZO0eCtNL6Lp+Wpdeq24TMP3//ue9Doy
Gs7S+o/R6gfV93fceAutnzmNh9D0fFecxbU+VXw4zX9R6/lqveJRn3f1r6bx
k6rfpcajcduXFH7iwn11vMkVj3bhLy1uTsunctULdEUXVekJKXmJ46YbpOCp
K57i2hfa+tPui6vexFUP5fJzaXZGfU/VdVW0/aL5fWr/seq80fL0XPiino+L
Z9J4iyv/hGY/afie0kfFNR+anpYSt6LpPyn5RW3Xx4WPKXUBLn5C46s0fE/R
t2n1Yin3MSWO4/K7afbQxZPT+UNKHiwtDpjSZ4/mj6v1IpefnlLnmO4v0/I9
HjbeNp47s3X6r+O77jYXt5+a7794zVZHpr53NL2I5ne7+myk1+mMW5+TrvaD
TZknLU5Bs6tqfcDFV93jo84Ho/njNN2MZudT8IXW53Pc+py76q1o5ypFb6fV
T6nxgrZutPhaij9Ow+V0fViNIzT7T+sDNln/0fCcFJ5J66+i7sfSFo+qnlfj
YIquUjXu4gmuOBpN56fF92l2lTaeoktPdKTa+Xc1/3xSr+Ttt+DKA0mJz6bP
U23/1f+rReMDtDwB2vxpfCmdb6T49ep4rgt/XXEHWr8FdV5ZCl7Tfpda/0+P
a6vzll3zr+Jj6f+3nsJ/0uP4KfXg6u9V6yrqfUmJp6f4I1X2KiVuq8YLmh1O
zxN29UGixT1T7C2t3pnGB2j3Lr0flPq+0Oo70v16WnzTlTeojke4eI6rf4LL
Lqnzf1z2ISWu+jfH9XTU
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"vdrNaSch: Dichteplot mit Intervalll\[ADoubleDot]nge 10, \
p=0.15, und q=0.2\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 30.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {216.53333333333333, -201.6}, {
      Center, Center}, {405.99999999999994, 377.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13clq3AF05WGRlaE3XnjhhRdqYYwwxmieh8rQ3Ul3Z563gazzCvexsryP
lEcIIToH9IG8ER+Hu/UPqar+9T//5d/+5l//4Ojo6N//x9HRf/3873//8fr+
59HhvT/hz/gL/oq/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+
xE/4Gb/gV3x478FHf8iOj/6IHR/9MTs++hN2fPS/2PHR/2bHR/+HHR/9KTs+
+jN2fPR/2fHR/2PHR/+fHR/9OTs++gt2fPSX7Pjor977gAcvPvpr7vHgxUd/
wz0evPjob7nHgxcf/R33ePDio7/nHg9efPQP3OPBi4/+kXs8ePHRP3GPBy8+
+mdsN/z5CX/GX/BX/A0f4xP8Hf/Ap/gn/oV/4zN8ji/wJb7C1/gG3+I7fI8f
8CN+ws/4Bb/iw3sPbj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx
+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+/HR7xl2w5+f8Rf8FX/D
x/gEf8c/8Cn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+PDeg9uP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7k
Hg9e3H7kHg9e3H7kHg9e3H589Hcpf8+wG/78gr/ib/gYn+Dv+Ac+xT/xL/wb
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcfbz7gwYvb
j9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj49ex/DvUv6eYTf8+RV/w8f4BH/HP/Ap/ol/4d/4DJ/jC3yJr/A1vsG3
+A7f4wf8iJ/wM37Br/jw3oPbj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP148wEPXtx+5B4PXtx+5B4PXtx+
5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+5B4PXtx+xL7u7esY/l3K
3zPshj+/4WN8gr/jH/gU/8S/8G98hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/g
V3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+
ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8HL24/
co8HL24/co8HL24/co8HL24/co8HL24/Yt8n5evevo7h36X8PcNu+PMYn+Dv
+Ac+xT/xL/wbn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BUf3ntw+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvb
j9zjwYvbj9zjwYvbj4/eV5t++Dq3r1v4dyh/r7ATxx/8PMHf8Q98in/iX/g3
PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3nzAgxe3
H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nH
gxe3H7Gfw0g/Yt8n5evevo7h36X8PcNu+PM7/oFP8U/8C//GZ/gcX+BLfIWv
8Q2+xXf4Hj/gR/yEn/ELfsWH9x7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hmw948OL2I/d48OL2I/d4
8OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/d48OL2I/Zze+mH
76P1fVG+zu3rFv4dyt8r7MT3D37+wKf4J/6Ff+MzfI4v8CW+wtf4Bt/iO3yP
H/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuRezx4cfuRezx4cfuRezx4
cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfsR+znv9MPPXfg+Wt8X
5evcvm7h36H8vcJO/Pjg5yn+iX/h3/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7EPhck/fBzen7uwvfR+r4oX+f2
dQv/DuXvFXbi9IOfP/Ev/Buf4XN8gS/xFb7GN/gW3+F7/IAf8RN+xi/4FR/e
e3D7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx9vPuDBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPBi9uP3OPB
i9uP3OPBi9uP3OPBi9uP3OPBi9uP2OdIpR9+rtvP6fm5C99H6/uifJ3b1y38
O5S/V9iJnx/8/IV/4zN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iw3sPbj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/suP2480HPHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7PHhx+5F7
PHhx+5F7PHhx+5F7PHhx+xH73MH0w+eA+LluP6fn5y58H63vi/J1bl+38O9Q
/l5hJ3598PM3PsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Cs+vPfg9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/Yj
O24/3nzAgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3H7nHgxe3
H7nHgxe3H7nHgxe3H7HPqU0/fG6UzwHxc91+Ts/PXfg+Wt8X5evcvm7h36H8
vcJO/P7g5xk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
8eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/Yh9rnn6EX/Cn/EX/BX7ub1jfIJ9n5Sve/s6hn+X8vcMu+HP
c3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVH957cPuRHbcf2XH7kR23H9lx+5Ed
tx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H28+4MGL24/c
48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL24/c48GL
24/Y78FIP3wurc8Z9LlRPgfEz3X7OT0/d+H7aH1flK9z+7qFf4fy9wo7cf7B
zwt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/48N6D24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9ePMBD17cfuQe
D17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fsR+b1L64XPMfS6tzxn0uVE+B8TPdfs5PT934ftofV+Ur3P7uoV/h/L3Cjtx
8cHPS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fh/ce3H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftx5sPePDi9iP3
ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi9iP3ePDi
9iP2e/bSD7/3wueY+1xanzPoc6N8Doif6/Zzen7uwvfR+r4oX+f2dQv/DuXv
FXbi8oOfV/ga3+BbfIfv8QN+xE/4Gb/gV3x478HtR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H68+YAHL24/
co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8HL24/co8H
L24/Yr+XNf2IP+HP+Av+in3u4DE+wX7O28/t+TkM31fr+6R83dvXMfy7lL9n
2A1/XuMbfIvv8D1+wI/4CT/jF/yKD+89uP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bjzcf8ODF7Ufu8eDF
7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufu8eDF7Ufs
93inH36vnt+T5Pde+Bxzn0vrcwZ9bpTPAfFz3X5Oz89d+D5a3xfl69y+buHf
ofy9wk5cf/DzBt/iO3yPH/AjfsLP+AW/4sN7D24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPNBzx4cfuR
ezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4cfuRezx4
cfsRpx9+b7ffw+r36vk9SX7vhc8x97m0PmfQ50b5HBA/1+3n9Pzche+j9X1R
vs7t6xb+HcrfK+zEzQc/b/EdvscP+BE/4Wf8gl/x4b0Htx/ZcfuRHbcf2XH7
kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH78eYD
Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4
/cg9Hry4/YjTj/w/l374vd1+D6vfq+f3JPm9Fz7H3OfS+pxBnxvlc0D8XLef
0/NzF76P1vdF+Tq3r1v4dyh/r7ATtx/8vMP3+AE/4if8jF/wKz689+D2Iztu
P7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj
9iM7bj/efMCDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceDF7cfuceD
F7cfuceDF7cfuceDF7cfcfqR/9fSj/gT/oy/4K/Y7006xifY59T63EGfI+Vz
Qfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+vMcP+BE/4Wf8gl/x4b0Htx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuR
Hbcf2XH78eYDHry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9Hry4/cg9
Hry4/cg9Hry4/cg9Hry4/YjTj/w/ln7En/Bn/AV/xX7P3jE+wT7X3OfU+txB
nyPlc0H8nPcZ9nMYvq/W90n5urevY/h3KX/PsBv+fMCP+Ak/4xf8ig/vPbj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7b
j+y4/ciO2483H/Dgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H7vHgxe1H
7vHgxe1H7vHgxe1H7vHgxe1HnH7k/630I/6EP+Mv+Cv2e1mP8Qn2ezB8rvkp
9rmDPkfK54KcYT+35+cwfF+t75PydW9fx/DvUv6eYTf8+Yif8DN+wa/48N6D
24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9ePMBD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17cfuQeD17c
fuQeD17cfuQeD17cfuQeD17cfsTpR/6fSj/iT/gz/oK/Yr/H+xifYL83ye/B
OMU+p9bnDvocqTPs57z93J6fw/B9tb5Pyte9fR3Dv0v5e4bd8OcTfsYv+BUf
3ntw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcfbz7gwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zjwYvbj9zj
wYvbj9zjwYvbj9zjwYvbj9zjwYvbjzj9yP9L6Uf8CX/GX/BX/A0f4xPs9+z5
vUmn2Oea+5xanzt4hn0uiJ/z9nN7fg7D99X6Pilf9/Z1DP8u5e8ZdsOfz/gF
v+LDew9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/bjzQc8eHH7kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7
kXs8eHH7kXs8eHH7kXs8eHH7kXs8eHH7Eacf+X8o/Yg/4c/4C/6Kv+FjfIK/
Y79n7xT7PRg+19zn1J7hc+xzQfyct5/b83MYvq/W90n5urevY/h3KX/PsBv+
fMGv+PDeg9uP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/s
uP3IjtuP7Lj9yI7bj+y4/XjzAQ9e3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e
3H7kHg9e3H7kHg9e3H7kHg9e3H7kHg9e3H7E6Uf+30k/4k/4M/6Cv+Jv+Bif
4O/Y72U9xX5vkt+D4XPNz/A5vsA+F+QK+7k9P4fh+2p9n5Sve/s6hn+X8vcM
u+HPV3x478HtR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H68+YAHL24/co8HL24/co8HL24/co8HL24/co8H
L24/co8HL24/co8HL24/co8HL24/co8HL24/Xg7/CZYs0AQ=
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1: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
Get3zcQs4tTDmMUz7YP+XjF0hUxc6JnJh83si+cCm5YKXTITd5YJXToTj1Bi
MGjZ0O6ZeNct0xqL+B5zP+AWcerh4BKZ8uAgc+PTz8tlmgvGrBK6cibWoCtl
YhbKXnk3cH/57OEQ51g+E4NWzVQPk1bL5MOMHpnWgFnk4vM9J3y3AH8eCrNW
z1QDb/h+6DUy8Wid0LUzsWbdTD7sWS+TD2s2DN0g03u0d+j6mZhH3VqZ+nnr
0K0ysY049dzFvplicJHcNTOxY6NM88KmzUI3zcSaPpl82LN5Jh/ebJypBk5s
GbpFpvcl+2JPMIj1icER4tTDQebeJFN/9Mu0J/p/YOhumXpxm0wxniPfe39y
Ju70D90uE492CN0+E5NQYjBu20z1cGvHTHmwcqdMPpxgnV0zcZD5qIE1u4Tu
nIlJu2faE6zZI5MPe/bM5MMa5hiQiQV7h+2ViYnMwXqwiTjzwiPi1MN4ngHP
EXbs43pYsq99+LR/2H6ZuDXEPjwaah8eDbNPLx0YNiIT16gb7Ls73Hnc5QPs
544PysSmEY7BiCPDjsjEplFhIzOx6RD7sOZQ+7DnMPvw5uCwgzL190HeE7w4
3HmdPTc+fDnK6/3v3Rk2OlOv8h3NfIc3PBofNi4TX462D2+OsQ9rJoVNzMSk
CWHHZeIadWMzcX2Qn29Xx4/NxMGxXntRz0E9fJnseeHQ1LATM/EI5fujl7Sy
V/r81Ez3FQad5BpYw/2dlolHx3veLj4r5+/uODUw4zTPBW9Ot8/nyXfL8x3z
sOmMsOmZWHWmfRh2ln3YdLZ9+HJ+2HmZ+Dvd88Ksc5wHj861DwuuCrsyE6vO
c2wDj12RiTcXh12UiVOX2IdTl9qHO5fZhzUXhl2QiXkXeE/w6XLn9fbc+PDl
au+DPplhn169I+z2TD10jWP02ANh92fi1PVh12Viz41hN2Ri0A2OwaFrXQ+n
bnIe3LrZ/maegzy4eYtjMOtW+7Dn7rC7MjEIvTMTV+70Xtfyc+L88Oge18CI
+8LuzcQsznRbJvbd5jV2dJwa3v/0Ij22s89KPffpu7BvMzGLf7vp4UzMetQ+
zHrMPgx63D798HTYU5m4SN1DmVj1hPNg05P26efXwl7NxKmnHBvhsVcycer5
TPcVTr1gH069aB8evWQfDnGvn8nUo894T3DqZecd4Lnx4crr3gfP4g379Pqn
YZ/4Ob3p2K4+04OZOPVO2NuZGPRe2LuZ2PSuYzDuLdfDqvedB6c+sH+I5yCP
Hv7QMXr6I/vw5cuwLzJx6vOwzzLx6zPvdYD3xd2FSV+5Bg59E/Z1Jj5xpo8z
cepjrzHBcWom+fOnBsZ8n+lO8B3zfEcz39kMt34K+zETm362D3d+sQ+HfrUP
d/4M+yMT56j7IRPPfnMevPvdPj1dxDp5Ln794Rh9zliWi03/hv2TiU3/2YdB
/A+n+DAoyeXDqr/D/srErL+8J3iU5sqDT8yNT4+VufZBz1W5fPp4ztA5cnGq
zhXjc+K77vnOexjUDm1ycWjm0Jly8QglBtdaueph4Sy58uDUrLl8eMcc5MGs
2XLF4NTsuXxYM3do51xMQufKxSaUvZ7h58T54dE8uWrgzryhXXKxiTN1ysUy
lDXgFHFquCub5DonTJkvVz28WSB0/lysWih0wVwMWziXD6e65vJh0CK5fJi0
aC6fu9stdPFcTEIXy3Wvl8gVg1OMUUMvLpkrBjt6hC7nf3OOf3tuqVycWiaX
D6e65/Lh0bK5fHhEHT68WCF0+VxMQpkXnjEf68FizseZYcyKuWrg1EqhPXOx
aZXQlXOxadVcPgxaLZcPg1bP5b/uHlszF+OoYy5YtUauPLjYK5cPs8jFh01r
56r/33s9155g0Pq5vl8VxqB83yqsQfnOeN4PfG58lnCrd64amEWceWHWBrli
MGvDXD6c4r5v6Dy+qx1GwJVNc90VPvtjwo7OxarNQ/vkYtmWoVvk4tRWuXwY
tHUuH+5sG7pNLsZRt1kuVvXNlQen+uXy6efdQnfNxTDqiMEPxgbk4tQOodvn
4tSOuXw4tVMuHx7tnMuHU/1Dt8vFQpQ9waldcuXBJubGhysDc+2Dfts9l08P
DwsbmqsX98gVo8dGhY3Mxam9w/bKxaB9w/bJxaZ9HINxe+aqh1WDnAcXB9uH
fcxBHvzazzH4tb99ODQi7IBcPEKH5+LNcO8VTvOcOD9sOtA1MOjgsINy8Ysz
DcnFwSFeYxbHqeGdw+fGnZjNZ6X+BL8Hvjer+A7xw3Ix7Aj7cOpI+zDoKPvc
2XFhY3MxjrpDc7FqtPNg0xj7MOKEsONz3fWxjnXz2ORcbDo2132FTcfZh00T
7MOdifZhAPd6fC4WjPee4NMk5y3uufFhxxTvA5acaB8unB12Vi5OTXVsDp/p
kFxsOjlsWi4enRp2Si5uneIYXDvJ9XDrNOfBptPtd/cc5MGI6Y7BjDPsw5rz
ws7NxSb0nFzMOsd77eR9cXfh0fmugUn8jHBBLoZxpjNzsexMr9HLcWr4c1J+
X7G6eXNJLo7wvdp8Ly3ffQt3rgi7PBd3rrQPd66yz926NuyaXO+nGWFX52IZ
dZfl6t07w+7Ixa2rXc/9vsux9ZzLd1NzZ6/zvPDo5rCbcnHnFvtw51b78Ol6
18Ce28Nuy8XBa7ynbb0+sX6OU7+l574xV8/d7T3R80+GPZGLU/c4Rp+9EPZ8
LgbdH3ZfLg49GPZALh494Bhcu9f1sPAh58Gph+3v5XUez8W++1wDpx4NeyQX
h57ynuDO0/bhzjP29/Qcj+VizXNhz+bi4CNebw/HmXew49Rv4WdwQy6OPO96
GPOizwyDXg17JRdfXrMPb163z918O+ytXLx5M+yNXJyj7uVc/fpZ2Ke5ePSG
6+npzx0b7tyXcvXiO54XBn0Q9n4u1nxoH9Z8ZB8mvesaePNJ2Me5euYt72mc
1yc2xnHqYdAX3gf9yvcy873d9Plv9od5XzwXWPNN2Ne5ePNd2Le5uPOtY3Dn
h7Dvc3HtS69BT/4T9ncuFn7venj3lfMmeG58mPWj54Ipf4b9kYs16O+5mPS7
98p/O+H37fx+/SSf4+dc3PnL9dO9Pj7s+8lrTHUuPvz413uFQfyltP/8efLd
8nzHPKxKQ5NCPMoK+bAmL+TDnqKQD29aoXUhtlHHvDCsLJTHzzRVIZ/enjN0
jkKcoo4YjGCsUyE2zRw6UyE2zVLIhzWzFvJhz2yFfHjTDm0KcQdlT/Bi9kJ5
8IO58emNzqFzFeqVuQv59OtioYsWYsk8hWL0WffQZQqxZr7QeQsxaIHQ+Qtx
CCUG17oUqodVCxbKg48LFfLhHXOQB6cWLhSDTV0L+fBlidBuhTiELl6IRyh7
hc08J84Pg5YsVAMnlg5dqhCDONMihfiFsgYcIU4NPx/Qi+/lYgpnpZ73z3++
N3CK90qPQpxaoZAPd1Ys5MOhnoV8+mrV0FUK8Y665QrxaKVCefBp5UI+fb5+
6HqFOEUdMXjB2LqFONWr0H2FU2sW8uHOWoV8OLR2IR/2cK9XK9TrKHuCHesU
yoMlzI0Pb3oX2gfPYoNCPr3bN3TrQs9pw0IxeM+Zli3EnU1CNy7Eo81CNy3E
JJQYjNuoUD3c6lMoD1ZuXsiHfcxBHvzaolAM1mxZyIcv24ZuU4hPaL9CnELZ
K+8Q9sXdhUnbFaqBC9uH9i/EI860VSFOoawBm4hTc7jvxbvmyA6F6uHKjoV8
uLVr6IBCPNqtkA+PBhbyuUd7he5ZiEF7hO5eiHPU7VKod4eHDSvEM+IDfb8P
cAwmkrtzIdbsXWheeDQ4bFAh7uxnH+7sbx8+7eMa2DM0bEih+82+2FPL6xOr
HKeePhvhfdC7Y8JGF+r5sfb5bPiOe77zHu6MDDu4EHsOCRtViEGjHINBh4cd
VohxB3oNPoObPBdcPNT1sO8g583qufHh1xGeC74cHTa+EHfQcYX4NM57zfyc
9i3EIM5xVCEGHeN6GHSsfTh4pNeYx7lH+t7c7L2mno/nC2MmhB1XiFvHh00u
xKYT7MOdKfbh0In2ubMnh00rxDnqJhXi0VTnwaeT7C/m+MRCd32aY/T5OWFn
F2LT6YV+JoZN0+3DoDPsw6Az7cMqfnY+pVB/n+I9waOznLeK58aHK+d6Pdh0
fth5hXqYf+uOf/MOHl0UdmEh7lxsH+5cYh/W8Hc2Li/EvMvCLi3ENeouKMTy
iX6+6zpOfS/HWXt9z0E9nLrS88Kha8OuKcQjdEYh3szwXrv6c+Ozh03XuQYG
ca+vL8Svqzzv6j4r5+/jODX8GQnv40vMmFsK3RU+++/DvivErdvDbivEpjvs
w5077cOYe8PuKcSdu8PuKsQ56m4t1P981z3fed/fcerp8ycd6+tc9rFT2H2e
F049FPZgIU49bB/uPGIf1tzvGhjxWNijhdh3j/e0p9cntrvj1NMPT3kf9Orr
Ya8V6t037NNLH4S9X4hTz4U9W4g9L4Q9X4hBzzsGn14Ke7FQzz3tNfjZcCc/
s6GOU0+vP+O8wZ4bH56+7Lngy9thbxXiE/pmIU696b0O8HN6oBCDOMerhfj1
btg7hRj0nn1Y+YrXGOFc/Mn+/L8txPIH/Hzhyod+FrCK75bnO+Zh2Gf2YdPn
9umBr8O+KnRfvwz7ohDjqPu4UN/+FvZrIZZ94Xp6+nfHxjj3o0K99Y3nhU0/
FLqvsOlH+zDoJ/uTfA5q4M4vYT8X6qGvvKdpXp/YVMephzF/eB/0N9+7zvev
w4WqlD/a++K5wKZ/wv4uxJ3/wv4txKN/HYNBCf/IRCne/ek1+D0P95j7AbeI
Uw8H/3LedM+NTz+npeaCMU1oqxRr0LoUs1D2yrvhfX/2cIhz5KUY1C5VD5P4
u2j4MCMrtQbMIhef7+Di+wP5vkAYw78Zyv+3cYD//VT+HVV4NEeMdSrFmjlL
+bBnrlI+rOkSOk+p9+jcoZ1LMY+62Uv1M981zXdOwzbi1HMXFy8Vg4vkzlaK
HfOWmhc2LRi6QCnWLFTKhz0Ll/LhzXylauDEIqFdS70v2Rd7gkGsTwyOEKce
DjL3/KX6o1upPdH/K4X2LNWLS5SK0Vu9QtcoxZ2lQ5cqxaPuocuUYhJKDMYt
Waoebi1bKg9WLlfKhxOss2IpDjIfNbBm+dAepZi0cqk9wZpVSvmwZ9VSPqxh
jhVKsWD10NVKMZE5WA82EWdeeEScehjPM+A5wg7ORz3sWbPUmWHVuqHrlGLQ
+qHrlWJQ71I+/bNx6Eal7umGoRuUYht1a5fq4X6hfUvdY+LU09/blIrBQXLX
KtWXm5SaFx5tHtqnFF+2KOXDmy1L+TBm01I1sGHr0K1K8Y59sSe4w/rEYAdx
6uHltqX2QY/yndcDS/U8332Nz7uEffFc4MsOoduX4s5OoTuWYg9KDPbtErpz
KcZtV2oN+nBQ2L6luEWcetjXv1Qe7GNufPg1oNRccGXvsL1K8QXdsxSfUPbK
9zrz3ad8Byqs4Ry7lWLNPq5PvT4+/Nq11Bpwilx8mDHYe4WV+4ft53vAd9fz
HfbwaWjYkFLcGmYfHg23D48OsA9vDg47qBTXhnheuDXCefw/ZAfap7fHhI0u
xamDHOvisaNKsenQsENKsekw+7DmcPuw5wj78GZU2MhS3BnpPcGLI503j+fG
pzfGeh/0yjj79OuJYVNKsWS8Y/TZ6WGnlWLNsWHHlGLQhLDjSnHoOMfg2tGu
h1UTnQcfJ9lfyHOQB6cmOwabjrcPX6aFnVSKQ+jUUjya6r128nPi/DDoZNfA
iVPDTinFIM50Qil+/V9LZx23ZdG04c+6t+wO7MQWE1tQEQwM7FZE7O4GsQsV
FDGxUFFRxO7uztf2tbsDRb453vP8Y37D+czO7lx77Rz3/SA/9yyvsbTj5PBd
gV7s0xFThjmfzyXOCOcGTl0SNqIjTo20hjuXWsOhy6zpq6vCruyId+Rd3BGP
Lvc4+HSFNX1+c9iYjjh1pWO9/LObOuLUdWHXdsSp663hzmhrOHSDNezhXI/q
qNdHuSbYcaPHre+50fDmFtfBXtxqTe/eH3ZfR/s01rHl/UwXdcSdcWG3d8Sj
8WF3dMSkOxyDcbc5H27d6XGw8i7rjT0H4+DX3Y7Bmnus4ctDYQ92xCf8Ax1x
6gHX2s11cXZh0sPOgQuPhj3SEY94pns74tS9XmMHx8nhu2Ef7w0cecz5cOVx
a7j1TNjTHfHoWWt49Jw15+ilsBc7YtALYc93xDnynuqod/8T9k5HPHve+Zzv
dx3bzWOf7Ig1L3teePR62GsdcecNa7jzpjV8esU5sOftsLc6Ot8vuqZDvT6x
gx0nnz57z3XQu1+FfdlRz39tzbvhjnvuvIc7H4V92BF7Pgn7uCMGfewYDPo0
7L8dMe59r8E7mCdpruMdJx/2feBxR3tuNPz6zHPBl+/Cvu2IO/hvOuLTN651
f+/Tqx0xiOf4oiMGfe98GPSDNRz83GsM8lg052XepFr383zsL4z5KezHjrj1
W9ivHbHpd2u484c1HPrTmjP7T9jfHXGOvF864tFfHgefJlif4/jPHZ31vx2j
zztR11RJbOJ/IDepIzZNlqRh0ORJGgZNkaRh1b9hEzvq74muCR5NmTQOPjE3
Gq6kpPVgUw1fknp4Vt9nCo+mCT91EnemTdJwZ7okDWv4vJ8xiXkzhJ8+iWvk
tSSW/+z9hVvEyYeDxFkbfjEH+XCKO1WZFw7NEX72JB7hZ0viDZ5az/R7493D
pjmTcmAQ53quJH7N4rta//e9Ien54Rdxco73vWfccQZj5ks6K7z77bgTOIlb
C4ZfIIlNCyVpuLNwkoYxXcMvlsSdRcMvksQ58uZP6n/uuufOe7hFnHz6fMWk
GExkLHU8EX9ePGleOLV0+KWSOLVMkoY7yyZpWLNEUg6M6BZ+uST2URc1wQ/W
Jwa3iJNPP6yUVAe92jN8j6TeXTdJ00sbhu+TxKlVw3dPYs/q4VdLYhCeGHxa
M/waST23ctIafDfk2dgz+EWcfHp9laRxMJG50fB0raS54Euv8Osn8Qm/XhKn
8NQKp9mnJZMYxHOsk8SnDZLyYVDvJA0r105aA64xFk1P8/63SWI587G/cGWj
pL2AVdwtzx3zMGyzJA2bNk/S9MBW4bdMOq/9wm+RxDjyNknq213ZmySWESef
nt4tKQa7GbtxUm9tnTQvbNo+6bzCph2SNAzaMUnDHp6DHLizc/idknqIuqgJ
JrE+MZhFnHwYs3tSHfQ3965z/zpcONgaNlMX+wKb9gwbkMSdvcIGJvFooGMw
aJ+wvZN41z9pDX7nedLnYyrHyYeDeySNm8xzo+nnfT0XjDks7NAk1uAPSWLW
Ia6VzwbOL++++TkOSGLQ4c6HSUdYw8f9w/ZLYtYB1nynnGT+whfuhOb3H+7M
5k5b7ruFR8eHHZfEmhOsYc+J1rDm5LDBSZ+jg8JOSmIeeccm9TN/d8LfoXRx
nHzO4nmOzeaxxySxY4jnhU2nh52WxJozrGHPmdbw5hTnwImzw85K+rwc7Jq6
en1iizpO/oKe+9Sk/hjqmuj/K8IuT+rF8x2jt64LuzaJO8PCLkzi0UVhw5OY
NNwxGHeB8+HWxR4HK0dYd/c6lyVx8ELnwJqRvKskJl3pmmDNVdawZ5T1Kp7j
0iQWXBN2dRITL/F6KzvOvGs6Tv4C3gP2cW0/H/mw53o/M6y6KezGJAaNsYZB
N1vTP7eFjU06p7eG3ZLENvJuSOrh+8PuSzrHtzif/n7AsXU9dnRSX97ueeHR
nWHjk/hylzW8udsaxoxzDmy4N+yeJN6NdU1beX1i/Rwn/3+fl66DHuXO62eT
ev55656ui32BL4+GPZLEncfDHktiz2OOwb4nw55IYtxDXoM+fC3s1SRuPeF8
2Pewx+3gudHw6ynPBVdeCnsxiS/4F5L49IJr5bvD0Um9vYef45kk1rzs/P28
/itJ/Hraa/T3WDTMeN21wso3w97w++Tueu6wh09vh72VxK13rOHRf6zh0bvW
1PVh2AdJXHvL88Kt9zwOHr1vTW9/HfaVn+cDx072z75MYtN/wz5JYtOn1rDm
M2vY87k1vPk47KMk7nzkmuDFFx432HOj6Y1vXAe98q01/fpX2J9JLPnOMfps
Mv6nyFms+THshyQG/Rz2UxKHfnIMrn3vfFj1i8fBx1+tz/AcjINTvzkGm363
hi//hP2dxCH8hCQeTXCtx3mfeH4YNNE5cGJS2L9JDOKZ/kji1x9eY4Tj5PBd
gV68I4kpPCv5fC5xRjg3cIrPlSmzONXJ0nAnZWk4lLM0fTV1+JbFO/KmyOJR
yRoHn2qWps9nCz9rFqfIIwYv+NksWZyaPuu8wqkZsjTcmTFLw6GZsjTs4VxP
k9XreGqCHTNnjYMlzI2GN7Nn1cFezJGl6d1Fwi+ctU9zZsXgPc80eRZ35g7f
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
4DeoYhaeWvls4Pzy7uEQz7FuFYM2rMqHSfweg4YZPavWgFmMRZ9gZvD7AXzh
Tmh+/+HO7LV83y082iL05lWs6VelYc+WVRrWbBt+m6rP0a3Db1XFPPI2q+rn
/uF3r2Ib8S19FveoisFFxm5axY7tquaFTTuF37GKNTtXadizS5WGN9tX5cCJ
3cLvWvV5SV3UBINYnxgcIU4+HGTuHar6Y4Brov8PDTukqhf3dIzeOibs6Cru
7B22VxWP9g3bp4pJ+zgG4wY6H27t53Gwcn/rab3OwVUc3Ms5sObAsAOqmHSY
a4I1h1vDniOsp/EcB1Wx4KiwI6uYeIDXm9px5p3JcfJhPHvAPs7i5yMf9hzr
Z4ZVJ3J2qhh0kjUMGmRN/5wSNqTqnJ4cNriKbeQdX9XD54cNrTrHg51Pf1/g
2Bwee1xVX57qeeHRmWFnVPHlLGt4dE7Y2VWMOc05sOG8sHOreDfENS3p9Ykt
7jj58PJC10GPcuf1lVU9P8p6dtfFvsCXi8MuquLOJWEjqtgzwjHYd2nYyCrG
DfMa9OHosOuruDXS+bBvuMd189xo+HWZ54Ir14ZdU8UX/NVVfLratfLdoW9V
b6/m57iiijXXOb+H10fDr8u9xqoei4YZN7hWWHlT2I1+n9xdzx328OnmsDFV
3LrFGh7dag2PxlpT1x1h46q4Nsbzwq3bPA4e3W5Nbz8U9qCfZ5xj2/pnD1Sx
6e6wu6rYdI81rLnXGvbcZw1v7gwbX8Wd8a4JXtzvcdt4bjS98bDroFcesaZf
Xwx7oYoljzpGn70Z9kYVa54Ie7yKQU+FPVnFoScdg2uPOR9WPe1x8PEZ6509
B+Pg1LOOwabnrOHLK2EvV3EI/1IVj15yrZt7n3h+GPSqc+DE62GvVTGIZ3q+
il/Pe439HSeH7wr04ulVTHnD+XwucUY4N3CKz5V3qjj1rjXcec8aDr1vTV99
HPZRFe/Ie7uKRx94HHz60Jo+/zbsmypOfeTYKf7Z11Wc+qzqvMKpz63hzhfW
cOhLa9jDuf6kqtc/cU2w4yuPG+K50fDmO9fBXnxvTe/+E/a39+kHxw7xM71V
xZ1fwn6u4tFvYb9WMelXx2Dcj86HW797HKz8w/psz/FTFb/+dAzW/GUNXyaF
/VvFJ/zEKk5NdK0Huy7OLkziwnZy4MLk3PfexCOeaUIVpyZ4DdhEnJyFvBfs
DRyZoikfrkzZpOFWCZ+beFSbNDxqTZpzNF34aZsYNE34qZs4R15q6t05w8/R
xDPi5HO+52qKwUTGdppYM33TvPBo5vAzNXFnliYNd2Zt0vBphqYc2DN7+Nma
zjd1URPsYH1isIk4+fRZl6Y66N2u4Rdr6vnFmzTvZsfwOzRxZ77w8zaxZ4Hw
8zcxCE8MBi0UfsEmxs3dtAbvYKemueAicfJh3zxN42Afc6Ph18JNc8GXpcIv
2cQd/BJNfMJTKxxnn2ZsYhDPsWgTg5ZuyodByzRpOLhI0xpwjbFozsvOTbXy
OcF87C+MWS78sk3cWjH8Ck1sWqlJw52VmzQcWqVJc2ZXD79aE+fIW76JR92b
xsGnVZs0HCTeremsk0eMPl8//HpNbFq76TsxbFqnScOgHk0aBvVs0rCK785r
NPU3nprg0bpN4+ATc6PhSq+m9WBT7/AbNPXwVuG3bOLRRuE3bOLOxk0a7mzS
pGHN5uE3a2LepuH7NnGNvD5NLOdZ2V+4RZx8OEicteEXc5APp7ZomhcObRt+
myYe4bdu4g2eWvls4L3x7mHTdk05MIhzvX0Tv/o1zfu/7w1Nzw+/iJPD34/w
edzXjNml6azw7i8JG9HErd3D79bEpv5NGu7s0aRhzF5hA5u4s2fYgCbOkbdr
U/8fGnZIE7cGOJ8+P8wxmMhY6pgqbG/PC6f2D9uviVMHWMOdA61hzT7OgREH
hx3UxL6Brmlar09sasfJpx8Odx306uCwQU29e7I1vXRm2BlNnDo67Kgm9hwb
dkwTg45xDD4dH3ZcU88d4TX4bjiV92x2x8mn14/0uJk9NxqenuC54MupYac0
8Qk/pIlTQ1xr9j7t28QgnuOkJj6d5nwYdLo1rDzRa3TxWPQKfv8XN7F8X+8v
XDnLewGrzgs7t4lhQ61h0/nW9MDwsGFN5/XCsAuaGEfeOU19exV708SyC5xP
T49yrKvHnt3UWxd5Xtg0sum8wqZLrWHQZdbL+znIgTtXhF3e1EPDXNNqXp9Y
d8fJhzFXuw76e2zYrU1cuM16MdfFvsCm68Oua+LODWGjm3g02jEYdFPYjU28
u8Zr8DsP55jzsZ7j5MPBaz1uHc+Npp/HeC4Yc0fYuCbW4G9vYtbtrpXPhjP8
7vv4OW5pYtB458OkO61hxs1eo7fHomHK3WF3hf0/jb+oow==
                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnc1rXVUUxR8tgrXgq+gk0klQ+heoYAe5FQTBgYNWCxUUFISHEyWzZiat
ISMrRXQqKIj9sKASJILGglKcCIK1IkqFQDEWI06EZlDFFgdCSG/eXlm/dZJO
CpvLvffdc87ea6+1zsnk8y8dfGHHYDD4ZPdgsPOf/7848eKllV0r3Z2jX++Y
v+tSd+rNiR/3zL3dnfjyofdHZ652u9458sPU0jfd7fuf/u7kaye7quv7xi8/
9uDVv46vdDs//P7T7tnL3anh/St7vz7T+/q+8ar3r/q96njV+1R9h6p5qJ6f
Vd9t8O+/P7rr5/ZPv/vRUvfUo2+9cs/sx+vGz48Ozw+PXukuXji0OnFs4b/4
7OT0tZmp5e70vrmF4YHFda+viv//PWnrru88qYo/s7pj5pcnlrvff1t8+L7H
P+/+vPe2b4cPvCy/z1rXV8WfPPvqkdF7Szfj57oPnpv96u5Hjpf9Xto67bt+
q+a5a3yrxr3v9elxdd6rquMp60td96vuo84bG8UJ494/BU9W1dOqOkvL2+r8
78rzLlyhXtet9l+09UiLu9Z11fur8UBKHlDjATVOUOOTFB5A3b+r12nKfVLW
NQ230/ixFDxc9T5VuHet+7zx2Z7pn6//dHNeDAY3rn9d/lwX71e1rje6Hsfl
vdU8ubpfpr1neh5z8aXq35WCq1N0VTUOqeJXq3QKNR6oqlM0no12fVW8Kr+5
dXkXrqDgjXQeTM2Hu3jF9Lrs4tVp+IEWd+FMNR5W1zUXzm+Vx0jDA2qcsNl8
Y7ou5sK3tPuk+wFovpF0/2f6/E/JG6511+p4ufQFt8+/yv8/Lk6g9TXq/U00
XxONJ6HxkK77p/iWaftoaH2Ey9/imj/q59J8qm48oNYF6DpCVV5y8WApcVr/
7nofWr2g7Zek7Udz6Vy0/iJ9HF11gaajqffNuXWNzeYNaD7AlOem9F80Hj6F
n6H1ia66mZIfaH6/9H6qSu924boU/1W6n3+rrV+aXkmLq/1OLp8GTZ9N6eNo
eYnWR7jwNi1elX/WyidVvsqqvJSCQ2jrK6XPdfHYKX3cVtOLXf4E1z4LWr/j
wofbce93pvVrLj+Vq9+swmO0vp52jh+tDrr8qOp9eelxl78r3Z+81eZJyr4V
Vx2hnQtBO3ciZT+dq//qy8+o/aW0cy3U/TLtubT8X7WuafoF7bzoVvFGq/1X
yvdMwWM0XOHSbWm+WbVP1XUeoHuf8q3GaXgmRddL4bta3U+ans9TdMyU75BS
99V9DW3/i7o+pp/vl/7+6XVKnQdoPJJLF0vBgTQfeAqPke5vd+kptHGvWnfp
9ZHW19P0Glf+d/ljU/ZB0PwJKf5J2n4cV71z1VNXHaTFU8bF5Q+k7dt14Rla
XK2Du3jjFDycgjdoeYCma6TgKzVuqfJb0uovjX9w4QRXfU/hH1zvmeK7SM/n
KfW6Vd2HNu6u/Ufp+IHm3+gbT8ctNDxG80+m4IdW+Qra+SS0PjHdT96qPl71
u1rdt0jjE1J0Iho/5tofrfZ30fp3V9zli6Dhq5T6TtNz1Xk+pY6n8+p9n6s+
R9HFb7t08xRdkoZPaHjDhQ/Xul5dr2l1Wf3cVnVe2rxN8Y2on5vCw7TqY6fp
d636smhxmp5Cu0/K92x1XGj9tetc/e04c/7T8rnan0bTSV1/jzUlTsMPVfmW
9vdNaHks/Xel47G+8zO9X3atU5eeTvPv0eoLTReoqvsp/CENl9J03pQ4jadK
xxs0nEDrW138rZqXVvusqvruvv2v2o9E00nVOiaN/28Vt7u+g/r3ur6Dq29t
tS7TdCVa/+jSo2n7f7d9Gjfiav98et6g9de0PEnjh2n3oe0bouEx17xS4+EU
XOGq77TzqVr1ddPydoqfh6YL0PSU9HXh4oVouk+6LkkbR9r5Y+r1nuJvV+MB
Wv+YUn/T8yrtfIMq3Wq9+PnR4fnh0SvdxQuHVieOLWz4+r73udW/P5heX9Tz
kPYdUvp6F05I1wto9Vrti0vRwdV8QrquqvafqPm0lPP9Us6nTemLq+Lqc1do
OhEtv6nHPd0f6Mpj6vu48DwNP7j4f1pfoJ7PG+UBNvucPdr5ErQ+graft1Xf
ctW40PI8LS+59JFW8byLr6PhZxpPS+MN1OczpPuE1etL3d+5/Nt9cUUVDqGd
r0hbR1XjUq0bjvs+6u/v8smn6+M0/EPD4Sk8Yat9mRpXuOqXyw/m4qNc/JLL
X6fGUdU84bi+oBTcSPNvp/BXLr+Ka13TeB7XeG3jE6/PwYU31PhKrXNV4RN1
fnDhimo8oMIPNF4xJZ+k6zIu/ketx9FwCG280nUKGu9BO5/c5UNoFX+6vls1
zzA7OX1tZmq5O71vbmF4YNGGK1rlqWh1Id0/4+L9aLp51X3+BpN+MIw=
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"vdrNaSch: Dichteplot mit Intervalll\[ADoubleDot]nge 10, \
p=0.15, und q=0.4\"", TraditionalForm], PlotRange -> {{1., 100.}, {1., 30.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {649.6, -201.6}, {Center, Center}, {406., 377.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"vdrNaSch: Fundamentalplot mit p=0.15\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {216.53333333333333, -604.8}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlmHuIlFUYxrcEg6AgEAoEo8AwMAoCA0GOQWAgFAqBgWAYBRWSgRAkBIZC
YSCZGBWGlSQlSVtalpr3y6pre5m9u5eZndmdmb2FsIFg0J7zO+/z0nj++fb9
3vvtOd/sIxvfXvva3U1NTU/c1dQUn43nxYXVI9teeCtsXXB4VfG9PQF6azi2
aMfEmmNf5ffbM30483eGLz6P5/vwQDqfZLkjsgP/91B5cPX7zeXPsv6fWf/L
cGDzint7vj0tP5Nr4l9nsr2vs53z4eLuDUtvXfhGNM8D2X5LeGrv7Y0tT34X
Hl+/6+zskmvZ38FwbnbJ3JsLitP4+D8UyL4tzNu3rO2NeT/meNqUp9HPzHH3
LfspRO31uzpyfM2iibs5++vK8f4cHo5mFnWF/Z3zl2/a/4toq9Oc8eghvJTO
0RDfLjjck/P5NfwTzc32ZrnfQuSuKvbn/Jw+te7mzsWnjom2uhu9pX/lwfu2
/JHf9+X8j4d3YnqbB3NdToQU1oKhXI+TYW0qRG8YGoznZGi9Fs8N9dH0P43p
7j4lmnqdznZvqM8p/R0DuX5nJD+XzFxGTtscmL+XY3rrzopPfc/K3tPpnFN+
1Puc9O9PBTiv+tocmb1YjYXV88qfflwIib2iX3NkfPpzMc/PSEjl2ndR/ujX
JeX/bjqX5I/+XQqJvX441/lyrutQ7udl5ROru2Fpi+zb3Ft898xl2zn/imj6
fUX953lF8dD/q+KfOB7PVfFtT6y+Kd291+Sf+WhVPjxbG+alVfqrU4Ova57J
87rq+VhK+C/ZZ56ctj01+8xXm/q5KTW8Tf5sb81fKkd/W8P8tat/z6dCtKse
zGO76nE0jseRdsXDfDr9aDod6hfz6rThhPlnfjtUv39jeW93yD/z3Kl+vpkK
3qn8me9O4QcPl2feC/L3XDoF4RPzX1D9UrrNBeET+1CQv//jViHvR5f4Hy+O
DeySPfPzejrdIY3vrS7ly/50K36TM332qVv2Cynd7gY87FF9n43tXel+2bce
2bOn+WH/epRPWoeFveq3+TV/H30YT6/es5+90jc547OvffL3amzvxj7xLW7j
M859ssc+90ve+mp89rtfc3joh3h8bmyOrB4PpQUckD/2f+COubQ5Ag8GFGca
55uub3WyuXglJXxD+uDFnXti8YMfg4ovpbt8UPHbnBid2ntwUPrgi/MNR2yP
wZsh8T+I67vN+Yaz1reZ6XiGlA94NKx8DKcNV8CnYeWX2tsyrHwMV8w/8zWi
eoNfzqfPjkPgmfOZP9cnjhHhKPPo8oyHy5PniOIH/4qSZ16LwlniKEqf+S1K
H3wsqj7MifPBy6LqyXw7Td2Kqh/zXlI84GlJ9WD+S4oPfHWafSjJHnGXdI+x
HyXlA/6WGnC/pHsYPC4pH/ZnVP6Ic1T67NOo7kHwerThHnU++O00++b2qavr
s39Og+9lyfO+rHsevC9rPtjPsvJhj5zPvpZln/vAafa3rPpyP5T1HcI+V2SP
PldUT/bb+dwfFelTh4r8cZ9U9F3H/leUH3tW0XcWeOD63DcuDz6MKR7unzHp
gxdj+s4D58ZUX/BjTPFyP7k+eTmf+2pM35ngi8vzHBcfvBnXdy/32bjsgT/j
0ud+G9d3O3jkfO67ceUDPjmf+8/9k2dV3+ngVVXf+eCV09SxKvvgldPgVVX+
sFvV7x7wqqr+glcuD15VlR94VZN98KqmeNjDmuyBV06DV7WG3wk1/U4Cr2qq
B3hV0+86njX9DgOv6pIHr+qKB7yqK37wqq76glcuDy7VFR945XzwyvnMdV3x
gVd1xQdeTaje6E0oX/BqQvGBVxOyB165PHjlNHjlNHjl/sAr54NXk4oPv5OS
B68m5R+8cho51wevnA9eTep3O3g1qf8TMM7uD7yaEh+8mtL/CcArp8Erlwev
puQfvJqSffDK5ZlbtwdeGX97xqsp/R8EvJqWPng1LT545XzwyvngldPg1bT8
8X5a8YBXToNXJr8n131G+uDVTLD/H4FXzgevnAavZhQPeDUj++CV2wOvXB+8
chqpvyX/H8tWQGM=
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"vdrNaSch: Fundamentalplot mit p=0.3\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 0.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {649.6, -604.8}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8998881099526567`*^9, 3.8998885344838753`*^9, 
  3.899889128765687*^9, 3.899897510631221*^9, 3.8998981231230636`*^9, 
  3.8999245685312953`*^9, 3.8999712724153748`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"d33de0e9-8fe7-4422-a43e-7d1dd250595e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "vdrplots", "]"}], ";"}]], "Code",
 CellChangeTimes->{3.8995696253376417`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"148add25-5d13-4145-a30c-729bbfb6cf95"],

Cell[TextData[StyleBox["Aus den ersten zwei Histogrammen kann gefolgert \
werden, dass aufgrund von der geringeren Anzahl an Autos (60) \
\[UDoubleDot]ber der Anzahl an Zellen (300) die Erh\[ODoubleDot]hung der Tr\
\[ODoubleDot]delwahrscheinlichkeit q nicht h\[ADoubleDot]ufig vorkommt, weil \
der Platz zwischen zwei Autos h\[ADoubleDot]ufig h\[ODoubleDot]her ist als \
dessen Geschwindigkeit. \nDas passiert weniger bei einer h\[ODoubleDot]heren \
Anzahl an Fahrzeugen (z.B. 100 \[UDoubleDot]ber 300), weil die Abst\
\[ADoubleDot]nde geringer sind. Das verursacht eine Erh\[ODoubleDot]hung der \
Tr\[ODoubleDot]delwahrscheinlichkeit um q, weshalb sich bilden Staus weiter \
ausbilden. Eine sehr geringe Menge an Autos haben einen \
gr\[ODoubleDot]\[SZ]eren Abstand.\nBei 200 Autos ist letzteres nicht mehr \
erkennbar, die Abst\[ADoubleDot]nde sind sehr gering.\nAus den \
n\[ADoubleDot]chsten Histogrammen, mit q erh\[ODoubleDot]ht zu 0.4, l\
\[ADoubleDot]sst sich beobachten, dass aufgrund der h\[ODoubleDot]heren Tr\
\[ODoubleDot]delwahrscheinlichkeit stehender Autos f\[UDoubleDot]r 100 Autos \
mehr Autos eine geringere Geschwindigkeit haben im Vergleich zu q=0.2. Bei 60 \
Autos hingegen haben etwas \[UDoubleDot]ber ein Drittel der Autos die H\
\[ODoubleDot]chstgeschwindigkeit, da sich bei 60 Autos weniger Staus und \
damit M\[ODoubleDot]glichkeiten daf\[UDoubleDot]r, dass Autos die \
Geschwindigkeit v=0 haben, bilden. \nAus dem Dichteplot kann beobachtet \
werden, dass mit einer Wahrscheinlichkeit von q=0.2 die lokale Dichte der \
Autos mehrmals h\[ODoubleDot]her ist, es bilden sich gr\[ODoubleDot]\[SZ]ere \
Staus. Mit einer q=0.4 ist die lokale Dichte h\[ADoubleDot]ufig \
h\[ODoubleDot]her auf der ganzen Stra\[SZ]e, aber die Staus werden k\
\[UDoubleDot]rzer.\nDie Fundamentalplots weisen keine gro\[SZ]en Unterschiede \
zu denen des gew\[ODoubleDot]hnlichen NaSch-Modells f\[UDoubleDot]r p=0.15 \
und p=0.3 (s. oben) auf. Die zus\[ADoubleDot]tzliche \
Tr\[ODoubleDot]delwahrscheinlichkeit hat also auf den Fluss keinen \
bemerkbaren Einfluss.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8993780689077773`*^9, 3.899378078859537*^9}, {
   3.9000003148343825`*^9, 3.9000003250960884`*^9}, {3.900001392829219*^9, 
   3.900001409758973*^9}, {3.9000014532183275`*^9, 3.900001630837467*^9}, {
   3.9000017065101714`*^9, 3.900001761905016*^9}, 3.9000020130947576`*^9, {
   3.9000022208341074`*^9, 
   3.9000022550539875`*^9}},ExpressionUUID->"d827d26f-5d59-4571-b58b-\
e0bc7ed12fc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Zwei Spuren",
 FontFamily->"Squealer"]], "Chapter",ExpressionUUID->"6d21a7a7-a84f-4357-b230-1f92ad4ae0cc"],

Cell[TextData[StyleBox["Als letztes wird das NaSch-Modell auf zwei Spuren \
angepasst. Hierf\[UDoubleDot]r werden wie gewohnt zuf\[ADoubleDot]llige \
Positionen f\[UDoubleDot]r die angegebene Anzahl an Autos, nur hier auf zwei \
Spuren, generiert. Hierbei ist die Anzahl der Autos pro Spur auch zuf\
\[ADoubleDot]llig. Nach der Abstandsberechnung und Schritt R1 aus dem \
NaSch-Modul, die Erh\[ODoubleDot]hung der Geschwindigkeiten aller Autos, \
falls diese unter vMax liegen, wird f\[UDoubleDot]r den neuen Schritt R2 ein \
zus\[ADoubleDot]tzliches Modul f\[UDoubleDot]r den Spurwechsel aufgerufen. \
Das Wechseln der Spur entspricht hierbei dem Fahren einer Zelle, es wird \
danach also dem Auto die Geschwindigkeit v-1 oder 0 zugeteilt. Es wird von \
der rechten auf die linke Spur gewechselt, wenn folgende Bedingungen erf\
\[UDoubleDot]llt sind: \n- die Geschwindigkeit des Autos ist gr\[ODoubleDot]\
\[SZ]er als sein Abstand zum Vorderauto, \n- links befindet sich kein Auto \
auf der Nachbarzelle, \n- ein von hinten ankommendes Auto f\[ADoubleDot]hrt \
mit einem m\[ODoubleDot]glichen Abbremsen um 1 h\[ODoubleDot]chstens auf die \
Zelle direkt hinter der Nachbarzelle links und\n- das Auto selbst f\
\[ADoubleDot]hrt mit einem m\[ODoubleDot]glichen Abbremsen um 1 \
h\[ODoubleDot]chstens auf die Zelle direkt hinter einem vorausfahrenden Auto \
auf der linken Spur. \nNach diesem Schritt werden alle wechselnden Autos zun\
\[ADoubleDot]chst auf die Nachbarzelle auf der linken Spur positioniert, um \
zu vermeiden, dass w\[ADoubleDot]hrend des Wechselvorganges ebenfalls \
wechselnde Autos \[UDoubleDot]berholt werden. \nVon der linken zur rechten \
Spur wird gewechselt, wenn diese Bedingungen erf\[UDoubleDot]llt sind:\n- die \
Nachbarzelle auf der rechten Spur ist frei,\n- ein von hinten ankommendes \
Auto f\[ADoubleDot]hrt mit einem m\[ODoubleDot]glichen Abbremsen um 1 h\
\[ODoubleDot]chstens auf die Zelle direkt hinter der Nachbarzelle rechts und \
\n- das Auto selbst f\[ADoubleDot]hrt mit einem m\[ODoubleDot]glichen \
Abbremsen um 2 h\[ODoubleDot]chstens direkt hinter ein vorausfahrendes Auto \
auf der rechten Spur.\nDanach erfolgt wieder der Spurwechsel von links nach \
rechts. Dass beim Wechsel nach rechts ein Abbremsen von 2 in Kauf genommen \
wird, statt wie beim Wechsel nach links nur um 1, soll das Rechtsfahrgebot \
ann\[ADoubleDot]hernd in das Modell einbringen. Die zwei unterschiedlichen \
Werte haben n\[ADoubleDot]mlich den Effekt, dass mehr Autos nach rechts \
wechseln als nach links, da die Bedingungen auch f\[UDoubleDot]r ein engeres \
Einordnen rechts offen sind. Aus dem Spurwechsel-Modul werden unter Anderem \
die neuen Listen der Positionen und Geschwindigkeiten ausgegeben, die in den \
n\[ADoubleDot]chsten drei aus dem NaSch-Modell \[UDoubleDot]bernommenen \
Regeln weiter verwendet werden.   \nZun\[ADoubleDot]chst werden die Abst\
\[ADoubleDot]nde aktualisiert, dann in R3 die Geschwindigkeiten \
\[UDoubleDot]ber den Abst\[ADoubleDot]nden zu den Autos davor auf letztere \
herabgesetzt, in R4 mit der Tr\[ODoubleDot]delwahrscheinlichkeit p um 1 \
abgebremst und in R5 die Positionen der Autos aktualisiert.\n",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{{3.8999201894710407`*^9, 3.8999202052707653`*^9}, {
  3.899920344688898*^9, 3.8999207191250114`*^9}, {3.8999207539814854`*^9, 
  3.8999208965746613`*^9}, {3.89992093079198*^9, 3.8999210065933785`*^9}, {
  3.8999211476186943`*^9, 3.8999211929159336`*^9}, {3.8999212279164085`*^9, 
  3.8999212367626266`*^9}, {3.899921968564147*^9, 3.8999220654776125`*^9}, {
  3.899922123517081*^9, 3.899922147510148*^9}, {3.8999222161578817`*^9, 
  3.8999227681811666`*^9}},ExpressionUUID->"28d09b69-e064-4a55-844e-\
a8c7626b3dd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Funktion", " ", "f\[UDoubleDot]r", " ", "den", " ", "Spurenwechsel"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"Spurwechsel", "[", 
    RowBox[{
    "nCar_", ",", "nCells_", ",", "savexlist1_", ",", "savexlist2_", ",", 
     "savevlist1_", ",", "savevlist2_", ",", "xlist1_", ",", "xlist2_", ",", 
     "vlist1_", ",", "vlist2_", ",", "dlist1_", ",", "dlist2_", ",", "m1_", 
     ",", "m2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"Lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos1", ",", "xAutos2", ",", "vAutos1", ",", "vAutos2", ",", 
       "dAutos1", ",", "dAutos2", ",", "savexAutos1", ",", "savexAutos2", ",",
        "savevAutos1", ",", "savevAutos2", ",", "savekleinere", ",", "hinter",
        ",", "hinterx1", ",", "hinterx2", ",", "vorx1", ",", "\n", "vorx2", 
       ",", "hinterv1", ",", "hinterv2", ",", "vorv1", ",", "vorv2", ",", 
       "auto", ",", "vauto", ",", "autoindex", ",", "index1", ",", "index2", 
       ",", "nachindex1", ",", "hinterautos", ",", "wechselvon1", ",", 
       "wechselzu1", ",", "wechselvon2", ",", "wechselzu2", ",", "\n", 
       "nachindex2", ",", "hinterstrecke1", ",", "hinterstrecke2", ",", 
       "vorstrecke1", ",", "vorstrecke2", ",", "fahrt1", ",", "fahrt2", ",", 
       "laengesx1", ",", "laengesx2", ",", "laengex1", ",", "laengex2", ",", 
       "k", ",", "h", ",", "newm1", ",", "newm2"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "In", " ", "twolanesNaSch", " ", "falls", " ", "leere", " ", "Liste", 
        " ", "mit", " ", 
        RowBox[{"{", "0.5", "}"}], " ", "gef\[UDoubleDot]llt"}], ",", " ", 
       RowBox[{
       "hierf\[UDoubleDot]r", " ", "wieder", " ", "leer", " ", 
        "ben\[ODoubleDot]tigt"}]}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"xAutos1", "=", "xlist1"}], ";", 
      RowBox[{"xAutos2", "=", "xlist2"}], ";", "\n", 
      RowBox[{"vAutos1", "=", "vlist1"}], ";", 
      RowBox[{"vAutos2", "=", "vlist2"}], ";", "\n", 
      RowBox[{"dAutos1", "=", "dlist1"}], ";", 
      RowBox[{"dAutos2", "=", "dlist2"}], ";", "\n", 
      RowBox[{"savexAutos1", "=", "savexlist1"}], ";", "\n", 
      RowBox[{"savexAutos2", "=", "savexlist2"}], ";", "\n", 
      RowBox[{"savevAutos1", "=", "savevlist1"}], ";", "\n", 
      RowBox[{"savevAutos2", "=", "savevlist2"}], ";", "\n", 
      RowBox[{"laengesx1", "=", 
       RowBox[{"Length", "[", "savexAutos1", "]"}]}], ";", "\n", 
      RowBox[{"laengesx2", "=", 
       RowBox[{"Length", "[", "savexAutos2", "]"}]}], ";", "\n", 
      RowBox[{"newm1", "=", "m1"}], ";", 
      RowBox[{"newm2", "=", "m2"}], ";", "\n", 
      RowBox[{"wechsel1", "=", "0"}], ";", 
      RowBox[{"wechsel2", "=", "0"}], ";", "\n", 
      RowBox[{"wechselzu1", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"wechselvon1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselzu2", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"wechselvon2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Wechsel", " ", "rechte", " ", "Spur", " ", "zu", " ", "linker"}], 
       "*)"}], "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Falls", " ", "Auto", " ", "auf", " ", "rechter", " ", "Spur"}], 
       "*)"}], "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"laengesx1", ">", "0"}], ",", "\n", "  ", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ";", "\n", "  ", 
         RowBox[{"Do", "[", "\n", "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(*", 
             RowBox[{"Betrachtetes", " ", "Auto"}], "*)"}], "\n", "  ", 
            RowBox[{
             RowBox[{"auto", "=", 
              RowBox[{"savexAutos1", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"vauto", "=", 
              RowBox[{"savevAutos1", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex1", "=", 
              RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex2", "=", 
              RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"savevAutos", " ", "nach", " ", "Beschleunigung"}], 
               ",", " ", 
               RowBox[{
               "dAutos", " ", "bleiben", " ", "im", " ", "Wechselvorgang", 
                " ", "zun\[ADoubleDot]chst", " ", 
                "unver\[ADoubleDot]ndert"}]}], "*)"}], "\n", "  ", 
             RowBox[{"(*", 
              RowBox[{"Falls", " ", "v", " ", 
               RowBox[{"kleiner", "/", "gleich"}], " ", "d", " ", "oder", " ",
                "Nachbarzelle", " ", "links", " ", "besetzt", " ", "wird", 
               " ", "n\[ADoubleDot]chstes", " ", "Auto", " ", "auf", " ", 
               "rechter", " ", "Spur", " ", "betrachtet"}], "*)"}], "\n", 
             "  ", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"vauto", "<=", 
                 RowBox[{"dAutos1", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "||", 
                RowBox[{"!", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{"savexAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "==", "auto"}], " ", "&"}]}], "]"}], "==", 
                  RowBox[{"{", "}"}]}]}]}], ",", 
               RowBox[{
                RowBox[{"k", "=", 
                 RowBox[{"k", "+", "1"}]}], ";"}], ",", "\n", "  ", 
               RowBox[{"(*", 
                RowBox[{
                "Wenn", " ", "hier", " ", "sind", " ", "beide", " ", "zuvor", 
                 " ", "nicht", " ", "erf\[UDoubleDot]llt"}], "*)"}], "\n", 
               "  ", 
               RowBox[{"laengesx2", ">", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"savekleinere", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"savexAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Falls", " ", "links", " ", "nur", " ", "Auto", " ", 
                   "weiter", " ", "vorne", " ", "oder", " ", "am", " ", 
                   "anderem", " ", "Stra\[SZ]enende"}], "*)"}], "\n", "  ", 
                 RowBox[{"Which", "[", 
                  RowBox[{
                   RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Auto", " ", "von", " ", "hinten", " ", "ist", " ", "am", 
                    " ", "anderen", " ", "Stra\[SZ]enende"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{
                    RowBox[{"index2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos2", ",", 
                    RowBox[{"Max", "[", "savexAutos2", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx2", "=", 
                    RowBox[{"savexAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv2", "=", 
                    RowBox[{"savevAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Strecke", " ", "des", " ", "Autos", " ", "am", " ", 
                    "anderen", " ", "Stra\[SZ]enende", " ", "links", " ", 
                    "mit", " ", "Abbremsen", " ", "um", " ", "1"}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"hinterstrecke2", "=", 
                    RowBox[{
                    "hinterx2", "+", "hinterv2", "-", "1", "-", "nCells"}]}], 
                    ";"}], "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Entweder", " ", "\[UDoubleDot]berquert", " ", "letzte", 
                    " ", "Zelle", " ", "nicht"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"immer", " ", "hinterstrecke"}], "<", 
                    "fahrt1"}]}], ";", " ", 
                    RowBox[{
                    RowBox[{
                    "oder", " ", "\[UDoubleDot]berquert", " ", "letzte", " ", 
                    "Zelle"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"m\[ODoubleDot]glich", " ", "hinterstrecke"}], 
                    "<", "fahrt1"}]}]}], "*)"}], ")"}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Es", " ", "gibt", " ", "Auto", " ", "mit", " ", 
                    "kleinerer", " ", "Position"}], "*)"}], "\n", "  ", 
                   RowBox[{"!", 
                    RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "von", " ", "hinten", " ", "ankommendes", 
                    " ", "Auto"}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{"index2", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos2", ",", 
                    RowBox[{"Max", "[", "savekleinere", "]"}]}], "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx2", "=", 
                    RowBox[{"savexAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv2", "=", 
                    RowBox[{"savevAutos2", "[", 
                    RowBox[{"[", "index2", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterstrecke2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"hinterx2", "+", "hinterv2", "-", "1"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"hinterx2", "+", "hinterv2", "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinterx2", "+", "hinterv2", "-", "1"}], ">", 
                    "nCells"}], ",", 
                    RowBox[{
                    "hinterx2", "+", "hinterv2", "-", "1", "-", "nCells"}]}], 
                    "]"}]}], ";"}], ")"}]}], "\n", "  ", "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"(*", 
                  RowBox[{"Index", " ", "vorherfahrendes", " ", "Auto"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"nachindex2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"index2", "<", "laengesx2"}], ",", 
                    RowBox[{"index2", "+", "1"}], ",", 
                    RowBox[{"index2", "==", "laengesx2"}], ",", "1"}], 
                   "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des", 
                   " ", "vorfahrenden", " ", "Autos"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorx2", "=", 
                  RowBox[{"savexAutos2", "[", 
                   RowBox[{"[", "nachindex2", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vorv2", "=", 
                  RowBox[{"savevAutos2", "[", 
                   RowBox[{"[", "nachindex2", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Strecke", " ", "des", " ", "vorfahrenden", " ", "Autos", 
                   " ", "links"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorstrecke2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vorx2", "+", "vorv2"}], "<=", "nCells"}], ",", 
                    RowBox[{"vorx2", "+", "vorv2"}], ",", 
                    RowBox[{
                    RowBox[{"vorx2", "+", "vorv2"}], ">", "nCells"}], ",", 
                    RowBox[{"vorx2", "+", "vorv2", "-", "nCells"}]}], "]"}]}],
                  ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Weiterfahrt", " ", "nach", " ", "Wechsel", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "-", "1"}], ")"}], " ", "nach", " ", "links",
                     " ", "mit", " ", "m\[ODoubleDot]glichem", " ", 
                    "zus\[ADoubleDot]tzlichen", " ", "Abbremsen", " ", "um", 
                    " ", "1"}], " ", "->", " ", 
                   RowBox[{"-", "2"}]}], "*)"}], "\n", "  ", 
                 RowBox[{"fahrt1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"vauto", "<=", "2"}], ",", "auto", ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "2"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"auto", "+", "vauto", "-", "2"}], ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "2"}], ">", "nCells"}],
                     ",", 
                    RowBox[{"auto", "+", "vauto", "-", "2", "-", "nCells"}]}],
                    "]"}]}], ";", "\n", "  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"hinterstrecke2", "<", "fahrt1"}], " ", "&&", " ", 
                    RowBox[{"fahrt1", "<", "vorstrecke2"}]}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "des", " ", "von", " ", "hinten", " ", 
                    "kommenden", " ", "Autos"}], ",", " ", 
                    RowBox[{"falls", " ", "vorhanden"}]}], "*)"}], "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Falls", " ", "links", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "an", " ", "erster", " ", "Stelle", " ", 
                    "einf\[UDoubleDot]gen"}]}], "*)"}], "\n", "  ", 
                   RowBox[{
                    RowBox[{"hinter", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"laengex2", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "Auto", " ", "mit", " ", "kleinerer", " ", 
                    "Position"}], ",", " ", 
                    RowBox[{"an", " ", "Position", " ", "danach"}]}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "]"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "kein", " ", "Auto", " ", "kleiner"}], ",", 
                    " ", 
                    RowBox[{
                    "an", " ", "Stelle", " ", "vor", " ", "kleinstes", " ", 
                    "Auto"}]}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Min", "[", "xAutos2", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                    ";", "\n", "  ", 
                    RowBox[{"xAutos2", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"xAutos2", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"vAutos2", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"vAutos2", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                    " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                    RowBox[{"newm2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"newm2", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm2"}]}], ",", 
                    RowBox[{"newm2", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm2"}], ",", 
                    "newm2"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselzu2", ",", "auto"}], "]"}], ";", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Element", " ", "aus", " ", "xAutos1", " ", "entfernen"}],
                     "*)"}], "\n", "  ", 
                    RowBox[{"autoindex", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", "auto"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"xAutos1", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"xAutos1", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"vAutos1", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"vAutos1", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"newm1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"autoindex", ">", "newm1"}], ",", "newm1", ",", 
                    RowBox[{"newm1", ">", "1"}], ",", 
                    RowBox[{"newm1", "-", "1"}], ",", 
                    RowBox[{"newm1", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}]}], ";", 
                    "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselvon1", ",", "auto"}], "]"}], ";"}]}], 
                  "\n", "  ", "]"}], ";", "\n", "  ", 
                 RowBox[{"k", "=", 
                  RowBox[{"k", "+", "1"}]}], ";"}], ")"}], ",", "\n", "  ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Links", " ", "leer"}], ",", "Wechsel"}], "*)"}], 
               "\n", "  ", 
               RowBox[{"laengesx2", "==", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                 "Index", " ", "zum", " ", "Einf\[UDoubleDot]gen", " ", "in", 
                  " ", "xAutos2"}], "*)"}], "\n", "  ", 
                RowBox[{"(*", 
                 RowBox[{"Gleich", " ", "zu", " ", "oben"}], "*)"}], "\n", 
                "  ", 
                RowBox[{
                 RowBox[{"hinter", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"laengex2", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "]"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", 
                    RowBox[{"Min", "[", "xAutos2", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                 ";", "\n", "  ", 
                 RowBox[{"xAutos2", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"xAutos2", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vAutos2", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"vAutos2", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                   " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                 RowBox[{"Which", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"newm2", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm2"}]}], ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"newm2", "=", 
                    RowBox[{"newm2", "+", "1"}]}], ";", 
                    RowBox[{"wechsel2", "=", 
                    RowBox[{"wechsel2", "+", "1"}]}], ";"}], ")"}], ",", 
                   RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm2"}], ",", 
                   RowBox[{"newm2", "=", "newm2"}]}], "]"}], ";", "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselzu2", ",", "auto"}], "]"}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Element", " ", "aus", " ", "xAutos1", " ", "entfernen"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"autoindex", "=", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", "auto"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"xAutos1", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"xAutos1", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"vAutos1", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"vAutos1", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"newm1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"autoindex", ">", "newm1"}], ",", "newm1", ",", 
                    RowBox[{"newm1", ">", "1"}], ",", 
                    RowBox[{"newm1", "-", "1"}], ",", 
                    RowBox[{"newm1", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselvon1", ",", "auto"}], "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"k", "=", 
                  RowBox[{"k", "+", "1"}]}], ";"}], ")"}]}], "]"}], ";", "\n",
              "  ", 
             RowBox[{"(*", 
              RowBox[{
              "Nicht", " ", "mehr", " ", "gebrauchte", " ", "Variablen", " ", 
               "clearen"}], "*)"}], "\n", "  ", 
             RowBox[{"Clear", "[", 
              RowBox[{
              "auto", ",", "vauto", ",", "savekleinere", ",", "index2", ",", 
               "nachindex2", ",", "hinterx2", ",", "hinterv2", ",", "vorx2", 
               ",", "vorv2", ",", "hinterstrecke2", ",", "vorstrecke2", ",", 
               "fahrt1", ",", "hinter", ",", "autoindex"}], "]"}], ";"}], 
            ")"}], "\n", "  ", ",", "laengesx1"}], "]"}], ";"}]}], "\n", "  ",
        "]"}], ";", "\n", "  ", "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Wechsel", " ", "linke", " ", "Spur", " ", "zu", " ", "rechter"}], 
       "*)"}], "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{"Falls", " ", "Auto", " ", "auf", " ", "linker", " ", "Spur"}],
        "*)"}], "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"laengesx2", ">", "0"}], ",", "\n", "  ", 
        RowBox[{
         RowBox[{"h", "=", "1"}], ";", "\n", "  ", 
         RowBox[{"Do", "[", "\n", "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(*", 
             RowBox[{"Betrachtetes", " ", "Auto"}], "*)"}], "\n", "  ", 
            RowBox[{
             RowBox[{"auto", "=", 
              RowBox[{"savexAutos2", "[", 
               RowBox[{"[", "h", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"vauto", "=", 
              RowBox[{"savevAutos2", "[", 
               RowBox[{"[", "h", "]"}], "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex1", "=", 
              RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
             RowBox[{"laengex2", "=", 
              RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
             RowBox[{"(*", 
              RowBox[{
              "Falls", " ", "Nachbarzelle", " ", "rechts", " ", "besetzt", 
               " ", "wird", " ", "n\[ADoubleDot]chstes", " ", "Auto", " ", 
               "auf", " ", "linker", " ", "Spur", " ", "betrachtet"}], "*)"}],
              "\n", "  ", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"savexAutos1", ",", 
                   RowBox[{
                    RowBox[{"#", "==", "auto"}], " ", "&"}]}], "]"}], "==", 
                 RowBox[{"{", "}"}]}]}], ",", 
               RowBox[{
                RowBox[{"h", "=", 
                 RowBox[{"h", "+", "1"}]}], ";"}], ",", "\n", "  ", 
               RowBox[{"laengesx1", ">", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"savekleinere", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"savexAutos1", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Falls", " ", "rechts", " ", "nur", " ", "Auto", " ", 
                   "weiter", " ", "vorne", " ", "oder", " ", "am", " ", 
                   "anderem", " ", "Stra\[SZ]enende"}], "*)"}], "\n", "  ", 
                 RowBox[{"Which", "[", 
                  RowBox[{
                   RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Auto", " ", "von", " ", "hinten", " ", "ist", " ", "am", 
                    " ", "anderen", " ", "Stra\[SZ]enende"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{
                    RowBox[{"index1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos1", ",", 
                    RowBox[{"Max", "[", "savexAutos1", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx1", "=", 
                    RowBox[{"savexAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv1", "=", 
                    RowBox[{"savevAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Strecke", " ", "des", " ", "Autos", " ", "am", " ", 
                    "anderen", " ", "Stra\[SZ]enende", " ", "rechts", " ", 
                    "mit", " ", "Abbremsen", " ", "um", " ", "1"}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"hinterstrecke1", "=", 
                    RowBox[{
                    "hinterx1", "+", "hinterv1", "-", "1", "-", "nCells"}]}], 
                    ";"}], "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Entweder", " ", "\[UDoubleDot]berquert", " ", "letzte", 
                    " ", "Zelle", " ", "nicht"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"immer", " ", "hinterstrecke"}], "<", 
                    "fahrt1"}]}], ";", " ", 
                    RowBox[{
                    RowBox[{
                    "oder", " ", "\[UDoubleDot]berquert", " ", "letzte", " ", 
                    "Zelle"}], " ", "->", " ", 
                    RowBox[{
                    RowBox[{"m\[ODoubleDot]glich", " ", "hinterstrecke"}], 
                    "<", "fahrt1"}]}]}], "*)"}], ")"}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Es", " ", "gibt", " ", "Auto", " ", "mit", " ", 
                    "kleinerer", " ", "Position"}], "*)"}], "\n", "  ", 
                   RowBox[{"!", 
                    RowBox[{"savekleinere", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "von", " ", "hinten", " ", "ankommendes", 
                    " ", "Auto"}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{"index1", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"savexAutos1", ",", 
                    RowBox[{"Max", "[", "savekleinere", "]"}]}], "]"}], "]"}],
                     "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des",
                     " ", "Autos", " ", "von", " ", "hinten"}], "*)"}], "\n", 
                    "  ", 
                    RowBox[{"hinterx1", "=", 
                    RowBox[{"savexAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"hinterv1", "=", 
                    RowBox[{"savevAutos1", "[", 
                    RowBox[{"[", "index1", "]"}], "]"}]}], ";", " ", "\n", 
                    "  ", 
                    RowBox[{"hinterstrecke1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"hinterx1", "+", "hinterv1", "-", "1"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"hinterx1", "+", "hinterv1", "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinterx1", "+", "hinterv1", "-", "1"}], ">", 
                    "nCells"}], ",", 
                    RowBox[{
                    "hinterx1", "+", "hinterv1", "-", "1", "-", "nCells"}]}], 
                    "]"}]}], ";"}], ")"}]}], "\n", "  ", "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"(*", 
                  RowBox[{"Index", " ", "vorherfahrendes", " ", "Auto"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"nachindex1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"index1", "<", "laengesx1"}], ",", 
                    RowBox[{"index1", "+", "1"}], ",", 
                    RowBox[{"index1", "==", "laengesx1"}], ",", "1"}], 
                   "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Abspeichern", " ", "x", " ", "und", " ", "v", " ", "des", 
                   " ", "vorfahrenden", " ", "Autos"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorx1", "=", 
                  RowBox[{"savexAutos1", "[", 
                   RowBox[{"[", "nachindex1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vorv1", "=", 
                  RowBox[{"savevAutos1", "[", 
                   RowBox[{"[", "nachindex1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Strecke", " ", "des", " ", "vorfahrenden", " ", "Autos", 
                   " ", "rechts"}], "*)"}], "\n", "  ", 
                 RowBox[{"vorstrecke1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vorx1", "+", "vorv1"}], "<=", "nCells"}], ",", 
                    RowBox[{"vorx1", "+", "vorv1"}], ",", 
                    RowBox[{
                    RowBox[{"vorx1", "+", "vorv1"}], ">", "nCells"}], ",", 
                    RowBox[{"vorx1", "+", "vorv1", "-", "nCells"}]}], "]"}]}],
                  ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Weiterfahrt", " ", "nach", " ", "Wechsel", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "-", "1"}], ")"}], " ", "nach", " ", 
                    "rechts", " ", "mit", " ", "m\[ODoubleDot]glichem", " ", 
                    "zus\[ADoubleDot]tzlichen", " ", "Abbremsen", " ", "um", 
                    " ", "2"}], " ", "->", " ", 
                   RowBox[{"-", "3"}]}], "*)"}], "\n", "  ", 
                 RowBox[{"fahrt2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"vauto", "<=", "3"}], ",", "auto", ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "3"}], "<=", 
                    "nCells"}], ",", 
                    RowBox[{"auto", "+", "vauto", "-", "3"}], ",", 
                    RowBox[{
                    RowBox[{"auto", "+", "vauto", "-", "3"}], ">", "nCells"}],
                     ",", 
                    RowBox[{"auto", "+", "vauto", "-", "3", "-", "nCells"}]}],
                    "]"}]}], ";", "\n", "  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"hinterstrecke1", "<", "fahrt2"}], " ", "&&", " ", 
                    RowBox[{"fahrt2", "<", "vorstrecke1"}]}], ",", "\n", "  ", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Index", " ", "des", " ", "von", " ", "hinten", " ", 
                    "kommenden", " ", "Autos"}], ",", " ", 
                    RowBox[{"falls", " ", "vorhanden"}]}], "*)"}], "\n", "  ", 
                   RowBox[{
                    RowBox[{"hinterautos", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                    "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Falls", " ", "rechts", " ", "leer"}], ",", " ", 
                    RowBox[{
                    "an", " ", "erster", " ", "Stelle", " ", 
                    "einf\[UDoubleDot]gen"}]}], "*)"}], "\n", "  ", 
                    RowBox[{"hinter", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"laengex1", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "Auto", " ", "mit", " ", "kleinerer", " ", 
                    "Position"}], ",", " ", 
                    RowBox[{"an", " ", "Position", " ", "danach"}]}], "*)"}], 
                    "\n", "  ", 
                    RowBox[{"!", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Max", "[", "hinterautos", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Falls", " ", "kein", " ", "Auto", " ", "kleiner"}], ",", 
                    " ", 
                    RowBox[{
                    "an", " ", "Stelle", " ", "vor", " ", "kleinstes", " ", 
                    "Auto"}]}], "*)"}], "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Min", "[", "xAutos1", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                    ";", " ", "\n", "  ", 
                    RowBox[{"xAutos1", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"xAutos1", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"vAutos1", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"vAutos1", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                    " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                    RowBox[{"newm1", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"newm1", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm1"}]}], ",", 
                    RowBox[{"newm1", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm1"}], ",", 
                    "newm1"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselzu1", ",", "auto"}], "]"}], ";", "\n", 
                    "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Element", " ", "aus", " ", "xAutos2", " ", "entfernen"}],
                     "*)"}], "\n", "  ", 
                    RowBox[{"autoindex", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", "auto"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                    RowBox[{"xAutos2", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"xAutos2", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"vAutos2", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"vAutos2", ",", "autoindex"}], "]"}]}], ";", "\n",
                     "  ", 
                    RowBox[{"newm2", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"autoindex", ">", "newm2"}], ",", "newm2", ",", 
                    RowBox[{"newm2", ">", "1"}], ",", 
                    RowBox[{"newm2", "-", "1"}], ",", 
                    RowBox[{"newm2", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos2", "]"}]}], "]"}]}], ";", 
                    "\n", "  ", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"wechselvon2", ",", "auto"}], "]"}], ";"}]}], 
                  "\n", "  ", "]"}], ";", "\n", "  ", 
                 RowBox[{"h", "=", 
                  RowBox[{"h", "+", "1"}]}], ";"}], ")"}], ",", "\n", "  ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Rechts", " ", "leer"}], ",", "Wechsel"}], "*)"}], 
               "\n", "  ", 
               RowBox[{"laengesx1", "==", "0"}], ",", "\n", "  ", 
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                 "Index", " ", "zum", " ", "Einf\[UDoubleDot]gen", " ", "in", 
                  " ", "xAutos1"}], "*)"}], "\n", "  ", 
                RowBox[{
                 RowBox[{"hinterautos", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"xAutos1", ",", 
                    RowBox[{
                    RowBox[{"#", "<", "auto"}], " ", "&"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{"Gleich", " ", "zu", " ", "oben"}], "*)"}], "\n", 
                 "  ", 
                 RowBox[{"hinter", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"laengex1", "==", "0"}], ",", "0", ",", "\n", 
                    "  ", 
                    RowBox[{"!", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Max", "[", "hinterautos", "]"}]}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "  ", 
                    RowBox[{"hinterautos", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "  ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos1", ",", 
                    RowBox[{"Min", "[", "xAutos1", "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                 ";", "\n", "  ", 
                 RowBox[{"xAutos1", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"xAutos1", ",", "auto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"vAutos1", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"vAutos1", ",", "vauto", ",", 
                    RowBox[{"hinter", "+", "1"}]}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Index", " ", "f\[UDoubleDot]r", " ", "Flussberechnung", 
                   " ", "mit", " ", "FundamentalD"}], "*)"}], "\n", "  ", 
                 RowBox[{"newm1", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"newm1", "==", "0"}], "||", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], "<=", "newm1"}]}], ",", 
                    RowBox[{"newm1", "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"hinter", "+", "1"}], ">", "newm1"}], ",", 
                    "newm1"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselzu1", ",", "auto"}], "]"}], ";", "\n", "  ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Element", " ", "aus", " ", "xAutos2", " ", "entfernen"}], 
                  "*)"}], "\n", "  ", 
                 RowBox[{"autoindex", "=", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"xAutos2", ",", "auto"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "  ", 
                 RowBox[{"xAutos2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"xAutos2", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"vAutos2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"vAutos2", ",", "autoindex"}], "]"}]}], ";", "\n", 
                 "  ", 
                 RowBox[{"newm2", "=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"autoindex", ">", "newm2"}], ",", "newm2", ",", 
                    RowBox[{"newm2", ">", "1"}], ",", 
                    RowBox[{"newm2", "-", "1"}], ",", 
                    RowBox[{"newm2", "<=", "1"}], ",", 
                    RowBox[{"Length", "[", "xAutos2", "]"}]}], "]"}]}], ";", 
                 "\n", "  ", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"wechselvon2", ",", "auto"}], "]"}], ";", "\n", 
                 "  ", 
                 RowBox[{"h", "=", 
                  RowBox[{"h", "+", "1"}]}], ";"}], ")"}]}], "]"}], ";", "\n",
              "  ", 
             RowBox[{"(*", 
              RowBox[{
              "Nicht", " ", "mehr", " ", "gebrauchte", " ", "Variablen", " ", 
               "clearen"}], "*)"}], "\n", "  ", 
             RowBox[{"Clear", "[", 
              RowBox[{
              "auto", ",", "vauto", ",", "savekleinere", ",", "index1", ",", 
               "nachindex1", ",", "hinterx1", ",", "hinterv1", ",", "vorx1", 
               ",", "vorv1", ",", "hinterstrecke1", ",", "vorstrecke1", ",", 
               "fahrt2", ",", "hinter", ",", "autoindex"}], "]"}], ";"}], 
            ")"}], "\n", "  ", ",", "laengesx2"}], "]"}], ";"}]}], "\n", "  ",
        "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
        "xAutos1", ",", "xAutos2", ",", "vAutos1", ",", "vAutos2", ",", 
         "newm1", ",", "newm2", ",", "wechselvon1", ",", "wechselzu1", ",", 
         "wechselvon2", ",", "wechselzu2"}], "}"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.899569653373231*^9, {3.899921348566013*^9, 3.8999213495372057`*^9}, {
   3.8999214754178605`*^9, 3.8999216353227158`*^9}, {3.899921723626703*^9, 
   3.8999217240523615`*^9}, {3.8999218771194525`*^9, 3.899921905635003*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"10bbf157-5baf-474b-9c28-6c600d10348d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Modell", " ", "zwei", " ", "Fahrspuren"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"twolanesNaSch", "[", 
    RowBox[{"nCar_", ",", "nCells_", ",", "tMax_", ",", "vMax_", ",", "p_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\n", "\n", 
    RowBox[{"(*", 
     RowBox[{"lokale", " ", "Variablen"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xAutos", ",", "xAutos1", ",", "xAutos2", ",", "vAutos1", ",", 
       "vAutos2", ",", "dAutos1", ",", "dAutos2", ",", "xtwolan1", ",", 
       "xtwolan2", ",", "vtwolan1", ",", "vtwolan2", ",", "dtwolan1", ",", 
       "dtwolan2", ",", "\n", "savex1", ",", "savex2", ",", "savev1", ",", 
       "savev2", ",", "saved1", ",", "saved2", ",", "save", ",", "maxAuto1", 
       ",", "minAuto1", ",", "maxAuto2", ",", "minAuto2", ",", "m1", ",", 
       "m2", ",", "wechselvon1", ",", "wechselzu1", ",", "\n", "wechselvon2", 
       ",", "wechselzu2", ",", "laengesx1", ",", "laengesx2", ",", "laengex1",
        ",", "laengex2", ",", "a", ",", "k", ",", "h", ",", "mlist1", ",", 
       "mlist2", ",", "data"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Listen", " ", "zur", " ", "Ausgabe", " ", "der", " ", "Daten"}], 
      "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"xtwolan1", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"xtwolan2", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"vtwolan1", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"vtwolan2", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"dtwolan1", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"dtwolan2", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{"NaSch", "-", "Modell"}], "*)"}], "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Autos", " ", "haben", " ", "Position", " ", "x", " ", "und", " ", 
         "Geschwindigkeit", " ", "v", " ", "zum", " ", "vorderen", " ", 
         "Auto"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Erstellen", " ", "Liste", " ", "xAutos", " ", "mit", " ", 
         "doppelter", " ", "L\[ADoubleDot]nge", " ", "als", " ", 
         "Stra\[SZ]e"}], "*)"}], "\n", 
       RowBox[{"xAutos", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"RandomSample", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"2", " ", "nCells"}], "]"}], ",", "nCar"}], "]"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Aufteilen", " ", "Liste", " ", "in", " ", "zwei", " ", "Spuren"}], 
         ",", " ", 
         RowBox[{"1", " ", "rechts"}], ",", " ", 
         RowBox[{"2", " ", "links"}]}], "*)"}], "\n", 
       RowBox[{"xAutos1", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"xAutos", ",", 
          RowBox[{
           RowBox[{"#", "<=", "nCells"}], " ", "&"}]}], "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Positionen", " ", "der", " ", "linken", " ", "Spur", " ", "setzen", 
         " ", "in", " ", "Bereich", " ", "von", " ", "0", " ", "bis", " ", 
         "nCells"}], "*)"}], "\n", 
       RowBox[{"xAutos2", "=", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"xAutos1", "!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"xAutos", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}], ",", 
            RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}], ",", 
          RowBox[{"xAutos1", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"xAutos", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nCar"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
      "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Geschwindigkeiten", " ", "f\[UDoubleDot]r", " ", "alle", " ", "Autos",
         " ", "getrennt", " ", "auf", " ", "den", " ", "Spuren"}], "*)"}], 
      ";", "\n", 
      RowBox[{"vAutos1", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", 
         RowBox[{"Length", "[", "xAutos1", "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"vAutos2", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "vMax"}], "}"}], ",", 
         RowBox[{"Length", "[", "xAutos2", "]"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Abspeichern", " ", "Ausgangssituation"}], "*)"}], "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xtwolan1", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"xAutos1", "!=", 
           RowBox[{"{", "}"}]}], ",", "xAutos1", ",", 
          RowBox[{"xAutos1", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xtwolan2", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"xAutos2", "!=", 
           RowBox[{"{", "}"}]}], ",", "xAutos2", ",", 
          RowBox[{"xAutos2", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vtwolan1", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"vAutos1", "!=", 
           RowBox[{"{", "}"}]}], ",", "vAutos1", ",", 
          RowBox[{"vAutos1", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"vtwolan2", ",", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"vAutos2", "!=", 
           RowBox[{"{", "}"}]}], ",", "vAutos2", ",", 
          RowBox[{"vAutos2", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"savex1", "=", "xAutos1"}], ";", "\n", 
      RowBox[{"savex2", "=", "xAutos2"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Index", " ", "zur", " ", "Betrachtung", " ", "des", " ", "Flusses"}], 
       "*)"}], "\n", 
      RowBox[{"m1", "=", 
       RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", 
      RowBox[{"m2", "=", 
       RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", 
      RowBox[{"mlist1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"mlist2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mlist1", ",", "m1"}], "]"}], ";", "\n", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mlist2", ",", "m2"}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"Liste", " ", "Positionen", " ", "der", " ", "Wechsel"}], 
       "*)"}], "\n", 
      RowBox[{"wechselvon1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselzu1", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselvon2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"wechselzu2", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Verkehrsregeln", " ", "aus", " ", "NaSch"}], "-", 
        RowBox[{"Modell", " ", "implementieren"}]}], "*)"}], "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "2"}], ",", 
        RowBox[{"t", "<=", "tMax"}], ",", 
        RowBox[{"t", "++"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Ausgangssituation", " ", "ist", " ", "t"}], "=", "1"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Oft", " ", "verwendete", " ", "Variablen"}], "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{"Listen", " ", "des", " ", "Zeitschritts", " ", "davor"}], 
         "*)"}], "\n", 
        RowBox[{
         RowBox[{"laengex1", "=", 
          RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", 
         RowBox[{"laengex2", "=", 
          RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", 
         RowBox[{"laengesx1", "=", 
          RowBox[{"Length", "[", "savex1", "]"}]}], ";", "\n", 
         RowBox[{"laengesx2", "=", 
          RowBox[{"Length", "[", "savex2", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto1", "=", 
          RowBox[{"Max", "[", "xAutos1", "]"}]}], ";", "\n", 
         RowBox[{"minAuto1", "=", 
          RowBox[{"Min", "[", "xAutos1", "]"}]}], ";", "\n", 
         RowBox[{"maxAuto2", "=", 
          RowBox[{"Max", "[", "xAutos2", "]"}]}], ";", "\n", 
         RowBox[{"minAuto2", "=", 
          RowBox[{"Min", "[", "xAutos2", "]"}]}], ";", "\n", "\n", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Freie", " ", "Zellen", " ", "d", " ", "vor", " ", "dem", " ", 
           "Auto", " ", "bis", " ", "zum", " ", "vorderen"}], "*)"}], "\n", 
         "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos1", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto1"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto1", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex1", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "<", "maxAuto1"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "+", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"dAutos1", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
         "   ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos2", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto2"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto2", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             " ", "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos2", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "<", "maxAuto2"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "+", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"dAutos2", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
         "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Abspeichern", " ", "Abst\[ADoubleDot]nde"}], "*)"}], "\n", 
         "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dtwolan1", ",", "dAutos1"}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"dtwolan2", ",", "dAutos2"}], "]"}], ";", "\n", "  ", "\n", 
         "  ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R1", ":", " ", "Beschleunigen"}], ",", " ", 
           RowBox[{
           "falls", " ", "vMax", " ", "noch", " ", "nicht", " ", 
            "erreicht"}]}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}], ",", 
           "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"vtwolan1", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "\n", "  ", "]"}], 
         ";", "\n", "  ", 
         RowBox[{"savev1", "=", "vAutos1"}], ";", "\n", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "+", "1"}], ",", "vMax"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}], ",", 
           "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "  ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"vtwolan2", ",", 
              RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}]}], "\n", "  ", "]"}], 
         ";", "\n", "  ", 
         RowBox[{"savev2", "=", "vAutos2"}], ";", "\n", "\n", "  ", 
         RowBox[{"data", "=", 
          RowBox[{"Spurwechsel", "[", 
           RowBox[{
           "nCar", ",", "nCells", ",", "savex1", ",", "savex2", ",", "savev1",
             ",", "savev2", ",", "xAutos1", ",", "xAutos2", ",", "vAutos1", 
            ",", "vAutos2", ",", "dAutos1", ",", "dAutos2", ",", "m1", ",", 
            "m2"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"xAutos1", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"xAutos2", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"vAutos1", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", 
         RowBox[{"vAutos2", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"m1", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], ";", 
         RowBox[{"m2", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"mlist1", ",", "m1"}], "]"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"mlist2", ",", "m2"}], "]"}], ";", "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon1", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon1", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "8", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu1", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "8", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu1", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "9", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon2", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "9", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "9", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselvon2", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu2", ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "10", "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"wechselzu2", ",", 
             RowBox[{"{", 
              RowBox[{"nCells", "+", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\n", "  ", 
         RowBox[{"Clear", "[", "data", "]"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Berechnungen", " ", "f\[UDoubleDot]r", " ", "neue", " ", 
           "xAutos"}], "*)"}], "\n", "  ", 
         RowBox[{"laengex1", "=", 
          RowBox[{"Length", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
         RowBox[{"laengex2", "=", 
          RowBox[{"Length", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
         RowBox[{"maxAuto1", "=", 
          RowBox[{"Max", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
         RowBox[{"minAuto1", "=", 
          RowBox[{"Min", "[", "xAutos1", "]"}]}], ";", "\n", "  ", 
         RowBox[{"maxAuto2", "=", 
          RowBox[{"Max", "[", "xAutos2", "]"}]}], ";", "\n", "  ", 
         RowBox[{"minAuto2", "=", 
          RowBox[{"Min", "[", "xAutos2", "]"}]}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Nach", " ", "Spurwechsel", " ", "freie", " ", "Zellen", " ", "d", 
           " ", "vor", " ", "dem", " ", "Auto", " ", "bis", " ", "zum", " ", 
           "vorderen"}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Clear", "[", "dAutos1", "]"}], ";", "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos1", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto1"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto1", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex1", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "<", "maxAuto1"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "laengex1", "]"}], "]"}], "+", 
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex1", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos1", "=", 
             RowBox[{"{", "0.5", "}"}]}], ";"}]}], "]"}], ";", "\n", "   ", 
         "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"Clear", "[", "dAutos2", "]"}], ";", "\n", "  ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "1"}], ",", "\n", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dAutos2", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "<", "maxAuto2"}], ",", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "+", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", 
                  RowBox[{"nCells", "-", 
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", "minAuto2", "-", 
                   "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"laengex2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
             " ", "\n", "  ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dAutos2", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "<", "maxAuto2"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"nCells", "-", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "laengex2", "]"}], "]"}], "+", 
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
              "]"}], ";"}], ")"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "1"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", 
              RowBox[{"nCells", "-", "1"}], "}"}]}], ";"}], ",", "\n", "  ", 
           RowBox[{"laengex2", "==", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"dAutos2", "=", 
             RowBox[{"{", "0.5", "}"}]}], ";"}]}], "\n", "  ", "]"}], ";", 
         "\n", "   ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"R3", ":", " ", "Abbremsen"}], ",", " ", 
           RowBox[{
           "falls", " ", "v", " ", "gr\[ODoubleDot]\[SZ]er", " ", "als", " ", 
            "Abstand", " ", "d"}]}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"dAutos1", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], ",", 
                 RowBox[{"vAutos1", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"dAutos2", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], ",", 
                 RowBox[{"vAutos2", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"R4", ":", " ", 
           RowBox[{
           "Tr\[ODoubleDot]deln", " ", "mit", " ", "Wahrscheinlichkeit", " ", 
            "p"}]}], "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
                 RowBox[{
                  RowBox[{"vAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", "0"}], 
                   "]"}]}], ",", 
                 RowBox[{"vAutos1", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}]}], 
          " ", "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"vAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<=", "p"}], ",", 
                 RowBox[{
                  RowBox[{"vAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "1"}], ",", "0"}], 
                   "]"}]}], ",", 
                 RowBox[{"vAutos2", "[", 
                  RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"R5", ":", " ", 
           RowBox[{"Fahren", " ", "um", " ", "vAutos", " ", "Zellen"}]}], 
          "*)"}], "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Rechte", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex1", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"xAutos1", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"xAutos1", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos1", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex1"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", " ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{"Linke", " ", "Spur"}], "*)"}], "\n", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"laengex2", ">", "0"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"xAutos2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "<=", "nCells"}], ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"xAutos2", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"xAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                   RowBox[{"vAutos2", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "-", "nCells"}]}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "laengex2"}], "}"}]}], "]"}]}], ";"}]}], 
          "\n", "  ", "]"}], ";", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Abspeichern", " ", "xAutos", " ", "f\[UDoubleDot]r", " ", 
           "n\[ADoubleDot]chsten", " ", "Zeitschritt"}], "*)"}], "\n", "  ", 
         RowBox[{"savex1", "=", "xAutos1"}], ";", "\n", "  ", 
         RowBox[{"savex2", "=", "xAutos2"}], ";", "\n", "  ", "\n", "  ", 
         RowBox[{"(*", 
          RowBox[{
          "Abspeichern", " ", "Daten", " ", "in", " ", "Listen", " ", "zur", 
           " ", "Ausgabe"}], "*)"}], "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xtwolan1", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"xAutos1", "!=", 
              RowBox[{"{", "}"}]}], ",", "xAutos1", ",", 
             RowBox[{"xAutos1", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"xtwolan2", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"xAutos2", "!=", 
              RowBox[{"{", "}"}]}], ",", "xAutos2", ",", 
             RowBox[{"xAutos2", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vtwolan1", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"vAutos1", "!=", 
              RowBox[{"{", "}"}]}], ",", "vAutos1", ",", 
             RowBox[{"vAutos1", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";", "\n", "  ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vtwolan2", ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"vAutos2", "!=", 
              RowBox[{"{", "}"}]}], ",", "vAutos2", ",", 
             RowBox[{"vAutos2", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "0.5", "}"}]}], "]"}]}], "]"}], ";"}]}], "\n", "  ",
        "\n", "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Abspeichern", " ", "Abst\[ADoubleDot]nde", " ", "nach", " ", 
        "Spurwechsel", " ", "in", " ", "letztem", " ", "Schritt"}], "*)"}], 
      "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dtwolan1", ",", "dAutos1"}], "]"}], ";", "\n", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dtwolan2", ",", "dAutos2"}], "]"}], ";", "\n", " ", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
        "xtwolan1", ",", "xtwolan2", ",", "vtwolan1", ",", "vtwolan2", ",", 
         "dtwolan1", ",", "dtwolan2", ",", "wechselvon1", ",", "wechselzu1", 
         ",", "wechselvon2", ",", "wechselzu2"}], "}"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995696756933565`*^9, {3.899924189436119*^9, 3.8999241972400265`*^9}, {
   3.899974823102227*^9, 
   3.8999749583957005`*^9}},ExpressionUUID->"7b20d250-10c3-4989-a0ac-\
38835f16d57e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Erwartete", " ", "Laufzeit", " ", "pro", " ", "Fundamentalplot", " ", 
     "sind", " ", "6"}], "-", 
    RowBox[{"7", " ", "Minuten"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"twolanesplots", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Histogramme", " ", "und", " ", "Dichteplots", " ", "f\[UDoubleDot]r", 
     " ", "die", " ", "Spuren", " ", "getrennt"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"vdhisto2D", "[", 
       RowBox[{
        RowBox[{"{", "100", "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.15"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"vdhisto2D", "[", 
       RowBox[{
        RowBox[{"{", "100", "}"}], ",", 
        RowBox[{"{", "100", "}"}], ",", "0.3"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"dichteplot2D", "[", 
       RowBox[{"100", ",", "0.15", ",", "10"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"dichteplot2D", "[", 
       RowBox[{"100", ",", "0.3", ",", "10"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<twolanesNaSch\>\"", ",", "0.15", ",", "0"}], "]"}]}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"twolanesplots", ",", 
      RowBox[{"FundamentalD", "[", 
       RowBox[{"\"\<twolanesNaSch\>\"", ",", "0.3", ",", "0"}], "]"}]}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "twolanesplots", "]"}], "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "m", ",", 
         RowBox[{"m", "+", "3"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}], "\n", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "twolanesplots", "]"}], "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "9", ",", "13", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "m", ",", 
         RowBox[{"m", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.8995696859553638`*^9, {3.8998983071500607`*^9, 3.8998983114650745`*^9}, {
   3.8999089217193613`*^9, 3.8999090395838685`*^9}, {3.899909246454648*^9, 
   3.899909263368252*^9}, {3.8999092965487604`*^9, 3.899909296787594*^9}, {
   3.8999093612011075`*^9, 3.899909432265727*^9}, {3.8999094951111755`*^9, 
   3.8999095032470913`*^9}, {3.899909739024233*^9, 3.899909765783492*^9}, {
   3.899915971250391*^9, 3.89991602802697*^9}, {3.8999160583060055`*^9, 
   3.899916073501024*^9}, {3.8999198949977694`*^9, 3.8999199166234875`*^9}, {
   3.8999199753938684`*^9, 3.8999199887913017`*^9}, {3.899920054701664*^9, 
   3.8999200614483294`*^9}, {3.8999230638022118`*^9, 
   3.8999230815701275`*^9}, {3.899925908612608*^9, 3.899925923297467*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"6db0d547-fc6f-4cea-a2b3-c9cce6a6dbe3"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 28}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068487, 
                  98.60419607176118}, {-139.53996657256857`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 28]& ,
              TagBoxNote->"28"],
             StyleBox["28", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[28, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.987127, 0.5308512857142857, 0.0596497], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 18}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176118, 
                  133.36077662283748`}, {-94.94823499810767, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 18]& ,
              TagBoxNote->"18"],
             StyleBox["18", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[18, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8432481428571429, 0.15849014285714286`, 
                0.008003357142857142], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-50.35650342364673, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.6579999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6706774285714285, 0.06984285714285714, 0.009042057142857144], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499007`}, {-32.519810793862355`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 58 Autos,\\n t=100, p=0.15 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 25}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.39761552068486, 
                  82.80575036672647}, {-139.53996657256855`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 25]& ,
              TagBoxNote->"25"],
             StyleBox["25", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[25, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.822129, 0.122225, 0.0039559], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{82.35575036672648, 
                  101.76388521276812`}, {-49.64303571845535, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.846768, 0.16453433333333334`, 0.008677933333333334], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{101.3138852127681, 
                  120.72202005880973`}, {-54.637309654794976`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.920685, 0.29146233333333327`, 0.022844033333333333`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{120.27202005880972`, 
                  139.68015490485138`}, {-69.62013146381385, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6454355, 0.0611125, 0.00988975], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{139.2301549048514, 
                  158.63828975089302`}, {-34.660213909436486`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5276398333333333, 0.02037083333333333, 
                0.013845650000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{158.188289750893, 
                  177.59642459693458`}, {-24.671666036757237`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{252.97896398110112`, 
                  272.3870988271428}, {-19.677392100417634`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.72, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 58 Autos,\\n t=100, p=0.15 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 10.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.651], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 16}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-139.53996657256857`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 16]& ,
              TagBoxNote->"16"],
             StyleBox["16", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[16, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.733528, 0.10356295000000001`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 14}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-123.93286052150727`, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 14]& ,
              TagBoxNote->"14"],
             StyleBox["14", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[14, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.97747225, 0.443793, 0.0442588], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  168.11735717391377`}, {-84.91509539385396, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.6454355, 0.0611125, 0.00988975], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499013`}, {-30.29022421513931, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.55708875, 0.03055625, 0.012856675], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-22.48667118960865, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 42 Autos,\\n t=100, p=0.15 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.609], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 15}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.3976155206848, 
                  82.8057503667263}, {-139.53996657256855`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 15]& ,
              TagBoxNote->"15"],
             StyleBox["15", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[15, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9277247142857143, 0.30355071428571423`, 
                0.024193185714285713`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{82.35575036672631, 
                  101.76388521276806`}, {-72.9496474213736, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8854864285714286, 0.23102042857142857`, 0.01609827142857143], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{101.31388521276804`, 
                  120.72202005880956`}, {-64.62585752747422, \
-14.233118164077984`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8432481428571429, 0.15849014285714286`, 
                0.008003357142857142], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 5}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{120.27202005880955`, 
                  139.6801549048513}, {-56.30206763357484, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7716451428571429, 0.10476428571428571`, 
                0.005651285714285715], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{139.23015490485128`, 
                  158.6382897508928}, {-47.97827773967548, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{158.18828975089278`, 
                  177.59642459693453`}, {-23.006908057977363`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{7.5, 0.}, {8.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{215.06269428901774`, 
                  234.47082913505926`}, {-23.006908057977363`, \
-14.233118164077986`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.609], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{9.5, 0.}, {10.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{252.97896398110095`, 
                  272.3870988271425}, {-23.006908057977384`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.647624, 0.37816, 0.614037], Opacity[0.5], EdgeForm[{
           Opacity[0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{11.5, 0.}, {12.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{290.8952336731842, 
                  310.30336851922567`}, {-23.006908057977384`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.571589, 0.586483, 0.], Opacity[0.5], EdgeForm[{Opacity[
           0.609], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{22.5, 0.}, {23.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{499.4347169796421, 
                  518.8428518256836}, {-23.006908057977384`, \
-14.233118164077965`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.72, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 42 Autos,\\n t=100, p=0.15 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 10.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -118.66252583997979},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.651], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 22}, "RoundingRadius" -> 0]},
                 ImageSizeCache->{{63.39761552068487, 
                  98.60419607176118}, {-139.53996657256855`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 22]& ,
              TagBoxNote->"22"],
             StyleBox["22", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[22, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.7571459090909092, 0.1099426], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 20}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176118, 
                  133.36077662283748`}, {-128.18934398997848`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 20]& ,
              TagBoxNote->"20"],
             StyleBox["20", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[20, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.969963, 0.376081, 0.0322881], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 11}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283746`, 
                  168.11735717391377`}, {-77.11154236832327, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7257507272727273, 0.08889090909090909, 0.007192545454545455], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 4}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  202.87393772499007`}, {-37.38436332925807, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.5972463636363636, 0.044445454545454545`, 
                0.011508072727272728`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.42393772499005`, 
                  237.63051827606637`}, {-26.033740746668038`, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 59 Autos,\\n t=100, p=0.3 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.637], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 20}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  93.63897027875029}, {-139.5399665725686, -14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 20]& ,
              TagBoxNote->"20"],
             StyleBox["20", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[20, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9920955263157895, 0.5756532105263158, 0.06757016315789474], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 14}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{93.1889702787503, 
                  123.4303250368157}, {-102.08291205002143`, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 14]& ,
              TagBoxNote->"14"],
             StyleBox["14", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[14, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9544015263157895, 0.34935931578947366`, 
                0.029305763157894738`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{122.98032503681569`, 
                  153.2216797948811}, {-77.11154236832333, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.8921556315789474, 0.2424725789473684, 0.017376415789473684`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 8}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{152.77167979488112`, 
                  183.0130345529465}, {-64.62585752747425, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 8]& ,
              TagBoxNote->"8"],
             StyleBox["8", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[8, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6175365263157895, 0.05146315789473684, 
                0.010826673684210527`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{182.5630345529465, 
                  212.80438931101196`}, {-33.4116454253516, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.6175365263157895, 0.05146315789473684, 
                0.010826673684210527`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{4.5, 0.}, {5.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{212.35438931101194`, 
                  242.59574406907734`}, {-33.4116454253516, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.637], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{5.5, 0.}, {6.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{242.1457440690773, 
                  272.3870988271427}, {-20.925960584502548`, \
-14.233118164077979`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.64, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 59 Autos,\\n t=100, p=0.3 und \
Spur 1\"", TraditionalForm],
       PlotRange->{{-0.5, 6.5}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.651], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 17}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{63.397615520684916`, 
                  98.60419607176115}, {-139.53996657256855`, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9805642941176471, 0.47167441176470587`, 0.04918791176470588], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 10}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{98.15419607176116, 
                  133.36077662283753`}, {-88.12832311024893, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 10]& ,
              TagBoxNote->"10"],
             StyleBox["10", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[10, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9177862941176471, 0.28648476470588236`, 
                0.022288500000000003`], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 7}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{132.91077662283752`, 
                  168.11735717391377`}, {-66.09476162639764, \
-14.233118164077998`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8830018235294118, 0.22675394117647057`, 0.0156221], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{167.66735717391376`, 
                  
                  202.87393772499013`}, {-58.75024113178055, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.651], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5518918823529412, 0.028758823529411764`, 0.0130312], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{202.4239377249901, 
                  237.63051827606637`}, {-22.02763865869509, \
-14.233118164078}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}, {}}, {{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["v", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"v", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-0.62, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von v mit 41 Autos,\\n t=100, p=0.3 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.616], Thickness[Small]}], {{}, 
          {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9899876666666667, 0.5566463333333334, 0.06420996666666667], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.5, 0.}, {0.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{73.57027324295123, 
                  94.36558868748364}, {-101.12247475457143`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[1., 0.820127, 0.126955], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.5, 0.}, {1.5, 13}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{93.91558868748362, 
                  114.71090413201625`}, {-139.5399665725685, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 13]& ,
              TagBoxNote->"13"],
             StyleBox["13", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[13, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9899876666666667, 0.5566463333333334, 0.06420996666666667], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.5, 0.}, {2.5, 9}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{114.26090413201624`, 
                  135.0562195765486}, {-101.12247475457143`, \
-14.23311816407797}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 9]& ,
              TagBoxNote->"9"],
             StyleBox["9", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[9, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{2.5, 0.}, {3.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{134.60621957654863`, 
                  155.40153502108103`}, {-43.49623702757578, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.7043333333333333, 0.08148333333333332, 0.0079118], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{3.5, 0.}, {4.5, 3}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{154.951535021081, 
                  175.74685046561342`}, {-43.49623702757578, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.772079, 0.431554, 0.102387], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.5865376666666666, 0.04074166666666666, 0.0118677], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{6.5, 0.}, {7.5, 2}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{215.9874813546784, 
                  236.78279679921104`}, {-33.89186407307651, \
-14.233118164077972`}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[0.363898, 0.618501, 0.782349], Opacity[0.5], EdgeForm[{
           Opacity[0.616], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{20.5, 0.}, {21.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{500.82189757813296`, 
                  521.6172130226654}, {-24.287491118577265`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], "Tooltip"]& ]}, {}, {}}, {{}, 
          {RGBColor[1, 0.75, 0], Opacity[0.5], EdgeForm[{Opacity[0.616], 
           Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.468742, 0., 0.0158236], 
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{21.5, 0.}, {22.5, 1}, "RoundingRadius" -> 0]},
                 
                 ImageSizeCache->{{521.1672130226654, 
                  541.9625284671978}, {-24.287491118577265`, \
-14.23311816407795}}],
                "DelayedMouseEffectStyle"]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {
               GrayLevel[1]}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {
               GrayLevel[1]}], 
             "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          TagBox["d", HoldForm], TraditionalForm], 
         FormBox[
          TagBox[
           RowBox[{"Anzahl", " ", "Autos", " ", "mit", " ", 
             TemplateBox[{"d", "\"i\""}, "IndexedDefault"]}], HoldForm], 
          TraditionalForm]},
       AxesOrigin->{-1.205, 0},
       DisplayFunction->Identity,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{41.58961902304462, 15.154297001349391`}, {
        13.081138499907665`, 19.82958984375}},
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       PlotLabel->FormBox[
        "\"twolanesNaSch: Histogramm von d mit 41 Autos,\\n t=100, p=0.3 und \
Spur 2\"", TraditionalForm],
       PlotRange->{{-1., 9.25}, {0, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -355.98757751993935},
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.899921086554542*^9, 3.899925399708996*^9, 
  3.899972056539133*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"4dc5f3ef-d507-45d8-b33c-ff2101635d32"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
z5zvB/s6Y3XX72uP1tsksVjrL/fxBT/e3ddecHTTvpiFVR9KLHuDvvz2tFn8
uLVVamDKFn1xTd3N42d/OLzBp237Yhye/WIee8xjz3kc29e77r3evi8GYdhO
ffELe7ZLHt8O8ePWRzLj2Y59sUnOLn0xCHv27osj+LFXX+xgH5c1XzqP3fp6
J9yhXZPH3jnrq7V7/Lj10ay5ZD7DMqm7R/zsj8WPkR/PbH+fyF5w5dC+mIJV
h/TFFPb+fbEMq/bti3FYtV9mvsOShzcH98Us+QckD/OOz+fDiU/3xR1nfXRf
3MGbfbIXDPtkZgw+oi9+YcbhWYf9qfjt6ZjUUPeovtih7pHJY5+Q9fHvK33d
E/fGn8vXjX1eX/fWXTmxL95h2GeSx/5cX9zBs8/Gj1un5Rk+ndwX13DrpPjZ
p+QZVp3e1+8NVp3bF1/ww2/CBrm3Z/bFKQw7I7Hsz2cd+WfFj1tfSA1MOqcv
rql7dvzsA/Od+J05NXvxec7P58a8CzLj3Jf7YhCGfSnP2F/N+eHZhfHj1mXz
WK8vPvn3nnVyvhfFz/5i9uisL++LEZh0dV8Mwpht+rqv7uo3+mIEBnw9seyv
ZR35V8SPW99MDUy6qi9+qXtl/OwnDPXdexcOynl4d6/p63cCw67ri1k49J2+
eMe+N+co73t9sQyHbuiLX/j03cw4dH1q8N2cWH8OuqUvNvmsP+rrPruvt/bF
Kbz5Qfzs7ydPzg/jx6rbMmPSjVkTC+/oi03q3h4/+6b47fvHWRMb7syMYb/q
i1O49dO+eIRP9/TFI2z7SWa+n8WPT79OHsb8PM8w6Zd9cUrdb/f12+NMf5NY
DPhTX9zBj7uyFwz+XV9ccO9/m1j23fHb0+/jx6o/p4bv6Y99MUvdP8TP/ku+
Q9z6W1/sw8Ilhroz7tBf4+f7R1+8w6G/J5b9n74YhG3/jB+3/ptnflv+3ReP
8Olf8bPvyzMs7Ib6PcDLBw7FDiy5tq/30XkNQ7EMk/qhYtn+I7Z15I9D+THs
QUPVwJ4HDMUsdaeh/Oxv9XVXvPf3Zy8+z4OHYgTmLTkUpzBmsaF4hE8PHYpH
ePawoWa+hw/lx6dHDpXn3i8+1DPn+4ihzljdRYbao/UeNVQsHi89FF/w4yFD
7QVrlxqKWVj16KFi2YsO5benxwzlx63HD1UDkx43FNfUfexQfrbfKH+e9WfZ
Jw7FBpz7yzi/J/M4eB5rDvWue6+fMhSDMOxZQ/ELe5YdioN8yw3lx62nDjXj
2TOHYpOc5wz1HWDPCkNxBD9eOBQ72GsNtaY/szxvqHfCHXruUHnsZw+1vlrP
H8qPW08bak2MXH4orqn7gqH87KcP5cfIZww129+LhtoLrqwyFFOwauWhmMJe
cSiWYdXLhmIcVr18qJnv1UPl4c1KQzFL/iuGysO81w/1+XDidUNxx1mvPhR3
8ObFQ+0Fw14y1IzBrxmKX5ix6lDrsF86lN+e1hiqhrqvHYod6q42VB77lUPt
BV/XHmovWPihoe6Ve/PGoRiHW28Yys9+31D32R1adyju4Nmbh2IWhr1lqBmr
3jRUDb63DRWLW+8Y6jcGn94zFC/w451D8Qir1hvKz377UHly1h/Kj0/vGmrG
rbcOtSb+bTAUp9R991B+9jpD+e37vUOt6fNsONRnwrn3DzVj2weH4g5ufWCo
Z+zNhmINhm0UP1ZtnmeYtMlQLHOmG8fP3jRnLH/LobiAQ9sNxR1cuS75vpOt
h+KCe79VYtlbZB35H44fq7ZPDRzadihmqbtN/OxXDfX9e0d3SKzfhI9kxq0d
h+IU9nx8KMaxTxrqHVJj96H4hT07D8UsTNolM/bslBp8eyTW3xnvNdSfUXBo
/6HusDu6zzyePBRjPjGPJ8XeM3lyPhk/Pn0qMw7tmjXxb7+heKTuvvGzd4vf
vg/ImnhwYGbcOnooNmHVYUMxCJMOGYpBeHZoZr7D48ekY5KHK0fkGQ4dNRSb
1P3YUL83zvTTiXXvTxyKNZhxUPaCu8cNxQJ3/djEsg+O356Ojx+fPpsavqfP
DMUpdU+In31yvkOsOnUo3uHf14e6V+7NKfHznTYU47Dnc4llnz0Ud/Ds8/Fj
1Tl55vfkjKEYhEmnx88+M8/w7wtD/QZg5JeHYgqWfHSo99F5nTcUszDpi4ll
n5t15J8fP4ZdmBrY8KWheKTuBfGzrx/qnrmXZ2UvPs/FQ/EC564YiilYddlQ
bMKqrw7FJjy7NDPf1+LHqiuThzeX55nz/UbOWN2LskfrXZVYrP32UHzBj0uy
Fxz95lDMwqqrE8v+Svz29K34ces7qYEp1w7FNXWviZ995FDvqXf0hpwHzr1m
/jPBnfN81zxuGoo7uHXjULxj/3OoO+B9v3Uo7uDZzUMxC8O+nxmrvpcafD9M
LG7dPhSPcOieoZiCJT8a6j1wb+6In31b8uT8OH6sujMzht2SNfHv7qF4tHM+
z46xfxC/ff8ka2LJTzNjxh+G4giu/Hoeew/Fp18MxTV8+mVmbPtN/Hj2x+Th
3G/zDMN+PxS/1P1Xzs/38KfE4tPfh2INDv0se8Hde4diFk78ObHsn8dvT3+J
Hyf+kRq+p78NxTJ1/xo/+3fZlz39O3vBrceMdWfcofuH4iPOjWPxBbf+k2d4
9t/MWNWNxS986seaccj/pMrP9/CxWOD+TWPVw7AHjvV7g1UPGmvGpAeM5ed7
8Fj8wqSHjDVj1aJjzZg0jLWmvT5sLAZh0kPH8rMXG+uZfSw+1l6w7aljMdF9
XXIs1mDVI8ZiHPuxY50Nbj1yLD8+PWqsGbeWGKuenKXG4pQzffRYfvZ9OW/n
+7ix6mHYU8ZiCn48YSwWuOvLjMUp9tJjxWLJE8fy49OTxprx6fFj+eUsOxbL
1H3yWH72cmOt4zM/bazPjX+7jPUe+KzPHItT2POMsRjHfvNY77f36Plj8Qt7
nj0WszDpOWPN2POssWrwvWCsWH/2eeFYXMahl4/FDvf4RfM/f3co9qwwlp+9
/Fh5cl48lh+rXjLWjDfPHWtN/HvZWGxS96Vj+dnPG8tv3yuOtSY2vGKsGdte
OxZH8GmVsXiETyuNxSMMW3msme/VY/nxafWx8jBm1bGeYdVqY/FI3beMdX7Y
sMZYsTj0xrG4gyuvHGsv2LnmWFxw7183Viz7VWP57WmtsfxY9aaxavie3jD/
86+Gqvv6sfwY9tax1se8dcaaMezDY90r9+ZtY3EKe9Ydy89+11jMwpu3j+XH
qneMNWPSJmPdSfx451gMwqT1xvKz1x/rmVrvHque35mNxmIKlrxvrDuDSe8d
i1nsDcaKxdQNx/Lj0/vHmvHpPWP55XxwLB6p+4Gx/At51/wG+p3bOGva99PH
uhPe+83H4hQ+bTYWm9jb5JzwZov4F5nHlplxa9OxeCdn67H45Xy3ip/9oZyT
uG1TD6t2GosdWPKRsfiCSTuMxS/2donF14/Gj2Efy4xV28cvZ8exmKXux+Nn
75x13P9dx2IAPu0wze/5PG6bx+fHeqf9eWGPsViDT58ai1+4svtYnOLbM348
2yszbn1yLDbJ2W8s/uLQoWOxwz0+ZCymsE/Pmu7QAfluMGn/5LH3zfpqHRg/
hu2dNTHS3308K3UPip/9ifgxcp/M9ndY9oIZnxmLU5hxwlh8YR8zFqdw66ix
OIVtR2fmOzF5GHP8WDyS/+nk4dkZ+XzYc9pYTHHWp47FGhw6PHvB3SMyY+pJ
Y/ECDz6bddhHxm9Pn0sNdU8Zi2Xqnpw89rHZC6aemb3g2bfGulfuzdljMQuH
zoqffflY9xkbLhiLZTh07lj8wqcvZMahc1KD70uJ9dty4Vh8xKfLxuIFflw8
Fqdw6KL42V9OnpxL4setr2TGp/PmsfZYLLx0LE6p+9X42efHb99fy5o+z9fz
mfDpG5mx58qx+IJJV+QZ+9qxWINhV8WPYd/OM4z55ljMcqZXx8++Jmcs/7qx
GIoN3xuLKZjx7KnyfSc3jMUXTLo+sezvZB35340fw25ODRy6aSxmqXtj/Ozj
8v17R7+fWL8Jt2TGvNvGYgoO/XAsBrGJg45NjbvGYg2G3TEWv/DpR5nx6fbU
4Ls7sTj0k7H+LIJDvx7rDrujP5vHbmMx5qfxs+9Jnpyfx49Pv8iMQz/Ompj3
q7F4pO4v42ffGb99/yZr4sFvM+PW38ZiE1b9aSwGYdIfxmIQnv0xM9+f48ek
vycPV+7NMxz661hsUvfWsX4DnOk/Euve/2cs1mDG77IX3P3XWCxw1/+ZWPbv
47enf8ePT/9NDd/T/WNxSt374md3U32HWDVMxTv8e+JU98q96afy801TMQ57
xqli2Q+Zijt49oCp/Fi16FTP/J48aCoGYdIDp/KzF5nqGf49bKrfAIxcciqm
YMkPxnofndfDp2IWJi02VSz7ofndkr/4VH4Me9T8z18ciw2PmIpH6i4xlZ/9
nKnumXv54Kn24vMsNRUvcO7JUzEFqx4/FZuw6nFTsQnPlp5q5ltmKj9WLTtV
Ht48YapnzvdJU52xuo+eao/We8pUsVj7zKn4gh+PmWovOPrUqZiFVctNFct+
7FR+e3raVH7cetZUNTDlGVNxTd2nT+VnP3eqM8C2500149nJ8z+/ah4rzeMF
U3EHt54/lZ/99qnugPf9JVNxB89eOBWzMGyFqWasWn6qGnwvnSoWt14+FY9w
aJWpmIIlr5jqPXBvVpzKz37ZVHlyXjmVH6vs14xhL5pqTfxbeSoeqevz8LNf
PJXfvl891ZpYsupUM2asPRVHcGWNqfiFT6+dimv4tPpUM9/rpvLj2RumysO5
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzdXD1IllEYfS0UIUKHFi0Il3DIraipK+XkUOQQDrUUQZtpCCktBYXQIhQN
Qi0VFCLYkENSWYsQER8hDVpBYog/aTSFRBbiFDzokXM49+tbPrhcnvf+PD/n
+bsNZzvazm8riuJjZVFs//s/sb+01D+9kNrnpjome96kvivvdnV23kzRePXv
uvp7zctp5Fr10IeFqdT1tmJmbOVh6qo7dLD061s6ujhfd6l7Ih3va2l7fHcg
FWu/72mi9czV1pNf03Tjq3Njk0/D+Sj9aD66/qr59lOHd86lxqXxE3tLo6ml
58nrlwPd4fw7k5fvrgwtp4rT93/uKH1Jq7vnemsvDofrROdH30XXE42j9NFx
1r4iOtE4ys/ROIs/0XGUP1nrR7+L8hXKn+h+UT3AOk/XOEuPufQJqidRPmTx
P8pvLD5k6Te1XOQ2/ujB8Pitqpn19Q+mY2vrvx6eZ7RflE60HrWeVPMzS1+x
+C26l4iOazxaJ2tf0Xz0u+pzYH2XRceFG1nfRe+XNY6eJwvPoOeGzmfhE7U/
q9bPanlh3SNrXyw/iOWvsfwdlv1l4UCWn8Wij9pTFn213WHxOSveha5Hbb/K
3e6r6ajPh+W35oZv0fHbL2q7Pq9+Wo+LF8WP+sr3NQf64fko/o/osOiz/DKW
H6Q+/9z4Kjc/Wh1fivQVyz9S7yu3OBsrzlAucQBX/Ce3eIsaJ+emZ1h6EtU/
Lv2QW5zThc/Re3T5C7nZEbXec+ErFr5l5Ztc+1LjQ5a/5vJzWXTQOKE6LqfW
ey78xtL/6vyI2r6z4vwu+1Lu9tflH7nsMsu+qO2COm8e0Yni59E5R/NR+uo8
I6vOBK2ficbR76L0WXW/6no2V56dlfdn5eVd+DA3+6jO+6P4Cr1fVn5cnfdk
7Uuth9X5RHXdi/p+o74VtJ8lms+q80TXydrvRnSaRmafT4/Ppj2jFxY7mkZp
coTSZ9XPROcQ6T1W35Orzwi1j+q+AFddn7ofSl1fzeIfVv1Pbv1okZy6+IeF
x9R4iSWPLLscfRe9X1afGrpOtn3crL3eKq7YrP1Fz9mFA1nrZOnV3MZd96jG
z2q9xJJrVhxD7Se6+sVYcQP0vlj4U+1Hs+SCZUdQOXLpc7WeZMUZtvrdGw1d
K71H5tPgvr5nNc1jcjuC2kf0fFhxjI34ebPnpo7PuOy+C0ehcsH6LituyVp/
bn2XrnpUdR0OGldk2QU1HmDlZ104Jzc8kxt+QPlTHUdV533Qe4nmo/EcdfyB
FU9z1UGx6Kv72dV5dtc7LWo9oLbLudW9q/tP1fl3dX+3Gje66pxZ7zyw6u1d
ddesfkxWPTYqj2p75Oq7yY1Obn2RLPlS90nl1t8a1Ser9Vtu7w+43jdQx0Nc
fbis82TtC7UL6vWz7BqKZ6LvqvGPq3/TpR9c61f7lbnFJ119bSw/Rd1XlVtd
QW79gK5+ELVedZ2bOh7iev8Hxcmsd0VY/BmtXx3/dOWVUD2TW78VSoeF99B7
VMdDWP2erL4tNd5w+Wvl7vf9r3Etln1h8WdkR1h6mKW3UTrq9wpyk2t1XsCF
k9X6XB0nUecHUTygzqOh8ujqN2T5gyxcx8LhanyeW94zN/3P8qPVfrdaLlz9
syz9r9aHanvqykeo81/q+1Xr/6guEX0nKrd6OTWeZ/EDy46w5qvtpst+qevK
1PUhLrup9qdceQpWfIZVp73ROzD/9suj9oVV367uG1Xjvdzq6NTyqH5PhnWe
6vpt1vt+rneH1P4+q4+SdS/qfh+UD9X9y+p6e9e4S+7UcbxysXfq91LQ/nR1
XpXFP2o8rM5jqnGCmh/U8u56f0Ddx4fee27vP7j0AOuc1XFjdV5b3XfM0rdq
v8bV58XiH/V7quVSF/cHTG+7gA==
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 1: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.15\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1: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
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -62.5}, 
                    Offset[{4., 0}, {7.5, -62.5}]}, {{7.5, -12.5}, 
                    Offset[{4., 0}, {7.5, -12.5}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 87.5}, 
                    Offset[{4., 0}, {7.5, 87.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -100.}, 
                    Offset[{2.5, 0.}, {7.5, -100.}]}, {{7.5, -87.5}, 
                    Offset[{2.5, 0.}, {7.5, -87.5}]}, {{7.5, -75.}, 
                    Offset[{2.5, 0.}, {7.5, -75.}]}, {{7.5, -50.}, 
                    Offset[{2.5, 0.}, {7.5, -50.}]}, {{7.5, -37.5}, 
                    Offset[{2.5, 0.}, {7.5, -37.5}]}, {{7.5, -25.}, 
                    Offset[{2.5, 0.}, {7.5, -25.}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 12.5}, 
                    Offset[{2.5, 0.}, {7.5, 12.5}]}, {{7.5, 25.}, 
                    Offset[{2.5, 0.}, {7.5, 25.}]}, {{7.5, 50.}, 
                    Offset[{2.5, 0.}, {7.5, 50.}]}, {{7.5, 62.5}, 
                    Offset[{2.5, 0.}, {7.5, 62.5}]}, {{7.5, 75.}, 
                    Offset[{2.5, 0.}, {7.5, 75.}]}, {{7.5, 100.}, 
                    Offset[{2.5, 0.}, {7.5, 100.}]}, {{7.5, 112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxF1Qsw1OsbB3AplFKiUpJySaeUCp0i+ZYiSnskpCSXk46kkiQ6cg+5VkRK
tI6DaLHum0tESSqS0AXLrr3Kz6VoSZ3+89+x78wz885n3nne53nmnXlVnM9Z
uswUExOb8StcfsX/9gnVsp7dP7sgJlwjihKtC3SvQ7ZJfcSb3Q07jbphP0kv
/Gi1O7XjXBxiOrZ5LmjuEXoolnlQtOy8YyHhqSE4ZEdHBC3DrWJOLHRkfo76
XInBbp9Nequa6cLzCSDlWNASQ6MR5K/vO2DUixFCR0tpdjJc96b7F0dF4XHo
Hlp5aa8wTypCmKO7W29G4kckSRC6rg/XayMPUa6ScS/IeM5Q8jUY3LDVO5ja
J8yfgXLlpNcy5AhcTnL2XSHHgEbUZJx5eCZaKzjxmtnhKL/nTuNeZQjvfYAB
W/0jZvlhGPvHW1AiYKDKyv0lPyIXUmNRyn+VXoVuTqBe8BmmsJ48qMZ3MUKr
QnGhINKX1MvEurizocbGBTDYtPFBen0IqKUJNEXrfmGdVNi8Cjxb0xQMojJV
wHrej6+jmaqLnxXivFurTndrEDbUZesVGbCE9RcjSkpdMPk+EO6Nhb4BBSzU
2vbUME1KsM+M76fzJAA5zZW0/epsYV+lCAyJlTrXcgWcd88ECrfZiK5ScChu
KENx1eabOd1/Q+NTix5zLkfYLw2c8TYl1oAvTvR98C0I4OCwqsVUiOkjKGv7
ZKlMXkI6h0nzG+UI51ABK/fl2vZzvEEfHBSY/sWFWnjE3UONlYjIrK68reAF
5a/f9BZ/5ArnU41qutPettWesJ8Uv9xL4mGQX6Ontu8x/v+uPJDQ973AMoCH
9fIGMa+Ga+Aq7hB4stMLLxvH2HX5PDgVJF25ZvgE3dxyrSo/X8ykDilvofOQ
eGD0jHFUHQ69keuSV/GH/m2edaYsH4080vEZnfVwPFZqXOIchPMBzGiFXXz8
CM8hVak/g5IFI4VeHILsk911Eef50FktCd/zDWjfLftlrlQYeg50TgjIfLg+
cdq4pfo5bmzdsX/rkQgobGndfLqVjxSHqpXD0i9grumW7pwbCZLSS9dP4gNo
/b5UlnK4CVIrkwQxU9G4OvNZ2gGdAUje8RI7lfEST+TqLWh/xKGS97i9+s8B
6G9tGVIffgWDkG+HRlquY/QNTWZTwgDOtmn20nc0Q3Eq9qfUxA1o0or2kOt/
5S+vcyUZt2Dce3XuCrV4ON+n/C33dQDu4cOOD/ktaBuqsNExT0ByeFZhyOrP
kLRZeUT65hsUulmKm128hZazZO4X688gqx846LqtFdeZHMrx1ERI2dxddTLs
M/RHL5s9626F+/GAI14NScCOW4c7Sj/jXW32LvWrb2HauVgicug2vNXjYk3Z
n+FxvV0vWLMNGpYPC9KW3QFl7rWnNIVBSDvM0qa/acOsl0bHSozugjkS/H2d
6SAyNmivM/R5B7rxe6mm0ylQ+uCnk+IzCHx3UE1Rbkf143NF9IR7sKz1dpN5
MIjOFzGKE/XtuKMn6TBWlYrIbA+y//tBXEiukLM93QGfohTpeew01Ma5dRJz
CMx35UqXLuxETuKyj7IR9zHXaVFEgzwB6xlE0+91nRjRYy9QCiHDWrt6a9oK
Ail3vkSXeb2HflfxnjX+6bg/05XtvYYAU2fiwDaNDwgODPbV9v0HvLaFSaTN
BDRf/ZxP6/iAF2oWeTu8MqCbWWGisZ2A50mJFr1rHyHXsIJheu5f+F9yGZva
Q4D2U/rGI/1POOrGV7Byy8Rz0wWZ70gExJJlLbcPfEK6DM3cwSUL8oo0a4ot
ARPtJfKV97rAKggLcnPMhj3fWeKqM4GYpuVtBn90Q8vKqvSi3QNkVc4rOeZO
oO2Eyq0qsR54j6vwA21yMBxTekLXm8DyHxo2hoU9qL5DrIw+mIvtDo6L5gUS
oO5PjOrZTIekYZVVkvlDhG2Srmdc+zWfpcsG0iLpIPVGXkvfS0HLjOILFfEE
vjHvmjsy6EgMta2mGOVB8a29Wvy9X3OjKlNWGfSie43GaPmOfJzIkHrrlkVg
pz9ZpjehF/H9AnlnpQLkXaQGG1EJMPapnyV/7sXWMsc8dnIBBCZ22ooVBMIV
sl47mfThY0SD6RkFKnYvlegbriewjrl2o2paHwKOajFGEqiI4ebdaHxN4HXB
w7i+8T6orr91xUeuEB2PbHeROwl4XNk4lG7BwNOpSYUfcYVQiRYf9ukjsGhf
ocWfDxg41excGCJTBHf7h/ctBgiUL9lCVRNnQobcaD4nqgilWjYWv40ROMYo
W8g8ygTVcxM7dnax8P8bws98fc+MIias9yQFLQoTebbeV1uXASb8Fz59Xi5W
Mu2WdfnQWN2PrO6RBfZ/i3zS3E2Dbd+PltxVh2eMiTyjXV0mO7EfEz6k1H89
Sqed5Ngz6trcDzUTv34zvsjHuckf1s5mwVw+Z/2gS9m0379gVcvbycJFeseF
m3SRm03Nz871ZSGVIlHxu135tI+ENca6F7Lw7LKO+Md3Ir8rG3pxA58FYq+T
WYAFbdr33DE8NqjGxtLFcdfVmkQ+qCYwyj/Gxq6+yo4G40fTnkQpWutxiw23
fJ6ye43Id249K7v5NRvxfktPym6vmHZezW/jw5IcVJqZUIpLRB6/j9FVCA5Y
S7y+2G6qnHaDtnv1F3w4mM8kb5/KETnL3jZXl8rBNmpzMHl11bTHseVufuVy
4OQ/1Wh8X+Tbzr/yKVXlInK/5kKeYvW0906EO1yy46Jw6RHb2Fsijww1MtmW
wMWH/rA0bdnH0647f2q94CUXs4qKWe2RIu9KKpN/JMHDkp3DiVXiNdMepuI5
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "9.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {217.06666666666666, -212.85}, {
      Center, Center}, {407., 395.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzlXc1L1UEUfShCtugZtTHaSNFfUEEunIIgaNGiLzAoKAgebQp3uYtMXGVI
2DYoiMwSKlwYlAVFtAmCyugDAyEy6UWbIBe2MDfG5Xme53jmR+4chvnduXPv
uR9z77y2E6f3n2wolUofmkqlxtLC3480N9Ledf3eVDq0+8q59b330+P+UxPV
5mpaU/m6enTtRBoabH3f0nc19T/dfrMyPJOar3W+65h6mVa1H3k9cHEgHD94
+0Jn5cZU+v5tfMemvSPpzvHeZ+t29cDrRONHZxu6P++b/rv+o/RzQ9Or8tYz
If3R/Mk922Z+9VRT4923D9KxyTRU3lzd+GIYpgddJ5of0Y+OR+cbfRcdj77L
4ieLD+h4JCfoOCq3kb6g9KPfZekR67uo3KJ6ja7PwkOUP+h8lD+s77L0upY8
PKkcHi2f/ZLePD8w23p+DNYXtR1B12Hpl9r+qnEApd+FVyg9KJ0s/ES/i8qJ
mj/oOpcftnR9mvuYFjza+fFL4Tro+qx1UDpZ514U/rDkjYUn6L5YfGbRqT53
1rmg8sCKs1x+Pmu+2j9h+Q8sf4ZlL1D5Z/lXLL+FRb9LbtW48b/hIaq/avrV
cQ3qP+eWV1H7+Wo5VI9Hesry69TxiNpvjObnNs7ig5oeNf/V/rz6XFhxLqq/
6vhInY9y0enCbVQecsM99Xm5cIk1X72v3OiP9Cuaz/IH1HLowh9X3swVH6H7
VeOMWj5z829ZcSsan6rlWY17LvlX5+XUcaIaZ4qSH3DF6bnZZZSeosRr6jxY
UfwZlh1x4bBLnl32SH2vFJ17tK/5//6tQ4vmR/eYatxWr4Pez0brRPxk1bui
9YS16nIX17OhdbwoP1l1vKw6W/W9j7rujjWfdd/k4mckz+p6b7V/4rq3ze18
1frL2q/LX0Xxv177slx7gdLJ6u9A7WY0Hp0Lyjf0u7XOvbet63d3x3S6taVv
rLxzHKaTpaeseni13cxNL1D+oPKfWx8TCz/R81LjeW51ia5+N9a51NtvuNL6
iOI2S19QO8WK49R4zsJDVjyujuvR9Wv5D4v9AVe/LWt+vfmN5Z4XS39Z+Kn+
Luo3quMadbypjkNZdcJqfyD6LgsfcsvDqN9JYOVj1XZE/Z4DC2dYfGDxmcWf
WvkB1I9V7Uudn88tH8vKb7DsMosPLvrV9p01zqp7ZMmPq79YfV5qfGPZqZXK
VyzVTqnzGCw8YeUlXOeiznuj/o86r+7qU1Pfd6v7gFD7qN6vOq/OWoclJyy7
GckJqy5CXZ/v0lN1XwYqb666a3U9pLoukdUvk1v/srr+2cU39birr8r1PkZu
uO3CZ5e8qfs9Xf1lrj5TNd6q+8LU/Rqs+xfWvnLrg3btF+1fUPuBueFebvaX
dQ+o7rtkxR2suNLVh+6KN13+mMu/UsfFrD5KFp1qPrDeJ2TlE1x5AFe/pLqf
Rf0+KqvvyXW/rM57o3LCsuMoH9RxhLoONjf/hIUbalxy1ROq96v209Tvj7Fw
hsV/Vvyoxr2i65267lcdL7D4rL7nctGpvqdA8z/quA/lD+u9CLX9UvcVquM7
NT647k9Z+S7XO29q/XLdc7nqVNX5EJb/5sq/ufwEdb7Idd/EkkP0nSjU7qv1
Wm2vXXlmNW678u2u+2jXu4iu+ws1PudW7+qih6VH81K59Hf8ovm5+fkoLuVW
d+2Ka3LDGdb9glreWPlDF51oviLCAVZ8gcatET2sPgIWbqP4ydJ3Nb6x3klT
vzeC0sPqX1bH+y6/xVXPoM4jqe0ya321H1IUeWDVD+Smp2qcd/m3rt99c/2O
eVHyUbn9vpiLHnUeRq2PudX/qPXdVYcZzf8DK0W4ww==
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 2: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.15\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1:eJxF1wk0VV3YB3ApGXpFSYZKyVARCb1lyL9RKUkqL0kiSZJmkSGZZ4kMJZlC
QqbMRErJmGQM93JnwwlFEn2+9d2ve9baa531W2eds/fz/Nc5Z0tbXTE6v5CL
i6tufiyYH/97HlkpfL3vTy+42Me4JE+rkPp9tL6VzMu40Qcz+Zox18XWuLYo
3zd7KAzC9bLjjvT/95uYazW7uPNKGI5+Ulbda9YP/5IUuzJ+dwQnLtJvGA9F
SMeO60LN/ezrvSFxNUvZzDEUNAfprsvSJIwTasqr+QKQqmO8jDUdAp7r8tPH
zUjs+4RCTfDPhJNbCGRvKUpoPiThfnXg8SyfcFT1pLXzLgjBXicVjXXNJPb9
I2GQYVgS5R0MK5dtpov5yZAPmgnT94tCj9P0Yzm+YNxz13Qe3kNmPzcWtgeS
3AuCgpBwD7GtrmRUnLBvGPJ/jEnRw5Z7hYLw2ntfSXEhmT2feHhRJva2PghE
n59eV/w3MhTCHLz370+AcH6cvOXKQMwFGkx7Kwyw55mIJ/f283+LDcDq0OMS
l6wH8GMidb1obRIUDEeH3NcEQDvcRONY/AB7/ikolopuEkz0h1mkuen2zgFU
m/RXUXSfYd8IcuNk/XEn2sp5zfJB9rpS0VrGiFBM90PsowuxC/UHEVwhZlHw
Pg0WgeGOpYp+KH5iX8L0GWSv9zmGTTRN9V76oiPhWlfz60H8t95w1utgBu5s
GNTqVPXFZLLj9KvpQXYdXoB3MkjqQqEPRNNcJOLUKJDx8398vC4TkW/VF0xq
+EA9w0PD8zKFXZ9srI/oHfSu8MaJLB9T2zQKRoeqNGQOvUS2pW+tyG5v3MgJ
dDYgU9h1y4G2ypbnSW+98CA/LFZ9FRXm6b8vOVNz8GGuI2jrQS/kFkaWSJ6k
suuZC+NGD4eqek+0lMR2cYVR8aZbXIsslwfK403Hjh71BFEeP037QGXXOQ/X
7FrV+lrvYWlVskQjNw0bBbcJ6NnkY26Hy8rLxvegVJOuka9NY9e/AEG8stMz
XR7Qr80yjXWkIRTHunJSCyDe3tATaO4B+7o857s5NHZfXuGQ3pCr2pu7CGoo
ij3PouH7tcvp4vRXsKZp7zlW546M5vKSw7J0dr8K4eEVynulxQ0fWqu7tp6h
wzQl4LbHhiI8WkdqCO5wBeNL7bRYDJ3dxyIUVGx9kNHnAt6ueom5T3S8bn+m
y7hQjKZTXv99oN6B/NcWDcoSBru/JWBMta2mDTtDt/+L6cf9DMjxvxE1TC/B
oofyAwu/O8F6oNs55y6D3fdSSKk6pUnP3IY3tT82qoSBQK0+ShGjFJrNdfbg
vo0kBqXEdYLBzkMZTtivUjXnd8SbIWaXlRIT3y7/yl+7qRwO/Jen7gjfAml0
dPrgBSY7J+XwT60sjxG7Ca7xCYktiUwYJ6z08rtYgaS9wp6FUjcg9eOnhmgP
k52fSlSSLA+0yV2Hzs9Z05kVLJS1qhoRzyvR6Zb/z/jmazCf4b5DNmCxc/Ua
//e+uorp0buikhdYCN+39OGVw1XIWqq6Scv3OiIHfucY3WVhs4h2SONYFWy5
LTxsOm9Cpd1ZPyiahVryRR/FmGqsnwzqCFe4jYa6SXrNSxYsc6LdAnTeoI9Z
rFzh6owLFTe8fr9nYcb93S065Q1ieqk+jCYXLMz9JrWNxELUkYnL+4NqcPzT
8l4RaXfEp1wuvfyTBZXV0jbJW9/Cb2Dto6caHtCMYZ1MFR5CHcvgzILOtzh7
unD/K6t7+BJ0Yaxv4xDOlbgaW7i/g067/tjHIE9cu0sJFts9hDm/DIMK2Vqs
NhyMIxV4QfCG5UZD0yHEGHfqrqqvxXSd88HJXm+k2/TV+F8bgprcYjhfe4/2
vcLfl/D6Yt8pM4vqgCE0Tqht7xD7MJ+r1KfSKn7oP9L5azpxCLZvLLdsq/yA
8O07D2839YfL7pNRqqVD4A4P2xBhXYcruZ8n9T0DILatdeul1iHEWVSsHRP4
CH1FuySrF4HI23i0MZk1hO3KQ2JHcz9i0zMuA6e2IBisbrD9yj2M1t/iwln/
1YN3bfR0yGwwWEJ6i0RXDcO+XpdvyVw9KDFKz5LlQ+GzsPbpEbVhLH50k+ti
SgPeLH9rWHI0DOum9mj5Hh7GU9ukn7WHGmGgq+R+Qfs+ylmv2yvPDUNze8s3
2bFGaHv9PD7ech8mfdrXp1yG0cYzx/CMboJiVc0mt/PhmPhUIqgSOQyHNkUy
aWczJGdD//D+CkfYu3+f22YOgz/ZtEuH0gw+zVNfHoQ+gGJJ/r7Et/PzL66x
NdjfgilHuRdrZCJQm6lC6vo6jLUJ3dZuMS2g5X/zSC+KgFVClsvyH/Pr8hs7
mznUgrZvZcZq+pGYi1AQOyw4glIHPvMenU94q+S3uZIUiVi/tDwvuREsNl5r
KvDgE/LsjLj1bj3ENhdZg/KdIzix89+TGtRPSEhb0/mZPwotDonM7ydHkCh7
5JjtjlbcpzCyzsRHwd5KykfJYQSjS6yPRAe1wl26wIupGg1e48frbHxHoDlx
R6+2rxX2Z+6a3nwfjWQ98fL4+BH4d4fv/7H1M049PrTlj1kMsPPhfx2FI/hS
nb5b1uczDnaK8gR+i0G3yvIJoeYRrH/+eufxzs/YIUruXuETC0fZsNCD9BFc
vd+u4anYBnmjzJynEo+wTPwfhXt/RlBxe2RbrnsbVoTd9lXIfoSsJQHvSsRG
IWCxSJX0qQ2LGvacfrXnMfT+8FiObxmFie4qZSG5LxjnW6q6q+MxKOOevxUO
jiJFSVVBx+kLSPu7eOsvxcGD9if63NlRjK/Qk79c/wUtnim9J7meYHW3q1qc
0yjw22J9nFQ7Kl9fySdFPkFR43RT2/1RBA86StVfa0fmb82AS5viYVTtaCf4
fBSdH0Mkf71txyONxRaTFfEYLZjg0a0ehXxeyspN4h3wd/ykfs/oKQLTrya6
d43iRmzZcpNLHXDKjxP4h/4U8nEj2kVjo6jyaF3qV9kBtZ9qV+t3JqA6zK6T
4Cew1JYpULisExlREj3C/gmwcUJOz1ICeer2lxztOmFg63EriicRSyxX+L8X
IXByAVH/b00nxjXoQqu9EpGjx7TIFycw3Xht89SqLkQtMchI5ErCSdXK7U/X
EIh79D246GYXNHsL9m1wT8KMZIRQ0HoCuy7cHrnd2IW+7FX9mTNJSFhoS3fc
QICi9uvIDvlueHp4Oqs6J2P/sPZrq80E/Ljcsn+6d8/3kSlSPJkMVtuyaIOt
BBQb/ywt6ejGRxnD7J03UxBWQXPQ/JdAU6znFWeVHjj8KDxYM5YC9dQyXXkt
AtdteFo0Anqw/P2awYNXnqEr9L7U8l0EVqr5q/wi96AwxtutafgZ3G+fn5zd
R6Dkj0B4qeZXnLIbEjthlwqZs5pNTD0C5g0hY3civmJOyyivi56KDweFUr8Y
EOCKFTbSGv6KJMESfYvzaXDYSnGrPk4g5XxE3sy+3vnv31o6ZSANIpIlJ7NM
COiqrhQpf9ILWo7vPbuz6SjmDlWKNSfAnIu54TrZi0DPkVXfetNhPmTF42NF
IKR+VZv20T4onzhReMvsObjbtvdevUBAJSZefTatD61yZYYznc+RVv7Pq9P2
BNqspR9WcPXDcUp6yMM4A/rPyMEHrxFw2pryw820H5J1/j6L2zIwFlJore5I
YNWcvLFOXj8qHxFrg4+9QJRjkPY6FwIW1BNmd3lIsLI3Ll3W/AJaFmdX/ONB
IPdwVFD/VhIW61SciNbPBOnAtuEpbwIL8zrKcIaEDCFZYvXHTPiqCLwdDJjP
j7jE8NNAEgzIgQFJB7KgKNH/uDmUQKr7qdVcRfP/3XljMhvfZaFlQcGNsggC
PymP9c8OkhDlbVKZtScbt1j+h9NiCBw63OtaJUSGpvFrE7WqbEh+NpeJeDKf
t1yprHXaZPRtkJ8o3vkSr8tUZ9yTCIyKne31sCXDczo4RKfsJaxTeD/bpc3n
0D1RkBxJRgR1WsRqdQ74Q75mGGcSeEAZ2Lm7mozzBkpkWbMcZN/K9dyTS2Dw
kKxD4ggZ24vOZtNjc3DijO8p5UIC23LPxy+QHAD/ukiXjM4cTOuaqUqWzedW
LK3JUncAPf7vD14Wy0X8FhWBxVUEutwYc9XXB5A19ktUxTgXe8V5BsbeElCg
bNqy/ukA7p5SHhyPzAWDq7ukt46A66FLFp71AzCsscx59TkXIczs8Lqm+Zzn
ZIYNTA1g/eaHbk7L86Da6nXx1WcCa8VGX++RHcRE5IdDWsfy0FFqsjuxk8BV
ty3fkgwH8W52RmwuLA+uyUoSIb0E3gxeXbfQbRDRNluoVU15kA7mHnMaILDi
UJ7hueeDuNhsleclmI/amx0frOkEbHImPGq+DEJrR9RdXf182JtnJhgOEyhe
uS1XhpsCwcQ6ff6gfCzTveekPUZAwM2R7KVMQT//rERDXT4KlY0NN04SOD1Y
tIxyioLc6yr0UL4CmIkpblwxQyBLb3r3Pj8KvHrOFRw7UMDeB37Dn5ea11Py
KTi5L/reCl+Ot32Ppi5qoYCloPzMpobj6Ro/TM4PU+C+7N2HYq5Xf93N3ajh
HR8VIj/NhgV0OG5U8xLyclSk9Y0LmbtwXJ5PMN93NxXa7wLUXhZzfEbfTp5u
TkXLi3X/LZjkeEv4+9gDd6g4/6DoznG1wr+e0i4rmB5FxS8ng/hnVznuvMrT
gy+filALavVUFscNzvZP2DZTIaPrStUb4vj6Z9oX6oaoKNoswh+3seivTzFj
uzfx0aAvkrF59DzH65WnjgTK0kCa3mW4K5njCTdOVLN20XCL1HHjAYnjt4pz
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {651.1999999999999, -212.85}, {
      Center, Center}, {406.99999999999994, 395.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzVnc1LVVEUxS+KkA16Rk2MJlL0F1SQA29BEDRo0BcYFBQEjyaFs5xFJo4y
JGoaFERmCRUODMqCIpoEQWX0gYEQmfSiSZADi3IkHJ7b91ute5sEh8N5++1z
zt5rr73Os+PYyb3Hm7Ise9+SZc1//j8819T7ac9M/u3rxLYNux/mP9a1vKxs
PpUPPtl6ozoym7de7X7bNf0iX9F56NXQ+aF8ateW2Z99tbz5zpv7+ZGpfLiy
sbb++Uhyfmo89bmp9fffOtddvT69MH80v320/+maHX3h9aPfK7XOo8ETk7XW
Wr6q+mXl2OrJfPhS+7u2gStJO1PzU5+bmp+yP7p+1A+p9aPj0f3K/v77ns+P
dvZcuzudH9h5+cza/nvJ8agfUuuk5tdb53H14Fjl9Of89bN9c+1nx5e9TqP2
RPeR8ifl/6idlH9S+xi1kxqPnv/ova7nh/6Onl+9XTP5zU0D45XtE8n1U36r
N7/RfY+eN/V49HxSeZbyQ2ofo/maygvRPKvGJ9HvRcVh9fmk72mjcYDKaxTO
SdlZD7dE/bB4PpUvovdCjQei953al+i5ouykziFljyt/Fa0eofJFNI9E69PU
fHVdrM6blB+o8xCt36NxKRpvo983Gh+i/qfimxpfueqFsuAcNZ/g4ouoz43i
uqLVR0VbX72/6rxG5VMqnqt5ewoPq/MCxUOq8wLFH1L+jOaj1PwUXkrFSXp+
o3UfFfeoOEDxYK46SF3fUfFH3UeLrhPFG9F75MLJ6no5Ou7CDy68pMY/Ll5F
bb+6jlbrItT9WYo3VsftovEt6vtVtL5b9DyreaHouJpnUPMb6rjnskedf6n+
shpPUn6j6hHqHlH5Vx0fKL0KVY8vN18vte8cXV+tT6D6wq5zSPE5ZanH1eNU
3UfhSXV8oO6dixdy9SnU/IBrHTVuL5q+RY3HqLrDFffUPAOtf2iU/69nz1Jx
DoX3qDjp4iXUuCh6f6PnMOp/9fsdaj7FN1L8P7UO5QfXPVLjHJcuKLq/VF+S
qvvU+d2lo3B9rqv+ip4ryh41nxy9XxSuU/Pb6nMVve/qOEDxV2Xpt7r4f5c+
jeIbqXOo5pGi9RSlm41+L1e/jMLhLh6Mip/qdwTUvrjqBfV7gXr9oNR79qWO
u/piLt0a5X/KfpeOneJbXPo613s0db3m0uWq4xsVn9X6B2p+9N5ROli1nVH7
qe8bXcfF+7n0q646heIh1XyOS7dQdt2yC59QOMT1Dp2yUx3n1fjHlX/V+0Lp
9tV43rUvUXuKps+h8GpZ3uNH7aHqx6L149T5nTpXRXvPon7HR72HouKYWsdF
6VvU7y7VdVzRcJRaH6XOI8vV76l+d46KSy59uCtP1dvfRnn+ovVPXfddXY9T
eL5ocdIVz8uSR1z9BXWecuFD9X2n1o/iH0pvFtVvqPUq6nrExZdS65SlP6u+
X+p76qrf1f16ioeM2k/VNRT+jJ4Tqo5W5wV13zB6figeRq0PV79fcPX7XL87
Qe2Xi6dV51O1LpHS11H8kkuPF9VJUrqFKK9FxQf1O1YK/6v5KJo3U70vU/Np
FB9L1YMuPRWFT9Q8trquoc4h1Y9Q67tc9anaz2ocWLT+OBUn1Xib4ucp/6vx
HrWOWkdKv7/733/vjMa91L4v/nuR6v5jFJ9E/aDG/xQejvLqav28Sy/tyjsU
76fGga7fAVDrb9X9F/U5dP1eATXu4i2p9x1qP7v0t5QfKPxA5WWKh1HrtVz3
SF3nUueTqn/Lgh9cecFV16vjPxXf1P3KsryTKlp/TR33XPoWlz0u3OLCUWXf
d9c7i9T4xQdtPR/nPyzgryz7t86F5Hh0fer3BIr2DsXFM6jtV8eB30r6AaE=

           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 1: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.3\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1:eJxF1wk0VV3YB3ApGXpFSYZKyVARCb1lyL9RKUkqL0kiSZJmkSGZZ4kMJZlC
QqbMRErJmGQM93JnwwlFEn2+9d2ve9baa531W2eds/fz/Nc5Z0tbXTE6v5CL
i6tufiyYH/97HlkpfL3vTy+42Me4JE+rkPp9tL6VzMu40Qcz+Zox18XWuLYo
3zd7KAzC9bLjjvT/95uYazW7uPNKGI5+Ulbda9YP/5IUuzJ+dwQnLtJvGA9F
SMeO60LN/ezrvSFxNUvZzDEUNAfprsvSJIwTasqr+QKQqmO8jDUdAp7r8tPH
zUjs+4RCTfDPhJNbCGRvKUpoPiThfnXg8SyfcFT1pLXzLgjBXicVjXXNJPb9
I2GQYVgS5R0MK5dtpov5yZAPmgnT94tCj9P0Yzm+YNxz13Qe3kNmPzcWtgeS
3AuCgpBwD7GtrmRUnLBvGPJ/jEnRw5Z7hYLw2ntfSXEhmT2feHhRJva2PghE
n59eV/w3MhTCHLz370+AcH6cvOXKQMwFGkx7Kwyw55mIJ/f283+LDcDq0OMS
l6wH8GMidb1obRIUDEeH3NcEQDvcRONY/AB7/ikolopuEkz0h1mkuen2zgFU
m/RXUXSfYd8IcuNk/XEn2sp5zfJB9rpS0VrGiFBM90PsowuxC/UHEVwhZlHw
Pg0WgeGOpYp+KH5iX8L0GWSv9zmGTTRN9V76oiPhWlfz60H8t95w1utgBu5s
GNTqVPXFZLLj9KvpQXYdXoB3MkjqQqEPRNNcJOLUKJDx8398vC4TkW/VF0xq
+EA9w0PD8zKFXZ9srI/oHfSu8MaJLB9T2zQKRoeqNGQOvUS2pW+tyG5v3MgJ
dDYgU9h1y4G2ypbnSW+98CA/LFZ9FRXm6b8vOVNz8GGuI2jrQS/kFkaWSJ6k
suuZC+NGD4eqek+0lMR2cYVR8aZbXIsslwfK403Hjh71BFEeP037QGXXOQ/X
7FrV+lrvYWlVskQjNw0bBbcJ6NnkY26Hy8rLxvegVJOuka9NY9e/AEG8stMz
XR7Qr80yjXWkIRTHunJSCyDe3tATaO4B+7o857s5NHZfXuGQ3pCr2pu7CGoo
ij3PouH7tcvp4vRXsKZp7zlW546M5vKSw7J0dr8K4eEVynulxQ0fWqu7tp6h
wzQl4LbHhiI8WkdqCO5wBeNL7bRYDJ3dxyIUVGx9kNHnAt6ueom5T3S8bn+m
y7hQjKZTXv99oN6B/NcWDcoSBru/JWBMta2mDTtDt/+L6cf9DMjxvxE1TC/B
oofyAwu/O8F6oNs55y6D3fdSSKk6pUnP3IY3tT82qoSBQK0+ShGjFJrNdfbg
vo0kBqXEdYLBzkMZTtivUjXnd8SbIWaXlRIT3y7/yl+7qRwO/Jen7gjfAml0
dPrgBSY7J+XwT60sjxG7Ca7xCYktiUwYJ6z08rtYgaS9wp6FUjcg9eOnhmgP
k52fSlSSLA+0yV2Hzs9Z05kVLJS1qhoRzyvR6Zb/z/jmazCf4b5DNmCxc/Ua
//e+uorp0buikhdYCN+39OGVw1XIWqq6Scv3OiIHfucY3WVhs4h2SONYFWy5
LTxsOm9Cpd1ZPyiahVryRR/FmGqsnwzqCFe4jYa6SXrNSxYsc6LdAnTeoI9Z
rFzh6owLFTe8fr9nYcb93S065Q1ieqk+jCYXLMz9JrWNxELUkYnL+4NqcPzT
8l4RaXfEp1wuvfyTBZXV0jbJW9/Cb2Dto6caHtCMYZ1MFR5CHcvgzILOtzh7
unD/K6t7+BJ0Yaxv4xDOlbgaW7i/g067/tjHIE9cu0sJFts9hDm/DIMK2Vqs
NhyMIxV4QfCG5UZD0yHEGHfqrqqvxXSd88HJXm+k2/TV+F8bgprcYjhfe4/2
vcLfl/D6Yt8pM4vqgCE0Tqht7xD7MJ+r1KfSKn7oP9L5azpxCLZvLLdsq/yA
8O07D2839YfL7pNRqqVD4A4P2xBhXYcruZ8n9T0DILatdeul1iHEWVSsHRP4
CH1FuySrF4HI23i0MZk1hO3KQ2JHcz9i0zMuA6e2IBisbrD9yj2M1t/iwln/
1YN3bfR0yGwwWEJ6i0RXDcO+XpdvyVw9KDFKz5LlQ+GzsPbpEbVhLH50k+ti
SgPeLH9rWHI0DOum9mj5Hh7GU9ukn7WHGmGgq+R+Qfs+ylmv2yvPDUNze8s3
2bFGaHv9PD7ech8mfdrXp1yG0cYzx/CMboJiVc0mt/PhmPhUIqgSOQyHNkUy
aWczJGdD//D+CkfYu3+f22YOgz/ZtEuH0gw+zVNfHoQ+gGJJ/r7Et/PzL66x
NdjfgilHuRdrZCJQm6lC6vo6jLUJ3dZuMS2g5X/zSC+KgFVClsvyH/Pr8hs7
mznUgrZvZcZq+pGYi1AQOyw4glIHPvMenU94q+S3uZIUiVi/tDwvuREsNl5r
KvDgE/LsjLj1bj3ENhdZg/KdIzix89+TGtRPSEhb0/mZPwotDonM7ydHkCh7
5JjtjlbcpzCyzsRHwd5KykfJYQSjS6yPRAe1wl26wIupGg1e48frbHxHoDlx
R6+2rxX2Z+6a3nwfjWQ98fL4+BH4d4fv/7H1M049PrTlj1kMsPPhfx2FI/hS
nb5b1uczDnaK8gR+i0G3yvIJoeYRrH/+eufxzs/YIUruXuETC0fZsNCD9BFc
vd+u4anYBnmjzJynEo+wTPwfhXt/RlBxe2RbrnsbVoTd9lXIfoSsJQHvSsRG
IWCxSJX0qQ2LGvacfrXnMfT+8FiObxmFie4qZSG5LxjnW6q6q+MxKOOevxUO
jiJFSVVBx+kLSPu7eOsvxcGD9if63NlRjK/Qk79c/wUtnim9J7meYHW3q1qc
0yjw22J9nFQ7Kl9fySdFPkFR43RT2/1RBA86StVfa0fmb82AS5viYVTtaCf4
fBSdH0Mkf71txyONxRaTFfEYLZjg0a0ehXxeyspN4h3wd/ykfs/oKQLTrya6
d43iRmzZcpNLHXDKjxP4h/4U8nEj2kVjo6jyaF3qV9kBtZ9qV+t3JqA6zK6T
4Cew1JYpULisExlREj3C/gmwcUJOz1ICeer2lxztOmFg63EriicRSyxX+L8X
IXByAVH/b00nxjXoQqu9EpGjx7TIFycw3Xht89SqLkQtMchI5ErCSdXK7U/X
EIh79D246GYXNHsL9m1wT8KMZIRQ0HoCuy7cHrnd2IW+7FX9mTNJSFhoS3fc
QICi9uvIDvlueHp4Oqs6J2P/sPZrq80E/Ljcsn+6d8/3kSlSPJkMVtuyaIOt
BBQb/ywt6ejGRxnD7J03UxBWQXPQ/JdAU6znFWeVHjj8KDxYM5YC9dQyXXkt
AtdteFo0Anqw/P2awYNXnqEr9L7U8l0EVqr5q/wi96AwxtutafgZ3G+fn5zd
R6Dkj0B4qeZXnLIbEjthlwqZs5pNTD0C5g0hY3civmJOyyivi56KDweFUr8Y
EOCKFTbSGv6KJMESfYvzaXDYSnGrPk4g5XxE3sy+3vnv31o6ZSANIpIlJ7NM
COiqrhQpf9ILWo7vPbuz6SjmDlWKNSfAnIu54TrZi0DPkVXfetNhPmTF42NF
IKR+VZv20T4onzhReMvsObjbtvdevUBAJSZefTatD61yZYYznc+RVv7Pq9P2
BNqspR9WcPXDcUp6yMM4A/rPyMEHrxFw2pryw820H5J1/j6L2zIwFlJore5I
YNWcvLFOXj8qHxFrg4+9QJRjkPY6FwIW1BNmd3lIsLI3Ll3W/AJaFmdX/ONB
IPdwVFD/VhIW61SciNbPBOnAtuEpbwIL8zrKcIaEDCFZYvXHTPiqCLwdDJjP
j7jE8NNAEgzIgQFJB7KgKNH/uDmUQKr7qdVcRfP/3XljMhvfZaFlQcGNsggC
PymP9c8OkhDlbVKZtScbt1j+h9NiCBw63OtaJUSGpvFrE7WqbEh+NpeJeDKf
t1yprHXaZPRtkJ8o3vkSr8tUZ9yTCIyKne31sCXDczo4RKfsJaxTeD/bpc3n
0D1RkBxJRgR1WsRqdQ74Q75mGGcSeEAZ2Lm7mozzBkpkWbMcZN/K9dyTS2Dw
kKxD4ggZ24vOZtNjc3DijO8p5UIC23LPxy+QHAD/ukiXjM4cTOuaqUqWzedW
LK3JUncAPf7vD14Wy0X8FhWBxVUEutwYc9XXB5A19ktUxTgXe8V5BsbeElCg
bNqy/ukA7p5SHhyPzAWDq7ukt46A66FLFp71AzCsscx59TkXIczs8Lqm+Zzn
ZIYNTA1g/eaHbk7L86Da6nXx1WcCa8VGX++RHcRE5IdDWsfy0FFqsjuxk8BV
ty3fkgwH8W52RmwuLA+uyUoSIb0E3gxeXbfQbRDRNluoVU15kA7mHnMaILDi
UJ7hueeDuNhsleclmI/amx0frOkEbHImPGq+DEJrR9RdXf182JtnJhgOEyhe
uS1XhpsCwcQ6ff6gfCzTveekPUZAwM2R7KVMQT//rERDXT4KlY0NN04SOD1Y
tIxyioLc6yr0UL4CmIkpblwxQyBLb3r3Pj8KvHrOFRw7UMDeB37Dn5ea11Py
KTi5L/reCl+Ot32Ppi5qoYCloPzMpobj6Ro/TM4PU+C+7N2HYq5Xf93N3ajh
HR8VIj/NhgV0OG5U8xLyclSk9Y0LmbtwXJ5PMN93NxXa7wLUXhZzfEbfTp5u
TkXLi3X/LZjkeEv4+9gDd6g4/6DoznG1wr+e0i4rmB5FxS8ng/hnVznuvMrT
gy+filALavVUFscNzvZP2DZTIaPrStUb4vj6Z9oX6oaoKNoswh+3seivTzFj
uzfx0aAvkrF59DzH65WnjgTK0kCa3mW4K5njCTdOVLN20XCL1HHjAYnjt4pz
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -84.375}, 
                    Offset[{2.5, 0.}, {7.5, -84.375}]}, {{7.5, -70.3125}, 
                    Offset[{2.5, 0.}, {7.5, -70.3125}]}, {{7.5, -42.1875}, 
                    Offset[{2.5, 0.}, {7.5, -42.1875}]}, {{7.5, -28.125}, 
                    Offset[{2.5, 0.}, {7.5, -28.125}]}, {{7.5, -14.0625}, 
                    Offset[{2.5, 0.}, {7.5, -14.0625}]}, {{7.5, 14.0625}, 
                    Offset[{2.5, 0.}, {7.5, 14.0625}]}, {{7.5, 28.125}, 
                    Offset[{2.5, 0.}, {7.5, 28.125}]}, {{7.5, 42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 70.3125}, 
                    Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 84.375}, 
                    Offset[{2.5, 0.}, {7.5, 84.375}]}, {{7.5, 98.4375}, 
                    Offset[{2.5, 0.}, {7.5, 98.4375}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {217.06666666666666, -638.55}, {
      Center, Center}, {407., 395.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      TemplateBox[{
        GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJx13Elqq+sVhWERCNzmbZzGaZyGczDGGCNc17aUuq7rbiDtTGEP7RtIBpEh
hBCvBXrA7oiHxW6/SL/k7/3jX3/453c2m82/v7vZ/O/1/3//2R2+bvaH/gZ/
iz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK3/AO
7w89ePN9drz5ATve/JAdb37Ejjc/Zsebn7DjzU/Z8eZn7Hjzc3a8+QU73vyS
HW9+xY43v2bHm9+w481v2fHmd4fe48ELb37PPR688OYP3OPBC2/+yD0evPDm
T9zjwQtv/sw9Hrzw5i/c48ELb/7KPR688OZv3OPBC2/+ju2Gr9/gb/En/Bl/
wUf4Kz7GJ/gUn+FzvMUX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rve4f2hB7cf
2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7
kR23H9lx+/HuPR68cPuRezx44fYj93jwwu1H7vHghduP3OPBC7cfuceDF24/
co8HL9x+5B4PXrj9yD0evHD78dH7DLvh67f4E/6Mv+Aj/BUf4xN8is/wOd7i
C3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gN7/D+0IPbj+y4/ciO24/suP3IjtuP
7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP149x4PXrj9
yD0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/fjocynfZ9gNXz/hz/gLPsJf8TE+waf4DJ/jLb7Al/gKX+MbfIvv8D1+
wI/4CT/jF/yK3/AO7w89uP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuP7Lj9
yI7bj+y4/ciO24/suP3IjtuP7Lj9yI7bj3fv8eCF24/c48ELtx+5x4MXbj9y
jwcv3H7kHg9euP3IPR68cPuRezx44fYj93jwwu1H7vHghduPj55j+LmU7zPs
hq+f8Rd8hL/iY3yCT/EZPsdbfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4R3e
H3pw+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx
+5Edtx/ZcfuRHbcf797jwQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7
PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+xz719juHnUr7PsBu+fsFH+Cs+xif4
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7PSmfe/scw8+lfJ9hN3w9wl/xMT7Bp/gMn+MtvsCX+Apf
4xt8i+/wPX7Aj/gJP+MX/Irf8A7vDz24/ciO24/suP3IjtuP7Lj9yI7bj+y4
/ciO24/suP3IjtuP7Lj9yI7bj+y4/ciO24/suP3IjtuPd+/x4IXbj9zjwQu3
H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24+P
vlebfvic2+cWfg7l+wo7cfTB61d8jE/wKT7D53iLL/AlvsLX+Abf4jt8jx/w
I37Cz/gFv+I3vMP7Qw9uP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/suP2IztuP7Lj9iM7bj+y4/bj3Xs8eOH2I/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP2dxjpR+z3pHzu
7XMMP5fyfYbd8PUYn+BTfIbP8RZf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW94
h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7ce793jwwu1H7vHghduP3OPBC7cfuceDF24/co8HL9x+
5B4PXrj9yD0evHD7kXs8eOH2I/d48MLtR+zv9tIPv0fr96J8zu1zCz+H8n2F
nTj+4PUEn+IzfI63+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7
bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y
4/YjO24/3r3HgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu
8eCF24/c48ELtx+5x4MXbj9if+edfvi7C79H6/eifM7tcws/h/J9hZ04+eD1
FJ/hc7zFF/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Eb3uH9oQe3H9lx+5Edtx/Z
cfuRHbcf2XH7kR23H9lx+5Edtx/ZcfuRHbcf2XH7kR23H9lx+5Edtx/Zcfvx
7j0evHD7kXs8eOH2I/d48MLtR+7x4IXbj9zjwQu3H7nHgxduP3KPBy/cfuQe
D164/cg9Hrxw+xH7f0HSD3+n5+8u/B6t34vyObfPLfwcyvcVduL0g9czfI63
+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+wzu8P/Tg9iM7bj+y4/YjO24/suP2
IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9iM7bj+y4/YjO24/3r3Hgxdu
P3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7Ufu8eCF24/c48ELtx+5
x4MXbj9i/49U+uHvuv2dnr+78Hu0fi/K59w+t/BzKN9X2ImzD17P8RZf4Et8
ha/xDb7Fd/geP+BH/ISf8Qt+xW94h/eHHtx+ZMftR3bcfmTH7Ud23H5kx+1H
dtx+ZMftR3bcfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7ce793jwwu1H7vHg
hduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/d48MLt
R+z/HUw//D8g/q7b3+n5uwu/R+v3onzO7XMLP4fyfYWdOP/gdYsv8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/4je8w/tDD24/suP2IztuP7Lj9iM7bj+y4/YjO24/
suP2IztuP7Lj9iM7bj+y4/YjO24/suP2IztuP7Lj9uPdezx44fYj93jwwu1H
7vHghduP3OPBC7cfuceDF24/co8HL9x+5B4PXrj9yD0evHD7kXs8eOH2I/b/
1KYf/t8o/w+Iv+v2d3r+7sLv0fq9KJ9z+9zCz6F8X2Enth+8XuBLfIWv8Q2+
xXf4Hj/gR/yEn/ELfsVveIf3hx7cfmTH7Ud23H5kx+1Hdtx+ZMftR3bcfmTH
7Ud23H5kx+1Hdtx+ZMftR3bcfmTH7Ud23H5kx+3Hu/d48MLtR+7x4IXbj9zj
wQu3H7nHgxduP3KPBy/cfuQeD164/cg9Hrxw+5F7PHjh9iP3ePDC7cd2/18m
8saN
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJxF3Hf8/9X4x/HPayEiJYRkJHsmM1SSUjILiRAqbS2jvUR7Dw1pSJuKBiUa
FJWSpKJh75Gt+L3uv+t5bv44t9P1usY57/N+ncf727ee15M23OotW/YLCws3
P3hhYZjnjebRzcOzreYxP154yDwOnMcz5vHMeXx4HovO46Hz2GSh8sZ5bDmP
RZLzoTyb5rFx6on76DweMY8l5/GReSwRe4d5LB774Hk8ax7PnsdBWZO97Twe
No/F5rFN1mdvnT3a06ZZ8wHz2H4eD0/d7ZLH3iz+B85j88wPmscWmX2GT8zj
SfN48jz2nscTY+81jyfE3nUej53H4+ax8zyWmsdj5nHAPJ6e89ot/qXnsUv8
cg7J53vOPPafx9OSs+88lpvHU+fxsZzTI+fx8cyPmseOmR89j0/OY9l5PGUe
+2S/7P1SQ91Pxa/uTsmz1z3nsUw+zznzeN081pzHWfNYfR5rzOPUeaw8j1Xm
cdg8njuP583j0/N40TxePI9D8zn4Do//+fM4IvML5nHMPFZIznHzeMk8XjqP
k+fxqnmsNI+T5vHK2EvML+HZ2dcJ83jZPF4+j+OTxz4266v1mfhXnMeRWXP5
eXx2Hq9I3RPjZx8V/wvncXRm+zsle/GZvzCPtebx+nmcNo9Xz2PVeZw+j9fM
Y7V5fD7P2Ofm/OScN4+15/GGeZw5j9fmTM9IHvvsnLFzv3ge68xj3XlcOI+3
zOOt8/hczt7ai3f13ci7YB5vnMeb5nF+1mF/Mfu19kWpoe6X5/Hm1P1S8ti7
L9S7+fh57JHZO3FJ9vK2efw8cfxfm8c757H+PK6ex/vmseE8LpvHevFdHv+7
5vH1zO+ex1XzeG9yvjWP98/jA/P47kLdSXfxhoW6w+xL5/GO1P32QrEJS66d
xwdjfzPrq/Wd+DHpG1lzg3lcv1A8Uve6+NlXxP+eeVyZ2f5uzF7w4EcLxSx3
8Y6FYhb7BwvFIEz6/kIxCBdvycz34+S5u7cvFOPk35o8TPpFztVd/NlC8cJZ
/2SheIExN2Uv+Pq9zNh810KxwJ2+M+uwb47fnn6aGures1CcUvfu5LF/tVBc
w7mpq3vi3oxd3Sv2nxeKa34Hfpn9yvnNQrESe36dGuw/LRTX5PxloTiO679b
KGZh0m+Tx/59nuHfvxfqDruj/1wopmDJVxbqfXz7PL6a2fvxt4XiKQ79Neuw
781+rf2v1FD3HwvFMnX/njz2I7rijXv8h+wFR+/LXnDiQV0xCyce2BWz2H1X
bMIqP6DYhHNdVzPfIl3lYeoDujpj+UNXec76j1nT2T28K3a48w/rijv4cX/2
gqn/yYzHD+mKF1j14K7WYf83fntarKsa6j60K36pu2hXeewfLtS76fdzya7O
Awv3mf/5yfNYdh6v7Oo9FvuorriDeY/vijt49siu8vge3ZUfq5bqasawpbvi
nZwndMUd3/NTu2KHe7xcV0xhv6qrNW+bx5O6eg9w4old5bGX6Wp9teyXH58e
09Wa+PeUrlimrs/Dz35sV368fFxXs/09rau9YMYKXXEKt17YFV/Yz53/+ZqF
4tOzuuIjPj27qxnzXtRVHsYs3xWP5D+vqzycW6mrz4cZr+iKNc765V2xBmOe
3tVecOsZXc34+pKueIETL+5qHfYzu/Lb04pd1VD3ZV3xQt2XdpXHfn5Xe8HU
lbvaC/69q6s74w69uis+4twqXfnZ63R1f7zLa3TFMhx6TVecumseq3U149Cq
XdXge11XsVi4Vle/PRj5lq7YgRNrd8Ug3Hp9V372ml3lyXlDV35MemNXM1a9
tqs1sfDNXTFI3Td15Wev3pXfvt/a1Zo+z7pdfSZse1tXMy6+oyvW4Nzbu3rG
3qArfmHPel358ek9XT3DufW74pczfWdXfva7uzpj+e/rikHu/cZdsQYzNu2K
11jy/q5Y4K5v2FUs+71drSP/A1358WmT1MD4jbrilLof7MrPfkFX37939EOJ
td5mWRP/jujqXRG7ZVeMw57tu+KXP7Ns0RU3+baKH6u2zow923XFJjkf6erP
f3i8S1f31r3cuSt2sI/Mmu7Qx7riFN58NHnsHbK+Wh+PH6s+nDXxb6eu2KTu
jvGzt4kfd7fNbH+7Zi/YsF9XnMKGfbviFHvvrniET3t2xSNs2ysz3/7Jc48/
1RWP5H8iebh1VD4fxhzeFSOc9aHzeE5XvNkte8HR3TNj8IFdccG9PyDrsPeI
354OSw11D+6KWVh1UPLYR2d9zPtSV/fEvbmgq3vFPqurO+Ouf7orxmHPMclj
n9gVd/Ds2Pix6rN55vfk+K4YhEnHxc8+Ic/w7+SufgMw8vSumIIly8z/cnnx
/C+Zl8zj1K6YhUmnJJZ9UtaR/7n4MeyM1MCGz3fFI3VPi5/9ya5+J3xPn8le
fJ6z87lx65zMOPSFrviFT+fmGfvLOT88+2L8eHZhnuHN+V3xy/meFz/7zOzR
WV/cFWcx6WtdsQNLNu/qXrpvX+mKU5h0SWLZF2Ud+V+NH8MuTw2Mv6wrZql7
afxsv0v+XODPsl9PLFZ9IzPm/barPys4s6u74hcmXdcVd7Dkqq7YxPfN+DHs
W5mx6jtd8U7ODV3xDntu6eoOu6Pf74oj7N9lTffpxpwF9nw3eezrs75aN8WP
W9dkTfy7uStOqfu9+NnXxo+X385sfz/IXnDiJ10xCyfu6YpZ7B91xSasur0r
NuHcHZn5fpo8d/rurtgk/8fJw7Df5/PhzW+64oWz/lVXfMGeW7MXTP1hZjz+
eVeMwICfZR32bfHb069TQ91fdsUvdX+RPPad2Qte/iF7wcJF+7oz7tCfumIc
9vwxfvbY1/3Bg390xSBsu7crZmHPXzJj0p9Tg++fifWb8++ufgMwsu+LHThx
f1fMwp774mf/K3ly/hM/Vv03Myb9bR6HdMXXri8Gqesvr/jZf4/fvoe+1vR5
pr4+E549oK8Zbx7UF7Nw6IF9PWM/rC9+Yc8ifflxa7G+nrnrD+mLU870weEa
+6F9nbH8xfviLw49ui9e4MfWfeX7Th7RF5twaIm+YtkP72sd+Uv25cetpfqq
gfGP6otT6j6yLz/7rnz/3tHH9BXr9+Gxfc04t0xfnMKex/fFHfZr+nqH1HhK
X/zCnif2xSxMelJfM/Y8oa8afMv1FYs9T+uLO1fM47l93WF39BnzP1/ZFWOe
3pef/dS+8uQ8sy8/Pj2rrxmHntzXmvj3nL54pO6z+/Kzl+3Lb9/P62tNPHh+
XzNuvbwvNmHVi/piECa9sC8G4dkKfc18L+7Lj0kr9pWHKy/p6xkOvawvNqm7
dF+/Gc70FX3Fuvev7os1mPGCvvaCu6/qiwXu+iv7imUv35ffnlbqy49Pq/ZV
w/e0Sl+cUnflvvzs1fr6DrFq9b54h38f6OteuTev7cvP97q+GIc9a/QVy35j
X9zBszX78mPVm/p65vfk9X0xCJPW6svPXruvZ/j3lr5+AzDyHX0xBUse19f7
6LzW6YtZmPTWvmLZb+5rHfnr9uXHsHfO//zXrtjw9r54pO7b+vL/Oe+WP9P7
PXtDX3vxed7VFy9wbqO+mIJV7+uLTVj1nr7YhGfv7Wvm27AvP1ZtnDy8eX9f
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
Nad6hmGvn4pf6r5jqvPz33DeOFUsPq07FWtw6DVT7QV33zwVs3DiTVPFsleb
ym9Pb5nKjxNvm6qG72mdqVim7lun8rPXm2p9rHrnVDMWfmSqO+MOvWsqxuHW
+lP52RtOxRoMe/dUfqzaYKoZw7ac6s67Z++dilmY9J6p/Oz3TfVMrfdPVQ/P
Np+KHViy8VRswq2NpmIZ+wNTxfqN2iR+rPpQZgz74FR+OZtNxSx1N42fvdZU
34/vZousad97T8VHd3ebqbiDWx+einfsj+acMGzb+LFqu8wYtvVU3JTjz96L
53y3j5+9Vc5J3Mfn8cipeLbnVHzBkl2m4oJ7v/NUzGLvmFhc2TV+rNotM1bt
FL+cPabimrq7x8/29/WX9vXfCPfKmj6/32P/3uDfAT41FbNw6JNT8Y597lTv
urM8aCqW4dB+U/ELn/bPjEP7pgbfwYn156BDp2I0Ph0zFUfc6cOn4hQOHRY/
+5DkyTkiftw6MjP2HJA1sfDoqTil7lHxsw+M374/nTVx4tjMOHfqVEzBqhOn
YhNWnTAVm/DsM5n5Phs/Vn0ueXhzUp7h1ilTsUndL+T8cOK0xGLS2VMxCGOO
y15w9PSpGIEBn08s+/j47emM+HHrnNTwPZ01Fb/UPTN+9hezPv6dlxnPbpjq
zrhDF0zFLBw6P372JVPxC3u+FD9ufTkzPl091Z3Hj4um4hE+XRg/++I8U+sr
qec358qp2IElX5uKWZh02VQsY381sfh6efwY9vXMWHVp/HKumIpZ6n4jfvYn
prr3/ixwVda0733yzHt/7VR8waRrpuIR+7s5Jwz7dvwY9p3MWPWtqXgn5/qp
mOV8r4uf/c2ck7gbUw+f/Hs7dmDJ96fiCybdPBVH2DclFoNviR/DfpAZq74X
v5wfTsUsdW+Nn3171vGbcEdmzPO/q9ITf3Ch+g3QjB5Yf/3y/1phmmE9Bmhq
t6r//Pr/zzYuHP+/tlicvgKbxX5wYul19SqgCaYNpumnC269EMx0wXocHJy1
9SqgwWw9D7ZN/qKpYR8PjxZDXOtlYO0lUq/1VNghca3HgbhFsi926y9gT09a
KP3u3gvV48C810L1MNhtobTEehjQENMOPzbP2E9eKD2v/Cckb8+F0pfvnnw9
Dw7J53xGzphGWJ8Cmlfa19bjwJ70Ktgp9lMWSiPceh58Mustlb2Ie3rqqfXU
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

                "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJztnT9IV1EUx38UzgrZYIQghK1CJg3liwhKaAhpCiLoD+IgkYNDg4WEZVND
SThFRQZGYQ1SWERU0GpTpEFYBEYZbtVQgdESB/rW58t5D3QRLo/zO/fec8/5
nu85972WQ8e6j66q1WqzdbXa6p//1++4OLZt72LRfW7/q9G6uWJpw859W0fG
i08jxx98uP2xGOu48uVg34titH1qc9OzS8WuwZNn5r8tFL3jG2/1dD0pOoYH
exuOnJLHI/ltrdNDbQPvisMTXXe3vJks1k5OH7h2esiuz4WHDf2vv88VtV9/
S+vqZurbz8t6zlxfaH45u1j09TR33hyYLx5f3nP1+dM74e9GcqLno/1S5av7
Ho1H843Gl1f3c9E4/bZzas37om1346amG/d+jw+39H890blQTLSevV+//ZGs
Z/S7kZxoXNXzX+f7v+P/uv5/u87q76rPq/sYPa/ur2rnqnx1X6j5qnJU/xbt
b+R/qHm57YSSo8Yv1Z9TcVaNg249VfnRfqn6U/vrjrNuOdG5juSofkCVT/kB
Ku6o81LxoWo/lD279XHHZercUf6TsisKb6hyVH3Uc+2Og2o+pcZralyNv2rc
odYhGo/0VOelzlf1A1S8puxQxRWqPll2q85LjctUfkHlR1S8oPYxi8fL8tvu
c6HmF1l2SNknJccdT1U7UeOL+jwVT1X5bn7AzbO5/QmVH1F5ihq/3Lidil8R
/o/Okfq86ocpv+E+R6qeKq/lzoMo/pP6XTf/QPkZCm+o/Bu1/lnxy53nunGy
Gw+7cRRlV1n1Dve5zuJj1eepuJNlV9E4pSeFl9z1oCz/E+lP4RP3+rv7f7Ls
P4sPzMpbKXtW7Va1kyz+kKofUfbv5gnVdXPjK/f+UvZA7ZebZ1Dlq3wChQOz
+BzVX7nPBXVOKX7SnfdR8t3n1O1PytYnlsWjUnUE9zq47Zby/1XJT7Pwv7uf
isKHapyKeE6K38jCLdT5pfY3q/6bVXeg6vJZ/WNunJnVx+LGS26/TfFC1DpQ
9xrUdXDHC8qe3XXAstWb3OeRyo8oPpmyN+pcU/X6rL4sSh+KV3HbedY9gqy+
X2q+bl7RjWMp/+a+90Gd6yjPUuvLar5G1a/d90zd+I3ynxR+c9e1KX3c54i6
l+rmbbLyLCrvUPPZrLybiqdunofSMwuHuPMLd98g1X9C1eko+RS+ovousvJQ
6v6Im3dS711S8826R6Pqo8avsvEwbl7FPS93Xzf1PIVLKZyQ1d+YxU+q83LP
tyr1ZTf/7K4zUnHQbT9untntf6g46+7ToOyfwpPufXf3y1H27La3rDjuvsft
zuPc658V11R/kpU/Uv6nbHlWVj7rzrvVcaouloUf3PW7LNxI8Y1uvOrmkyl/
6+4vyuID3X2M7ntGVLyj/CEVp7LG3fwt5Z/delL4JItny+IP3XGKes+eej+O
qvuXzf6rks+63/9DzSurnkvliVXhh6l6K1XnovwA5X/ceRBl525egjq/VLyg
7IrC5+57EG5/mGXPWf1Rbvun5GfxP1R/l5rvU/fR3N/9ccc1qq9y2cv+2Uft
fv9hpKf7fcWUX6Ls0P2eAcr+Kb9NfbfO/X2r6Fyo427/mcXzu/OarDyUqvdl
4aisfl0K/7vrIJTfdu9vFl9aFX7bjYuy7jtEcSTSP3rejZ+zcEL0fLQO7jyF
sis33qBwiBtXu/s93PxDFl6i4guFi6rC22f1KVF17aqPu+sUbrsq23pm7VdW
Px7Vx0h9H9DdT5V1nyKrz8Gdb7r7r9z93mWLI1n77u7nKVufMFV3yPpuXVYc
L9t5qcr4ynqujJdhvCp26O5bLtu+lG2/VPk/APxYtns=
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 1, 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox["\"Intervalle\"", TraditionalForm], None}, {
             FormBox["\"Zeit t\"", TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> 
          GrayLevel[1], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "GridLinesInFront" -> True}, PlotLabel -> 
          FormBox["\"twolanesNaSch Spur 2: Dichteplot mit Intervalll\
\[ADoubleDot]nge 10\\n und p=0.3\"", TraditionalForm], 
          PlotRange -> {{1., 100.}, {1., 15.}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{
                  RasterBox[CompressedData["
1:eJxF1wk0VV3YB3ApGXpFSYZKyVARCb1lyL9RKUkqL0kiSZJmkSGZZ4kMJZlC
QqbMRErJmGQM93JnwwlFEn2+9d2ve9baa531W2eds/fz/Nc5Z0tbXTE6v5CL
i6tufiyYH/97HlkpfL3vTy+42Me4JE+rkPp9tL6VzMu40Qcz+Zox18XWuLYo
3zd7KAzC9bLjjvT/95uYazW7uPNKGI5+Ulbda9YP/5IUuzJ+dwQnLtJvGA9F
SMeO60LN/ezrvSFxNUvZzDEUNAfprsvSJIwTasqr+QKQqmO8jDUdAp7r8tPH
zUjs+4RCTfDPhJNbCGRvKUpoPiThfnXg8SyfcFT1pLXzLgjBXicVjXXNJPb9
I2GQYVgS5R0MK5dtpov5yZAPmgnT94tCj9P0Yzm+YNxz13Qe3kNmPzcWtgeS
3AuCgpBwD7GtrmRUnLBvGPJ/jEnRw5Z7hYLw2ntfSXEhmT2feHhRJva2PghE
n59eV/w3MhTCHLz370+AcH6cvOXKQMwFGkx7Kwyw55mIJ/f283+LDcDq0OMS
l6wH8GMidb1obRIUDEeH3NcEQDvcRONY/AB7/ikolopuEkz0h1mkuen2zgFU
m/RXUXSfYd8IcuNk/XEn2sp5zfJB9rpS0VrGiFBM90PsowuxC/UHEVwhZlHw
Pg0WgeGOpYp+KH5iX8L0GWSv9zmGTTRN9V76oiPhWlfz60H8t95w1utgBu5s
GNTqVPXFZLLj9KvpQXYdXoB3MkjqQqEPRNNcJOLUKJDx8398vC4TkW/VF0xq
+EA9w0PD8zKFXZ9srI/oHfSu8MaJLB9T2zQKRoeqNGQOvUS2pW+tyG5v3MgJ
dDYgU9h1y4G2ypbnSW+98CA/LFZ9FRXm6b8vOVNz8GGuI2jrQS/kFkaWSJ6k
suuZC+NGD4eqek+0lMR2cYVR8aZbXIsslwfK403Hjh71BFEeP037QGXXOQ/X
7FrV+lrvYWlVskQjNw0bBbcJ6NnkY26Hy8rLxvegVJOuka9NY9e/AEG8stMz
XR7Qr80yjXWkIRTHunJSCyDe3tATaO4B+7o857s5NHZfXuGQ3pCr2pu7CGoo
ij3PouH7tcvp4vRXsKZp7zlW546M5vKSw7J0dr8K4eEVynulxQ0fWqu7tp6h
wzQl4LbHhiI8WkdqCO5wBeNL7bRYDJ3dxyIUVGx9kNHnAt6ueom5T3S8bn+m
y7hQjKZTXv99oN6B/NcWDcoSBru/JWBMta2mDTtDt/+L6cf9DMjxvxE1TC/B
oofyAwu/O8F6oNs55y6D3fdSSKk6pUnP3IY3tT82qoSBQK0+ShGjFJrNdfbg
vo0kBqXEdYLBzkMZTtivUjXnd8SbIWaXlRIT3y7/yl+7qRwO/Jen7gjfAml0
dPrgBSY7J+XwT60sjxG7Ca7xCYktiUwYJ6z08rtYgaS9wp6FUjcg9eOnhmgP
k52fSlSSLA+0yV2Hzs9Z05kVLJS1qhoRzyvR6Zb/z/jmazCf4b5DNmCxc/Ua
//e+uorp0buikhdYCN+39OGVw1XIWqq6Scv3OiIHfucY3WVhs4h2SONYFWy5
LTxsOm9Cpd1ZPyiahVryRR/FmGqsnwzqCFe4jYa6SXrNSxYsc6LdAnTeoI9Z
rFzh6owLFTe8fr9nYcb93S065Q1ieqk+jCYXLMz9JrWNxELUkYnL+4NqcPzT
8l4RaXfEp1wuvfyTBZXV0jbJW9/Cb2Dto6caHtCMYZ1MFR5CHcvgzILOtzh7
unD/K6t7+BJ0Yaxv4xDOlbgaW7i/g067/tjHIE9cu0sJFts9hDm/DIMK2Vqs
NhyMIxV4QfCG5UZD0yHEGHfqrqqvxXSd88HJXm+k2/TV+F8bgprcYjhfe4/2
vcLfl/D6Yt8pM4vqgCE0Tqht7xD7MJ+r1KfSKn7oP9L5azpxCLZvLLdsq/yA
8O07D2839YfL7pNRqqVD4A4P2xBhXYcruZ8n9T0DILatdeul1iHEWVSsHRP4
CH1FuySrF4HI23i0MZk1hO3KQ2JHcz9i0zMuA6e2IBisbrD9yj2M1t/iwln/
1YN3bfR0yGwwWEJ6i0RXDcO+XpdvyVw9KDFKz5LlQ+GzsPbpEbVhLH50k+ti
SgPeLH9rWHI0DOum9mj5Hh7GU9ukn7WHGmGgq+R+Qfs+ylmv2yvPDUNze8s3
2bFGaHv9PD7ech8mfdrXp1yG0cYzx/CMboJiVc0mt/PhmPhUIqgSOQyHNkUy
aWczJGdD//D+CkfYu3+f22YOgz/ZtEuH0gw+zVNfHoQ+gGJJ/r7Et/PzL66x
NdjfgilHuRdrZCJQm6lC6vo6jLUJ3dZuMS2g5X/zSC+KgFVClsvyH/Pr8hs7
mznUgrZvZcZq+pGYi1AQOyw4glIHPvMenU94q+S3uZIUiVi/tDwvuREsNl5r
KvDgE/LsjLj1bj3ENhdZg/KdIzix89+TGtRPSEhb0/mZPwotDonM7ydHkCh7
5JjtjlbcpzCyzsRHwd5KykfJYQSjS6yPRAe1wl26wIupGg1e48frbHxHoDlx
R6+2rxX2Z+6a3nwfjWQ98fL4+BH4d4fv/7H1M049PrTlj1kMsPPhfx2FI/hS
nb5b1uczDnaK8gR+i0G3yvIJoeYRrH/+eufxzs/YIUruXuETC0fZsNCD9BFc
vd+u4anYBnmjzJynEo+wTPwfhXt/RlBxe2RbrnsbVoTd9lXIfoSsJQHvSsRG
IWCxSJX0qQ2LGvacfrXnMfT+8FiObxmFie4qZSG5LxjnW6q6q+MxKOOevxUO
jiJFSVVBx+kLSPu7eOsvxcGD9if63NlRjK/Qk79c/wUtnim9J7meYHW3q1qc
0yjw22J9nFQ7Kl9fySdFPkFR43RT2/1RBA86StVfa0fmb82AS5viYVTtaCf4
fBSdH0Mkf71txyONxRaTFfEYLZjg0a0ehXxeyspN4h3wd/ykfs/oKQLTrya6
d43iRmzZcpNLHXDKjxP4h/4U8nEj2kVjo6jyaF3qV9kBtZ9qV+t3JqA6zK6T
4Cew1JYpULisExlREj3C/gmwcUJOz1ICeer2lxztOmFg63EriicRSyxX+L8X
IXByAVH/b00nxjXoQqu9EpGjx7TIFycw3Xht89SqLkQtMchI5ErCSdXK7U/X
EIh79D246GYXNHsL9m1wT8KMZIRQ0HoCuy7cHrnd2IW+7FX9mTNJSFhoS3fc
QICi9uvIDvlueHp4Oqs6J2P/sPZrq80E/Ljcsn+6d8/3kSlSPJkMVtuyaIOt
BBQb/ywt6ejGRxnD7J03UxBWQXPQ/JdAU6znFWeVHjj8KDxYM5YC9dQyXXkt
AtdteFo0Anqw/P2awYNXnqEr9L7U8l0EVqr5q/wi96AwxtutafgZ3G+fn5zd
R6Dkj0B4qeZXnLIbEjthlwqZs5pNTD0C5g0hY3civmJOyyivi56KDweFUr8Y
EOCKFTbSGv6KJMESfYvzaXDYSnGrPk4g5XxE3sy+3vnv31o6ZSANIpIlJ7NM
COiqrhQpf9ILWo7vPbuz6SjmDlWKNSfAnIu54TrZi0DPkVXfetNhPmTF42NF
IKR+VZv20T4onzhReMvsObjbtvdevUBAJSZefTatD61yZYYznc+RVv7Pq9P2
BNqspR9WcPXDcUp6yMM4A/rPyMEHrxFw2pryw820H5J1/j6L2zIwFlJore5I
YNWcvLFOXj8qHxFrg4+9QJRjkPY6FwIW1BNmd3lIsLI3Ll3W/AJaFmdX/ONB
IPdwVFD/VhIW61SciNbPBOnAtuEpbwIL8zrKcIaEDCFZYvXHTPiqCLwdDJjP
j7jE8NNAEgzIgQFJB7KgKNH/uDmUQKr7qdVcRfP/3XljMhvfZaFlQcGNsggC
PymP9c8OkhDlbVKZtScbt1j+h9NiCBw63OtaJUSGpvFrE7WqbEh+NpeJeDKf
t1yprHXaZPRtkJ8o3vkSr8tUZ9yTCIyKne31sCXDczo4RKfsJaxTeD/bpc3n
0D1RkBxJRgR1WsRqdQ74Q75mGGcSeEAZ2Lm7mozzBkpkWbMcZN/K9dyTS2Dw
kKxD4ggZ24vOZtNjc3DijO8p5UIC23LPxy+QHAD/ukiXjM4cTOuaqUqWzedW
LK3JUncAPf7vD14Wy0X8FhWBxVUEutwYc9XXB5A19ktUxTgXe8V5BsbeElCg
bNqy/ukA7p5SHhyPzAWDq7ukt46A66FLFp71AzCsscx59TkXIczs8Lqm+Zzn
ZIYNTA1g/eaHbk7L86Da6nXx1WcCa8VGX++RHcRE5IdDWsfy0FFqsjuxk8BV
ty3fkgwH8W52RmwuLA+uyUoSIb0E3gxeXbfQbRDRNluoVU15kA7mHnMaILDi
UJ7hueeDuNhsleclmI/amx0frOkEbHImPGq+DEJrR9RdXf182JtnJhgOEyhe
uS1XhpsCwcQ6ff6gfCzTveekPUZAwM2R7KVMQT//rERDXT4KlY0NN04SOD1Y
tIxyioLc6yr0UL4CmIkpblwxQyBLb3r3Pj8KvHrOFRw7UMDeB37Dn5ea11Py
KTi5L/reCl+Ot32Ppi5qoYCloPzMpobj6Ro/TM4PU+C+7N2HYq5Xf93N3ajh
HR8VIj/NhgV0OG5U8xLyclSk9Y0LmbtwXJ5PMN93NxXa7wLUXhZzfEbfTp5u
TkXLi3X/LZjkeEv4+9gDd6g4/6DoznG1wr+e0i4rmB5FxS8ng/hnVznuvMrT
gy+filALavVUFscNzvZP2DZTIaPrStUb4vj6Z9oX6oaoKNoswh+3seivTzFj
uzfx0aAvkrF59DzH65WnjgTK0kCa3mW4K5njCTdOVLN20XCL1HHjAYnjt4pz
1Q+b08D/3iGasqb4r+vNLk1/4UxDfBZP2b9mHF+zx37VP1E0bI2M6/OP4fi4
b12ofR4NtXfUuHu+cPx9vTx3YxMNpyw/yimJlPz1x8Let5SGaCAOWOrdNeT4
1ZNkRggvHV7KP+0/hXB83yOd06MydIiLht2Xqef4/75WDHbRkTkjV3CLr/Sv
j8pM73l5mo7dA+Ud7/dz/I2tcaGQMx3tH47PSHhxPDorf9PVh3TYvWRJ2Vdx
3H5c+ElLLh1zD+/tqZzl+K7tDsJbm+iIcBW3EdYq++uirvVe4Sw6Np57GWDl
xHFW1capscUMlOvpZhW84nglj6+dkQwDx1R6WxZPcDzi0GBvHhigrbz53USl
/K/bhu06JnKagTuzAuIvLnNcu+3J2xtODCylJGrNZnB8mcTM9rZIBpI/7rA4
yuA4zdzkhXouAztymz0T5Sr+emnSK6mHjQw0RNukTlhxPIy+/MEPJgOW7rN1
+xM4br35Ko/xYiYmrSNHons5vuNao1PheiYCDysuY0lW/nXBQoXhlWDO7/ve
qGubcJz8y8/ithkTeeKmJqEPOV4IamvHbSZ0/xAupFaOB3rv0d0RyUQ31fep
qvDrv25R97QkJoeJKw1raryPcFx96ezm6QYmFuUX0NoDOc53/FSCKZOJmNjD
Aps+cLw3ukiklIeFlbvGoiq4q/567tcVfpLr5/dn+eXpNtIc95W+/uuODgsv
5P1LhXZV4X8ABPPppw==
                   "], {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                   CapForm[None], {}}, 
                  StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -48.21428571428571}, 
                    Offset[{4., 0}, {7.5, -48.21428571428571}]}, {{7.5, 
                    16.07142857142857}, 
                    Offset[{4., 0}, {7.5, 16.07142857142857}]}, {{7.5, 
                    80.35714285714285}, 
                    Offset[{4., 0}, {7.5, 80.35714285714285}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -96.42857142857142}, 
                    Offset[{2.5, 0.}, {7.5, -96.42857142857142}]}, {{
                    7.5, -80.35714285714285}, 
                    Offset[{2.5, 0.}, {7.5, -80.35714285714285}]}, {{
                    7.5, -64.28571428571428}, 
                    Offset[{2.5, 0.}, {7.5, -64.28571428571428}]}, {{
                    7.5, -32.14285714285714}, 
                    Offset[{2.5, 0.}, {7.5, -32.14285714285714}]}, {{
                    7.5, -16.07142857142857}, 
                    Offset[{2.5, 0.}, {7.5, -16.07142857142857}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 32.14285714285714}, 
                    Offset[{2.5, 0.}, {7.5, 32.14285714285714}]}, {{7.5, 
                    48.21428571428571}, 
                    Offset[{2.5, 0.}, {7.5, 48.21428571428571}]}, {{7.5, 
                    64.28571428571428}, 
                    Offset[{2.5, 0.}, {7.5, 64.28571428571428}]}, {{7.5, 
                    96.42857142857142}, 
                    Offset[{2.5, 0.}, {7.5, 96.42857142857142}]}, {{7.5, 
                    112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -48.21428571428571}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 16.07142857142857}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 80.35714285714285}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[1]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
                   "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], 
                 ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
                Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               GrayLevel[1], FontFamily -> "Arial"}, Background -> Automatic, 
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
           DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SolarColors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxF1Qsw1OsbB3AplFKiUpJySaeUCp0i+ZYiSnskpCSXk46kkiQ6cg+5VkRK
tI6DaLHum0tESSqS0AXLrr3Kz6VoSZ3+89+x78wz885n3nne53nmnXlVnM9Z
uswUExOb8StcfsX/9gnVsp7dP7sgJlwjihKtC3SvQ7ZJfcSb3Q07jbphP0kv
/Gi1O7XjXBxiOrZ5LmjuEXoolnlQtOy8YyHhqSE4ZEdHBC3DrWJOLHRkfo76
XInBbp9Nequa6cLzCSDlWNASQ6MR5K/vO2DUixFCR0tpdjJc96b7F0dF4XHo
Hlp5aa8wTypCmKO7W29G4kckSRC6rg/XayMPUa6ScS/IeM5Q8jUY3LDVO5ja
J8yfgXLlpNcy5AhcTnL2XSHHgEbUZJx5eCZaKzjxmtnhKL/nTuNeZQjvfYAB
W/0jZvlhGPvHW1AiYKDKyv0lPyIXUmNRyn+VXoVuTqBe8BmmsJ48qMZ3MUKr
QnGhINKX1MvEurizocbGBTDYtPFBen0IqKUJNEXrfmGdVNi8Cjxb0xQMojJV
wHrej6+jmaqLnxXivFurTndrEDbUZesVGbCE9RcjSkpdMPk+EO6Nhb4BBSzU
2vbUME1KsM+M76fzJAA5zZW0/epsYV+lCAyJlTrXcgWcd88ECrfZiK5ScChu
KENx1eabOd1/Q+NTix5zLkfYLw2c8TYl1oAvTvR98C0I4OCwqsVUiOkjKGv7
ZKlMXkI6h0nzG+UI51ABK/fl2vZzvEEfHBSY/sWFWnjE3UONlYjIrK68reAF
5a/f9BZ/5ArnU41qutPettWesJ8Uv9xL4mGQX6Ontu8x/v+uPJDQ973AMoCH
9fIGMa+Ga+Aq7hB4stMLLxvH2HX5PDgVJF25ZvgE3dxyrSo/X8ykDilvofOQ
eGD0jHFUHQ69keuSV/GH/m2edaYsH4080vEZnfVwPFZqXOIchPMBzGiFXXz8
CM8hVak/g5IFI4VeHILsk911Eef50FktCd/zDWjfLftlrlQYeg50TgjIfLg+
cdq4pfo5bmzdsX/rkQgobGndfLqVjxSHqpXD0i9grumW7pwbCZLSS9dP4gNo
/b5UlnK4CVIrkwQxU9G4OvNZ2gGdAUje8RI7lfEST+TqLWh/xKGS97i9+s8B
6G9tGVIffgWDkG+HRlquY/QNTWZTwgDOtmn20nc0Q3Eq9qfUxA1o0or2kOt/
5S+vcyUZt2Dce3XuCrV4ON+n/C33dQDu4cOOD/ktaBuqsNExT0ByeFZhyOrP
kLRZeUT65hsUulmKm128hZazZO4X688gqx846LqtFdeZHMrx1ERI2dxddTLs
M/RHL5s9626F+/GAI14NScCOW4c7Sj/jXW32LvWrb2HauVgicug2vNXjYk3Z
n+FxvV0vWLMNGpYPC9KW3QFl7rWnNIVBSDvM0qa/acOsl0bHSozugjkS/H2d
6SAyNmivM/R5B7rxe6mm0ylQ+uCnk+IzCHx3UE1Rbkf143NF9IR7sKz1dpN5
MIjOFzGKE/XtuKMn6TBWlYrIbA+y//tBXEiukLM93QGfohTpeew01Ma5dRJz
CMx35UqXLuxETuKyj7IR9zHXaVFEgzwB6xlE0+91nRjRYy9QCiHDWrt6a9oK
Ail3vkSXeb2HflfxnjX+6bg/05XtvYYAU2fiwDaNDwgODPbV9v0HvLaFSaTN
BDRf/ZxP6/iAF2oWeTu8MqCbWWGisZ2A50mJFr1rHyHXsIJheu5f+F9yGZva
Q4D2U/rGI/1POOrGV7Byy8Rz0wWZ70gExJJlLbcPfEK6DM3cwSUL8oo0a4ot
ARPtJfKV97rAKggLcnPMhj3fWeKqM4GYpuVtBn90Q8vKqvSi3QNkVc4rOeZO
oO2Eyq0qsR54j6vwA21yMBxTekLXm8DyHxo2hoU9qL5DrIw+mIvtDo6L5gUS
oO5PjOrZTIekYZVVkvlDhG2Srmdc+zWfpcsG0iLpIPVGXkvfS0HLjOILFfEE
vjHvmjsy6EgMta2mGOVB8a29Wvy9X3OjKlNWGfSie43GaPmOfJzIkHrrlkVg
pz9ZpjehF/H9AnlnpQLkXaQGG1EJMPapnyV/7sXWMsc8dnIBBCZ22ooVBMIV
sl47mfThY0SD6RkFKnYvlegbriewjrl2o2paHwKOajFGEqiI4ebdaHxN4HXB
w7i+8T6orr91xUeuEB2PbHeROwl4XNk4lG7BwNOpSYUfcYVQiRYf9ukjsGhf
ocWfDxg41excGCJTBHf7h/ctBgiUL9lCVRNnQobcaD4nqgilWjYWv40ROMYo
W8g8ygTVcxM7dnax8P8bws98fc+MIias9yQFLQoTebbeV1uXASb8Fz59Xi5W
Mu2WdfnQWN2PrO6RBfZ/i3zS3E2Dbd+PltxVh2eMiTyjXV0mO7EfEz6k1H89
Sqed5Ngz6trcDzUTv34zvsjHuckf1s5mwVw+Z/2gS9m0379gVcvbycJFeseF
m3SRm03Nz871ZSGVIlHxu135tI+ENca6F7Lw7LKO+Md3Ir8rG3pxA58FYq+T
WYAFbdr33DE8NqjGxtLFcdfVmkQ+qCYwyj/Gxq6+yo4G40fTnkQpWutxiw23
fJ6ye43Id249K7v5NRvxfktPym6vmHZezW/jw5IcVJqZUIpLRB6/j9FVCA5Y
S7y+2G6qnHaDtnv1F3w4mM8kb5/KETnL3jZXl8rBNmpzMHl11bTHseVufuVy
4OQ/1Wh8X+Tbzr/yKVXlInK/5kKeYvW0906EO1yy46Jw6RHb2Fsijww1MtmW
wMWH/rA0bdnH0647f2q94CUXs4qKWe2RIu9KKpN/JMHDkp3DiVXiNdMepuI5
cdmQh1yNiEcLdtbgPw3lef8=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "SolarColors", "Gradients", {0, 1}, Blend[
                    "SolarColors", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "7.`"}], "}"}]}], "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  
                  TemplateBox[<|"color" -> GrayLevel[1]|>, 
                   "GrayLevelColorSwatchTemplate"]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  RowBox[{"Max", "[", 
                    RowBox[{"150", ",", "Medium"}], "]"}]}], ",", 
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {651.1999999999999, -638.55}, {
      Center, Center}, {406.99999999999994, 395.99999999999994},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"twolanesNaSch: Fundamentalplot mit p=0.15\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 1.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {217.06666666666666, -1064.25}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, 
        {RGBColor[1, 1, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxlWGuIlFUYnhIMhIJAKFgwCgwDoyAwEOQoBAVCoRAYCMZGQYVUIAQKgpGQ
GEgmRsWGpbSUtLS15pbaulfddVfntju7szuz8839PpNQIBg05zzv+xyczp+P
b855L897nvc555vHe9/b/eb9oVDo6ftCIfvsHq/0lIeOvPyuGd5wtLZr+BuD
90Pm0PqBF4OD5+T5sanvsisGZf443x924zNZNyTPU+Y5N8ZN4ZGdhwfzX5iv
vrTjd7H/2qxLnH1/27prjAu7uPj71rwUHOz8EjFTJ/dtvjP5nTnXWZ04G2Ze
+v7s6bu90898L/lEJF4/3xH3B/PPpr0nxv7OSPzzZptLIGnW9G0Jv73mJ1kf
SD4DEj8wz3dm+7b8bOZm7chLfoPmMbtsQ4F1sN437V2VfH8xLs31RXMmtnbr
/jO/Srws64R8yuZVNy4Y7EZZ8PzGedTpojxLgu+i4C+bkT23j28cGTYu/Ikq
64xnxRxIbu9/8MAf9Af8lwzgVc1TLvHLjI96XBFcFZNO2XGF8VGfP+nvcwv3
5Ih5y42i1Osq7ZHnVeaL+o0y3w6YDqJRqXdF7Ea5/jULb8+Y1Lck9R0jPuWZ
+kO9x4nvIVeACcFZl/pPcL2tRk95gvGwH5NmtwNaNuN22dikPBuyP1Oyn1Xj
ytU3RXvlNfKqmQ/duGbcz4ma7J9/R5zrfMd+Xqd/W919m6cl77rgniaeBzpo
Y2tnZF+ast8znEcdZoSvDdn/G/R3+ZIdN8wHLmBD7GaF73Xj4J6eNc78aE34
Mcd4sJsT3C3hyxzz3+k2+CbtYXeT+T3pAN+iPfh0i/PgZdi4dhpoCb/CzHe/
2/Aw90d1QeddOZJh4WdT+BehP9UZnQcfI/R3wdJjKML8VFfQ303zhBtR4WdL
+BrlPHgWZT3B3yj9/2vLezfKeoI3Meb3jit4jPmB3zHuJ3gTI3/A9zj9v+BG
nP5UZxWPgzsYZ3z0Q5zxEGeeeNAf81z/6Ua7gfOMh+c87R1973h79M8C7bFu
QeL8Jf3k5+MO7gLtkXeC8XbY7d2e4H6j3xJcD9wJ5oP+S5D/rh16FjmPflxk
/GOf2LEofGxLfy5yv6GDi8K7tvTrEuO/Ybe3d4n1Rv8ukd+g8xL3E/2c5Lue
U7oe/Z0k3vM/2pFkPPR7kvk/6hpwmfmj/5eJF325TH5CD5aZr6Pzbb8eflZk
fdu87gCvsB7QixXmg3UrzAf6kWI8B3drSvq8LbhS9Oe2tz9Fe+hLiv7xTLNe
0Js08X5k2/eIn4efNO1bTTvSXXq0Sn7pua720KdV5uO2d3qV+eOZoX/wK0N7
6FeG+YFvmS49yxA/+JdhfuBZhvsBPmbET1v0LsP903uP+of+BcQHvgb0r/ce
xQf+BrSHPgbECz77eehlQLzgd8D91nuWrgffs6wH9DTL+um9SfFCX7OMj37w
9tDbLM8b9EeW5z30188Dbpb5Qo+zrA/6J8d40Occ8aCfcrwvQK9zXf2Vo3/o
d4740G856hHkLcf46L8c84W+57v6Mc98oPd52qM//Tvi5LvO93zXeeD9671X
+YHzIc96oJ8LzF/vxXoeob8LxI/zo8B8wIMC8eE88fbo/wLvc7Dz89CDAvPB
eVPg/UPv4YoX50+ReKAXRd5X9R6r/Id++HecT0Xixe9F4sF5VWS+0Jci8es9
WvcfelNifjjPSsxP772qBzjfSl165N9x3pWYD/SpxHrg/Cuxfnrv1/pDr8rs
F+hVmfkozxUf9MrbQ6+8vd6LtV7QqzLjQ6/8u35XaD2gVxV+H0CvKrxf6++a
D/SqQn/QKz+v3w36hF5VWC/oVYX5Ki8UD/SqyjyhV96v1lntoVeet9Cr6v/8
an2hV1XWE3pV5b4qDrWDXvl56FWNddc6aX7QqxrjQ69q3FeNq7yDXnl/0Ksa
89A6ax9Ar2pdeuXrqDjVDnrleQ69qlOXtY6qo9CrOnkLvaoTv/JGdQh09uca
9KrBc0X7RnkEvWrwXIZe+fV6bml86FWDOgy9avCcUF5pftCrBu/50KsG8aou
6DkAvWryngm9avIeozqt9wLoVZP3KOhVk9+BqmP6HQm98vdw6JW/5+m5oN/9
0KsW/1eBXrV4L1edUnzQqxb9Q69a/N/h3u+SU6JXLaP/T0Gv/Pu996xQ6D89
Yml2
          "]]}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           TagBox["\"Zeitliches Mittel des Flusses\"", HoldForm], 
           TraditionalForm], None}, {
          FormBox[
           TagBox["\"Dichte \[Rho]\"", HoldForm], TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Medium,
       LabelStyle->GrayLevel[1],
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            AbsoluteThickness[1.6]], 
           Directive[
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
            AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
         "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
         Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
         True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"twolanesNaSch: Fundamentalplot mit p=0.3\"", TraditionalForm],
       PlotRange->{{0, 1.}, {0., 1.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {651.1999999999999, -1064.25}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.899921086554542*^9, 3.899925399708996*^9, 
  3.899972058577446*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"14a2e877-0681-49aa-8272-55ec320704c8"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"3715b4c1-62cb-43b7-92b5-adbd4b992975"],

Cell["", "Text",ExpressionUUID->"bc075d0d-c417-4503-9ba1-448f66e8f103"],

Cell[TextData[StyleBox["Beim Vergleich der Histogramme der zwei Spuren f\
\[ADoubleDot]llt auf, dass sowohl f\[UDoubleDot]r p=0.15 als auch f\
\[UDoubleDot]r p=0.3 auf der linken Spur einen gr\[ODoubleDot]\[SZ]erer \
Anteil der Autos Geschwindigkeiten \[UDoubleDot]ber 0 und \
Abst\[ADoubleDot]nde gr\[ODoubleDot]\[SZ]er als 0 hat als auf der rechten \
Spur. Dies kann auf die Bedingungen zum Spurwechsel zur\[UDoubleDot]ckgef\
\[UDoubleDot]hrt werden, die beim Wechsel nach links ein eigenes Abbremsen \
von 1 und beim Wechsel nach rechts eins um 2 in Kauf nehmen. Somit pendelt \
sich mit der Zeit eine h\[ODoubleDot]here mittlere Geschwindigkeit auf der \
linken Spur ein.\nBei den Dichteplots f\[UDoubleDot]r p=0.15 \
l\[ADoubleDot]sst sich sowohl f\[UDoubleDot]r die rechte als auch die linke \
Spur ein gr\[ODoubleDot]\[SZ]erer Stau anfangs im 6.-8. Intervall erkennen, \
nach dem sich R\[UDoubleDot]ckstaus bilden. Auf der rechten Spur liegt der H\
\[ODoubleDot]chstwert pro Intervall bei 9 Autos, links nur bei 8 Autos. Au\
\[SZ]erdem sind im Plot der linken Spur mehr dunkelrote Punkte zu sehen, also \
weniger besetzte Intervalle mit 0-1 Autos, als auf der rechten Spur, dessen \
Gro\[SZ]teil orange (3-4 Autos) gef\[ADoubleDot]rbt ist. F\[UDoubleDot]r \
p=0.3 sind die gelben Ansammlungen von Autos mit 8 Autos auf der rechten Spur \
und 7 auf der linken breiter verteilt. Auf der rechten Spur ist der \
Gro\[SZ]teil der Intervalle mit 4-8 Autos besetzt, wobei Intervalle mit 0-1 \
Autos sehr selten vertreten sind. Auf der linken Spur allerdings sind im Gro\
\[SZ]teil der Intervalle 3-6 Autos enthalten, wobei auch Intervalle mit 0-1 \
Autos h\[ADoubleDot]ufiger vertreten sind.\nBei den Fundamentalplots f\
\[ADoubleDot]llt auf, dass diese nicht mehr die charakteristische Form des \
linearen Anstiegs bis zur kritischen Dichte mit einem linearen Abfall danach \
haben. F\[UDoubleDot]r zwei Spuren steigt der Fluss wie bei einer Spur bis zu \
einer kritischen Dichte, hier bei circa \[Rho]=0.1, mit hoher Steigung linear \
an. Hiernach steigt der Fluss mit etwas niedrigerer Steigung weiter bis zur \
Dichte circa bei \[Rho]=0.45, wonach der Fluss bis \[Rho]=0.9 mit kleiner \
Steigung abf\[ADoubleDot]llt. Der mittlere Teil mit kleinem Zuwachs/Abfall \
\[ADoubleDot]hnelt einer gestauchten, nach unten ge\[ODoubleDot]ffneten \
Parabel und der H\[ODoubleDot]chstwert des Flusses liegt f\[UDoubleDot]r \
beide bei circa 1. Nach \[Rho]=0.9 f\[ADoubleDot]llt der Fluss wieder stark \
ab, da bei fast vollst\[ADoubleDot]ndiger Besetzung flie\[SZ]ender Verkehr \
zunehmend unwahrscheinlich wird. Der h\[ODoubleDot]here Fluss auch nach der \
kritischen Dichte f\[UDoubleDot]r eine Spur bei \[Rho]=0.125 \
l\[ADoubleDot]sst sich dadurch erkl\[ADoubleDot]ren, dass ausgebremste Autos \
auf die linke Spur ausweichen k\[ODoubleDot]nnen, auf der sich \
l\[ADoubleDot]nger und f\[UDoubleDot]r h\[ODoubleDot]here Dichten \
flie\[SZ]ender Verkehr ausbilden kann, da durch die Wechselbedingungen ein \
Wechsel nach rechts priorisiert wird und sich somit eher dort Autos \
ansammeln.",
 FontColor->RGBColor[
  0.9568627450980393, 0.6470588235294118, 0.06666666666666667]]], "Text",
 CellChangeTimes->{
  3.9000023231114244`*^9, {3.900003322127737*^9, 3.900003353841486*^9}, {
   3.900003832487855*^9, 3.9000040936956515`*^9}, {3.900004167539836*^9, 
   3.900004368509917*^9}, {3.900004436730649*^9, 3.900004485970889*^9}, {
   3.9000045339727664`*^9, 3.900004688854037*^9}, {3.900004719451315*^9, 
   3.90000475141728*^9}, {3.9000048015535235`*^9, 
   3.900005368622344*^9}},ExpressionUUID->"4307d3c9-24b8-4d25-a2a0-\
bf24d2feac89"],

Cell["", "Text",
 CellChangeTimes->{
  3.899569698257235*^9},ExpressionUUID->"42f2e738-a743-4d1c-ba19-\
24a7809964e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["",
 FontFamily->"Squealer"]], "Title",
 CellChangeTimes->{
  3.8995697024730453`*^9},ExpressionUUID->"4fe85d5e-172d-4333-bc06-\
175f53c60bf9"],

Cell["\<\
 
\
\>", "Text",
 CellChangeTimes->{
  3.8995697009859076`*^9},ExpressionUUID->"24027b9b-7c0c-4e94-ad27-\
c4bd3186a83d"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{1020, Automatic}, {Automatic, -6}},
TaggingRules-><|
 "CodeFormatter" -> <|"ToolbarState" -> False|>, "TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"02e24b49-43df-458c-b402-aeb0f3c1a1fe"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 131, 3, 25, "Input",ExpressionUUID->"9731222f-3dd8-494d-8414-f4eac09c0146"],
Cell[CellGroupData[{
Cell[714, 27, 336, 7, 86, "Title",ExpressionUUID->"b0c631c6-253a-40ad-871d-8f14e949cd72"],
Cell[1053, 36, 338, 7, 46, "Subtitle",ExpressionUUID->"383bd981-cf0e-4047-95a9-77d5c697cc92"],
Cell[1394, 45, 1872, 27, 237, "Text",ExpressionUUID->"f8d88ff7-3677-4f4d-83d4-a185409464c0"],
Cell[3269, 74, 152, 3, 25, "Input",ExpressionUUID->"72ba0917-1b06-4623-9533-a04bb890ba10"],
Cell[CellGroupData[{
Cell[3446, 81, 204, 4, 60, "Chapter",ExpressionUUID->"53a949ba-2ac9-42b2-b355-6ffed80ebbcd"],
Cell[3653, 87, 1561, 22, 169, "Text",ExpressionUUID->"4a7a6bbe-853c-4efd-8367-c439f93b66db"],
Cell[5217, 111, 17198, 411, 1193, "Code",ExpressionUUID->"e3426614-f7d5-42a5-9a25-baf88eb424d2"],
Cell[22418, 524, 321, 7, 45, "Code",ExpressionUUID->"90a6f162-a31c-489c-8ac1-50e57a6eccab"],
Cell[22742, 533, 663, 11, 33, "Text",ExpressionUUID->"a477ff40-7d59-4ef6-868d-9299dadb2a90"],
Cell[23408, 546, 156, 3, 25, "Input",ExpressionUUID->"40a03ba5-8a9b-4b1d-9b2f-521043423f61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23601, 554, 264, 5, 60, "Chapter",ExpressionUUID->"df572e4e-a503-4ad4-a92e-cec77a4508fe"],
Cell[23868, 561, 371, 7, 33, "Text",ExpressionUUID->"49511451-208e-4a3f-88a0-80cb1726d87a"],
Cell[24242, 570, 5663, 136, 429, "Code",ExpressionUUID->"c58cf939-98c7-4afb-a201-1563e4c89ee2"],
Cell[CellGroupData[{
Cell[29930, 710, 437, 9, 62, "Code",ExpressionUUID->"8f730bb1-ce7e-41a0-9ceb-a0ab97259352"],
Cell[30370, 721, 516303, 8547, 318, "Output",ExpressionUUID->"01e99372-b7d8-40a0-bdb6-a6c33a8f1059"]
}, Open  ]],
Cell[546688, 9271, 1257, 18, 124, "Text",ExpressionUUID->"01f2a765-3945-4d79-8ce4-6c029ef902a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547982, 9294, 129, 1, 60, "Chapter",ExpressionUUID->"e004bcce-3c9b-40ec-b809-b72bc6c6cfe3"],
Cell[548114, 9297, 542, 9, 33, "Text",ExpressionUUID->"fd1fb932-e995-454a-8485-6601910c91b5"],
Cell[548659, 9308, 9526, 218, 762, "Code",ExpressionUUID->"a5e40c58-41a7-408c-90c5-758337d6a1b3"],
Cell[CellGroupData[{
Cell[558210, 9530, 547, 10, 61, "Code",ExpressionUUID->"e7dd2a29-8209-4b7f-a429-1b417eff5d2b"],
Cell[558760, 9542, 74990, 1305, 356, "Output",ExpressionUUID->"7dba33db-9212-426d-b900-f6603545b0c5"]
}, Open  ]],
Cell[633765, 10850, 1733, 24, 147, "Text",ExpressionUUID->"7752114c-3962-4473-8c88-ad703be852ee"],
Cell[635501, 10876, 10217, 236, 906, "Code",ExpressionUUID->"15a04ccb-9817-4d90-b556-0154fcf6b2d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645755, 11117, 130, 1, 60, "Chapter",ExpressionUUID->"e5f36a8b-8b9a-4faf-8be1-e5f9ffdb8c9f"],
Cell[645888, 11120, 764, 12, 78, "Text",ExpressionUUID->"eabf6e1e-9efb-4db8-a5fe-7103953589b9"],
Cell[646655, 11134, 722, 20, 61, "Code",ExpressionUUID->"ae4289fd-3737-485a-ac1a-684d677e1de5"],
Cell[647380, 11156, 11779, 261, 778, "Code",ExpressionUUID->"23c5c7e7-aa96-4062-8106-6ea28332da4c"],
Cell[CellGroupData[{
Cell[659184, 11421, 1170, 32, 62, "Code",ExpressionUUID->"3d2b2861-c274-48a0-acb3-ba568f511d5f"],
Cell[660357, 11455, 186764, 4183, 622, 134258, 3322, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5634ba40-2f0e-4a58-abe7-b78996c25066"]
}, Open  ]],
Cell[847136, 15641, 255, 5, 45, "Code",ExpressionUUID->"55fa524d-842a-45cb-86c7-a06bf0db0fbe"],
Cell[847394, 15648, 1122, 17, 124, "Text",ExpressionUUID->"b34803e0-89b9-4ed8-a613-7d0d4a62345e"],
Cell[848519, 15667, 570, 8, 33, "Text",ExpressionUUID->"c9da176a-3619-45eb-b38a-0c50956619f7"],
Cell[849092, 15677, 13657, 297, 906, "Code",ExpressionUUID->"9f9e371d-94c3-4c9b-89d1-eb7a74f5a5e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[862786, 15979, 131, 1, 60, "Chapter",ExpressionUUID->"913f1fca-27e4-474f-8a8f-c011b5503bfb"],
Cell[862920, 15982, 809, 12, 78, "Text",ExpressionUUID->"f06690dd-af44-410c-94bf-91b1ec8df352"],
Cell[863732, 15996, 11901, 275, 961, "Code",ExpressionUUID->"e52da848-53d4-4183-8c61-af7f47c94bf1"],
Cell[CellGroupData[{
Cell[875658, 16275, 566, 14, 77, "Code",ExpressionUUID->"16f2bf36-0d23-4d3a-8a8b-c564ac482e43"],
Cell[876227, 16291, 119299, 2291, 663, 74828, 1561, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"83b66825-b562-4989-8283-a5e8702fc288"],
Cell[995529, 18584, 36046, 633, 360, 7886, 170, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5f0581e4-3185-4a2c-98df-3ea2c0980870"]
}, Open  ]],
Cell[1031590, 19220, 263, 5, 45, "Code",ExpressionUUID->"67dc683d-91d4-4dca-b956-b9af4ab66b20"],
Cell[1031856, 19227, 1839, 26, 192, "Text",ExpressionUUID->"9a12740d-e703-404e-b25c-aece55b23138"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1033732, 19258, 136, 2, 60, "Chapter",ExpressionUUID->"431ebe87-5ae3-4e3f-80ff-d9a73d6b2de5"],
Cell[1033871, 19262, 612, 10, 78, "Text",ExpressionUUID->"28c43677-f09d-40f1-9ccb-06263446373d"],
Cell[1034486, 19274, 785, 23, 93, "Code",ExpressionUUID->"9f9f0c00-035f-495d-8220-11ba5455f2af"],
Cell[1035274, 19299, 38053, 833, 2169, "Code",ExpressionUUID->"a5b60d5a-5222-4cce-94d6-a55faf45c974"],
Cell[CellGroupData[{
Cell[1073352, 20136, 2424, 73, 220, "Code",ExpressionUUID->"1ab7f740-9d76-4563-b25f-b4771fd68594"],
Cell[1075779, 20211, 56885, 1233, 832, "Output",ExpressionUUID->"3f5d4551-24ab-47d0-8f46-ce2119ae1f9f"]
}, Open  ]],
Cell[1132679, 21447, 417, 10, 93, "Code",ExpressionUUID->"51aa0a0c-0d53-462f-9044-f6caf6c78fb1"],
Cell[1133099, 21459, 1930, 29, 192, "Text",ExpressionUUID->"a701f714-de62-4c3c-a86b-81330ddfdfbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1135066, 21493, 122, 1, 60, "Chapter",ExpressionUUID->"550726d6-f6e8-4b8b-9f6f-15bcb1c1f336"],
Cell[1135191, 21496, 724, 11, 56, "Text",ExpressionUUID->"b0d6d391-94d1-47a9-8c74-499ffbd0b667"],
Cell[1135918, 21509, 13404, 333, 1046, "Code",ExpressionUUID->"a2d3b72e-b94a-4d30-b74d-64de6106ab33"],
Cell[1149325, 21844, 1955, 56, 156, "Code",ExpressionUUID->"79664507-1a56-43e4-892e-d2ce0d5bd172"],
Cell[CellGroupData[{
Cell[1151305, 21904, 1051, 29, 78, "Code",ExpressionUUID->"d83d6a56-0933-4cad-a803-84898e4902c5"],
Cell[1152359, 21935, 125727, 2816, 413, 89762, 2226, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"2879e960-7c41-4539-8655-6a381d587ec1"],
Cell[1278089, 24753, 163659, 2886, 1124, "Output",ExpressionUUID->"d33de0e9-8fe7-4422-a43e-7d1dd250595e"]
}, Open  ]],
Cell[1441763, 27642, 205, 4, 45, "Code",ExpressionUUID->"148add25-5d13-4145-a30c-729bbfb6cf95"],
Cell[1441971, 27648, 2575, 37, 305, "Text",ExpressionUUID->"d827d26f-5d59-4571-b58b-e0bc7ed12fc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1444583, 27690, 130, 1, 60, "Chapter",ExpressionUUID->"6d21a7a7-a84f-4357-b230-1f92ad4ae0cc"],
Cell[1444716, 27693, 3795, 51, 487, "Text",ExpressionUUID->"28d09b69-e064-4a55-844e-a8c7626b3dd0"],
Cell[1448514, 27746, 49822, 1024, 3366, "Code",ExpressionUUID->"10bbf157-5baf-474b-9c28-6c600d10348d"],
Cell[1498339, 28772, 38387, 910, 3166, "Code",ExpressionUUID->"7b20d250-10c3-4989-a0ac-38835f16d57e"],
Cell[CellGroupData[{
Cell[1536751, 29686, 3601, 89, 220, "Code",ExpressionUUID->"6db0d547-fc6f-4cea-a2b3-c9cce6a6dbe3"],
Cell[1540355, 29777, 69445, 1721, 413, "Output",ExpressionUUID->"4dc5f3ef-d507-45d8-b33c-ff2101635d32"],
Cell[1609803, 31500, 219213, 3944, 1840, "Output",ExpressionUUID->"14a2e877-0681-49aa-8272-55ec320704c8"]
}, Open  ]],
Cell[1829031, 35447, 81, 0, 25, "Input",ExpressionUUID->"3715b4c1-62cb-43b7-92b5-adbd4b992975"],
Cell[1829115, 35449, 71, 0, 33, "Text",ExpressionUUID->"bc075d0d-c417-4503-9ba1-448f66e8f103"],
Cell[1829189, 35451, 3631, 51, 305, "Text",ExpressionUUID->"4307d3c9-24b8-4d25-a2a0-bf24d2feac89"],
Cell[1832823, 35504, 118, 3, 33, "Text",ExpressionUUID->"42f2e738-a743-4d1c-ba19-24a7809964e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1832990, 35513, 166, 4, 86, "Title",ExpressionUUID->"4fe85d5e-172d-4333-bc06-175f53c60bf9"],
Cell[1833159, 35519, 130, 6, 56, "Text",ExpressionUUID->"24027b9b-7c0c-4e94-ad27-c4bd3186a83d"]
}, Open  ]]
}
]
*)

